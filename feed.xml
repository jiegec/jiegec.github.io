<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杰哥的{运维,编程}小笔记</title>
    <description>This is the personal blog of Jiajie Chen.
</description>
    <link>https://jiege.ch/</link>
    <atom:link href="https://jiege.ch/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 11 Jan 2019 17:56:51 +0800</pubDate>
    <lastBuildDate>Fri, 11 Jan 2019 17:56:51 +0800</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>每周分享第 5 期</title>
        <description>&lt;p&gt;今天刚迁移了域名到 jiege.ch ，原来的 jiegec.me 会自动跳转过来，链接什么的都不用变。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Rust 的 cfg! 宏只是返回 bool 而不会影响内部是否被编译 如果需要 if constexpr 的效果需要用 &lt;a href=&quot;https://github.com/alexcrichton/cfg-if&quot;&gt;cfg-if&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;基于 HTML5 canvas 的图表库 &lt;a href=&quot;https://github.com/chartjs/Chart.js&quot;&gt;Chart.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Endianness MATTERS! – Harry Chen&lt;/li&gt;
  &lt;li&gt;各数据库的带补全的 CLI https://www.dbcli.com/&lt;/li&gt;
  &lt;li&gt;边开发边测试 k8s 部署 &lt;a href=&quot;https://github.com/windmilleng/tilt&quot;&gt;tilt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Github unlimited free private repos 于是称为了 PRO 用户 https://blog.github.com/2019-01-07-new-year-new-github/&lt;/li&gt;
  &lt;li&gt;Github 美食博主还行 https://github.com/hendricius/pizza-dough&lt;/li&gt;
  &lt;li&gt;一个用于本地化的库 https://github.com/dustin/go-humanize&lt;/li&gt;
  &lt;li&gt;Vim Verilog 补全 https://github.com/vhda/verilog_systemverilog.vim&lt;/li&gt;
  &lt;li&gt;homebridge 网页前端 https://github.com/oznu/homebridge-config-ui-x&lt;/li&gt;
  &lt;li&gt;Zigbee 2 MQTT Bridge 需要额外的设备 https://github.com/Koenkk/zigbee2mqtt&lt;/li&gt;
  &lt;li&gt;gdb 的网页 gui https://github.com/cs01/gdbgui&lt;/li&gt;
  &lt;li&gt;Rust 一键 par iter https://github.com/rayon-rs/rayon&lt;/li&gt;
  &lt;li&gt;挺好看的 hex viewer https://github.com/sharkdp/hexyl 可以配合 bat 滚屏&lt;/li&gt;
  &lt;li&gt;gitalk 基于 Github issues 的评论系统 类似 Disqus https://github.com/gitalk/gitalk&lt;/li&gt;
  &lt;li&gt;根据蓝牙连接键盘与否改变键盘布局 https://github.com/jwilm/alacritty/wiki/Automatic-MacOS-Keyboard-layout-change-for-Bluetooth&lt;/li&gt;
  &lt;li&gt;8.8.8.8 加入 DoT 家庭 https://security.googleblog.com/2019/01/google-public-dns-now-supports-dns-over.html&lt;/li&gt;
  &lt;li&gt;恢复损坏的 QRCode 工具箱 https://merricx.github.io/qrazybox/&lt;/li&gt;
  &lt;li&gt;通过同时修改两个芯片的 PLL 达成了非标准的 Wi-Fi 通信还行 https://hackaday.com/2019/01/04/underclocking-the-esp8266-leads-to-wifi-weirdness/&lt;/li&gt;
  &lt;li&gt;inline x86 asm in go https://github.com/mmcloughlin/avo#readme&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 11 Jan 2019 17:41:00 +0800</pubDate>
        <link>https://jiege.ch/misc/2019/01/11/weekly-sharing-6/</link>
        <guid isPermaLink="true">https://jiege.ch/misc/2019/01/11/weekly-sharing-6/</guid>
        
        <category>weeklysharing</category>
        
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>域名已经迁移到 jiege.ch</title>
        <description>&lt;p&gt;从买新域名到迁移大概用了一个多小时，现在已经恢复访问。原有的地址也会直接 301 到新的域名上来。&lt;/p&gt;

&lt;p&gt;仍然 Host 在 Github Pages 上。还会继续更新，不会跑路的（逃&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Jan 2019 11:20:00 +0800</pubDate>
        <link>https://jiege.ch/meta/2019/01/11/blog-host-migration/</link>
        <guid isPermaLink="true">https://jiege.ch/meta/2019/01/11/blog-host-migration/</guid>
        
        <category>site</category>
        
        
        <category>meta</category>
        
      </item>
    
      <item>
        <title>调整 Alacritty 的 Powerline 字体显示偏移</title>
        <description>&lt;p&gt;今天体验了一下 Alacritty ，以前一直在用 iTerm2 ，但是它的高级功能我都没用到。于是现在用了下 Alacritty ，把 Solarized Dark 配置了，发现 Inconsolata for Powerline 字体显示有点偏差，于是调整了一下：&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Font configuration (changes require restart)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Normal (roman) font face&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;family&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Inconsolata for Powerline&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# The `style` can be specified to pick a specific face.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#style: Regular&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Bold font face&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;family&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Inconsolata for Powerline&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# The `style` can be specified to pick a specific face.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#style: Bold&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Italic font face&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;family&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Inconsolata for Powerline&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# The `style` can be specified to pick a specific face.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#style: Italic&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Point size&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;18.0&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Offset is the extra space around each character. `offset.y` can be thought of&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# as modifying the line spacing, and `offset.x` as modifying the letter spacing.&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Glyph offset determines the locations of the glyphs within their cells with&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# the default being at the bottom. Increasing `x` moves the glyph to the right,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# increasing `y` moves the glyph upwards.&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;glyph_offset&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;主要是这里的 glyph_offset 设置为 3 （2 也可以，我更喜欢 3） ，这样箭头就基本对齐了不会突出来。&lt;/p&gt;

&lt;p&gt;然后按照官方 Wiki ，配置了 Solarized Dark 配色：&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;## Colors (Solarized Dark)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Default colors&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;primary&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x002b36'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base03&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;foreground&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x839496'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base0&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Normal colors&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x073642'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base02&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0xdc322f'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# red&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x859900'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# green&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0xb58900'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# yellow&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x268bd2'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# blue&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;magenta&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0xd33682'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# magenta&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cyan&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x2aa198'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# cyan&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0xeee8d5'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base2&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Bright colors&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bright&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x002b36'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base03&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0xcb4b16'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# orange&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x586e75'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base01&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x657b83'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base00&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x839496'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;magenta&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x6c71c4'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# violet&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cyan&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x93a1a1'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0xfdf6e3'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# base3&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;真香&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Jan 2019 20:19:00 +0800</pubDate>
        <link>https://jiege.ch/software/2019/01/10/alacritty-powerline-font-offset/</link>
        <guid isPermaLink="true">https://jiege.ch/software/2019/01/10/alacritty-powerline-font-offset/</guid>
        
        <category>alacritty</category>
        
        <category>font</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Grafana Variable 的 regex 过滤方式</title>
        <description>&lt;p&gt;用 InfluxDB 收集到 Mountpoint 数据的时候，经常会掺杂一些不关心的，如 TimeMachine ，KSInstallAction 和 AppTranslocation 等等。所以，为了在 Variables 里过滤掉他们，需要用 Regex 进行处理。&lt;a href=&quot;https://community.grafana.com/t/templating-regex-exclude-not-working/1077/4&quot;&gt;网上&lt;/a&gt;有人提供了方案，就是通过 Negative Lookahead 实现：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-regexp&quot;&gt;/^(?!.*TimeMachine)(?!.*KSInstallAction)(?!.*\/private)/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就可以把不想看到的这些 mountpoint 隐藏，节省页面空间了。当然了，这里其实也可以用白名单的方法进行处理，直接写 regex 就可以了。&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Jan 2019 12:47:00 +0800</pubDate>
        <link>https://jiege.ch/software/2019/01/10/grafana-variable-regex-exclusion/</link>
        <guid isPermaLink="true">https://jiege.ch/software/2019/01/10/grafana-variable-regex-exclusion/</guid>
        
        <category>grafana</category>
        
        <category>regex</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Rust 获取 Linker Script 中的地址</title>
        <description>&lt;p&gt;在 Linker Script 中可以记录下一个地址到一个变量中，大概这样：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.text: {
	PROVIDE(__text_start = .);
    *(.text .text.* .gnu.linkonce.t*)
    PROVIDE(__text_end = .);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;PROVIDE()&lt;/code&gt; 是可选的。这样，代码里就可以获取到 .text 段的地址了。在 C 中，直接 extern 一个同名的变量就可以了，但在 Rust 中，需要这样获取：&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__text_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__text_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// __text_start as usize&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;// __text_end as usize&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就可以拿到地址了。&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Jan 2019 11:57:00 +0800</pubDate>
        <link>https://jiege.ch/programming/2019/01/07/rust-access-linker-script-address/</link>
        <guid isPermaLink="true">https://jiege.ch/programming/2019/01/07/rust-access-linker-script-address/</guid>
        
        <category>rust</category>
        
        <category>ld</category>
        
        <category>linker</category>
        
        <category>ffi</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>每周分享第 5 期</title>
        <description>&lt;p&gt;2019 年第一篇博文，祝大家新年快乐。最近忙于期末，没怎么搞事情，所以暂时没有关于别的内容的博文。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;发现一个很好看的 http web server index 就是不再更新了 &lt;a href=&quot;https://larsjung.de/h5ai/&quot;&gt;h5ai&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;录制 DOM 变化并且重放 &lt;a href=&quot;https://github.com/rrweb-io/rrweb&quot;&gt;rrweb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;C++ 中的 Lazy Sequence 实现 &lt;a href=&quot;https://github.com/SaadAttieh/lazyCode&quot;&gt;lazyCode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来自 Berrysoft 的 Windows UWP 校园网认证解决方案 &lt;a href=&quot;https://github.com/Berrysoft/TsinghuaNetUWP&quot;&gt;TsinghuaNetUWP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;中科大老运维的笔记 &lt;a href=&quot;https://github.com/bg6cq/ITTS&quot;&gt;ITTS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go 源码研究电子书 目测还在编写，不过读来挺有收获的 &lt;a href=&quot;https://github.com/changkun/go-under-the-hood&quot;&gt;go-under-the-hood&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;第一次了解到 ELF Aux Vectors &lt;a href=&quot;http://articles.manugarg.com/aboutelfauxiliaryvectors.html&quot;&gt;auxv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;发现了 C99 的参数列表里 static 数组大小语法 &lt;a href=&quot;https://hamberg.no/erlend/posts/2013-02-18-static-array-indices.html&quot;&gt;static array indicies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;发现一个有趣的包装了 socket 的消息库 支持一些消息分发方法 &lt;a href=&quot;https://nanomsg.org/index.html&quot;&gt;nanomsg&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;找到一个可视化 YUV 和视频解码的一些内部信息的工具 &lt;a href=&quot;https://github.com/IENT/YUView&quot;&gt;YUVView&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;通过动态 QRCode 传输数据 &lt;a href=&quot;https://github.com/divan/txqr&quot;&gt;txqr&lt;/a&gt; &lt;a href=&quot;https://github.com/dangfan/qr-transfer&quot;&gt;qr-transfer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;发现一些很好看的 CSS 动画 &lt;a href=&quot;https://redstapler.co/10-stunning-css-3d-effect-must-see/&quot;&gt;10-stunning-css-3d-effect-must-see&lt;/a&gt; 其中最神奇也最复杂的是 &lt;a href=&quot;https://codepen.io/zadvorsky/pen/PNXbGo&quot;&gt;这个&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Android runtime 中动态获取权限的库 &lt;a href=&quot;https://github.com/Karumi/Dexter&quot;&gt;Dexter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来自 Berrysoft 的 Stream operators in C++ &lt;a href=&quot;https://github.com/Berrysoft/CppLinq&quot;&gt;CppLinq&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Squirrel (Rime for macOS) 在两年以后终于出了 0.10.0 新版本 有了好看的新皮肤&lt;/li&gt;
  &lt;li&gt;神奇的 v8 漏洞利用 实在是太复杂了 &lt;a href=&quot;https://abiondo.me/2019/01/02/exploiting-math-expm1-v8/&quot;&gt;exploting math expm1 in v8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JWT How-to 发现 Koa 和 Flask 的 session 默认实现也是同样的原理 &lt;a href=&quot;https://github.com/dwyl/learn-json-web-tokens&quot;&gt;learn-json-web-tokens&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;配置 DNS CAA 的在线工具 限制 CA 签证书的方案 &lt;a href=&quot;https://sslmate.com/caa/&quot;&gt;sslmate caa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;又一个 Python 的 Parser 库 配合有趣的 decorator 语法 &lt;a href=&quot;https://github.com/dabeaz/sly&quot;&gt;sly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自动配置 webpack 的库 Jetpack &lt;a href=&quot;https://github.com/KidkArolis/jetpack&quot;&gt;jetpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;eBPF tutorial &lt;a href=&quot;http://www.brendangregg.com/blog/2019-01-01/learn-ebpf-tracing.html&quot;&gt;learn ebpf tracing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;图片 xkcd-ify 太有趣了 &lt;a href=&quot;https://mathematica.stackexchange.com/questions/11350/xkcd-style-plots&quot;&gt;xkcd-style plots&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;又一个 Vue 的 rich text 控件 &lt;a href=&quot;https://github.com/scrumpy/tiptap&quot;&gt;tiptap&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 04 Jan 2019 21:12:00 +0800</pubDate>
        <link>https://jiege.ch/misc/2019/01/04/weekly-sharing-5/</link>
        <guid isPermaLink="true">https://jiege.ch/misc/2019/01/04/weekly-sharing-5/</guid>
        
        <category>weeklysharing</category>
        
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>每周分享第 4 期</title>
        <description>&lt;p&gt;咕了更长的时间。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Header only JIT assembler https://github.com/herumi/xbyak 想找个时间玩玩 JIT&lt;/li&gt;
  &lt;li&gt;Rust 实现的 Babel 转译 https://github.com/swc-project/swc&lt;/li&gt;
  &lt;li&gt;又一个瀑布流实现 https://github.com/e-oj/Magic-Grid&lt;/li&gt;
  &lt;li&gt;马上可以体验 HTTP/3 的库 https://github.com/djc/quinn&lt;/li&gt;
  &lt;li&gt;Logitech Spotlight Presentation 挺好用的 配套软件的安装过程和使用都挺好的&lt;/li&gt;
  &lt;li&gt;Server side canvas https://github.com/Automattic/node-canvas&lt;/li&gt;
  &lt;li&gt;边看 youtube tutorial 边写代码 https://yourepl.tumblr.com/post/180936303347/announcing-yourepl&lt;/li&gt;
  &lt;li&gt;又一个 PostgreSQL 网页版客户端 https://github.com/sosedoff/pgweb&lt;/li&gt;
  &lt;li&gt;有趣的 CSS Layout 学习方法 http://cssgridgarden.com/#en http://flexboxfroggy.com/&lt;/li&gt;
  &lt;li&gt;pipenv 也有过 easter egg https://github.com/pypa/pipenv/issues/786 不过影比 antd 这个事情好多了&lt;/li&gt;
  &lt;li&gt;Web 太强了 啥都能做 https://whatwebcando.today/&lt;/li&gt;
  &lt;li&gt;来自娄晨耀的清真 DNS 解决方案 https://github.com/Chenyao2333/freedns-go&lt;/li&gt;
  &lt;li&gt;快速的 tldr 实现 https://github.com/dbrgn/tealdeer&lt;/li&gt;
  &lt;li&gt;MongoDB Data Source for Grafana 可以用 就是 aggregation 不大容易写对 https://github.com/JamesOsgood/mongodb-grafana&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Fish 3.0 发布 “fish now supports &amp;amp;&amp;amp; (like and),&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;(like or), and ! (like not), for better migration from POSIX-compliant shells (#4620).”&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 29 Dec 2018 10:23:00 +0800</pubDate>
        <link>https://jiege.ch/misc/2018/12/29/weekly-sharing-4/</link>
        <guid isPermaLink="true">https://jiege.ch/misc/2018/12/29/weekly-sharing-4/</guid>
        
        <category>weeklysharing</category>
        
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>《加速奔向2019》小程序编写和运营回顾</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;关注清华的同学可能知道，昨天，“清华大学”公众号发了一篇名为&lt;a href=&quot;https://mp.weixin.qq.com/s/Kk7FuTefipW4HpQkoF72WA&quot;&gt;《2018，我们共芳华丨@THUers 致相伴一年的你，请查收这份心意》&lt;/a&gt;的推送，内容大概就是，有那么100个新年台历礼品要送出去，大家如果想要的话，就扫描小程序。小程序模仿了火车抢票的病毒式营销的模式，要求大家分享到群聊或者朋友圈，让别人给自己加速，加速到 2019 的前 100 名即可填写信息领取奖品。&lt;/p&gt;

&lt;p&gt;然后大家就在推送里看到了我。就酱。&lt;/p&gt;

&lt;h2 id=&quot;开始&quot;&gt;开始&lt;/h2&gt;

&lt;p&gt;这件事情据说策划了有一段时间了，只是因为各种原因一直没有做，最后这个锅就路由到了我的头上。一开始说就是个加速小程序，逻辑很简单，但后来逐渐发现需求越来越多，主要是界面上的，动画上的，还有一些非技术因素的功能，嗯。这其实算是一个不大好的软件工程案例。&lt;/p&gt;

&lt;h2 id=&quot;过程&quot;&gt;过程&lt;/h2&gt;

&lt;h3 id=&quot;线上的问题与解决方案&quot;&gt;线上的问题与解决方案&lt;/h3&gt;

&lt;p&gt;然后就是上线了。大概是昨天（2018-12-27）中午的时候推送发出去，很快流量就开始来了。很快，在朋友圈看到有同学在转发了，也有人反映说，网络有点卡，加载资源有点多。我去机器上用 iftop 看了下，流量大概是 250Mb/s ，没打到千兆。我一开始看了下，CPU 和内存占用都良好，以为是网络出口限制的问题，就想着没办法了，就这样吧，扛过去再说。不过，忽然有了转机。&lt;/p&gt;

&lt;p&gt;TUNA 技术群里，忽然有人在讨论 SOMAXCONN 的问题，我想到，会不会是有些参数没开够大，导致了性能瓶颈，又受到啊荣的点拨，立马调整了这些变量：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net.core.somaxconn
fs.file-max
net.core.netdev_max_backlog
net.ipv4.tcp_max_syn_backlog
nginx: worker_rlimit_nofile
nginx: event.worker_connections
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;很快带宽从 200Mb/s 左右打到了 400Mb/s 多，在 iftop 中看到的峰值接近 600Mb/s，见下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-12-27-20-35-21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;事后回来看，发现配置一套科学的监控系统真的很有用，如 TCP 连接的状态图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-12-27-20-33-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里最高的黄线代表的是 TIME_WAIT ，意味着很多的 TCP 连接都卡在了等待资源上，而一当我修改参数以后，立刻就降了下来，ESTBALISHED 的连接有了显著的提升。这个问题从另一个图也可以明地看出：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-12-27-20-38-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个图是 TCP Handshake Issues ，可以看到无论是 activeopen 还是 passiveopen ，都很高，意味着这里无论是发还是收都遇到了问题。而修改参数以后，这些问题立马得到了很好的改善。&lt;/p&gt;

&lt;p&gt;其实这些本应该在上线前做好的，但我低估了清华大学的影响力，没有做好相应的准备，还是在优秀的运维人员的指点下得到了较好的效果。&lt;/p&gt;

&lt;h3 id=&quot;用户数据分析&quot;&gt;用户数据分析&lt;/h3&gt;

&lt;p&gt;当然了，除了 Grafana+InfluxDB+Telegraf 这一套监控系统，我们也部署了 ElasticSearch+Logstash+Kibana ，只不过我们还是用 Grafana 做了 ElasticSearch 的前端了。通过对 Nginx 日志的分析，我们得到了这些关键的数据（从12-26 12:00到12-27 12:00一天时间）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-12-27-20-48-48.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-12-27-20-49-00.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;除了这些，还有很多有趣的数据，例如用户里北京的最多，也可以大致地看出各个地方网络和手机的普及程度；用户使用的手机的机型里前几名都是苹果的，从单项占领了排名的前很多位，之后则是华为小米OPPO等，但总体上反而是安卓用户更多。&lt;/p&gt;

&lt;p&gt;微信小程序官方也提供了一些数据统计可供参考。例如页面的访问次数信息，一共大约有二十多万次，打开小程序有十三万多次，访问人数是五万多，还有女性用户比男性用户多等等。这个时代，有数据确实能够得到许多有价值的判断。&lt;/p&gt;

&lt;h2 id=&quot;反思&quot;&gt;反思&lt;/h2&gt;

&lt;p&gt;这次学到了很多东西，验证了监控系统的必要性，它能够实时看到服务的运行状态并进行调优，事后也可以回过头来进行进一步的分析和总结。不足的是，遇到大客户量的时候，静态资源就应该用 CDN 服务而不应该自己搭建，成本不高而且用户体验会很好。这次后端在数据库操作都用了原子操作，没有出现大的问题，但如果以后遇到更复杂的需求的时候就没有这么容易了。&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Dec 2018 19:56:00 +0800</pubDate>
        <link>https://jiege.ch/software/2018/12/27/wxapp-recap/</link>
        <guid isPermaLink="true">https://jiege.ch/software/2018/12/27/wxapp-recap/</guid>
        
        <category>wechat</category>
        
        <category>wxapp</category>
        
        <category>grafana</category>
        
        <category>elk</category>
        
        <category>mongodb</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>每周分享第 3 期</title>
        <description>&lt;p&gt;因为 DDL ，咕了一小会。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;被 Windows 保存为 Unicode 文件坑了 BOM 配上 UTF-16 太难受了&lt;/li&gt;
  &lt;li&gt;Github 最近添加了很多 Issue 方面的更新，如 Pin 和 Delete&lt;/li&gt;
  &lt;li&gt;Grafana 真的很好看很好用 推荐大家自己配一套监控系统&lt;/li&gt;
  &lt;li&gt;Microsoft Remote Desktop Beta 新增了 AVC Codec 有意思 不知道啥时候上 HEVC&lt;/li&gt;
  &lt;li&gt;发现一个很好玩的用 Rust 写的网页游戏 https://sandspiel.club/#&lt;/li&gt;
  &lt;li&gt;Python Pattern Matching https://github.com/santinic/pampy&lt;/li&gt;
  &lt;li&gt;大新闻：MIPS Open Source 了 https://www.eetimes.com/document.asp?doc_id=1334087&lt;/li&gt;
  &lt;li&gt;GRPC 调试的 GUI https://github.com/uw-labs/bloomrpc 对标 Postman&lt;/li&gt;
  &lt;li&gt;酷炫的屏幕保护 for Mac https://github.com/JohnCoates/Aerial&lt;/li&gt;
  &lt;li&gt;WPF 开源了 不知道啥时候支持 *nix https://github.com/dotnet/wpf&lt;/li&gt;
  &lt;li&gt;分享欢乐 https://github.com/dotnet/wpf&lt;/li&gt;
  &lt;li&gt;分享欢乐x2 https://lore.kernel.org/patchwork/patch/628142/&lt;/li&gt;
  &lt;li&gt;谷歌近日到处上线了 Material Design 2.0 感觉风格不大习惯&lt;/li&gt;
  &lt;li&gt;veonim/veonim 的 Tag 里有 #meme-driven-development 太好笑了&lt;/li&gt;
  &lt;li&gt;巨硬开源了自己的 UEFI 和 TianoCore EDK 竞争 https://blogs.windows.com/buildingapps/2018/12/19/%e2%80%afintroducing-project-mu/&lt;/li&gt;
  &lt;li&gt;Github 的 GDPR 完全体上线 https://blog.github.com/2018-12-19-download-your-data/&lt;/li&gt;
  &lt;li&gt;ZFSonLinux 要统治 ZFS 世界的节奏 https://lists.freebsd.org/pipermail/freebsd-current/2018-December/072422.html&lt;/li&gt;
  &lt;li&gt;VBScript 真的是太多漏洞了 满目疮痍 https://googleprojectzero.blogspot.com/2018/12/on-vbscript.html&lt;/li&gt;
  &lt;li&gt;原来取名真的这么草率的吗 我也想买一个了 https://www.solidot.org/story?sid=59028&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 22 Dec 2018 00:19:00 +0800</pubDate>
        <link>https://jiege.ch/misc/2018/12/22/weekly-sharing-3/</link>
        <guid isPermaLink="true">https://jiege.ch/misc/2018/12/22/weekly-sharing-3/</guid>
        
        <category>weeklysharing</category>
        
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>每周分享第 2 期</title>
        <description>&lt;p&gt;继续，继续。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用代码呈现硬件实现对性能的影响，值得一读 &lt;a href=&quot;https://github.com/Kobzol/hardware-effects&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;发现了一个蛮少见的编码标准 AVS2 ，才发现是中国主导的 &lt;a href=&quot;https://github.com/pkuvcl/xavs2&quot;&gt;编码器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;linux.org 的 DNS 被篡改了，认准 kernel.org 即可&lt;/li&gt;
  &lt;li&gt;一个处理器的电路的在线可视化 &lt;a href=&quot;https://www.theregister.co.uk/2015/11/28/arm1_visualized/&quot;&gt;ARM1 visualized&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WASM 家庭现已加入 Nginx &lt;a href=&quot;https://www.wasmjit.org/blog/nginx-on-wasmjit.html&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;用 .bat 编写汇编语言 &lt;a href=&quot;https://github.com/mniip/BOOTSTRA/tree/master/BATAS#batas&quot;&gt;mnnip/BOOTSTRA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gitlab 挺香的，兹瓷 git-lfs ，还可以自己给自己的项目配一个 ci runner&lt;/li&gt;
  &lt;li&gt;LaTeX 的 subfigure 之间如果有空行，就真的换了一行，所以同一行的 subfigure 不要换行&lt;/li&gt;
  &lt;li&gt;Rocket 4.0 出了，看起来不错，要是作者更新一下 CS140e 就好了 &lt;a href=&quot;https://github.com/SergioBenitez/Rocket/blob/v0.4.0/CHANGELOG.md#version-040-dec-06-2018&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;装机必备，查询 Arch Wiki &lt;a href=&quot;https://www.npmjs.com/package/arch-wiki-man&quot;&gt;arch-wiki-man&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LaTeX 里 \newcommand 时，如果文件名有多个 ‘.’ ，要特殊处理 &lt;a href=&quot;https://tex.stackexchange.com/questions/10574/includegraphics-dots-in-filename&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RunAsDate for *nix &lt;a href=&quot;https://github.com/wolfcw/libfaketime&quot;&gt;wolfcw/libfaketime&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;用数据库做数据分析似乎是个不错的选择&lt;/li&gt;
  &lt;li&gt;Canvas 配合 globalCompositionOperation 能做到不少东西&lt;/li&gt;
  &lt;li&gt;才知道有 Time Machine over SMB 这种操作 &lt;a href=&quot;https://support.apple.com/zh-cn/guide/mac-help/mchl31533145/mac&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mDNS repeater 把两个子网的 mDNS 打通 &lt;a href=&quot;https://github.com/kennylevinsen/mdns-repeater&quot;&gt;kennylevinsen/mdns-repeater&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Office 2019 for Mac 的 December 2018 release 添加了 Dark Mode ，并且也支持了 Continuity Camera ，直接从手机拍照导入&lt;/li&gt;
  &lt;li&gt;Gitlab serverless 发布，期待 &lt;a href=&quot;https://about.gitlab.com/2018/12/11/introducing-gitlab-serverless/&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;用 NAS 作为 Time Machine 备份盘的方法 &lt;a href=&quot;https://kirb.me/2018/03/24/using-samba-as-a-time-machine-network-server.html&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;研究了一下，Time Machine over SMB 在 macOS 里的表现形式是 apfs 里写了一个 sparse bundle ，bundle 里面是 HFS+ 。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 14 Dec 2018 15:55:00 +0800</pubDate>
        <link>https://jiege.ch/misc/2018/12/14/weekly-sharing-2/</link>
        <guid isPermaLink="true">https://jiege.ch/misc/2018/12/14/weekly-sharing-2/</guid>
        
        <category>weeklysharing</category>
        
        
        <category>misc</category>
        
      </item>
    
  </channel>
</rss>
