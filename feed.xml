<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杰哥的{运维,编程}小笔记</title>
    <description>This is the personal blog of Jiajie Chen, a NANO(uNix hAcker aNd lOver).
</description>
    <link>https://jiegec.me/</link>
    <atom:link href="https://jiegec.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 13 Oct 2018 22:59:08 +0800</pubDate>
    <lastBuildDate>Sat, 13 Oct 2018 22:59:08 +0800</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Unicode En Dash 小坑</title>
        <description>&lt;p&gt;今天有同学问到我这个问题：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gcc -o ph ph.c –lpthread
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为啥不工作。我怎么看都觉得没啥问题，一开始以为是找不到 pthread ，但马上又排除了。想了下会不会是有隐藏的字符，于是让同学 &lt;code class=&quot;highlighter-rouge&quot;&gt;pbpaste | xxd&lt;/code&gt; 一下，果然发现这里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;–&lt;/code&gt; 是 &lt;code class=&quot;highlighter-rouge&quot;&gt;\xe2\x80\x93&lt;/code&gt; ，查了下是 Unicode 里的 En Dash 。由于这是从 PDF 里直接拷贝出来的，所以凉了。改成正常的短横杠即可。&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Oct 2018 22:51:00 +0800</pubDate>
        <link>https://jiegec.me/misc/2018/10/13/unicode-en-dash-mistake/</link>
        <guid isPermaLink="true">https://jiegec.me/misc/2018/10/13/unicode-en-dash-mistake/</guid>
        
        <category>unicode</category>
        
        <category>pdf</category>
        
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>软工平台踩坑记</title>
        <description>&lt;p&gt;老师要求我们搞 CI/CD ，CI 自然是很快就搞好了，不过 CD 还得配一下。今天研究了一下它的 Deployer 架构，发现了若干易用性问题：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;缺乏文档&lt;/li&gt;
  &lt;li&gt;只有&lt;a href=&quot;https://gitlab.secoder.net/SECoder-Examples/python-example/blob/master/.gitlab-ci.yml&quot;&gt;样例配置&lt;/a&gt;没有讲解&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.secoder.net/service/deployer/&quot;&gt;已有的文档&lt;/a&gt; 语焉不详&lt;/li&gt;
  &lt;li&gt;官方对此回复：功能太多，还没忙过来写文档&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;于是只好经常戳助教然后尝试理解这个东西。。然后遇到了很多的 BUG ：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;容器没有重启功能。。。&lt;/li&gt;
  &lt;li&gt;容器死了还是活着看一个图的颜色。。。毫无说明&lt;/li&gt;
  &lt;li&gt;容器虽然有 Console ，但是输入过长后直接回到行首没有换行。。。&lt;/li&gt;
  &lt;li&gt;容器对外的域名里有下划线。。。 Django 上来就一句 &lt;code class=&quot;highlighter-rouge&quot;&gt;Invalid HTTP_HOST header: 'xxxx_xxx.app.secoder.net'. The domain name provided is not valid according to RFC 1034/1035.&lt;/code&gt; Express 直接就 &lt;code class=&quot;highlighter-rouge&quot;&gt;Invalid Host header&lt;/code&gt; 放弃治疗。。。&lt;/li&gt;
  &lt;li&gt;助教对上一条的回复是，等我忙完 DDL 有空再做吧。。。也就是说现在要做只能自己再开一个 Nginx 容器然后自己在 &lt;code class=&quot;highlighter-rouge&quot;&gt;proxy_set_header&lt;/code&gt; 上做手脚。。。&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 12 Oct 2018 00:09:00 +0800</pubDate>
        <link>https://jiegec.me/software/2018/10/12/secoder-platform-sucks/</link>
        <guid isPermaLink="true">https://jiegec.me/software/2018/10/12/secoder-platform-sucks/</guid>
        
        <category>secoder</category>
        
        <category>softwarengineering</category>
        
        <category>cd</category>
        
        <category>ci</category>
        
        <category>gitlab</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>在荔枝糖（Lichee Tang）上初次体验 FPGA</title>
        <description>&lt;p&gt;今天从张宇翔学长那拿到了 &lt;a href=&quot;http://tang.lichee.pro/&quot;&gt;荔枝糖（Lichee Tang）&lt;/a&gt; 的 FPGA 板子，于是立即开始把前段时间学到的Verilog应用上来。不过想到现在我手上没有多少外设，然后又必须远程到 Windows 电脑上去操作，于是先实现了一下 UART 通信。&lt;/p&gt;

&lt;p&gt;在网上找到了 &lt;a href=&quot;https://github.com/ben-marshall/uart&quot;&gt;ben-marshall/uart&lt;/a&gt; 一个简易的实现，很快做到了一直在串口上打印 &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; 字符。接着我开始尝试实现一个简单的串口回显。一开始，我直接把 UART 读到的数据直接输出，果然可以了，但是一旦传输速率跟不上了，就会丢失数据。于是我添加了 FIFO IP 核，然后把读入的数据存入 FIFO ，又从 FIFO 中读取数据写入到 UART 中去。不过发现了一个小 BUG：每次打印的是倒数第二次输入的字符，即丢失了第一个字符。在张宇翔学长的帮助下找到了问题：当 FIFO 的读使能信号为高时，其数据在下一个时钟周期才来，于是解决方案就是等到数据来的时候再向 UART 中写数据：&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;uart_tx_en&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart_fifo_re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就解决了这个问题。完整代码在 &lt;a href=&quot;https://github.com/jiegec/learn_licheetang&quot;&gt;jiegec/learn_licheetang&lt;/a&gt; 中。&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Oct 2018 22:34:00 +0800</pubDate>
        <link>https://jiegec.me/hardware/2018/10/07/my-first-fpga-experience-on-lichee-tang/</link>
        <guid isPermaLink="true">https://jiegec.me/hardware/2018/10/07/my-first-fpga-experience-on-lichee-tang/</guid>
        
        <category>verilog</category>
        
        <category>licheetang</category>
        
        <category>fpga</category>
        
        <category>uart</category>
        
        
        <category>hardware</category>
        
      </item>
    
      <item>
        <title>使用 veth 实现 IPv6-only 的 Brouter 功能</title>
        <description>&lt;p&gt;最近从 @shankerwangmiao 学到了一个方法：通过 veth 把两个 bridge 的 IPv6 桥接起来。方法如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ip link add veth-v6-in type veth peer name veth-v6-out
$ brctl addif br-in veth-v6-in
$ brctl addif br-out veth-v6-out
$ ebtables -t filter -A FORWARD -p ! IPv6 -o veth-v6-in -j DROP
$ ebtables -t filter -A FORWARD -p ! IPv6 -o veth-v6-out -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就可以看到 veth 上仅有 IPv6 的流量了。&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Oct 2018 11:05:00 +0800</pubDate>
        <link>https://jiegec.me/networking/2018/10/07/use-veth-for-ipv6-brouter/</link>
        <guid isPermaLink="true">https://jiegec.me/networking/2018/10/07/use-veth-for-ipv6-brouter/</guid>
        
        <category>brouter</category>
        
        <category>ebtables</category>
        
        <category>ipv6</category>
        
        
        <category>networking</category>
        
      </item>
    
      <item>
        <title>在 Android 上打开 LTE 的 IPv6</title>
        <description>&lt;p&gt;听闻北京移动给 LTE 配置了 SLAAC ，但现在需要手动打开，方法如下：&lt;/p&gt;

&lt;p&gt;Settings -&amp;gt; Network &amp;amp; Internet -&amp;gt; Mobile Network -&amp;gt; Advanced -&amp;gt; Access Point Names -&amp;gt; 中国移动 GPRS (China Mobile) -&amp;gt; 把 APN procotol 和 APN roaming protocol 两项都改成 IPv4/IPv6&lt;/p&gt;

&lt;p&gt;然后在 &lt;a href=&quot;https://test-ipv6.com&quot;&gt;test-ipv6.com&lt;/a&gt; 上可以看到确实分配了 IPv6 地址，不过目前评分只有 1/10 。也就是说可用性还不佳。&lt;/p&gt;

&lt;p&gt;而在 iOS 上，通过 HE 的 Network Tools 能看到，确实拿到了 IPv6 的地址，但是出不去，怀疑是运营商没有下发相关配置，所以还不能使用，只能继续等。&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Oct 2018 22:47:00 +0800</pubDate>
        <link>https://jiegec.me/networking/2018/10/04/enable-lte-ipv6-on-android/</link>
        <guid isPermaLink="true">https://jiegec.me/networking/2018/10/04/enable-lte-ipv6-on-android/</guid>
        
        <category>android</category>
        
        <category>apn</category>
        
        <category>ipv6</category>
        
        
        <category>networking</category>
        
      </item>
    
      <item>
        <title>THUCTF 2018 和 Teaser Dragon CTF 2018 小记</title>
        <description>&lt;p&gt;终于可以公开 &lt;a href=&quot;https://github.com/jiegec/ctf-writeups/tree/master/2018-09-28-thuctf2018&quot;&gt;writeup&lt;/a&gt; 了，大家也可以去看谭闻德写的 &lt;a href=&quot;https://twd2.me/archives/11097&quot;&gt;writeup&lt;/a&gt; 。 这次是我第一次打 CTF ，发现题目还挺有意思的，虽然也有一些题目做不出来，有拿钱还是美滋滋。&lt;/p&gt;

&lt;p&gt;这次也认识了好些会打 CTF 的人吧，如 0x00, user1, igoodvegetable 等队伍的同学。一开始被蛤力橙叫来打比赛，我觉得心里挺没底的，然后花了很多时间做题目，一点一点还是做出了不少题目来。最精彩的还是结束以后，当知晓没做出来的题目的做法时候，会不自觉感叹题目的巧妙。也学到了一些梗：&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define 1000000007 twd2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接着就参与了一下 Teaser Dragon CTF 2018 ，是个在线赛，许多人一起做题，只有 24 小时。看了下题目，除了签到题，其它题都比 THUCTF 2018 难多了，我只能围观他们做题。最后看到别人写的 writeup ，真是太巧妙了，一环接一环，真的想不到。不过也有很麻烦的题目，特别是有的逆向的题目，太考验人的耐心了。&lt;/p&gt;

&lt;p&gt;接下来就等待官方的 writeup 和别人的 writeup ，学习一下别人的做法吧。&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Oct 2018 14:52:00 +0800</pubDate>
        <link>https://jiegec.me/ctf/2018/10/04/thuctf-2018-and-teaser-dragon-ctf-2018/</link>
        <guid isPermaLink="true">https://jiegec.me/ctf/2018/10/04/thuctf-2018-and-teaser-dragon-ctf-2018/</guid>
        
        <category>ctf</category>
        
        <category>thuctf</category>
        
        
        <category>ctf</category>
        
      </item>
    
      <item>
        <title>绕过 GPGMail 的激活检测</title>
        <description>&lt;p&gt;前段时间 GPGMail &lt;a href=&quot;https://gpgtools.org/support-plan&quot;&gt;宣布不再免费&lt;/a&gt;，在三十天的试用期后就不给用了。唉，可能是官方实在没钱维护了，也可能是官方想赚钱了。不过，既然 GPGMail 采用的是&lt;a href=&quot;https://github.com/GPGTools/GPGMail/blob/high-sierra/LICENSE.txt&quot;&gt;自由的许可证&lt;/a&gt;，意味着我们可以自己对代码进行更改。和许可证验证相关的&lt;a href=&quot;https://github.com/GPGTools/GPGMail/blob/c08ce21eee08a1089c82c04af1fab5b85d72de68/Source/GPGMailBundle.m#L846&quot;&gt;代码&lt;/a&gt;如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (BOOL)hasActiveContract {
    NSDictionary *contractInformation = [self contractInformation];
    return [contractInformation[@&quot;Active&quot;] boolValue];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们只要改成 &lt;code class=&quot;highlighter-rouge&quot;&gt;return TRUE&lt;/code&gt; ，在自己的电脑上手动编译、并复制到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/Library/Application Support/GPGTools/GPGMail&lt;/code&gt; 下即可。&lt;/p&gt;

&lt;p&gt;另：还有一个直接对二进制打 patch 的方法（仍然符合许可证），利用了最近打 CTF 学到的一些知识。找到以上这个函数，然后把返回值修改成非零即可。这里就不提供方法了。最后的更改：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ radiff2 -D
--- 0x0000282f  410fbec7
- movsx eax, r15b
+++ 0x0000282f  4c89e090
+ mov rax, r12
+ nop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当然了，还需要额外 &lt;code class=&quot;highlighter-rouge&quot;&gt;codesign --remove-signature&lt;/code&gt; 一下。&lt;/p&gt;

&lt;p&gt;谨慎对非自由软件采用这个方法。可能有法律风险。&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Oct 2018 11:47:00 +0800</pubDate>
        <link>https://jiegec.me/software/2018/10/04/bypass-gpgmail-activation/</link>
        <guid isPermaLink="true">https://jiegec.me/software/2018/10/04/bypass-gpgmail-activation/</guid>
        
        <category>gpg</category>
        
        <category>gpgmail</category>
        
        <category>macos</category>
        
        <category>radare2</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>在 macOS 的 VirtualBox 上从 USB 启动</title>
        <description>&lt;p&gt;做了一个 Windows 10 安装 U 盘，想测试一下能不能启动，于是想用 VirtualBox 起一个虚拟机。但是发现，一般情况下要从 ISO 或者把 U 盘克隆成一个 vdi/vmdk etc 再启动。不过找到了 Cem Arslan 的 &lt;a href=&quot;https://www.linkedin.com/pulse/virtualbox-booting-from-usb-mac-cem-arslan&quot;&gt;VirtualBox - Booting From USB (MAC)&lt;/a&gt; 实验了一下，确实可以用，以 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/disk2&lt;/code&gt; 为例方法如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diskutil unmountDisk /dev/disk2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; /dev/disk2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;VBoxManage internalcommands createrawvmdk &lt;span class=&quot;nt&quot;&gt;-filename&lt;/span&gt; PATH_TO_VMDK &lt;span class=&quot;nt&quot;&gt;-rawdisk&lt;/span&gt; /dev/disk2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Now boot from VirtualBox&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于其它平台，可以参考 Tu Nguyen 的 &lt;a href=&quot;https://www.aioboot.com/en/boot-from-usb-in-virtualbox/&quot;&gt;How to boot from USB in VirtualBox&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;研究了一下生成的 vmdk 文件，大概是这样的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Disk DescriptorFile
version=1
CID=12345678
parentCID=ffffffff
createType=&quot;fullDevice&quot;

# Extent description
RW 12345678 FLAT &quot;/dev/disk2&quot; 0

# The disk Data Base 
#DDB

ddb.virtualHWVersion = &quot;4&quot;
ddb.adapterType=&quot;ide&quot;
ddb.geometry.cylinders=&quot;1234&quot;
ddb.geometry.heads=&quot;1234&quot;
ddb.geometry.sectors=&quot;1234&quot;
ddb.uuid.image=&quot;12341234-1234-1234-1234-123412341234&quot;
ddb.uuid.parent=&quot;00000000-0000-0000-0000-000000000000&quot;
ddb.uuid.modification=&quot;00000000-0000-0000-0000-000000000000&quot;
ddb.uuid.parentmodification=&quot;00000000-0000-0000-0000-000000000000&quot;
ddb.geometry.biosCylinders=&quot;1234&quot;
ddb.geometry.biosHeads=&quot;1234&quot;
ddb.geometry.biosSectors=&quot;1234&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 14 Sep 2018 23:57:00 +0800</pubDate>
        <link>https://jiegec.me/os/2018/09/14/virtualbox-booting-from-usb-on-mac/</link>
        <guid isPermaLink="true">https://jiegec.me/os/2018/09/14/virtualbox-booting-from-usb-on-mac/</guid>
        
        <category>virtualbox</category>
        
        <category>macos</category>
        
        
        <category>os</category>
        
      </item>
    
      <item>
        <title>在 Ubuntu 上跨版本迁移 MongoDB</title>
        <description>&lt;p&gt;由于 MongoDB 只支持当前版本和上一个版本的数据库格式，然后刚刚滚系统升级的时候升级到了 3.6.x ，而数据库格式仍然是 3.2.x 的，于是需要先安装回 3.4.x 版本的 MongoDB，输入命令把数据库升级到 3.4.x 版本后，再用 3.6.x 的数据库进行升级。&lt;/p&gt;

&lt;p&gt;以 从 Ubuntu 14.04 LTS 升级到 Ubuntu 18.04.1 LTS 为例，方法如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-3.4.17.tgz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xvf mongodb-linux-x86_64-ubuntu1604-3.4.17.tgz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mongodb-linux-x86_64-ubuntu1604-3.4.17/bin/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./mongod &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; /etc/mongodb.conf &amp;amp;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mongo
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; db.adminCommand&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; setFeatureCompatibilityVersion: &lt;span class=&quot;s1&quot;&gt;'3.4'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt; : 1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;fg&lt;/span&gt;
^C
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; mongodb:mongodb /var/lib/mongodb
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start mongodb
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mongo
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; db.adminCommand&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; getParameter: 1, featureCompatibilityVersion: 1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;featureCompatibilityVersion&quot;&lt;/span&gt; : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;3.4&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt; : 1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; db.adminCommand&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; setFeatureCompatibilityVersion: &lt;span class=&quot;s1&quot;&gt;'3.6'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt; : 1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; db.adminCommand&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; getParameter: 1, featureCompatibilityVersion: 1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;featureCompatibilityVersion&quot;&lt;/span&gt; : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;3.6&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt; : 1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Okay now&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 13 Sep 2018 14:27:00 +0800</pubDate>
        <link>https://jiegec.me/software/2018/09/13/migrate-mongodb-on-ubuntu/</link>
        <guid isPermaLink="true">https://jiegec.me/software/2018/09/13/migrate-mongodb-on-ubuntu/</guid>
        
        <category>mongodb</category>
        
        <category>ubuntu</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>通过 SSH 隧道连接 ADB 和 Android 设备</title>
        <description>&lt;p&gt;由于本机算力不足，想要在远程&lt;a href=&quot;/programming/2018/06/18/building-lineageos-in-archlinux/&quot;&gt;编译 LineageOS&lt;/a&gt; ，其中有一步需要连接到已有的设备，于是突发奇想：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;adb 可以通过 网络连接&lt;/li&gt;
  &lt;li&gt;ssh 可以进行端口转发，这里是把 remote 的端口转发到 Android 设备上的端口。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;方法如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb shell ip &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; inet addr show wlan0
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# remember the ip address here&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb tcpip PORT1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; PORT2:ANDROID_IP:PORT1 REMOTE
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;remote&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb connect localhost:PORT2 &lt;span class=&quot;c&quot;&gt;# trust this device on Android&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考文档：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/3623727&quot;&gt;How can I connect to Android with ADB over TCP?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ssh.com/ssh/tunneling/example&quot;&gt;SSH PORT FORWARDING EXAMPLE&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 13 Sep 2018 13:20:00 +0800</pubDate>
        <link>https://jiegec.me/networking/2018/09/13/adb-over-ssh-tunnel/</link>
        <guid isPermaLink="true">https://jiegec.me/networking/2018/09/13/adb-over-ssh-tunnel/</guid>
        
        <category>ssh</category>
        
        <category>adb</category>
        
        <category>forwarding</category>
        
        
        <category>networking</category>
        
      </item>
    
  </channel>
</rss>
