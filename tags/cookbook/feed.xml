<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cookbook on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/cookbook/</link>
    <description>Recent content in cookbook on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Jan 2023 20:18:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/cookbook/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FreeBSD/NetBSD/OpenBSD/DragonFlyBSD Cookbook</title>
      <link>https://jia.je/system/2023/01/21/bsd-cookbook/</link>
      <pubDate>Sat, 21 Jan 2023 20:18:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2023/01/21/bsd-cookbook/</guid>
      <description>背景 最近在维护 lsof 的时候，需要在 FreeBSD/NetBSD/OpenBSD/DragonFlyBSD 上进行开发和测试，于是就装了虚拟机，特此记录我在使用过程中，与 Linux 不一样的一些常用 FreeBSD/NetBSD/OpenBSD/DragonFlyBSD 命令。
FreeBSD 文档参考：https://docs.freebsd.org/en/books/handbook
安装 在 https://www.freebsd.org/where/ 找到最新版下载，对于虚拟机的需求，用 -disk1.iso，1 GB 左右。安装过程按照 UI 一步步走即可。
root 权限 FreeBSD 的 su 默认只有 wheel 组可以 su 到 root，所以安装的时候，建议给创建的帐号加上 wheel 组。也可以通过 pw 命令：
pw groupmod wheel -m freebsd sudo 需要通过包管理器安装，用法和 Linux 一样。
包管理 使用 pkg 命令进行包管理：
pkg update pkg install -U sudo vim fish -U 表示在 install 的时候不要再 update。
也可以从 Ports 源码编译，如：
git clone https://git.FreeBSD.org/ports.git /usr/ports cd /usr/ports/sysutils/lsof make install 升级 使用 freebsd-update 命令升级：</description>
    </item>
    
    <item>
      <title>Nix Cookbook</title>
      <link>https://jia.je/software/2022/06/07/nix-cookbook/</link>
      <pubDate>Tue, 07 Jun 2022 22:29:00 +0800</pubDate>
      
      <guid>https://jia.je/software/2022/06/07/nix-cookbook/</guid>
      <description>背景 最近在尝试 NixOS 和在 macOS 上跑 Nix，下面记录一些我在使用过程中遇到的一些小问题和解决思路。
NixOS 全局配置 NixOS 的全局配置路径：/etc/nixos/configuration.nix 和 /etc/nixos/hardware-configuration.nix
应用更新后的全局配置：
nixos-rebuild switch # or nixos-rebuild switch --upgrade 应用 Flakes 配置文件并显示变化：
#!/usr/bin/env python3 import os user = os.getenv(&amp;#34;USER&amp;#34;) home = f&amp;#34;/nix/var/nix/profiles/&amp;#34; old = home + os.readlink(f&amp;#34;{home}system&amp;#34;) os.system(&amp;#34;sudo nixos-rebuild switch --flake .&amp;#34;) new = home + os.readlink(f&amp;#34;{home}system&amp;#34;) os.system(f&amp;#34;nix store diff-closures {old} {new}&amp;#34;) 更新大版本 如果要更新 NixOS 21.11 到 22.05:
nix-channel --list nix-channel --add https://nixos.org/channels/nixos-22.05 nixos nixos-rebuild switch --upgrade 可以考虑改或者不改 /etc/nixos/configuration.</description>
    </item>
    
    <item>
      <title>Chisel3 Cookbook</title>
      <link>https://jia.je/hardware/2022/01/03/chisel3-cookbook/</link>
      <pubDate>Mon, 03 Jan 2022 22:19:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2022/01/03/chisel3-cookbook/</guid>
      <description>Chisel 版本选择 尽量选择较新版本的 Chisel。Chisel v3.5 完善了编译器插件，使得生成的代码中会包括更多变量名信息。
去掉输出 Verilog 文件中的寄存器随机初始化 版本：FIRRTL &amp;gt;= 1.5.0-RC2
代码：
new ChiselStage().execute( Array(&amp;#34;-X&amp;#34;, &amp;#34;verilog&amp;#34;, &amp;#34;-o&amp;#34;, s&amp;#34;${name}.v&amp;#34;), Seq( ChiselGeneratorAnnotation(genModule), CustomDefaultRegisterEmission( useInitAsPreset = false, disableRandomization = true ) ) ) 设置 disableRandomization=true 即可。useInitAsPreset 不建议开启。
关闭 FIRRTL 优化，输出尽可能与源代码一致的 Verilog 设置 Chisel 生成 MinimumVerilog：
new ChiselStage().execute( Array(&amp;#34;-X&amp;#34;, &amp;#34;mverilog&amp;#34;, &amp;#34;-o&amp;#34;, s&amp;#34;${name}.v&amp;#34;), Seq( ChiselGeneratorAnnotation(genModule) ) ) 此时代码中会保留更多原始 Chisel 代码的元素。
重命名 AXI4 为标准命名 Rocket Chip 中 AXI4Bundle 直接生成的名字和标准写法不同，可以利用 Chisel3 3.5.0 的 DataView 功能进行重命名：
// https://www.</description>
    </item>
    
  </channel>
</rss>
