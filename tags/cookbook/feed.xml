<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cookbook on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/cookbook/</link>
    <description>Recent content in cookbook on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jun 2022 22:29:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/cookbook/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nix Cookbook</title>
      <link>https://jia.je/software/2022/06/07/nix-cookbook/</link>
      <pubDate>Tue, 07 Jun 2022 22:29:00 +0800</pubDate>
      
      <guid>https://jia.je/software/2022/06/07/nix-cookbook/</guid>
      <description>背景 最近在尝试 NixOS 和在 macOS 上跑 Nix，下面记录一些我在使用过程中遇到的一些小问题和解决思路。
NixOS 全局配置 NixOS 的全局配置路径：/etc/nixos/configuration.nix 和 /etc/nixos/hardware-configuration.nix
应用更新后的全局配置：
nixos-rebuild switch # or nixos-rebuild switch --upgrade 更新大版本 如果要更新 NixOS 21.11 到 22.05:
nix-channel --list nix-channel --add https://nixos.org/channels/nixos-22.05 nixos nixos-rebuild switch --upgrade 可以考虑改或者不改 /etc/nixos/configuration.nix 中的 system.stateVersion。
常用配置 常用的 NixOS 配置：
# Enable XFCE services.xserver.enable = true; services.xserver.desktopManager.xfce.enable = true;  # System wide packages environment.systemPackages = with pkgs; [  xxx ];  # Fish shell programs.</description>
    </item>
    
    <item>
      <title>Chisel3 Cookbook</title>
      <link>https://jia.je/hardware/2022/01/03/chisel3-cookbook/</link>
      <pubDate>Mon, 03 Jan 2022 22:19:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2022/01/03/chisel3-cookbook/</guid>
      <description>Chisel 版本选择 尽量选择较新版本的 Chisel。Chisel v3.5 完善了编译器插件，使得生成的代码中会包括更多变量名信息。
去掉输出 Verilog 文件中的寄存器随机初始化 版本：FIRRTL &amp;gt;= 1.5.0-RC2
代码：
new ChiselStage().execute(  Array(&amp;#34;-X&amp;#34;, &amp;#34;verilog&amp;#34;, &amp;#34;-o&amp;#34;, s&amp;#34;${name}.v&amp;#34;),  Seq(  ChiselGeneratorAnnotation(genModule),  CustomDefaultRegisterEmission(  useInitAsPreset = false,  disableRandomization = true  )  ) ) 设置 disableRandomization=true 即可。useInitAsPreset 不建议开启。
关闭 FIRRTL 优化，输出尽可能与源代码一致的 Verilog 设置 Chisel 生成 MinimumVerilog：
new ChiselStage().execute(  Array(&amp;#34;-X&amp;#34;, &amp;#34;mverilog&amp;#34;, &amp;#34;-o&amp;#34;, s&amp;#34;${name}.v&amp;#34;),  Seq(  ChiselGeneratorAnnotation(genModule)  ) ) 此时代码中会保留更多原始 Chisel 代码的元素。
重命名 AXI4 为标准命名 Rocket Chip 中 AXI4Bundle 直接生成的名字和标准写法不同，可以利用 Chisel3 3.</description>
    </item>
    
  </channel>
</rss>
