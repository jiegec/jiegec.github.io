<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>helm on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/helm/</link>
    <description>Recent content in helm on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jul 2020 09:24:00 +0800</lastBuildDate>
    
	<atom:link href="https://jia.je/tags/helm/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 k8s 中部署 Prometheus</title>
      <link>https://jia.je/devops/2020/07/10/k8s-prometheus/</link>
      <pubDate>Fri, 10 Jul 2020 09:24:00 +0800</pubDate>
      
      <guid>https://jia.je/devops/2020/07/10/k8s-prometheus/</guid>
      <description>实验了一下在 k8s 中部署 Prometheus，因为它和 k8s 有比较好的集成，很多 App 能在 k8s 里通过 service discovery 被 Prometheus 找到并且抓取数据。实践了一下，其实很简单。
用 helm 进行配置：
helm upgrade --install prometheus stable/prometheus 这样就可以了，如果已经有 StorageClass （比如腾讯云的话，CBS 和 CFS），它就能自己起来了，然后在 Lens 里面也可以看到各种 metrics 的可视化。
如果是自建的单结点的 k8s 集群，那么还需要自己创造 PV，并且把 PVC 绑定上去。我采用的是 local 类型的 PV：
apiVersion: v1 kind: PersistentVolume metadata: name: pv-volume-1 labels: type: local spec: storageClassName: manual capacity: storage: 10Gi accessModes: - ReadWriteOnce hostPath: path: &amp;#34;/srv/k8s-data-1&amp;#34; --- apiVersion: v1 kind: PersistentVolume metadata: name: pv-volume-2 labels: type: local spec: storageClassName: manual capacity: storage: 10Gi accessModes: - ReadWriteOnce hostPath: path: &amp;#34;/srv/k8s-data-2&amp;#34; 这样，结点上的两个路径分别对应两个 PV，然后只要让 PVC 也用 manual 的 StorageClass 就可以了：</description>
    </item>
    
  </channel>
</rss>