<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>udp on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jiege.ch/tags/udp/</link>
    <description>Recent content in udp on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 May 2019 16:06:00 +0800</lastBuildDate>
    
	<atom:link href="https://jiege.ch/tags/udp/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IP 和 UDP Checksum 的增量更新问题</title>
      <link>https://jiege.ch/networking/2019/05/30/ip-and-udp-checksum-incremental-update/</link>
      <pubDate>Thu, 30 May 2019 16:06:00 +0800</pubDate>
      
      <guid>https://jiege.ch/networking/2019/05/30/ip-and-udp-checksum-incremental-update/</guid>
      <description>之前在写 IP Checksum 的增量更新，就是当 TTL -= 1 的时候，Checksum 应该增加 0x0100 ，但是这样会有问题，在于，如果按照原来的 IP Checksum 计算方法，是不会出现 0xFFFF 的（求和，进位，然后取反写入），这种加法就有可能出现 0xFFFF 。于是翻阅了相关的RFC：
首先是 RFC 1141 相关部分：
unsigned long sum; ipptr-&amp;gt;ttl--; /* decrement ttl */ sum = ipptr-&amp;gt;Checksum + 0x100; /* increment checksum high byte*/ ipptr-&amp;gt;Checksum = (sum + (sum&amp;gt;&amp;gt;16)) /* add carry */  这也是比较直接能想到的一种方法，但是会出现刚才提到的问题。于是 RFC 1624 纠正了这个问题：
 Although this equation appears to work, there are boundary conditions under which it produces a result which differs from the one obtained by checksum computation from scratch.</description>
    </item>
    
  </channel>
</rss>