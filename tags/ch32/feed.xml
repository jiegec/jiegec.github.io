<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ch32 on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/ch32/</link>
    <description>Recent content in ch32 on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Apr 2022 22:53:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/ch32/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>试用沁恒 CH32V307 评估板</title>
      <link>https://jia.je/hardware/2022/04/19/wch-ch32v307-eval/</link>
      <pubDate>Tue, 19 Apr 2022 22:53:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2022/04/19/wch-ch32v307-eval/</guid>
      <description>背景 之前有一天看到朋友在捣鼓 CH32V307，因此自己也萌生了试用 CH32V307 评估板的兴趣，于是在沁恒官网申请样品，很快就接到电话了解情况，几天后就顺丰送到了，不过因为疫情原因直到现在才拿到手上，只能说疫情期间说不定货比人还快。
开箱 收到的盒子里有一个 CH32V307 评估板，和一个 WCH-Link，相关资料可以在 官网 或者 openwch/ch32v307 下载。在说明书中有如下的图示：
WCH-Link 可以看到评估板自带了一个 WCH-Link，所以不需要附赠的那一个，直接把 11 号 Type-C 连接到电脑上即可。这里还遇到一个小插曲，用 Type-C to Type-C 的线连电脑上不工作，连 PWR LED 都点不亮，换一根 Type-A to Type-C 的就可以，没有继续研究是什么原因。电脑上可以看到 WCH-Link 的设备：VID=1a86, PID=8010。比较有意思的是，在 RISC-V 模式（CON 灯不亮）的时候 PID 是 8010，ARM 模式（CON 灯亮）的时候 PID 是 8011，从 RISC-V 模式切换到 ARM 模式的方法是连接 TX 和 GND 后上电，反过来要用 MounRiver，详见 WCH-Link 使用说明 V1.0 V1.3 和原理图 V1.1。
给沁恒开源 WCH-Link 原理图并开放固件点个赞，在淘宝上也可以看到不少 WCH-Link 的仿真器，挺有意思的。
在 ARM 模式下，它实现了类似 CMSIS-DAP 的协议，可以用 OpenOCD 调试：</description>
    </item>
    
  </channel>
</rss>
