<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scala on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/scala/</link>
    <description>Recent content in scala on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Apr 2020 21:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://jia.je/tags/scala/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 sbt 中 fork 并且并行运行测试</title>
      <link>https://jia.je/software/2020/04/13/sbt-fork-parallel-test/</link>
      <pubDate>Mon, 13 Apr 2020 21:00:00 +0800</pubDate>
      
      <guid>https://jia.je/software/2020/04/13/sbt-fork-parallel-test/</guid>
      <description>问题 最近在 sbt 使用遇到一个问题，有两个测试，分别用 testOnly 测试的时候没有问题，如果同时测试就会出问题，应该是全局的状态上出现了冲突。一个自然的解决思路是 fork，但是 sbt 默认 fork 之后 test 是顺序执行的，这会很慢。所以搜索了一下，找到了 fork 并且并行测试的方法。
解决方法 解决方法在 sbt 文档中其实就有（原文）。简单来说就是：把每个 test 放到单独的 TestGroup 中，每个 TestGroup 分别用一个 forked JVM 去运行；然后让 sbt 的并行限制设高一些：
// move each test into a group and fork them to avoid race condition import Tests._ def singleTests(tests: Seq[TestDefinition]) = tests map { test =&amp;gt; new Group( name = test.name, tests = Seq(test), SubProcess(ForkOptions())) } Test / testGrouping := singleTests( (Test / definedTests).</description>
    </item>
    
  </channel>
</rss>