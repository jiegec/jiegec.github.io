<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nfc on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/nfc/</link>
    <description>Recent content in nfc on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 May 2020 10:30:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/nfc/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FIDO U2F、FIDO2 和 CTAP 的关系</title>
      <link>https://jia.je/hardware/2020/05/18/fido-u2f-fido2-ctap/</link>
      <pubDate>Mon, 18 May 2020 10:30:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2020/05/18/fido-u2f-fido2-ctap/</guid>
      <description>背景 2012 年，Yubico 和 Google 设计了 U2F 协议，第二年 U2F 成为 FIDO 组织的标准，之后加入了 NFC 的支持。之后，FIDO2 作为替代 U2F 的新标准产生，原来的 U2F 以兼容的方式成为了 CTAP1，而采用 CBOR 封装格式的 CTAP(CTAP2) 则是 FIDO2 的主要协议。
U2F 命令格式 U2F 定义了它的命令格式，基于 ISO7816-4 APDU（short APDU） ：
CLA INS P1 P2 Lc data Le 1 byte 1 byte 1 byte 1 byte 0-1 bytes variable length 0-1 bytes 比如 U2F_VERSION 就是：
CLA INS P1 P2 Lc data Le 00 03 00 00 0 empty 00 返回的数据就是 U2F_V2 的 ASCII 加上 9000 的状态。</description>
    </item>
    
    <item>
      <title>MIFARE Classic 上配置 NDEF</title>
      <link>https://jia.je/hardware/2020/05/10/mifare-classic-ndef/</link>
      <pubDate>Sun, 10 May 2020 09:19:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2020/05/10/mifare-classic-ndef/</guid>
      <description>背景 最近买了一堆 NFC 的智能卡拿来测试，其中一张 MIFARE Classic 的总是在 iOS 上读不出来，无论是以 Tag 模式还是 NDEF 模式。于是通过一系列的研究，终于知道上怎么一回事，然后成功地把一个 MIFARE Classic 卡配置成了 NDEF。
背景知识 NFC 有很多协议，其中 MIFARE Classic 基于 ISO 14443-3 Type A 标准，里面有一些 MIFARE 的命令。通过这些命令，就可以控制 MIFARE Classic 卡的内容。具体来说，以我使用的 MIFARE Classic EV1 4K S70 为例，这篇文章会涉及到如下的背景知识：
MIFARE Classic 内存布局 在 MIFARE Classic 中，有 Sector 和 Block 的概念，每个 Sector 有若干个 Block，其中最后一个 Block 是特殊的（称为 Sector Trailer），保存了这个 Sector 的一些信息：Key A、Access Bits、GPB 和 Key B。对于 Classic 4K，首先是 32 个有 4 blocks 的 sector，然后是 8 个 有 16 blocks 的 sector，整体的内存布局大概是：</description>
    </item>
    
  </channel>
</rss>
