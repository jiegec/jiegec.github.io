<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/android/</link>
    <description>Recent content in android on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Oct 2018 22:47:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/android/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 Android 上打开 LTE 的 IPv6</title>
      <link>https://jia.je/networking/2018/10/04/enable-lte-ipv6-on-android/</link>
      <pubDate>Thu, 04 Oct 2018 22:47:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/10/04/enable-lte-ipv6-on-android/</guid>
      <description>听闻北京移动给 LTE 配置了 SLAAC，但现在需要手动打开，方法如下：
Settings -&amp;gt; Network &amp;amp; Internet -&amp;gt; Mobile Network -&amp;gt; Advanced -&amp;gt; Access Point Names -&amp;gt; 中国移动 GPRS (China Mobile) -&amp;gt; 把 APN procotol 和 APN roaming protocol 两项都改成 IPv4/IPv6
然后在 test-ipv6.com 上可以看到确实分配了 IPv6 地址，不过目前评分只有 1/10。也就是说可用性还不佳。
而在 iOS 上，通过 HE 的 Network Tools 能看到，确实拿到了 IPv6 的地址，但是出不去，怀疑是运营商没有下发相关配置，所以还不能使用，只能继续等。
2018-11-06 更新：现在 iOS 用户也有 LTE 的 v6 了。评分是 9/10。目前可用性已经可以了，就是国内互联还不大好。</description>
    </item>
    
    <item>
      <title>向 Nexus 6P 中刷入 LineageOS 实践</title>
      <link>https://jia.je/os/2018/05/29/flashing-lineageos-in-nexus6p/</link>
      <pubDate>Tue, 29 May 2018 07:18:00 +0800</pubDate>
      
      <guid>https://jia.je/os/2018/05/29/flashing-lineageos-in-nexus6p/</guid>
      <description>Nexus 6P 自带的系统没有允许 Root，所以需要自己解锁 bootloader 并且刷上别的系统。我选择了 LineageOS。Nexus 6P 的代号为 angler，首先可以找到官方的安装教程。
我们需要下载的东西：
$ wget https://mirrorbits.lineageos.org/full/angler/20180521/lineage-15.1-20180521-nightly-angler-signed.zip $ wget https://mirrorbits.lineageos.org/full/angler/20180521/lineage-15.1-20180521-nightly-angler-signed.zip?sha256 -O lineage-15.1-20180521-nightly-angler-signed.zip.sha256 $ wget https://mirrorbits.lineageos.org/su/addonsu-15.1-arm64-signed.zip $ wget https://mirrorbits.lineageos.org/su/addonsu-15.1-arm64-signed.zip?sha256 -O addonsu-15.1-arm64-signed.zip $ wget https://github.com/opengapps/arm64/releases/download/20180527/open_gapps-arm64-8.1-full-20180527.zip $ wget https://github.com/opengapps/arm64/releases/download/20180527/open_gapps-arm64-8.1-full-20180527.zip.md5 $ wget https://dl.twrp.me/angler/twrp-3.2.1-0-angler.img $ wget https://dl.twrp.me/angler/twrp-3.2.1-0-angler.img.asc $ wget https://dl.twrp.me/angler/twrp-3.2.1-0-angler.img.md5 $ gpg --verify *.asc $ md5sum -c *.md5 $ sha256sum -c *.sha256 其中 Open GApps 可以自己考虑选择 full 还是其它的选择。
接下来，按照教程，先解锁 bootloader。连接手机，进入 USB Debugging Mode，重启进入 bootloader 并且解锁：
$ adb reboot bootloader $ fastboot flashing unlock # Confirm unlocking, and then the data should be wiped 接下来刷入 TWRP。还是进入 bootloader，然后刷入。</description>
    </item>
    
    <item>
      <title>Android Studio 手工更新小记</title>
      <link>https://jia.je/csdn/android-studio-manual-update/</link>
      <pubDate>Sat, 06 Dec 2014 16:46:38 +0800</pubDate>
      
      <guid>https://jia.je/csdn/android-studio-manual-update/</guid>
      <description>迁移自本人在 CSDN 上的博客：https://blog.csdn.net/build7601/article/details/41776599
因为长时间不更新 Android Studio，回头一看，我的版本才 135.1339820，最新版本都 135.1626825 去了，我就萌生了更新的念头。。
首先，我尝试调用 update_studio.sh。。。。。但是！！404 Not Found！！看来版本跨度太大无法打补丁了呢。。
那只好看看 https://dl.google.com/android/studio/patches/updates.xml 这个里面了，找到我的版本号：
&amp;lt;channel id=&amp;#34;AI-0-beta&amp;#34; name=&amp;#34;Android Studio updates&amp;#34; status=&amp;#34;beta&amp;#34; url=&amp;#34;http://tools.android.com/recent&amp;#34; feedback=&amp;#34;https://code.google.com/p/android/issues/entry?template=Android+Studio+bug&amp;#34; majorVersion=&amp;#34;0&amp;#34;&amp;gt; &amp;lt;build number=&amp;#34;135.1623071&amp;#34; version=&amp;#34;0.9.9&amp;#34;&amp;gt; &amp;lt;message&amp;gt; &amp;lt;![CDATA[ &amp;lt;html&amp;gt; A new Android Studio 0.9.9 is available in the beta channel.&amp;lt;br&amp;gt; This patch will allow you to update from 0.x to 1.x.&amp;lt;br&amp;gt; After updating, please check for updates again to install 1.0 RC.&amp;lt;p/&amp;gt; &amp;lt;/html&amp;gt; ]]&amp;gt; &amp;lt;/message&amp;gt; &amp;lt;button name=&amp;#34;Download&amp;#34; url=&amp;#34;http://developer.android.com/sdk/installing/studio.html&amp;#34; download=&amp;#34;true&amp;#34;/&amp;gt; &amp;lt;button name=&amp;#34;Release Notes&amp;#34; url=&amp;#34;http://tools.</description>
    </item>
    
    <item>
      <title>@微信 SDK 开发者，发现一个 BUG~</title>
      <link>https://jia.je/csdn/weixin-sdk-bug/</link>
      <pubDate>Mon, 06 Oct 2014 09:18:19 +0800</pubDate>
      
      <guid>https://jia.je/csdn/weixin-sdk-bug/</guid>
      <description>迁移自本人在 CSDN 上的博客：https://blog.csdn.net/build7601/article/details/39826065
经过测试，发现微信客户端登录 SDK 有一个 BUG。注：目前只在 iOS 上测试过，可以重现。
BUG 重现
1.做一个可以用微信登陆的软件，先安装到设备。 2.更改 project 的 Bundle Identifier，只更改大小写，重新安装到设备。P.S.实际情况是包名大小写修改过引发这个问题。 3.打开第二个安装的 APP，选择微信登陆，跳转到微信。 4.点击微信登陆，则会跳转到第一个 APP 中，而不会跳转到第二个 APP。
我的 BUG 分析
这可能是因为，微信 sdk 传到微信的是一个 bundle identifier+回调函数地址，回调时找到另一个 APP 再执行回调。 可能在某处进程的名称不分大小写，按照顺序找到了第一个去了。一旦两个 APP 版本不一致，可能执行到空的地址甚至发生不可预测的行为。 经过测试，发现同一样的版本的 APP 也发生了崩溃。</description>
    </item>
    
    <item>
      <title>写了一个程序，分析各个源文件之间的 include 关系。</title>
      <link>https://jia.je/csdn/include-relationship/</link>
      <pubDate>Sun, 06 Jul 2014 16:34:44 +0800</pubDate>
      
      <guid>https://jia.je/csdn/include-relationship/</guid>
      <description>迁移自本人在 CSDN 上的博客：https://blog.csdn.net/build7601/article/details/37343993
最左边是 expat，上面 zlib，左下角 mxml，中间最恶心的是 lua，右边的是 jpeg。
讲讲大概思路：
1.扫描源文件，这里判断最简单的#include，然后建立关系。
2.把这些作为一个个 body 加到 box2d 的世界里，让物理解决这一切！！
3.然后把有 include 关系的用一个 distancejoint 连接起来~你会发现他们就能保持一定距离了。但是！没有被连接的全都聚在一起，怎么办！
4.把距离近的，不和自己相连的（来个 dfs）给个反方向的力！
5.好吧，这就是最终结果，有什么更好的方法？希望大家交流。
6.我不想开源，毕竟这还只是个半成品。。。。。做好了自然会开源的
7.像那个恶心的 lua 怎么解开？文件之间的依赖太多了，成环了。
8.使用 java+libgdx+box2d 写成，也就是说 android 也支持。
9.没啥了。。。。</description>
    </item>
    
    <item>
      <title>Linux on Android 简单教程</title>
      <link>https://jia.je/csdn/linux-on-android/</link>
      <pubDate>Sat, 26 Apr 2014 17:30:36 +0800</pubDate>
      
      <guid>https://jia.je/csdn/linux-on-android/</guid>
      <description>迁移自本人在 CSDN 上的博客：https://blog.csdn.net/build7601/article/details/24544879
介绍： Linux on Android，顾名思义，就是让你能在 Android 上跑 linux。。。。
步骤： 1.下载所需的文件： 项目主页为：tinyurl.com cn3lxgz 在这里举 Ubuntu 13.10 为例，下载 tinyurl.com lp7fqw4 Core 只有最基本的东西，没界面。。但是我的 sd 卡空间过小，只好用这个， Small 就有界面了，Large 还有很多东东，具体看 tinyurl.com m5tdmkj 下面的 Readme
然后下载 Complete Linux Installer，这是用来启动 linux 的： tinyurl.com mzsbud8
还要下载 VNCViewer（浏览 linux 桌面），终端模拟器
2.做好准备工作： 解压下载好的 zip，把里面的.img 解压出来。 安装好 Complete Linux Installer VNCViewer 终端模拟器到 android 上，把解压的.img 文件传到 sd 卡上，比如： adb push ubuntu-13.10.CORE.ext2.img 你的 sd 卡路径
安装完是这个样子的：
3.开始启动！ 打开 Complete Linux Installer， 选择启动系统，点击右上角 Settings，选择添加：</description>
    </item>
    
  </channel>
</rss>
