<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>initramfs on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/initramfs/</link>
    <description>Recent content in initramfs on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jul 2018 03:43:00 +0800</lastBuildDate>
    
	<atom:link href="https://jia.je/tags/initramfs/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>构建简易的 initramfs</title>
      <link>https://jia.je/os/2018/07/16/build-custom-initramfs/</link>
      <pubDate>Mon, 16 Jul 2018 03:43:00 +0800</pubDate>
      
      <guid>https://jia.je/os/2018/07/16/build-custom-initramfs/</guid>
      <description>一直对 Linux 的启动很感兴趣，但对 initrd 和 initramfs 等概念不大了解，于是上网找了资料，自己成功地看到了现象。
参考资料： Build and boot a minimal Linux system with qemu Custom Initramfs initramfs vs initrd ramfs, rootfs and initramfs The Kernel Newbie Corner: &amp;ldquo;initrd&amp;rdquo; and &amp;ldquo;initramfs&amp;rdquo;&amp;ndash; What&amp;rsquo;s Up With That?
具体步骤：
$ cat hello.c #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; int main() { for (;;) { printf(&amp;#34;Hello, world!\n&amp;#34;); } } $ gcc -static hello.c -o init $ echo init | cpio -o -H newc | gzip &amp;gt; initrd $ qemu-system-x86_64 -kernel /boot/vmlinuz-linux -initrd initrd -nographic -append &amp;#39;console=ttyS0&amp;#39; # Use C-a c q u i t &amp;lt;Enter&amp;gt; to exit 可以看到过一会（三四秒？），可以看到满屏的 Hello world 在输出。</description>
    </item>
    
  </channel>
</rss>