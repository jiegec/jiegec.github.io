<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>i2c on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/i2c/</link>
    <description>Recent content in i2c on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 May 2023 22:53:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/i2c/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I2C 协议</title>
      <link>https://jia.je/hardware/2023/05/03/i2c/</link>
      <pubDate>Wed, 03 May 2023 22:53:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2023/05/03/i2c/</guid>
      <description>背景 最近数设课上，同学们开始购买外设，其中就涉及到 I2C 协议，因此顺带写一下 I2C 协议的教程，帮助同学们进行理解。
接口 I2C 协议涉及到两个信号：
SCL: 时钟信号，Master -&amp;gt; Slave SDA：数据信号，Master &amp;lt;-&amp;gt; Slave 由于只有一个数据信号，所以 SDA 由 Master 和 Slave 轮流输出。一次请求的开始条件是，SDA 从 1 变成 0，之后 SCL 从 1 变成 0。开始请求以后，每次 SCL 上升沿采样一位的数据。请求结束时，SCL 从 0 变成 1，然后 SDA 从 0 变成 1。一次请求的波形如下：
idle 阶段，scl 和 sda 都是 1 start 阶段，首先是 sda 变成 0，之后是 scl 变成 0 data/ack 阶段，在 scl 上升沿采样数据，在 scl 下降沿（准确来说，负半周期）修改数据 stop 阶段，首先是 scl 变成 1，之后是 sda 变成 1 传输数据的时候，需要保证 sda 在 scl 正半周期的时候保持不变。如果变了，那就是 start 或者 stop。</description>
    </item>
    
  </channel>
</rss>
