<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openwrt on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/openwrt/</link>
    <description>Recent content in openwrt on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jan 2022 13:57:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/openwrt/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>升级 Linksys E8450 的 OpenWRT 系统到 UBI</title>
      <link>https://jia.je/networking/2022/01/03/upgrade-e8450-openwrt-ubi/</link>
      <pubDate>Mon, 03 Jan 2022 13:57:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2022/01/03/upgrade-e8450-openwrt-ubi/</guid>
      <description>背景 在 OpenWRT Linksys E8450 页面 中，如果要用新版的固件，需要转换到 UBI 格式的文件系统。之前用的是 non-UBI 格式的文件系统，直接在官方的分区下，覆盖掉其中一个启动分区。但是经常会报告 flash 出错，然后系统也不稳定，决定要按照文档更新到 UBI。
步骤 基本按照文档一步一步走。初始状态是一个 non-UBI 版本的 OpenWRT 固件：
下载官方的 1.0 固件：https://downloads.linksys.com/support/assets/firmware/FW_E8450_1.0.01.101415_prod.img 在 luci 中，刷入官方 1.0 固件，这时候进入了官方固件的系统 登录官方固件网页，恢复出厂设置 下载 openwrt ubi recovery 固件 然后在官方固件里刷入 这时候进入了 recovery 固件，下载 ubi 固件，继续在网页里刷入 这时候固件就更新完成了。ssh root@192.168.1.1，然后进去安装 luci 等软件，恢复配置即可。 </description>
    </item>
    
    <item>
      <title>Linksys E8450 OpenWRT 配置 w/ 802.11ax</title>
      <link>https://jia.je/hardware/2021/03/18/linksys-e8450-openwrt/</link>
      <pubDate>Thu, 18 Mar 2021 12:25:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2021/03/18/linksys-e8450-openwrt/</guid>
      <description>背景 之前用的 newifi 路由器（Lenovo y1s）无线网总是出问题，于是换了一个新的支持 802.11ax 的路由器 Linksys E8450，目前在 openwrt snapshot 支持。Openwrt 的支持页面：Linksys E8450。
过程 按照支持页面，下载固件：
$ wget https://downloads.openwrt.org/snapshots/targets/mediatek/mt7622/openwrt-mediatek-mt7622-linksys_e8450-squashfs-sysupgrade.bin 然后访问固件升级页面：http://192.168.1.1/config-admin-firmware.html#firmware，选择下载的 bin 文件。点击 “开始升级”，然后等待。一段时间后，ssh 到路由器：
$ ssh root@192.168.1.1 The authenticity of host &amp;#39;192.168.1.1 (192.168.1.1)&amp;#39; can&amp;#39;t be established. ED25519 key fingerprint is SHA256:REDACTED. No matching host key fingerprint found in DNS. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &amp;#39;192.</description>
    </item>
    
    <item>
      <title>OpenWRT 上配置 Gandi DDNS</title>
      <link>https://jia.je/networking/2018/10/22/ddns-openwrt-router/</link>
      <pubDate>Mon, 22 Oct 2018 09:53:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/10/22/ddns-openwrt-router/</guid>
      <description>一直想给自己的 OpenWRT 路由器添加 DDNS 功能，但 Gandi 不在官方的 ddns-scripts 列表中，自己在网上找了一些脚本，发现是 Python 写的，尝试把 Python 安装到路由器上又发现空间不够，虽然可以安装到 USB 上，但总归是麻烦。
最后找到了官方的一个脚本，非常适合我的需求。简单修改一下，然后安装一下支持 HTTPS 的 cURL ：
$ opkg update $ opkg install ca-bundle $ opkg install curl 然后把脚本添加到 crontab 即可。</description>
    </item>
    
    <item>
      <title>在 LEDE （OpenWrt） 上启用 wpad</title>
      <link>https://jia.je/networking/2018/09/11/enable-wpad-on-lede/</link>
      <pubDate>Tue, 11 Sep 2018 23:23:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/09/11/enable-wpad-on-lede/</guid>
      <description>WPAD（Web Proxy Auto-Discovery Protocol）是一个可以利用 dhcp 分发 pac 配置的协议。方法如下：
$ # ssh to router first $ vim /etc/dnsmasq.conf dhcp-option=252,&amp;#34;http://router_ip/wpad.dat&amp;#34; $ vim /www/wpad.dat # put pac here $ service dnsmasq restart $ # ensure proxy is available to lan $ # enable wpad on devices 参考文档：
Web Proxy Auto-Discovery Protocol Automatic Proxy Configuration with WPAD Deploying WPAD Example PAC File </description>
    </item>
    
    <item>
      <title>向 Lenovo y1s 刷入 OpenWRT 17.01.5 固件，并把 IPv6 bridge 到内网中和配置认证脚本</title>
      <link>https://jia.je/networking/2018/07/26/flashing-lenovo-y1s-and-bridge-ipv6/</link>
      <pubDate>Thu, 26 Jul 2018 20:48:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/07/26/flashing-lenovo-y1s-and-bridge-ipv6/</guid>
      <description>首先参照OpenWRT Wiki - Lenovo Y1 v1找到刷固件教程：
下载Lenovo y1s 的固件备用 断开电源，等待一段时间，插入电源同时快速按下重置按钮，如果面板双闪，则说明进入了恢复模式 电脑连接到四个 LAN 口中任意一个，配置静态地址在 192.168.1.0/24 网段 打开 192.168.1.1 可以看到刷固件的页面 上传固件，等待路由器重启 配置 IP 地址为 DHCP 模式，打开 192.168.1.1 进行配置 然后就是常规的密码设置，opkg 源设置为 tuna 的源，配置 ssh 和 公钥。
接下来，我们为了使用学校的 SLAAC ，采用 ebtables 直接把学校的 IPv6 bridge 进来，而 IPv4 由于准入系统，需要 NAT 。
参考 Bridge IPv6 connections to WAN，下载 v6brouter_openwrt.sh 到某个地方，然后修改一下里面的一些参数：
# For Lenovo y1s WAN_DEV=eth0.2 BRIDGE=br-lan # the rest remain unchanged 然后跑起来之后，自己的电脑可以成功拿到原生的 IPv6 地址了，不需要用难用的 NAT66 技术。
下一步是采用z4yx/GoAuthing。</description>
    </item>
    
  </channel>
</rss>
