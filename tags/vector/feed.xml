<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vector on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/vector/</link>
    <description>Recent content in vector on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Jan 2022 21:41:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/vector/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RISC-V Vector 1.0 工具链构建</title>
      <link>https://jia.je/software/2022/01/25/rvv-1.0-toolchain/</link>
      <pubDate>Tue, 25 Jan 2022 21:41:00 +0800</pubDate>
      
      <guid>https://jia.je/software/2022/01/25/rvv-1.0-toolchain/</guid>
      <description>不久前 RVV 1.0 标准终于是出来了，但是工具链的支持目前基本还处于刚 upstream 还没有 release 的状态。而目前 RVV 1.0 的支持主要在 LLVM 上比较活跃，因此也是采用 LLVM Clang + GCC Newlib Toolchain 的方式进行配合，前者做 RVV 1.0 的编译，后者提供 libc 等基础库。
UPDATE: LLVM 14 已经发布，这个版本已经支持 RVV 1.0，直接从 https://apt.llvm.org 等地安装 LLVM 14 即可。
LLVM Clang 直接采用 upstream 即可。编译选项：
$ cmake -G Ninja ../llvm -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=/prefix/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=&amp;#34;clang&amp;#34; -DLLVM_TARGETS_TO_BUILD=&amp;#34;RISCV&amp;#34; $ ninja $ ninja install $ /prefix/llvm/bin/clang --version clang version 14.0.0 (https://github.com/llvm/llvm-project.git 8d298355ca3778a47fd6b3110aeee03ea5e8e02b) Target: x86_64-unknown-linux-gnu Thread model: posix InstalledDir: /data/llvm/bin 还需要配合一个 GCC 工具链才可以完整地工作。可以直接采用 riscv-gnu-toolchain nightly 版本，比如 riscv64-elf-ubuntu-20.</description>
    </item>
    
  </channel>
</rss>
