<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cisco on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/cisco/</link>
    <description>Recent content in cisco on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Oct 2019 10:14:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/cisco/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为 Cisco WLC 配置 Telegraf</title>
      <link>https://jia.je/devops/2019/10/19/configure-telegraf-for-cisco-wlc/</link>
      <pubDate>Sat, 19 Oct 2019 10:14:00 +0800</pubDate>
      
      <guid>https://jia.je/devops/2019/10/19/configure-telegraf-for-cisco-wlc/</guid>
      <description>最近想到可以给 Cisco WLC 也配置一下监控，查了一下，果然有一些方法。大概研究了一下，找到了方法：
把 https://github.com/haad/net-snmp/tree/master/mibs 和 https://github.com/zampat/neteye4/tree/master/monitoring/monitoring-plugins/wireless/cisco/mibs 目录下的所有 .txt 文件放到 /usr/share/snmp/mibs 目录下。
然后把 https://github.com/zampat/neteye4/blob/master/monitoring/monitoring-plugins/wireless/cisco/telegraf.conf 下面 snmp 的配置复制到 telegraf 配置中，然后修改一下 IP 地址。
确保 Cisco WLC 的 SNMP 的 Public Community 已经配置好，然后就可以拿到数据了。
目前可以拿到 WLC 自身的一些运行˙状态信息、AP 的信息、SSID 的信息和 Client 的信息，基本满足了我们的需求。
参考：https://www.neteye-blog.com/2019/08/monitoring-a-cisco-wireless-controller/</description>
    </item>
    
    <item>
      <title>ETC 比赛无线网络搭建小记</title>
      <link>https://jia.je/networking/2018/10/20/etc-wireless-network/</link>
      <pubDate>Sat, 20 Oct 2018 23:44:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/10/20/etc-wireless-network/</guid>
      <description>正好上着李贺武老师的《无线移动网络技术》课，然后今天又给 ETC 比赛搭建无线网络，于是周二的时候找老师咨询了一下意见。我们大概给老师讲了一下场地的样子和尺寸（当时估计的大了），然后老师给我们提供了一个可以供参考的部署方案，包括几个 AP 分别放在哪，这些 AP 的 2.4GHz 都用哪个 channel，然后都用多少功率。并且很友善地在周五的时候让助教来场地帮我们 survey 一下无线网络的状况。我们用 Fluke Networks 的 AirCheck Wi-Fi Tester 看了一下场地的各个频道的 AP 数量和信号强度，发现虽然 AP 挺多的，但是它们的信号都比我们的小不少，而且我们也都开到了 50mW，所以干扰不大。
然后昨天下午一点半钟来到场地，用板车把设备都运到计算机开放实验室，然后开始部署无线网络。我们提前来踩过几次点，这边的网络是没有 DHCP 服务器的，通过一个指定的网关出去。我们发现可以利用已有的这些交换机从地下连到各个电脑上的网线，来连接我们的 AP 和交换机，这样我们就免去了走线的麻烦。于是我们先定下放 AP 的位置，然后用寻线器找到网线插到了交换机的哪一个端口上，标记好后换成连接到我们自己的交换机的网线上，从而可以通过 PoE 把我们的 AP 给启动起来。然后用我自己的路由器，把 LAN 口插到交换机上，给 AP 分发 DHCP 地址，然后把下发的默认网关配置为真实的网关（DHCP Option 3） ，没做但是也可以顺带做的是把 WLC 的地址分发下去（DHCP Option 43 Type 241）。
当然，这个过程也遇到了一点小坑，就是交换机还保留了之前的配置，所以这次把新的几个端口划到了一个 VLAN 下，命令自然是记不住的要现查。然后起来以后还挺稳定的，也没出现什么问题，网络带宽也足够用，离千兆还有蛮多距离，一天也才跑了接近俩 TB 的流量。</description>
    </item>
    
    <item>
      <title>使用 Cisco AC &#43; AP 组合搭建网络实践</title>
      <link>https://jia.je/networking/2018/04/28/wifi-with-cisco-ac-and-ap/</link>
      <pubDate>Sat, 28 Apr 2018 21:58:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/04/28/wifi-with-cisco-ac-and-ap/</guid>
      <description>有一台已配置好直接可用的 AC 在地址 ac-address。我们需要搭建交换机 + AP 的网络，并且用一台 Linux 服务器进行 DHCP 从而给 AP 分发 AC 的地址。这里以 systemd-networkd 为例。
我们约定，vlan 2 上联外网，vlan 3 为 Linux 服务器和 AP 的内部网络。
接下来，配置交换机给 Linux 服务器的端口为 trunk 口，然后将下联 Cisco AP 的端口都设为 access vlan 3 模式。接下来在 Linux 服务器上配置 DHCP 服务器和 NAT。
如果 Linux 服务器的 interface 名称为 eno1 :
配置两个 VLAN interface:
$ cat /etc/systemd/network/eno1.network [Match] Name=eno1 [Network] VLAN=eno1.2 VLAN=eno1.3 相应添加 VLAN 配置：
$ cat /etc/systemd/network/eno1.2.network [NetDev] Name=eno1.2 [VLAN] Id=2 $ cat /etc/systemd/network/eno1.</description>
    </item>
    
  </channel>
</rss>
