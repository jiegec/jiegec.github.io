<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hack on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jiege.ch/tags/hack/</link>
    <description>Recent content in hack on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Mar 2018 07:59:20 +0800</lastBuildDate>
    
	<atom:link href="https://jiege.ch/tags/hack/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>〖新手向〗绕过 C&#43;&#43; 类的访问限制</title>
      <link>https://jiege.ch/programming/2018/03/07/breaking-c-weak-access-control/</link>
      <pubDate>Wed, 07 Mar 2018 07:59:20 +0800</pubDate>
      
      <guid>https://jiege.ch/programming/2018/03/07/breaking-c-weak-access-control/</guid>
      <description>这是一篇很水的文章，面向萌新，已经知道了的可以自觉绕道。
昨天上课，有同学问，如果用户偷偷把 private 改成 public 再和原有的库链接，是不是就可以在用户代码里更改了。这个答案是肯定的。下面我们就做个实验：
首先，创建 good_class.h 和 good_class.cpp:
class SomeClass { private: int data; public: int getData(); }; #include &amp;#34;good_class.h&amp;#34; int SomeClass::getData() { return data; } 然后，首先编译，
clang++ -c good_class.cpp -o good_class.o 然后，修改 good_class.cpp 并写一个 evil_user.cpp
class SomeClass { public: int data; public: int getData(); }; #include &amp;lt;stdio.h&amp;gt;#include &amp;#34;good_class.h&amp;#34; int main() { SomeClass a; a.data = 37; printf(&amp;#34;%d\n&amp;#34;, a.getData()); return 0; } 编译：
clang++ good_class.o evil_user.cpp -o evil 然后 evil 如愿地输出了 37 。</description>
    </item>
    
  </channel>
</rss>