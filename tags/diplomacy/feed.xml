<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>diplomacy on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/diplomacy/</link>
    <description>Recent content in diplomacy on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Jan 2022 00:29:00 +0800</lastBuildDate><atom:link href="https://jia.je/tags/diplomacy/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分析 Rocket Chip 中 Diplomacy 系统</title>
      <link>https://jia.je/hardware/2022/01/05/diplomacy/</link>
      <pubDate>Wed, 05 Jan 2022 00:29:00 +0800</pubDate>
      
      <guid>https://jia.je/hardware/2022/01/05/diplomacy/</guid>
      <description>概念 Diplomacy 主要实现了两个功能：
 把整个总线结构在代码中表现出来 自动配置总线中各个端口的参数  具体来说，第一点实现了类似 Vivado Board Design 中连线的功能，第二点则是保证总线两端的参数一致，可以连接起来。
Diplomacy 为了表示总线的结构，每个模块可以对应一个 Node，Node 和 Node 之间连接形成一个图。Node 的类型主要有以下几个：
 Client：对应 AXI 里面的 Master，发起请求 Manager：对应 AXI 里面的 Slave，处理请求 Adapter：对应 AXI Width Converter/Clock Converter/AXI4 to AXI3/AXI4 to AHB bridge 等，会修改 AXI 的参数，然后每个输入对应一个输出 Nexus：对应 AXI Crossbar，多个输入和多个输出  每个 Node 可能作为 Manager 连接上游的 Client，这个叫做入边（Inward Edge）；同样地，也可以作为 Client 连接下游的 Manager，这个是出边（Outward Edge）。想象成一个 DAG，从若干个 Client 流向 Manager。
连接方式采用的是 := :=* :*= :*=* 操作符，左侧是 Client，右侧是 Manager。
Rocket Chip 总线结构 Rocket Chip 主要有以下几个总线：</description>
    </item>
    
  </channel>
</rss>
