<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>systemd-networkd on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/systemd-networkd/</link>
    <description>Recent content in systemd-networkd on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Jun 2018 10:59:00 +0800</lastBuildDate>
    
	<atom:link href="https://jia.je/tags/systemd-networkd/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wireguard 隧道搭建</title>
      <link>https://jia.je/networking/2018/06/29/wireguard-tunnel/</link>
      <pubDate>Fri, 29 Jun 2018 10:59:00 +0800</pubDate>
      
      <guid>https://jia.je/networking/2018/06/29/wireguard-tunnel/</guid>
      <description>随着 Wireguard Go 版本的开发，在 macOS 上起 WireGuard Tunnel 成为现实。于是，搭建了一个 macOS 和 Linux 之间的 WireGuard Tunnel。假设 Linux 端为服务端， macOS 端为客户端。
macOS端：
$ brew install wireguard-tools $ cd /usr/local/etc/wireguard $ wg genkey &amp;gt; privatekey $ wg pubkey &amp;lt; privatekey &amp;gt; publickey $ vim tunnel.conf [Interface] PrivateKey = MACOS_PRIVATE_KEY [Peer] PublicKey = LINUX_PUBLIC_KEY # Generated below AllowedIPs = 192.168.0.0/24 Endpoint = LINUX_PUBLIC_IP:12345 $ vim up.sh #!/bin/bash # change interface name when necessary sudo wireguard-go utun0 sudo wg setconf utun0 tunnel.</description>
    </item>
    
  </channel>
</rss>