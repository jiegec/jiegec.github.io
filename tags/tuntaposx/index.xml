<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tuntaposx on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jiegec.ch/tags/tuntaposx/</link>
    <description>Recent content in tuntaposx on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Aug 2018 19:07:00 +0800</lastBuildDate>
    
	<atom:link href="https://jiegec.ch/tags/tuntaposx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 macOS 上 TAP Interface 上启用 IPv6 自动配置</title>
      <link>https://jiegec.ch/networking/2018/08/25/enable-ipv6-autoconfiguration-on-tap-interfaces-in-macos/</link>
      <pubDate>Sat, 25 Aug 2018 19:07:00 +0800</pubDate>
      
      <guid>https://jiegec.ch/networking/2018/08/25/enable-ipv6-autoconfiguration-on-tap-interfaces-in-macos/</guid>
      <description>由于 macOS 对 TAP Interface 不会自动出现一个设置中对应的服务，所以需要手动进行配置。一番测试后，发现可以通过：
$ sudo ipconfig set [tap_if] automatic-v6 $ sudo ipconfig set [tap_if] dhcp  启用系统自带的 dhcp 和 ra 功能。也许有方法可以把这些 tap 搬到系统的设置中去。
UPDATE:
可以把 TAP Interface 加到系统的设置中去。方法参考Virtual network interface in Mac OS X。完成以后可以直接通过系统设置界面进行配置。</description>
    </item>
    
    <item>
      <title>在 macOS 下实现 GRETAP</title>
      <link>https://jiegec.ch/networking/2018/08/21/implementing-gretap-in-macos/</link>
      <pubDate>Tue, 21 Aug 2018 09:42:00 +0800</pubDate>
      
      <guid>https://jiegec.ch/networking/2018/08/21/implementing-gretap-in-macos/</guid>
      <description>由于没有找到 macOS 下现成的 GRETAP 实现，我就想到自己实现一个。由于tuntaposx提供了一个和 Linux 下基本一样的 TAP Interface，于是自己利用 raw socket 和 TAP Interface 实现了一下，主要方法：
 打开 raw socket ，读取收到的 proto 47 的包，判断是否为 GRETAP 包，是，则写入内层包到打开的 TAP Interface 中。 从 TAP Interface 中读入包，自己加上 GRE 头和 IP 头，然后发送。  主要的难度是在 raw socket 部分，macOS 继承了 BSD ，与 Linux 不大一样。于是参考了SOCK_RAW Demystified，成功地实现了这个功能。
代码放在jiegec/gretapmac。写得并不高效，仅仅可用，用了一百多行。
UPDATE: 之后又随手实现了一个类似的协议，L2TPv3 over UDP。代码在jiegc/l2tpv3udptap。</description>
    </item>
    
  </channel>
</rss>