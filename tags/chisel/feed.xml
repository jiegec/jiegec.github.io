<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chisel on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jiege.ch/tags/chisel/</link>
    <description>Recent content in chisel on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2020 23:09:00 +0800</lastBuildDate>
    
	<atom:link href="https://jiege.ch/tags/chisel/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 Vivado 中对 chisel3 产生的 verilog 代码仿真</title>
      <link>https://jiege.ch/hardware/2020/02/10/simulate-chisel3-on-vivado/</link>
      <pubDate>Mon, 10 Feb 2020 23:09:00 +0800</pubDate>
      
      <guid>https://jiege.ch/hardware/2020/02/10/simulate-chisel3-on-vivado/</guid>
      <description>默认情况下，chisel3 生成的 verilog 代码在 Vivado 中仿真会出现很多信号大面积变成 X。解决方法在一个不起眼的 Wiki 页面：Randomization flags：
`defineRANDOMIZE_REG_INIT`defineRANDOMIZE_MEM_INIT`defineRANDOMIZE_GARBAGE_ASSIGN`defineRANDOMIZE_INVALID_ASSIGN在生成的 verilog 前面加上这四句，就可以正常仿真了。</description>
    </item>
    
  </channel>
</rss>