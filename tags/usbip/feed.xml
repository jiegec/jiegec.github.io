<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>usbip on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/tags/usbip/</link>
    <description>Recent content in usbip on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 May 2020 20:20:00 +0800</lastBuildDate>
    
	<atom:link href="https://jia.je/tags/usbip/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>USB/IP 模拟 USB 设备</title>
      <link>https://jia.je/software/2020/05/15/usb-ip-simulation/</link>
      <pubDate>Fri, 15 May 2020 20:20:00 +0800</pubDate>
      
      <guid>https://jia.je/software/2020/05/15/usb-ip-simulation/</guid>
      <description>背景 2018 年的时候发过一篇博客，讲如何用 USB/IP 协议在两台 Linux 电脑之间共享 USB 设备。最近刚好有一个需求，就是针对一个现成的 USB device 的代码，通过 USB/IP 模拟出一个 USB 设备，然后进行调试。
USB/IP 协议 USB/IP 只有一个简略的文档，为数不多的使用 USB/IP 的代码，所以有一些细节没有说的很清楚，只能一点点去尝试。
首先，USB/IP 基于 TCP，端口号 3240 。客户端向服务端发送请求，服务端向客户端进行回应。
请求的类型：OP_REQ_DEVLIST OP_REQ_IMPORT USBIP_CMD_SUBMIT 和 USBIP_CMD_UNLINK
回应的类型：OP_REP_DEVLIST OP_REP_IMPORT USBIP_RET_SUBMIT USBIP_RET_UNLINK
工作的过程大概如下：
 OP_REQ_DEVLIST 请求获取设备列表 OP_REP_DEVLIST 返回设备列表 OP_REQ_IMPORT 请求 USB 设备 OP_REP_IMPORT 返回 USB 设备 USBIP_CMD_SUBMIT 发送 URB USBIP_RET_SUBMIT 返回 URB  （先不考虑 CMD_UNLINK 和 RET_UNLINK）
其中前面四个比较简单清晰，所需要的字段也都是 Descriptor 中对应的字段。后面两个就相对复杂一些：URB data 的长度需要根据 endpoint 类型和 direction 共同决定。URB 实际上是 Linux 内核里的一个数据结构。</description>
    </item>
    
    <item>
      <title>USB/IP 实践</title>
      <link>https://jia.je/software/2018/11/20/usb-ip/</link>
      <pubDate>Tue, 20 Nov 2018 18:50:00 +0800</pubDate>
      
      <guid>https://jia.je/software/2018/11/20/usb-ip/</guid>
      <description>之前一直想玩 USB/IP ，但是一直没有找俩 Linux 设备然后共享，今天终于尝试了一下，没有什么大问题。这次采用的设备是 Raspberri Pi 3 和 SaltedFish Pi 。一开始尝试从后者向前者共享，但总是出现这个错误：
libusbip: error: udev_device_get_sysattr_value failed usbip: error: open vhci_driver 然后我反过来做就好了，比较神奇。
主要过程如下：
 pacman -S usbip 安装用户态软件 systemctl enable --now usbipd 启动 USB/IP 的端口监听 daemon usbip list -l 查看本地有哪些 USB 设备可以共享 usbip bind -b [BUS_ID] 把指定的 USB 设备共享出去，其中 BUS_ID 从上个命令中查看 usbip list -r [IP] 在另一个设备上查看这个设备共享的 USB 设备，可以看到许多信息 usbip attach -r [IP] -b [BUS_ID] 把对方共享的 USB 设备 attach 到本地  效果：把一个 U 盘成功映射到了本地：</description>
    </item>
    
  </channel>
</rss>