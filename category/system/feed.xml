<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>system on 杰哥的{运维,编程,调板子}小笔记</title>
    <link>https://jia.je/category/system/</link>
    <description>Recent content in system on 杰哥的{运维,编程,调板子}小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Mar 2021 20:13:00 +0800</lastBuildDate><atom:link href="https://jia.je/category/system/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iDRAC 各版本</title>
      <link>https://jia.je/system/2021/03/03/idrac-versions/</link>
      <pubDate>Wed, 03 Mar 2021 20:13:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2021/03/03/idrac-versions/</guid>
      <description>iDRAC 版本 目前接触到的 iDRAC 版本有：7 8 9 。一些常见的服务器型号和 iDRAC 版本对应关系：
 7: PowerEdge R320，PowerEdge R720 8: PowerEdge R730xd，PowerEdge R630，PowerEdge R730，PowerEdge C4130 9: PowerEdge R7425  基本上，如果是 PowerEdge R 什么的，就看第二位数字，就可以推断出版本号了。
下面列举了一下可能会用到的版本。
iDRAC 7 iDRAC 7 在 2020 年 2 月停止更新了，最新版本是 2.65.65.65。
升级路线参考：Reddit。
 1.66.65 下载页面，2014 年 12 月版本。 2.10.10.10 下载页面，2015 年 4 月版本。 2.65.65.65 下载页面，2020 年 3 月版本，添加了 HSTS 。  iDRAC 8  2.10.10.10 下载页面，2015 年 3 月版本。 2.30.30.30: 下载页面，2016 年 2 月版本，添加了 HTML5 virtual console 支持。 2.</description>
    </item>
    
    <item>
      <title>IBM Power S822LC(8335-GTB) BMC 升级</title>
      <link>https://jia.je/system/2020/10/09/upgrade-power8-bmc/</link>
      <pubDate>Fri, 09 Oct 2020 08:16:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2020/10/09/upgrade-power8-bmc/</guid>
      <description>背景 最近拿到一台 IBM Power S822LC（8335-GTB） 机器的访问权限，这也是我第一次碰 ppc64le 指令集的服务器。然后发现，它的 BMC 版本比较老，我想连接 Remote Control 失败了，原因是 JViewer 不支持 macOS，我就想着能不能升级一下。
升级过程 首先，在网上找了一下文档，首先用 ipmitool 找一下机器型号：
$ sudo ipmitool fru print 3 Chassis Type : Unknown Chassis Part Number : 8335-GTB Chassis Serial : REDACTED 可以看到，这台机器是 8335-GTB 型号，按照这个型号在 Fix Central 上搜索，可以找到若干个版本的 firmware，其中最老的版本是 OP8_v1.11_2.1，对比了一下，和原来的版本一致：
$ sudo ipmitool fru print 47 Product Name : OpenPOWER Firmware Product Version : IBM-garrison-ibm-OP8_v1.11_2.1 Product Extra : op-build-da02863 Product Extra : buildroot-81b8d98 Product Extra : skiboot-5.</description>
    </item>
    
    <item>
      <title>TP-Link Archer T4U V3 Linux 驱动安装</title>
      <link>https://jia.je/system/2020/01/05/archer-t4u-v3-driver/</link>
      <pubDate>Sun, 05 Jan 2020 01:21:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2020/01/05/archer-t4u-v3-driver/</guid>
      <description>之前因为 MacBookPro 内置的 Wi-Fi 总是有问题，就找了个 USB 的无线网卡：TP-Link Archer T4U V3（VID：2357，PID：0115），这个网卡也没有主线的驱动，在网上找到了现成的驱动：cilynx/rtl88x2bu，按照 README 用 DKMS 安装即可，实测可用。</description>
    </item>
    
    <item>
      <title>MacBookPro 14,3 Wi-Fi 驱动问题解决方案</title>
      <link>https://jia.je/system/2020/01/05/macbookpro-linux-wifi/</link>
      <pubDate>Sun, 05 Jan 2020 00:53:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2020/01/05/macbookpro-linux-wifi/</guid>
      <description>之前在 MacBookPro 14,3 安装 Linux 后，很多东西的驱动都有了解决方法，参考 1，参考 2，触摸板和键盘等等都可以正常使用，触摸板的使用效果比我意料要好一些，虽然还是没有 macOS 原生那么好。但 Wi-Fi 一直有能扫到信号但连不上的问题，最近终于有了比较完善的解决方案，地址，也是两个月前才出来的方案，我测试了一下，确实可以很好的解决网络问题，网卡型号是 BCM43602，驱动用的是 brcmfmac。
另一方面，带 T2 的 MacBook 似乎也有了支持，见 aunali1/linux-mbp-arch，有一些尚未 upstream 的 patch，但我没有设备，就没有测试了。需要吐槽的是 ArchWiki 不怎么更新新 Model 的 MacBook 的教程，都是到处找散落的 github repo 和 gist 找别人的方案。
P.S. 可以正常工作的有：Wi-Fi，键盘，触摸板，Touchbar，内置摄像头，键盘背光，蓝牙 P.P.S MacBookPro11,2 的网卡是 BCM4360，直接用 broadcom-wl 驱动就可以。</description>
    </item>
    
    <item>
      <title>在 Archlinux 上用 winbind 配合 pam 配置 Windows AD 认证登录</title>
      <link>https://jia.je/system/2018/05/05/windows-ad-linux-pam/</link>
      <pubDate>Sat, 05 May 2018 15:39:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2018/05/05/windows-ad-linux-pam/</guid>
      <description>作为不清真的网络管理员，为了配置一套完整的统一认证系统，陈老师采用了 Windows AD 的方法给这里配置统一认证。重装了系统，自然要把之前的统一认证再配到新装的 Archlinux 上。
参考资料： Active Directory Integration
首先安装相应的包：
pacman -S samba 我们还没有配好 Kerberos，所以跳过。
然后配置 /etc/samba/smb.conf ，以下是一个例子。可以根据文档微调。
[global] security = ads realm = YOUR-AD-HERE workgroup = YOUR-GROUP-HERE idmap uid = 10000-20000 idmap gid = 10000-20000 winbind enum users = yes winbind enum groups = yes template homedir = /home/%D/%U template shell = /bin/bash client use spnego = yes client ntlmv2 auth = yes encrypt passwords = yes winbind use default domain = yes restrict anonymous = 2 这样，域上的用户 user 会拿到 home 目录为 /home/YOUR-DOMAIN-HERE/user ，uid 在 10000-2000范围内的用户。在一会经过配置之后，可以通过 getent passwd 验证。</description>
    </item>
    
    <item>
      <title>在服务器上安装 Archlinux 记录</title>
      <link>https://jia.je/system/2018/05/01/installing-arch-experience/</link>
      <pubDate>Tue, 01 May 2018 16:46:00 +0800</pubDate>
      
      <guid>https://jia.je/system/2018/05/01/installing-arch-experience/</guid>
      <description>有一台服务器的 Ubuntu 挂了，我们想在上面重装一个 Archlinux 。我们首先下载了 archlinux-2018.04.01 的 ISO, 直接 dd 到 U 盘上，但是遇到了问题。
首先遇到的问题是，一启动之后就会花屏。我们一开始怀疑是 NVIDIA 驱动的问题，于是想改 kernel param 但是发现，这个 ISO 是 hybrid 的，我们在 macOS 和 Windows 上都不能 mount 上这种类型的盘。于是我们选择自己搞分区表。我们把 U 盘插到电脑上，然后在 Linux 虚拟机内重新分区为 GPT ，然后 mount 到 /mnt/usb ，再重新下载 archlinux iso ，不过此时刚好上游更新了 archlinux-2018.05.01 的影响。我们把 ISO 中根分区 mount 到 /mnt/iso 上来，然后 cp -a /mnt/iso/* /mnt/usb 。调整了 grub 中的内核参数，仍然无果。我们认为问题可能在显卡上，就把那张显卡拔下来了，果然显示就正常了，但是新的问题就来了。
一启动， fstab 尝试把 LABEL=ARCHISO_201805 挂在上来，但是失败。于是我们把 U 盘插到 mac 上，用 Disk Utility 给分区命了名，再插回去，然后这个 Live CD 的 Systemd 就成功起来了。接下来就是根据官方的 Installation Guide 进行安装各种东西。安装完后，在 /boot/EFI 的操作上也出现了一些问题，一开始忘记调用 grub-mkconfig ，导致重启以后进入 grub-rescue ，所以又回到 Live CD 重新 grub-mkconfig 。同时对 systemd-networkd 也进行了相应的调整，这样开机以后可以配好网络。主要就是在网卡上配上两个 VLAN 和相应的 DHCP 和静态地址。</description>
    </item>
    
    <item>
      <title>In macOS Sierra, Karabiner-Elements finally support complex modifications</title>
      <link>https://jia.je/system/2017/06/15/macos-sierra-karabiner-finally-support-complex-modifications/</link>
      <pubDate>Thu, 15 Jun 2017 17:22:20 +0800</pubDate>
      
      <guid>https://jia.je/system/2017/06/15/macos-sierra-karabiner-finally-support-complex-modifications/</guid>
      <description>In favor of this commit, Karabiner-Elements now supports the much welcomed yet long-lost feature, namely complex modifications that enable users to trigger complex keypress.
Now I can achieve this:
If I press &amp;lt;Enter&amp;gt;, then: 1. If &amp;lt;Enter&amp;gt; is pressed alone, then send &amp;lt;Enter&amp;gt;. 2. If &amp;lt;Enter&amp;gt; is pressed along with other keys, then send &amp;lt;Control&amp;gt; + Other. By adding this code to ~/.config/karabiner/karabiner.json :
&amp;quot;complex_modifications&amp;quot;: { &amp;quot;rules&amp;quot;: [ { &amp;quot;manipulators&amp;quot;: [ { &amp;quot;description&amp;quot;: &amp;quot;Change return_or_enter to left_control.</description>
    </item>
    
  </channel>
</rss>
