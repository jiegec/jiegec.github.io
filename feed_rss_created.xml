<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>杰哥的{运维，编程，调板子}小笔记</title><description>杰哥的{运维，编程，调板子}小笔记</description><link>https://jia.je/</link><atom:link href="https://jia.je/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/jiegec/blog-source</docs><language>zh</language> <pubDate>Mon, 11 Aug 2025 07:30:15 -0000</pubDate> <lastBuildDate>Mon, 11 Aug 2025 07:30:15 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.3</generator> <image> <url>None</url> <title>杰哥的{运维，编程，调板子}小笔记</title><link>https://jia.je/</link> </image> <item> <title>AMD Zen 3 的 BTB 结构分析</title> <category>amd</category> <category>btb</category> <category>cpu</category> <category>hardware</category> <category>zen</category> <description>&lt;h1 id=&#34;amd-zen-3-的-btb-结构分析&#34;&gt;AMD Zen 3 的 BTB 结构分析&lt;a class=&#34;headerlink&#34; href=&#34;#amd-zen-3-的-btb-结构分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前，我们分析了 &lt;a href=&#34;../../07/amd-zen-1-btb/&#34;&gt;AMD Zen 1&lt;/a&gt; 和 &lt;a href=&#34;../amd-zen-2-btb/&#34;&gt;AMD Zen 2&lt;/a&gt; 的 BTB，接下来分析它的再下一代微架构：2020 年发布的 AMD Zen 3 的 BTB，看看 AMD 的 Zen 系列的 BTB 是如何演进的。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AMD 在 &lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/epyc-technical-docs/software-optimization-guides/56665.zip&#34;&gt;Software Optimization Guide for AMD EPYC™ 7003 Processors (Publication No. 56665)&lt;/a&gt; 中有如下的表述：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The branch target buffer (BTB) is a two-level structure accessed using the fetch address of the previous fetch block.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 3 的 BTB 有两级，相比 Zen 1 和 Zen 2 少了一级。BTB 是用之前 fetch block 的地址去查询，而不再是当前 fetch block 的地址。用当前 fetch block 的地址查询 BTB 很好理解，要寻找某个地址开始的第一个分支，就用这个地址去查询 BTB，Zen 1 和 Zen 2 都是如此；用之前 fetch block 的地址，则是用更早的信息，去获取当前 fetch block 的信息，例如：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;entrypoint1:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;entrypoint2&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;entrypoint2:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# what&amp;#39;s the first branch after entrypoint2?&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在查询从 entrypoint2 开始的第一条分支指令的时候，如果使用当前 fetch block，就是用 entrypoint2 的地址去查询，那就必须等到前面 &lt;code&gt;jmp entrypoint2&lt;/code&gt; 指令的目的地址被计算得出；如果使用之前 fetch block，就是用 entrypoint1 的地址去查询，不用等到 &lt;code&gt;jmp entrypoint2&lt;/code&gt; 指令的目的地址被计算得出。因此，如果用之前 fetch block，可以更早地进行 BTB 的访问，从而减少 BTB 的延迟，或者在相同延迟下获得更大的容量。但是，代价是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;从 entrypoint1 跳转到的 fetch block 可能有多个，例如最后一条是间接分支指令，那就需要找到正确的分支的信息&lt;/li&gt;&lt;li&gt;可能会从不同的地址跳转到 entrypoint2 这个 fetch block，因此它的信息可能会保存多份&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Each BTB entry can hold up to two branches if the last bytes of the branches reside in the same 64-byte aligned cache line and the first branch is a conditional branch.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 3 的 BTB entry 有一定的压缩能力，一个 entry 最多保存两条分支，前提是两条分支在同一个 64B 缓存行中，并且第一条分支是条件分支。这样，如果第二条分支是无条件分支，分支预测的时候，可以根据第一条分支的方向预测的结果，决定要用哪条分支的目的地址作为下一个 fetch block 的地址。虽然有压缩能力，但是没有提到单个周期预测两条分支，所以只是扩大了等效 BTB 容量。和 Zen 1、Zen 2 一样。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L1BTB has 1024 entries and predicts with zero bubbles for conditional and unconditional direct branches, and one cycle for calls, returns and indirect branches.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 3 的第一级 BTB 可以保存 1024 个 entry，但不确定这个 entry 是否可以保存两条分支，也不确定这个 entry 数量代表了实际的 entry 数量还是分支数量，后续会做实验证实；针对条件和无条件直接分支的预测不产生气泡，意味着它的延迟是一个周期。相比 Zen 2 容量翻倍，且延迟降低一个周期，猜测和使用 previous fetch block 有关。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L2BTB has 6656 entries and creates three bubbles if its prediction differs from L1BTB.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 3 的第二级 BTB 可以保存 6656 个 entry，但不确定这个 entry 是否可以保存两条分支，也不确定这个 entry 数量代表了实际的 entry 数量还是分支数量，后续会做实验证实；预测会产生三个气泡，意味着它的延迟是四个周期。&lt;/p&gt;&lt;p&gt;简单整理一下官方信息，大概有两级 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1024-entry L1 BTB, 1 cycle latency&lt;/li&gt;&lt;li&gt;6656-entry L2 BTB, 4 cycle latency&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;相比 Zen 1 和 Zen 2 有比较大的不同：去掉了原来很小的 L0 BTB，扩大了 L1 BTB，同时延迟缩短了一个周期；虽然 L2 BTB 有所缩小，但是延迟也变短了一个周期。&lt;/p&gt;&lt;p&gt;下面结合微架构测试，进一步研究它的内部结构。&lt;/p&gt;&lt;h2 id=&#34;微架构测试&#34;&gt;微架构测试&lt;a class=&#34;headerlink&#34; href=&#34;#微架构测试&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前的博客里，我们已经测试了各种处理器的 BTB，在这里也是一样的：按照一定的 stride 分布无条件直接分支，构成一个链条，然后测量 CPI。&lt;/p&gt;&lt;p&gt;考虑到 Zen 3 的 BTB 可能出现一个 entry 保存两条分支的情况，并且还对分支的类型有要求，因此下面的测试都会进行四组，分别对应四种分支模式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;uncond：所有分支都是无条件分支：uncond, uncond, uncond, uncond, ...&lt;/li&gt;&lt;li&gt;cond：所有分支都是条件分支：cond, cond, cond, cond, ...&lt;/li&gt;&lt;li&gt;mix (uncond + cond)：条件分支和无条件分支轮流出现，但 uncond 在先：uncond, cond, uncond, cond, ...&lt;/li&gt;&lt;li&gt;mix (cond + uncond)：条件分支和无条件分支轮流出现，但 cond 在先：cond, uncond, cond, uncond, ...&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;虽然 Zen 3 使用 previous fetch block 来访问 BTB，但在这几种分支模式中，使用 previous fetch block 还是访问 current fetch block，结果都是唯一的，所以并不会对结果带来影响。&lt;/p&gt;&lt;h3 id=&#34;stride4b&#34;&gt;stride=4B&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先是 stride=4B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-3-btb-4b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的拐点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个拐点是 4 条分支，CPI=1，对应 L1 BTB，没有达到完整容量，可能是因为分支太过密集&lt;/li&gt;&lt;li&gt;第二个拐点是 2048 条分支，CPI=3.6；第三个拐点是 4096 条分支，CPI=4/4.2/4.4&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Zen 3 在 stride=4B 的情况下 L1 BTB 表现比较一般，应该是牺牲了高密度分支下的性能；而主要命中的是 L2 BTB，在不同的分支模式下，测出来差不多的结果。为了验证这一点，统计了如下的性能计数器（来源：&lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/processor-tech-docs/programmer-references/56214-B0-PUB.zip&#34;&gt;Processor Programming Reference (PPR) for AMD Family 19h Model 21h, Revision B0 Processors&lt;/a&gt;）：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;PMCx08B [L2 Branch Prediction Overrides Existing Prediction (speculative)] (Core::X86::Pmc::Core::BpL2BTBCorrect)&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;它代表了 L2 BTB 提供预测（准确地说，L2 BTB 提供了预测且和 L1 BTB 提供的预测结果不同，覆盖了 L1 BTB 的预测结果）的次数，当分支数不大于 4 的时候，这个计数器的值约等于零；此后快速上升，说明后续都是 L2 BTB 在提供预测。&lt;/p&gt;&lt;p&gt;更进一步观察，发现 2048 到 4096 的 CPI 上升，来自于 L1 BTB 完全失效：2048 条分支时，L1 BTB 还能提供约 10% 的预测，所以 CPI=&lt;code&gt;0.1*1+0.9*4=3.7&lt;/code&gt;，但到 4096 条分支的时候，完全由 L2 BTB 提供分支，此时 CPI=4。&lt;/p&gt;&lt;p&gt;超过 4096 以后，则 L2 BTB 也开始缺失，出现了译码时才能发现的分支，如果这是一条 uncond 分支，那么会在译码时回滚，这一点可以通过如下性能计数器的提升来证明（来源：&lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/processor-tech-docs/programmer-references/56214-B0-PUB.zip&#34;&gt;Processor Programming Reference (PPR) for AMD Family 19h Model 21h, Revision B0 Processors&lt;/a&gt;）：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;PMCx091 [Decode Redirects] (Core::X86::Pmc::Core::BpDeReDirect): The number of times the instruction decoder overrides the predicted target.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;但在 L2 BTB 缺失后，如果译码器发现了 cond 分支，会把它预测为不跳转，所以要等到执行才能发现分支预测错误。这就导致了 cond 模式下 L2 BTB 溢出时 CPI=16，而 uncond 模式下 L2 BTB 溢出时 CPI=12，提前在译码阶段发现了 uncond 分支并纠正。&lt;/p&gt;&lt;p&gt;但译码器的纠正能力不是万能的：假如它首先发现了一条 cond 分支，在它其后又发现了一条 uncond 分支，它会用 uncond 分支去纠正，但实际上前面的 cond 分支会跳转，所以此时译码器纠正也无法提升性能，即使 BpDeReDirect 计数器的值看起来很大。&lt;/p&gt;&lt;h3 id=&#34;stride8b&#34;&gt;stride=8B&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来观察 stride=8B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-3-btb-8b.png&#34; /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶在所有分支模式下都是 1024 个分支，CPI=1，对应 1024-entry 的 L1 BTB&lt;/li&gt;&lt;li&gt;第二个台阶不太明显，但是在 4096 附近在所有分支模式下都是一个拐点，CPI=4，对应 L2 BTB；在 mix (uncond + cond) 模式下，超过 4096 分支后 CPI 缓慢上升，到 6144 条分支 CPI=4.25，到 6656 条分支 CPI=4.85，之后 CPI 快速上升；在 mix (cond + uncond) 模式下，到 5888 条分支 CPI=5。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;L2 BTB 的容量不太确定，超过 4096 后需要一个 entry 保存两条分支才能获得更多容量，但也带来了一定的额外的延迟。与此同时 4096 也对应了 32KB ICache 的容量，这会对分析带来干扰。&lt;/p&gt;&lt;p&gt;从 BpDeReDirect 计数器来看，uncond 分支模式下，当分支数量超过 4096 后，L2 BTB 从 4096 时无缺失，之后缺失快速提升，说明此时 L2 BTB 容量确实是 4096。在 mix (cond + uncond) 模式下，分支数超过 4096 时，BpDeReDirect 计数器略微上升，直到 6144 条分支后才有明显的上升。&lt;/p&gt;&lt;h3 id=&#34;stride16b&#34;&gt;stride=16B&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=16B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-3-btb-16b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=8B，L1 BTB 的行为没有变化。4096 对应的 CPI 有所下降，从 BpL2BTBCorrect 性能计数器可以发现是 L1 BTB 起了一定的作用。在 mix (cond + uncond) 模式下，直到 5632 条分支还维持了 CPI=3.25，之后 CPI 缓慢上升，到 6656 条分支时 CPI=3.75，到 6912 条分支时 CPI=4。&lt;/p&gt;&lt;p&gt;CPI=3.25 可能是来自于 1 和 4 的加权平均：25% 的时候是 1 周期，75% 的时候是 4 周期，平均下来就是 &lt;code&gt;1*0.25+4*0.75=3.25&lt;/code&gt;。这意味着 L1 BTB 还要保持 25% 的命中率。观察 BpL2BTBCorrect 性能计数器，发现它的取值等于 75% 的分支执行次数，意味着 L1 BTB 确实提供了 25% 的预测，L2 BTB 提供了剩下 75% 的预测。这一点是挺有意思的，意味着 L1 BTB 可能采用了一些对这种循环访问模式友好的替换策略：朴素的 LRU（或类 LRU）替换策略会导致 L1 BTB 出现 100% 缺失。&lt;/p&gt;&lt;h3 id=&#34;stride32b&#34;&gt;stride=32B&lt;a class=&#34;headerlink&#34; href=&#34;#stride32b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=32B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-3-btb-32b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=16B，L1 BTB 的行为没有变化，但是出现了一些性能波动。所有分支模式下，L2 BTB 的拐点都出现在 5120，但性能波动比较大，mix (cond + uncond) 模式下的 CPI 达到了 4.6。通过 BpDeReDirect 性能计数器的变化，可以确认这个拐点确实是来自于 L2 BTB 的缺失。&lt;/p&gt;&lt;p&gt;前面提到，译码器的纠正能力可能会给出错误的答案，在 stride=32B 时，就会出现一个很有意思的现象：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;超出 L2 BTB 容量后，mix (uncond + cond) 模式下 BpDeReDirect 占分支数量的 50%&lt;/li&gt;&lt;li&gt;超出 L2 BTB 容量后，mix (cond + uncond) 模式下 BpDeReDirect 占分支数量的接近 100%&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;解释起来也并不复杂：stride=32B 的情况下，一个 64B cacheline 只有两条分支，那么：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;mix (uncond + cond) 模式下，第一条分支是 uncond，译码器会发现并 redirect；第二条分支是 cond，译码器会无视它，不进行 redirect；所以最后是 50% 的 redirect 比例&lt;/li&gt;&lt;li&gt;mix (cond + uncond) 模式下，第一条分支是 cond，译码器会看到后面的 uncond 分支并 redirect；第二条分支是 uncond，译码器会发现并 redirect；所以最后是接近 100% 的 redirect 比例&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;顺带一提，uncond 模式下的 BpDeReDirect 占分支数量的接近 100%，cond 模式下的 BpDeReDirect 占分支数量的 0%，都是符合预期的。&lt;/p&gt;&lt;h3 id=&#34;stride64b&#34;&gt;stride=64B&lt;a class=&#34;headerlink&#34; href=&#34;#stride64b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=64B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-3-btb-64b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=32B，L1 BTB 的容量减半，达到了 512。之后出现了比较明显的性能波动，但四种分支模式下，拐点依然都是出现在 5120 条分支的位置。通过 BpDeReDirect 性能计数器的变化，可以确认这个拐点确实是来自于 L2 BTB 的缺失。由于 uncond 模式下，BTB sharing 不会工作，意味着 L2 BTB 至少有 5120 个 entry。&lt;/p&gt;&lt;h3 id=&#34;stride128b&#34;&gt;stride=128B&lt;a class=&#34;headerlink&#34; href=&#34;#stride128b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=128B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-3-btb-128b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=64B，L1 BTB 的容量进一步减小，达到了 256；L2 BTB 的性能依然波动剧烈，但四种分支模式下，拐点依然都是出现在 5120 条分支的位置。&lt;/p&gt;&lt;p&gt;考虑到 5120 这个拐点频繁出现，认为 L2 BTB 在不考虑 BTB entry sharing 的情况下，实际容量应该是 5120。那么剩下的 1536 个分支就是来自于压缩。&lt;/p&gt;&lt;h2 id=&#34;小结&#34;&gt;小结&lt;a class=&#34;headerlink&#34; href=&#34;#小结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;测试到这里就差不多了，更大的 stride 得到的也是类似的结果，总结一下前面的发现：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;L1 BTB 是 1024-entry，1 cycle latency，容量随着 stride 变化，大概率是 PC[n:5] 这一段被用于 index，使得 stride=64B 开始容量不断减半&lt;/li&gt;&lt;li&gt;L2 BTB 是 5120-entry，4 cycle latency；其中有 1536 个 entry 最多保存两条分支，前提是这两条分支在同一个 cacheline 当中，并且第一条是 cond，第二条是 uncond&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;zen-1-到-zen-3-的-btb-的对比&#34;&gt;Zen 1 到 Zen 3 的 BTB 的对比&lt;a class=&#34;headerlink&#34; href=&#34;#zen-1-到-zen-3-的-btb-的对比&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;下面是对比表格：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;uArch&lt;/th&gt;&lt;th&gt;AMD Zen 1&lt;/th&gt;&lt;th&gt;AMD Zen 2&lt;/th&gt;&lt;th&gt;AMD Zen 3&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;L0 BTB size&lt;/td&gt;&lt;td&gt;4+4 branches&lt;/td&gt;&lt;td&gt;8+8 branches&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L0 BTB latency&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1 BTB size&lt;/td&gt;&lt;td&gt;256 branches&lt;/td&gt;&lt;td&gt;512 branches&lt;/td&gt;&lt;td&gt;1024 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1 BTB latency&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2 BTB size w/o sharing&lt;/td&gt;&lt;td&gt;2K branches&lt;/td&gt;&lt;td&gt;4K branches&lt;/td&gt;&lt;td&gt;5K branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2 BTB size w/ sharing&lt;/td&gt;&lt;td&gt;4K branches&lt;/td&gt;&lt;td&gt;7K branches&lt;/td&gt;&lt;td&gt;6.5K branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2 BTB latency&lt;/td&gt;&lt;td&gt;5 cycles&lt;/td&gt;&lt;td&gt;5 cycles&lt;/td&gt;&lt;td&gt;4 cycles&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Technology Node&lt;/td&gt;&lt;td&gt;14nm&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Release Year&lt;/td&gt;&lt;td&gt;2017&lt;/td&gt;&lt;td&gt;2019&lt;/td&gt;&lt;td&gt;2020&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Zen 3 在 Zen 2 的基础上，没有更换制程，而是通过 previous fetch block 的方式，减少 L1 BTB 的延迟到 1 cycle，顺带去掉了 L0 BTB。L2 BTB 的大小进行了调整，减少了共享的部分，而增加了不限制分支类型的 BTB entry 数量，同时减少了一个周期的延迟，不确定这个延迟是单纯通过优化容量实现的，还是说也依赖了 previous fetch block 的方法来减少周期，更倾向于是后者，因为 L1 和 L2 BTB 都减少了一个周期的延迟。&lt;/p&gt;&lt;p&gt;如果按照 Intel 的 tick-tock 说法，那么 Zen 2 相比 Zen 1 是一次 tick，更换制程，微架构上做少量改动；Zen 3 相比 Zen 2 是一次 tock，不更换制程，但是在微架构上做较多改动。Zen 4 是 2022 年发布的，使用的是 5nm 制程；Zen 5 是 2024 年发布的，使用的是 4nm 制程。总结一下规律，AMD 会花费两年的时间来升级制程，并且实际上，Zen 4 和 Zen 5 不仅更新了制程，还在前端微架构上有较大的改动。&lt;/p&gt;&lt;h2 id=&#34;amd-zen-3-和-arm-neoverse-v1-的-btb-的对比&#34;&gt;AMD Zen 3 和 ARM Neoverse V1 的 BTB 的对比&lt;a class=&#34;headerlink&#34; href=&#34;#amd-zen-3-和-arm-neoverse-v1-的-btb-的对比&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AMD Zen 3 和 ARM Neoverse V1 都是在 2020 发布的处理器，下面对它们进行一个对比：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;uArch&lt;/th&gt;&lt;th&gt;AMD Zen 3&lt;/th&gt;&lt;th&gt;ARM Neoverse V1&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;L1/Nano BTB size&lt;/td&gt;&lt;td&gt;1024 branches&lt;/td&gt;&lt;td&gt;48*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1/Nano BTB latency&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1/Nano BTB throughput&lt;/td&gt;&lt;td&gt;1 branch&lt;/td&gt;&lt;td&gt;1-2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB size w/o sharing&lt;/td&gt;&lt;td&gt;5K branches&lt;/td&gt;&lt;td&gt;4K*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB size w/ sharing&lt;/td&gt;&lt;td&gt;6.5K branches&lt;/td&gt;&lt;td&gt;4K*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB latency&lt;/td&gt;&lt;td&gt;4 cycles&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB throughput&lt;/td&gt;&lt;td&gt;1 branch&lt;/td&gt;&lt;td&gt;1-2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Technology Node&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;td&gt;5nm&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;虽然 AMD Zen 3 通过 previous fetch block 优化，实现了 1 cycle 下更大的 L1 BTB，但这一点在 2022 年发布的 ARM Neoverse V2 上被追赶：ARM Neoverse V2 的 L1/Nano BTB 也做到了 1024 的容量。&lt;/p&gt;&lt;p&gt;在 L2 BTB 方面，ARM Neoverse V1 占据了领先，无论是延迟还是容量；当然了，ARM Neoverse V1 的制程也要更加领先，ARM 采用的 5nm 对比 AMD 采用的 7nm。&lt;/p&gt;&lt;p&gt;更进一步，ARM Neoverse V1 实现了一个周期预测两条分支，即 two taken（ARM 的说法是 two predicted branches per cycle），在 2 cycle 的 Main BTB 上可以实现接近 AMD Zen 3 的 L1 BTB 的预测吞吐。AMD 也不甘示弱，在 2022 年发布的 AMD Zen 4 处理器上，实现了 two taken。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/07/08/amd-zen-3-btb/</link> <pubDate>Tue, 08 Jul 2025 00:00:01 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/07/08/amd-zen-3-btb/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/amd-zen-3-btb.png" type="image/png" length="64399" /> </item> <item> <title>AMD Zen 2 的 BTB 结构分析</title> <category>amd</category> <category>btb</category> <category>cpu</category> <category>hardware</category> <category>zen</category> <description>&lt;h1 id=&#34;amd-zen-2-的-btb-结构分析&#34;&gt;AMD Zen 2 的 BTB 结构分析&lt;a class=&#34;headerlink&#34; href=&#34;#amd-zen-2-的-btb-结构分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前，我们分析了 &lt;a href=&#34;../../07/amd-zen-1-btb/&#34;&gt;AMD Zen 1&lt;/a&gt; 的 BTB，接下来分析它的下一代微架构：2019 年发布的 AMD Zen 2 的 BTB，看看 AMD 的 Zen 系列的 BTB 是如何演进的。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AMD 在 &lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/epyc-technical-docs/software-optimization-guides/56305.zip&#34;&gt;Software Optimization Guide for AMD EPYC™ 7002 Processors (Publication No. 56305)&lt;/a&gt; 中有如下的表述：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The branch target buffer (BTB) is a three-level structure accessed using the fetch address of the current fetch block.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 2 的 BTB 有三级，是用当前 fetch block 的地址去查询，和 Zen 1 一样。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Each BTB entry includes information for branches and their targets. Each BTBentry can hold up to two branches if the branches reside in the same 64-byte aligned cache line and the first branch is a conditional branch.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 2 的 BTB entry 有一定的压缩能力，一个 entry 最多保存两条分支，前提是两条分支在同一个 64B 缓存行中，并且第一条分支是条件分支。这样，如果第二条分支是无条件分支，分支预测的时候，可以根据第一条分支的方向预测的结果，决定要用哪条分支的目的地址作为下一个 fetch block 的地址。虽然有压缩能力，但是没有提到单个周期预测两条分支，所以只是扩大了等效 BTB 容量。和 Zen 1 一样。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L0BTB holds 8 forward taken branches and 8 backward taken branches, and predicts with zero bubbles&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 2 的第一级 BTB 可以保存 8 条前向分支和 8 条后向分支，预测不会带来流水线气泡，也就是说每个周期都可以预测一次。相比 Zen 1 容量翻倍。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L1BTB has 512 entries and creates one bubble if prediction differs from L0BTB&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 2 的第二级 BTB 可以保存 512 个 entry，但不确定这个 entry 是否可以保存两条分支，也不确定这个 entry 数量代表了实际的 entry 数量还是分支数量，后续会做实验证实；预测会产生单个气泡，意味着它的延迟是两个周期。相比 Zen 1 容量翻倍。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L2BTB has 7168 entries and creates four bubbles if its prediction differs from L1BTB.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 2 的第三级 BTB 可以保存 7168 个 entry，但不确定这个 entry 是否可以保存两条分支，也不确定这个 entry 数量代表了实际的 entry 数量还是分支数量，后续会做实验证实；预测会产生四个气泡，意味着它的延迟是五个周期。&lt;/p&gt;&lt;p&gt;简单整理一下官方信息，大概有三级 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;(8+8)-entry L0 BTB, 1 cycle latency&lt;/li&gt;&lt;li&gt;512-entry L1 BTB, 2 cycle latency&lt;/li&gt;&lt;li&gt;7168-entry L2 BTB, 5 cycle latency&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;从表述来看，除了容量以外基本和 Zen 1 一致，猜测是在 Zen 1 的基础上扩大了容量。&lt;/p&gt;&lt;p&gt;下面结合微架构测试，进一步研究它的内部结构。&lt;/p&gt;&lt;h2 id=&#34;微架构测试&#34;&gt;微架构测试&lt;a class=&#34;headerlink&#34; href=&#34;#微架构测试&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前的博客里，我们已经测试了各种处理器的 BTB，在这里也是一样的：按照一定的 stride 分布无条件直接分支，构成一个链条，然后测量 CPI。&lt;/p&gt;&lt;p&gt;考虑到 Zen 2 的 BTB 可能出现一个 entry 保存两条分支的情况，并且还对分支的类型有要求，因此下面的测试都会进行四组，分别对应四种分支模式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;uncond：所有分支都是无条件分支：uncond, uncond, uncond, uncond, ...&lt;/li&gt;&lt;li&gt;cond：所有分支都是条件分支：cond, cond, cond, cond, ...&lt;/li&gt;&lt;li&gt;mix (uncond + cond)：条件分支和无条件分支轮流出现，但 uncond 在先：uncond, cond, uncond, cond, ...&lt;/li&gt;&lt;li&gt;mix (cond + uncond)：条件分支和无条件分支轮流出现，但 cond 在先：cond, uncond, cond, uncond, ...&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;stride4b&#34;&gt;stride=4B&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先是 stride=4B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-2-btb-4b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;所有分支模式下，第一个台阶都是到 8 条分支，CPI=1，8 对应了 8-entry 的 L0 BTB&lt;/li&gt;&lt;li&gt;所有分支模式下，第二个台阶都是到 256 条分支，CPI=2，对应了 512-entry 的 L1 BTB，只体现出了一半的容量；但在 mix (uncond + cond) 和 mix (cond + uncond) 模式下，分支从 256 到 512 时 CPI 缓慢上升，意味着 L1 BTB 的 512-entry 还是可以完整访问，只是带来了一定的开销：CPI 从 2 增加到了 2.5&lt;/li&gt;&lt;li&gt;在 uncond 和 cond 模式下，第三个台阶到 4096 条分支，CPI=5，对应 L2 BTB，没有显现出完整的 7168 的大小&lt;/li&gt;&lt;li&gt;在 mix (uncond + cond) 模式下，第三个台阶延伸到了 5120，超出了 4096，依然没有显现出完整的 7168 的大小&lt;/li&gt;&lt;li&gt;在 mix (cond + uncond) 模式下，第三个台阶延伸到了 7168，显现出完整的 7168 的大小&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;和 Zen 1 不同，Zen 2 的 L1 BTB 出现了不同模式下容量不同的情况，原因未知，后续还会看到类似的情况。&lt;/p&gt;&lt;p&gt;Zen 2 的 L2 BTB 依然是带有压缩的，只有在 mix (cond + uncond) 模式下才可以尽可能地用上所有的容量，而其余的三种模式都有容量上的损失。&lt;/p&gt;&lt;h3 id=&#34;stride8b&#34;&gt;stride=8B&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来观察 stride=8B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-2-btb-8b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;现象和 stride=4B 基本相同，L1 BTB 从 256 到 512 部分的变化斜率有所不同，其余部分一致。&lt;/p&gt;&lt;h3 id=&#34;stride16b&#34;&gt;stride=16B&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=16B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-2-btb-16b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=4B/8B，L0 BTB 和 L2 BTB 的行为没有变化；除了 cond 模式以外，L1 BTB 的容量减半到了 128，意味着 L1 BTB 采用了组相连，此时有一半的 set 不能被用上。此外，比较特别的是，从 stride=16B 开始，CPI=5 的平台出现了波动，uncond 模式下 CPI 从 5 变到 4 再变到了 5，猜测此时 L1 BTB 也有一定的比例会介入。&lt;/p&gt;&lt;h3 id=&#34;stride32b&#34;&gt;stride=32B&lt;a class=&#34;headerlink&#34; href=&#34;#stride32b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=32B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-2-btb-32b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=16B，L0 BTB 的行为没有变化；除了 cond 模式以外，L1 BTB 的容量进一步减到了 64，符合组相连的预期；L2 BTB 在 mix (uncond + cond) 模式下不再能体现出 5120 的容量，而是 4096：此时在一个 64B cacheline 中只有两条分支，第一条分支是 uncond，第二条分支是 cond，不满足 entry 共享的条件（必须 cond + uncond，不能是 uncond + cond），此时 uncond 和 cond 分别保存在两个 entry 中，每个 entry 只保存一条分支，因此 L2 BTB 只能体现出 4096 的容量。而 mix (cond + uncond) 模式依然满足 entry 共享的条件，所以依然体现出 7168 的容量。特别地，在 mix (cond + uncond) 模式下出现了非常剧烈的 CPI 抖动，可能出现了一些预期之外的性能问题。&lt;/p&gt;&lt;h3 id=&#34;stride64b&#34;&gt;stride=64B&lt;a class=&#34;headerlink&#34; href=&#34;#stride64b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=64B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-2-btb-64b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=32B，L0 BTB 的行为没有变化；除了 cond 模式以外，L1 BTB 的容量进一步减到了 32，符合组相连的预期，但 cond 模式下依然保持了 512 的容量；L2 BTB 在 mix (cond + uncond) 模式下只能体现出 4096 的容量，此时每个 64B cacheline 都只有一条分支，不满足两条分支共享一个 entry 的条件。&lt;/p&gt;&lt;h3 id=&#34;stride128b&#34;&gt;stride=128B&lt;a class=&#34;headerlink&#34; href=&#34;#stride128b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=128B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-2-btb-128b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=64B，L0 BTB 的行为没有变化；除了 cond 模式以外，L1 BTB 的容量进一步减到了 16，符合组相连的预期，而 cond 模式下 L1 BTB 容量也减少到了 256；L2 BTB 的容量减半到了 2048，意味着 L2 BTB 也是组相连结构。&lt;/p&gt;&lt;h2 id=&#34;小结&#34;&gt;小结&lt;a class=&#34;headerlink&#34; href=&#34;#小结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;测试到这里就差不多了，更大的 stride 得到的也是类似的结果，总结一下前面的发现：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;L0 BTB 是 (8+8)-entry，1 cycle latency，不随着 stride 变化，全相连&lt;/li&gt;&lt;li&gt;L1 BTB 是 512-entry，2 cycle latency，容量随着 stride 变化，大概率是 PC[n:3] 这一段被用于 index，使得 stride=16B 开始容量不断减半；但 cond 模式下的行为和其余几种模式不同，直到 stride=128B 才开始容量减半&lt;/li&gt;&lt;li&gt;L2 BTB 是 4096-entry，5 cycle latency，容量随着 stride 变化，大概率是 PC[n:6] 这一段被用于 index，使得 stride=128B 开始容量不断减半；其中有 3072 个 entry 最多保存两条分支，前提是这两条分支在同一个 cacheline 当中，并且第一条是 cond，第二条是 uncond；因此最多保存 7168 条分支&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;zen-1-和-zen-2-的-btb-的对比&#34;&gt;Zen 1 和 Zen 2 的 BTB 的对比&lt;a class=&#34;headerlink&#34; href=&#34;#zen-1-和-zen-2-的-btb-的对比&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;下面是对比表格：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;uArch&lt;/th&gt;&lt;th&gt;AMD Zen 1&lt;/th&gt;&lt;th&gt;AMD Zen 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;L0 BTB size&lt;/td&gt;&lt;td&gt;4+4 branches&lt;/td&gt;&lt;td&gt;8+8 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L0 BTB latency&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1 BTB size&lt;/td&gt;&lt;td&gt;256 branches&lt;/td&gt;&lt;td&gt;512 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1 BTB latency&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2 BTB size w/o sharing&lt;/td&gt;&lt;td&gt;2K branches&lt;/td&gt;&lt;td&gt;4K branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2 BTB size w/ sharing&lt;/td&gt;&lt;td&gt;4K branches&lt;/td&gt;&lt;td&gt;7K branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2 BTB latency&lt;/td&gt;&lt;td&gt;5 cycles&lt;/td&gt;&lt;td&gt;5 cycles&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Technology Node&lt;/td&gt;&lt;td&gt;14nm&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Release Year&lt;/td&gt;&lt;td&gt;2017&lt;/td&gt;&lt;td&gt;2019&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可见 Zen 2 在容量上做了一定的扩展，但机制上比较类似；特别地，可能是观察到 cond + uncond 的压缩能够生效的比例没有那么高，所以只允许其中一部分 entry 被压缩，例如 4 路组相连，只有前 3 个 way 是可以保存两条分支；剩下的一个 way 只能保存一条分支。&lt;/p&gt;&lt;h2 id=&#34;amd-zen-2-和-arm-neoverse-n1-的-btb-的对比&#34;&gt;AMD Zen 2 和 ARM Neoverse N1 的 BTB 的对比&lt;a class=&#34;headerlink&#34; href=&#34;#amd-zen-2-和-arm-neoverse-n1-的-btb-的对比&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AMD Zen 2 和 ARM Neoverse N1 都是在 2019 发布的处理器，下面对它们进行一个对比：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;uArch&lt;/th&gt;&lt;th&gt;AMD Zen 2&lt;/th&gt;&lt;th&gt;ARM Neoverse N1&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;L0/Nano BTB size&lt;/td&gt;&lt;td&gt;8+8 branches&lt;/td&gt;&lt;td&gt;16 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L0/Nano BTB latency&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1/Micro BTB size&lt;/td&gt;&lt;td&gt;512 branches&lt;/td&gt;&lt;td&gt;64 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L1/Micro BTB latency&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB size w/o sharing&lt;/td&gt;&lt;td&gt;4K branches&lt;/td&gt;&lt;td&gt;3K*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB size w/ sharing&lt;/td&gt;&lt;td&gt;7K branches&lt;/td&gt;&lt;td&gt;3K*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L2/Main BTB latency&lt;/td&gt;&lt;td&gt;5 cycles&lt;/td&gt;&lt;td&gt;2-3 cycles&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Technology Node&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可见 AMD Zen 2 在 BTB 容量上有优势，但是延迟要更长；两者都在最后一级 BTB 上做了压缩，但是压缩的方法和目的不同：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;AMD Zen 2 的压缩方法是，把同一个 64B cacheline 内一条 cond 和一条 uncond 指令放在同一个 entry 当中。这样做的好处是，当预测到 cond 分支不跳转的时候，可以直接根据 uncond 指令的信息，得到下一个 fetch block 的地址；但是也对代码的结构有要求，必须是在同一个 cacheline 中，依次出现一个 cond 和一个 uncond&lt;/li&gt;&lt;li&gt;ARM Neoverse N1 的压缩方法是，根据立即数范围对分支进行分类，如果分支的立即数范围比较小，就只占用一个 entry 的一半也就是 41 bit；如果分支的立即数范围过大，就占用一个完整的 82 bit 的 entry；这主要是一个减少 SRAM 占用的优化，避免了所有的分支都要记录完整的 82 bit 信息；对代码的结构要求比较小，只要是跳转距离不太远的分支，都可以存到 41 bit 内&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;二者都没有实现一个周期预测两条分支，即 two taken（ARM 的说法是 two predicted branches per cycle）。这要等到 2020 年的 ARM Neoverse N2/V1，或者 2022 年的 AMD Zen 4 才被实现。&lt;/p&gt;&lt;p&gt;注意到 AMD 的 &lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/epyc-technical-docs/software-optimization-guides/56305.zip&#34;&gt;Software Optimization Guide for AMD EPYC™ 7002 Processors (Publication No. 56305)&lt;/a&gt; 文档里，有这么一段表述：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Branches whose target crosses a half-megabyte aligned boundary are unable to be installed in the L0 BTB or to share BTB entries with other branches.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;也就是说，如果两个分支要共享一个 BTB entry，那么它们的目的地址不能跨越 512KB 边界，也就是和分支地址的偏移量不超过 19 位。按 48 位虚拟地址计算，如果 BTB entry 只记录一条分支，最多需要记录目的地址的完整 48 位地址；如果现在 BTB entry 要存两条分支，这两条分支的目的地址都只需要记录 19 位，加起来也就 38 位，还可以空余 10 位的信息用来维护 BTB sharing 所需的额外信息。&lt;/p&gt;&lt;p&gt;所以说到底，无论是 AMD 还是 ARM，做的事情都是对一个固定长度的 entry 设置了不同的格式，一个格式保存的地址位数多，但是只能保存一个分支；另一个格式保存的地址位数少，但是可以保存两个分支。区别就是 AMD 对两个分支的类型和位置有要求，而 ARM 允许这两个分支毫无关系。这就是不同厂商的取舍了。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/07/08/amd-zen-2-btb/</link> <pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/07/08/amd-zen-2-btb/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/amd-zen-2-btb.png" type="image/png" length="63807" /> </item> <item> <title>AMD Zen 1 的 BTB 结构分析</title> <category>amd</category> <category>btb</category> <category>cpu</category> <category>hardware</category> <category>zen</category> <description>&lt;h1 id=&#34;amd-zen-1-的-btb-结构分析&#34;&gt;AMD Zen 1 的 BTB 结构分析&lt;a class=&#34;headerlink&#34; href=&#34;#amd-zen-1-的-btb-结构分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AMD Zen 1 是 AMD 在 2017 年发布的 Zen 系列第一代微架构。在之前，我们分析了 ARM Neoverse &lt;a href=&#34;../../../06/05/arm-neoverse-n1-btb/&#34;&gt;N1&lt;/a&gt; 和 &lt;a href=&#34;../../../06/23/arm-neoverse-v1-btb/&#34;&gt;V1&lt;/a&gt; 的 BTB，那么现在也把视线转到 AMD 上，看看 AMD 的 Zen 系列的 BTB 是如何演进的。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AMD 在 &lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/processor-tech-docs/software-optimization-guides/55723_3_01_0.zip&#34;&gt;Software Optimization Guide for AMD Family 17h Processors (Publication No. 55723)&lt;/a&gt; 中有如下的表述：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The branch target buffer (BTB) is a three-level structure accessed using the fetch address of the current fetch block.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 1 的 BTB 有三级，是用当前 fetch block 的地址去查询。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Each BTB entry includes information for branches and their targets. Each BTB entry can hold up to two branches if the branches reside in the same 64-byte aligned cache line and the first branch is a conditional branch.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 1 的 BTB entry 有一定的压缩能力，一个 entry 最多保存两条分支，前提是两条分支在同一个 64B 缓存行中，并且第一条分支是条件分支。这样，如果第二条分支是无条件分支，分支预测的时候，可以根据第一条分支的方向预测的结果，决定要用哪条分支的目的地址作为下一个 fetch block 的地址。虽然有压缩能力，但是没有提到单个周期预测两条分支，所以只是扩大了等效 BTB 容量。&lt;/p&gt;&lt;p&gt;例如，有这么一段代码：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# fetch block entrypoint&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;entrypoint:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# do something&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;jnz&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;targetA&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# do something&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;jmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;targetB&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么 jnz 和 jmp 指令可以放到同一个 entry 当中，一次读出来，然后对 jnz 指令进行分支方向预测：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果 jnz 预测为跳转，那么当前 fetch block 从 entrypoint 开始，到 jnz 结束；下一个 fetch block 从 targetA 开始&lt;/li&gt;&lt;li&gt;如果 jnz 预测为不跳转，那么当前 fetch block 从 entrypoint 开始，到 jmp 结束；下一个 fetch block 从 targetB 开始&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;L0BTB holds 4 forward taken branches and 4 backward taken branches, and predicts with zero bubbles.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 1 的第一级 BTB 可以保存 4 条前向分支和 4 条后向分支，预测不会带来流水线气泡，也就是说每个周期都可以预测一次。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L1BTB has 256 entries and creates one bubble if prediction differs from L0BTB.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 1 的第二级 BTB 可以保存 256 个 entry，但不确定这个 entry 是否可以保存两条分支，也不确定这个 entry 数量代表了实际的 entry 数量还是分支数量，后续会做实验证实；预测会产生单个气泡，意味着它的延迟是两个周期。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;L2BTB has 4096 entries and creates four bubbles if its prediction differs from L1BTB.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Zen 1 的第三级 BTB 可以保存 4096 个 entry，但不确定这个 entry 是否可以保存两条分支，也不确定这个 entry 数量代表了实际的 entry 数量还是分支数量，后续会做实验证实；预测会产生四个气泡，意味着它的延迟是五个周期。&lt;/p&gt;&lt;p&gt;简单整理一下官方信息，大概有三级 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;(4+4)-entry L0 BTB, 1 cycle latency&lt;/li&gt;&lt;li&gt;256-entry L1 BTB, 2 cycle latency&lt;/li&gt;&lt;li&gt;4096-entry L2 BTB, 5 cycle latency&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下面结合微架构测试，进一步研究它的内部结构。&lt;/p&gt;&lt;h2 id=&#34;微架构测试&#34;&gt;微架构测试&lt;a class=&#34;headerlink&#34; href=&#34;#微架构测试&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前的博客里，我们已经测试了各种处理器的 BTB，在这里也是一样的：按照一定的 stride 分布无条件直接分支，构成一个链条，然后测量 CPI。&lt;/p&gt;&lt;p&gt;考虑到 Zen 1 的 BTB 可能出现一个 entry 保存两条分支的情况，并且还对分支的类型有要求，因此下面的测试都会进行四组，分别对应四种分支模式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;uncond：所有分支都是无条件分支：uncond, uncond, uncond, uncond, ...&lt;/li&gt;&lt;li&gt;cond：所有分支都是条件分支：cond, cond, cond, cond, ...&lt;/li&gt;&lt;li&gt;mix (uncond + cond)：条件分支和无条件分支轮流出现，但 uncond 在先：uncond, cond, uncond, cond, ...&lt;/li&gt;&lt;li&gt;mix (cond + uncond)：条件分支和无条件分支轮流出现，但 cond 在先：cond, uncond, cond, uncond, ...&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;stride4b&#34;&gt;stride=4B&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先是 stride=4B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-1-btb-4b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;所有分支模式下，第一个台阶都是到 4 条分支，CPI=1.25，比 1 周期略高，猜测是因为循环体比较小，循环结束的操作的开销没有平摊造成的；4 对应了 4-entry 的 L0 BTB&lt;/li&gt;&lt;li&gt;所有分支模式下，第二个台阶都是到 256 条分支，CPI=2，对应了 256-entry 的 L1 BTB，意味着 L1 BTB 没有做一个 BTB entry 记录两条分支的优化，实际上就是 256 个 entry 保存 256 条分支&lt;/li&gt;&lt;li&gt;在 uncond 和 cond 模式下，第三个台阶到 2048 条分支，CPI=5，对应 L2 BTB，没有显现出完整的 4096 的大小，意味着 L2 BTB 实际上只有 2048 个 entry，每个 entry 最多保存两条分支，而 uncond 和 cond 模式下，不满足每个 entry 保存两条分支的条件，所以只保存了 2048 条分支&lt;/li&gt;&lt;li&gt;在 mix (uncond + cond) 模式下，第三个台阶一直延伸到了 3072，超出了 2048，意味着出现了两条分支保存在一个 entry 的情况，但并没有体现出完整的 4096 条分支的大小&lt;/li&gt;&lt;li&gt;在 mix (cond + uncond) 模式下，第三个台阶延伸到了 4096，体现出完整的 4096 的 L2 BTB 大小&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;可以观察到，过了 L2 BTB 容量以后，性能骤降到十多个 cycle，此时还没有超出 L1 ICache 容量，这么长的延迟，即使是在 uncond 模式下，可以在译码的时候发现 uncond 分支并 redirect，也要 16+ 个周期，可见其流水线之长。&lt;/p&gt;&lt;h3 id=&#34;stride8b&#34;&gt;stride=8B&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来观察 stride=8B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-1-btb-8b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;现象和 stride=4B 基本相同，各级 BTB 显现出来的大小没有变化。&lt;/p&gt;&lt;h3 id=&#34;stride16b&#34;&gt;stride=16B&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=16B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-1-btb-16b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=4B/8B，L0 BTB 的行为没有变化；L1 BTB 的容量减半到了 128，意味着 L1 BTB 采用了组相连，此时有一半的 set 不能被用上。此外，比较特别的是，从 stride=16B 开始，CPI=5 的平台出现了波动，CPI 从 5 变到 4 再变到了 5，猜测此时 L1 BTB 也有一定的比例会介入。L2 BTB 在 mix (uncond + cond) 模式下，拐点从 3072 前移到 2560。&lt;/p&gt;&lt;h3 id=&#34;stride32b&#34;&gt;stride=32B&lt;a class=&#34;headerlink&#34; href=&#34;#stride32b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=32B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-1-btb-32b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=16B，L0 BTB 的行为没有变化；L1 BTB 的容量进一步减到了 64，符合组相连的预期；L2 BTB 在 mix (uncond + cond) 模式下不再能体现出 3072 的容量，而是 2048：此时在一个 64B cacheline 中只有两条分支，第一条分支是 uncond，第二条分支是 cond，不满足 entry 共享的条件（必须 cond + uncond，不能是 uncond + cond），此时 uncond 和 cond 分别保存在两个 entry 中，每个 entry 只保存一条分支，因此 L2 BTB 只能体现出 2048 的容量。而 mix (cond + uncond) 模式依然满足 entry 共享的条件，所以依然体现出 4096 的容量。&lt;/p&gt;&lt;h3 id=&#34;stride64b&#34;&gt;stride=64B&lt;a class=&#34;headerlink&#34; href=&#34;#stride64b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=64B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-1-btb-64b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=32B，L0 BTB 的行为没有变化；L1 BTB 的容量进一步减到了 32，符合组相连的预期；L2 BTB 在 mix (cond + uncond) 模式下只能体现出 2048 的容量，此时每个 64B cacheline 都只有一条分支，不满足两条分支共享一个 entry 的条件。&lt;/p&gt;&lt;h3 id=&#34;stride128b&#34;&gt;stride=128B&lt;a class=&#34;headerlink&#34; href=&#34;#stride128b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=128B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../amd-zen-1-btb-128b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;相比 stride=64B，L0 BTB 的行为没有变化；L1 BTB 的容量进一步减到了 16，符合组相连的预期；L2 BTB 的容量减半到了 1024，意味着 L2 BTB 也是组相连结构。&lt;/p&gt;&lt;h2 id=&#34;小结&#34;&gt;小结&lt;a class=&#34;headerlink&#34; href=&#34;#小结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;测试到这里就差不多了，更大的 stride 得到的也是类似的结果，总结一下前面的发现：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;L0 BTB 是 (4+4)-entry，1 cycle latency，不随着 stride 变化，全相连&lt;/li&gt;&lt;li&gt;L1 BTB 是 256-entry，2 cycle latency，容量随着 stride 变化，大概率是 PC[n:3] 这一段被用于 index，使得 stride=16B 开始容量不断减半&lt;/li&gt;&lt;li&gt;L2 BTB 是 2048-entry，5 cycle latency，容量随着 stride 变化，大概率是 PC[n:6] 这一段被用于 index，使得 stride=128B 开始容量不断减半；每个 entry 最多保存两条分支，前提是这两条分支在同一个 cacheline 当中，并且第一条是 cond，第二条是 uncond；因此最多保存 4096 个分支&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;也总结一下前面发现了各种没有解释的遗留问题：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;stride=4B/8B/16B 且为 mix (uncond + cond) 模式时，L2 BTB 体现出 3072/3072/2560 的容量，而非 4096：解析见后&lt;/li&gt;&lt;li&gt;L2 BTB 对应的 CPI=5 的台阶出现比较明显的，在 4-5 之间的波动：暂无解释&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;接下来尝试解析一下这些遗留问题背后的原理。部分遗留问题，并没有被解释出来，欢迎读者提出猜想。&lt;/p&gt;&lt;h2 id=&#34;解析遗留问题&#34;&gt;解析遗留问题&lt;a class=&#34;headerlink&#34; href=&#34;#解析遗留问题&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;stride4b8b16b-且为-mix-uncond--cond-模式时l2-btb-体现出-307230722560-的容量而非-4096&#34;&gt;stride=4B/8B/16B 且为 mix (uncond + cond) 模式时，L2 BTB 体现出 3072/3072/2560 的容量，而非 4096&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b8b16b-且为-mix-uncond--cond-模式时l2-btb-体现出-307230722560-的容量而非-4096&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;前面测试出来，观察到两个奇怪的容量：3072 和 2560，分别有 3 和 5 的因子。下面通过进一步的实验，观察它的来源。&lt;/p&gt;&lt;h4 id=&#34;stride16b-对应-2560-的-l2-btb-容量&#34;&gt;stride=16B 对应 2560 的 L2 BTB 容量&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b-对应-2560-的-l2-btb-容量&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;首先针对这个 2560 的拐点，做了一系列测试，在 stride=16B 的情况下，测试不同的 uncond/cond 分支的组合，下面是 64B cacheline 内四条分支的类型的不同组合（U 代表 Uncond，C 代表 Cond），以及该组合对应的容量：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CCCC: 2048（即 cond 模式）&lt;/li&gt;&lt;li&gt;CCCU: 2560&lt;/li&gt;&lt;li&gt;CCUC: 2560&lt;/li&gt;&lt;li&gt;CCUU: 2560&lt;/li&gt;&lt;li&gt;CUCC: 2560&lt;/li&gt;&lt;li&gt;CUCU: 4096（即 mix (cond + uncond) 模式）&lt;/li&gt;&lt;li&gt;CUUC: 2560&lt;/li&gt;&lt;li&gt;CUUU: 2560&lt;/li&gt;&lt;li&gt;UCCC: 2048&lt;/li&gt;&lt;li&gt;UCCU: 2560&lt;/li&gt;&lt;li&gt;UCUC: 2560（即 mix (uncond + cond) 模式）&lt;/li&gt;&lt;li&gt;UCUU: 2560&lt;/li&gt;&lt;li&gt;UUCC: 2048&lt;/li&gt;&lt;li&gt;UUCU: 2560&lt;/li&gt;&lt;li&gt;UUUC: 2048&lt;/li&gt;&lt;li&gt;UUUU: 2048（即 uncond 模式）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;可以观察到，如果没有出现连续的 CU（CCCC/UCCC/UUCC/UUUC/UUUU），容量是 2048；如果出现了一组 CU（CC&lt;strong&gt;CU&lt;/strong&gt;/C&lt;strong&gt;CU&lt;/strong&gt;C/C&lt;strong&gt;CU&lt;/strong&gt;U/&lt;strong&gt;CU&lt;/strong&gt;CC/&lt;strong&gt;CU&lt;/strong&gt;UC/&lt;strong&gt;CU&lt;/strong&gt;UU/UC&lt;strong&gt;CU&lt;/strong&gt;/U&lt;strong&gt;CU&lt;/strong&gt;C/U&lt;strong&gt;CU&lt;/strong&gt;U/UU&lt;strong&gt;CU&lt;/strong&gt;），容量是 2560；出现了两组 CU（&lt;strong&gt;CUCU&lt;/strong&gt;），就是 mix (cond + uncond) 模式，容量是 4096。&lt;/p&gt;&lt;p&gt;一种可能的猜想：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果没有出现连续的 CU，那么每个 branch 占用一个 entry，那么容量就是 2048 个 branch&lt;/li&gt;&lt;li&gt;如果出现了一组 CU，那么一个 64B cacheline 里的 4 个 branch 对应 3 个 entry，那么前 2048 个 branch 对应 1536 个 entry，还剩下 512 个 entry，这些 entry 每个 entry 只放 1 个 branch（讨论见后），所以最后容量是 &lt;code&gt;2048+512=2560&lt;/code&gt; 个 branch&lt;/li&gt;&lt;li&gt;如果出现了两组 CU，那么每一组 CU 的两个 branch 对应一个 entry，容量是 4096 个 branch&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是也遗留了一个问题，就是只有一组 CU 的情况下，为啥剩下的 512 个 entry 只放 512 个 branch，而不能放 1024 个 branch，按理说是可能再次出现 cond + uncond 合并？这个问题暂时还没有解释。&lt;/p&gt;&lt;p&gt;由此可以看出，2560 的来源是 4 路组相连，然后其中一路发生了 cond + uncond 的合并，所以最终是 5 个分支保存到 4 路当中，再来一条分支就会放不下。&lt;/p&gt;&lt;h4 id=&#34;stride4b8b-对应-3072-的-l2-btb-容量&#34;&gt;stride=4B/8B 对应 3072 的 L2 BTB 容量&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b8b-对应-3072-的-l2-btb-容量&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;带着上面的分析，再去观察 stride=4B/8B 时的 3072：3072 有 3 的因子，所以大概率是从 2 路组相连得来，其中一路出现了 cond + uncond 的合并，所以出现了 3 个 branch 占用 2 个 entry 的情况，最后体现出来就是 3072 的 L2 BTB 容量。&lt;/p&gt;&lt;p&gt;似乎到这里，3072 和 2560 分别的 3 和 5 的因子都能解释了，剩下的就是解析具体的组相连的结构。&lt;/p&gt;&lt;h4 id=&#34;组相连分析&#34;&gt;组相连分析&lt;a class=&#34;headerlink&#34; href=&#34;#组相连分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;那么到底是 2 路组相连，还是 4 路组相连呢，另外这个组相连的 set 是怎么构成的呢？&lt;/p&gt;&lt;p&gt;首先回忆一下，在 &lt;a href=&#34;../../../06/05/arm-neoverse-n1-btb/&#34;&gt;ARM Neoverse N1&lt;/a&gt; 中，连续的 32B 内能放 6 个分支，但是 stride=8B 的时候，一次就会往同一个 set 里增加 4 个分支，于是一个 set 内的分支数从 0 变到 4 再变到 8，拐点出现在 4 个分支，而不是 6 个分支。因此为了达到前面出现的 3072 和 2560 的拐点，新增的分支也得均匀地分到各个 set 当中。&lt;/p&gt;&lt;p&gt;前面根据 L2 BTB 的容量分析到，L2 BTB 的 Index 可能是 PC[n:6]，但肯定不是简单的这么取，否则也会出现 ARM Neoverse N1 类似的问题。只能说明 PC[6] 往上有若干个 bit 是单独出现在 L2 BTB 的 Index 当中的，而 PC[5] 以下的 bit，可能以某种哈希函数的形式，参与到 Index 当中。&lt;/p&gt;&lt;p&gt;所以，L2 BTB 可能是以 PC[n:6] 作为 Index 去访问，然后内部有多个 bank，每个 bank 内部是 2 路组相连。bank index 是通过 PC 经过哈希计算得来，使得在 stride=4B/8B 的时候，体现出 2 路组相连，而在 stride=16B 的时候，体现出 4 路组相连。同时，分支还能够均匀地分布到各个 bank 当中，避免了和 ARM Neoverse N1 类似的情况的发生。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/07/07/amd-zen-1-btb/</link> <pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/07/07/amd-zen-1-btb/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/amd-zen-1-btb.png" type="image/png" length="62608" /> </item> <item> <title>ARM Neoverse V1 (代号 Zeus) 的 BTB 结构分析</title> <category>arm</category> <category>btb</category> <category>cpu</category> <category>hardware</category> <category>neoverse</category> <description>&lt;h1 id=&#34;arm-neoverse-v1-代号-zeus-的-btb-结构分析&#34;&gt;ARM Neoverse V1 (代号 Zeus) 的 BTB 结构分析&lt;a class=&#34;headerlink&#34; href=&#34;#arm-neoverse-v1-代号-zeus-的-btb-结构分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;ARM Neoverse V1 是 ARM Neoverse N1 的下一代服务器 CPU，在 2020 年发布。此前我们分析过 &lt;a href=&#34;./&#34;&gt;Neoverse N1 的 BTB 设计&lt;/a&gt;。而 ARM Neoverse V1 在很多地方都和 Cortex-X1 类似，相比 Neoverse N1/Cortex-A76 有了一些改进，在这里对它的 BTB 做一些分析。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先收集了一些 ARM Neoverse V1 的 BTB 结构的官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://teratec.eu/library/pdf/forum/2021/A05-03.pdf&#34;&gt;SW defined cars: HPC, from the cloud to the dashboard for an amazing driver experience&lt;/a&gt;&lt;ul&gt;&lt;li&gt;64KB L1 ICache, 2x32B bandwidth&lt;/li&gt;&lt;li&gt;8K-entry main BTB&lt;/li&gt;&lt;li&gt;96-entry nano BTB, 0 cycle bubble&lt;/li&gt;&lt;li&gt;2 stage prediction pipeline: P1 &amp;amp; P2，大概率 nano BTB 在 P1，main BTB 在 P2&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://hc2023.hotchips.org/assets/program/conference/day1/CPU1/HC2023.Arm.MagnusBruce.v04.FINAL.pdf&#34;&gt;Arm Neoverse V2 platform: Leadership Performance and Power Efficiency for Next-Generation Cloud Computing, ML and HPC Workloads&lt;/a&gt;&lt;ul&gt;&lt;li&gt;2 predicted branches per cycle，每周期最多预测两条分支&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;简单整理一下官方信息，大概有两级 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;96-entry nano BTB, 1 cycle latency (0 cycle bubble)&lt;/li&gt;&lt;li&gt;8K-entry main BTB&lt;/li&gt;&lt;li&gt;2 predicted branches per cycle&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是很多细节是缺失的，因此下面结合微架构测试，进一步研究它的内部结构。&lt;/p&gt;&lt;h2 id=&#34;微架构测试&#34;&gt;微架构测试&lt;a class=&#34;headerlink&#34; href=&#34;#微架构测试&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前的博客里，我们已经测试了各种处理器的 BTB，在这里也是一样的：按照一定的 stride 分布无条件（uncond）或总是跳转的有条件（cond）直接分支，构成一个链条，然后测量 CPI。在先前的 &lt;a href=&#34;../../05/arm-neoverse-n1-btb/&#34;&gt;Neoverse N1 测试&lt;/a&gt; 里，我们只测试了无条件分支，但实际上，在 Neoverse N1 上用条件分支测出来的结果也是一样的，但在 Neoverse V1 上就不同了，所以在这里要分开讨论。&lt;/p&gt;&lt;h3 id=&#34;stride4b-uncond&#34;&gt;stride=4B uncond&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b-uncond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先是 stride=4B uncond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-4b-uncond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到接近 64 条分支，CPI=1，对应了 96-entry 的 nano BTB，但是没有体现出完整的 96 的容量&lt;/li&gt;&lt;li&gt;第二个台阶到 16384 条分支，CPI 在 5 到 6 之间，大于 main BTB 的 2 cycle latency，说明此时没有命中 main BTB，而是要等到取指和译码后，计算出正确的目的地址再回滚，导致了 5+ cycle latency；16384 对应 64KB L1 ICache 容量&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么 stride=4B uncond 的情况下就遗留了如下问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;nano BTB 没表现出 96 的容量，只表现出接近 64 的容量&lt;/li&gt;&lt;li&gt;没有观察到 2 predicted branches per cycle&lt;/li&gt;&lt;li&gt;没有命中 main BTB&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;stride4b-cond&#34;&gt;stride=4B cond&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b-cond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=4B cond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-4b-cond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 48 条分支，CPI=1，对应了 96-entry 的 nano BTB，但是没有体现出完整的 96 的容量&lt;/li&gt;&lt;li&gt;之后没有明显的分界点，性能波动剧烈，没有观察到 main BTB 的台阶&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;nano BTB 只表现出 48 的容量，刚好是 96 的一半；同时没有观察到 2 predicted branches per cycle。考虑这两点，可以认为 nano BTB 的组织方式和分支类型有关，当分支过于密集（stride=4B）或者用条件分支（cond）时，不能得到完整的 96-entry 的大小，此时也会回落到 CPI=1 的情况。&lt;/p&gt;&lt;p&gt;那么 stride=4B cond 的情况下就遗留了如下问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;没有命中 main BTB&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;stride8b-uncond&#34;&gt;stride=8B uncond&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b-uncond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=8B uncond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-8b-uncond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 96 条分支，CPI=0.5，对应了 96-entry 的 nano BTB，体现了 2 predicted branches per cycle&lt;/li&gt;&lt;li&gt;第二个台阶到 8192 条分支，CPI=1，对应 main BTB，此时也对应了 64KB L1 ICache；此外，从 4096 开始有略微的上升&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此时 nano BTB 完整地表现出了它的 96-entry 容量，并且实现了 CPI=0.5 的效果。main BTB 也实现了 CPI=1，考虑到它的容量不太可能单周期给出一个分支的结果，大概率是两个周期预测两条分支指令。&lt;/p&gt;&lt;p&gt;那么 stride=8B uncond 的情况下就遗留了如下问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;从 4096 条分支开始性能有略微的下降&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;stride8b-cond&#34;&gt;stride=8B cond&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b-cond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=8B cond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-8b-cond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 48 条分支，CPI=1，对应了 96-entry 的 nano BTB，没有 2 predicted branches per cycle，容量也只有 96 的一半&lt;/li&gt;&lt;li&gt;第二个台阶到 8192 条分支，CPI=2，对应 main BTB，此时也对应了 64KB L1 ICache&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;和之前一样，遇到 cond 分支，nano BTB 的容量只有一半，也观察不到 2 predicted branches per cycle。另一边，main BTB 的 CPI 也到了 2，意味着此时 main BTB 也只能两个周期预测一条分支指令，和之前的分析吻合。&lt;/p&gt;&lt;p&gt;那么为什么用条件分支，就不能预测两条分支指令了呢？猜测是，BTB 可以一次给出两条分支的信息，但是没有时间去同时预测这两条分支的方向。所以就回落到了普通的 2 cycle BTB 情况。&lt;/p&gt;&lt;h3 id=&#34;stride16b-uncond&#34;&gt;stride=16B uncond&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b-uncond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=16B uncond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-16b-uncond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 96 条分支，CPI=0.5，对应了 96-entry 的 nano BTB，体现了 2 predicted branches per cycle&lt;/li&gt;&lt;li&gt;第二个台阶到 2048 条分支，CPI=1；略微上升到 4096，此时是 64KB L1 ICache 的容量；到 8192 出现明显突变，对应 main BTB 容量&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么 stride=16B uncond 的情况下就遗留了如下问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;从 2048 条分支开始性能有略微的下降&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;stride16b-cond&#34;&gt;stride=16B cond&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b-cond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=16B cond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-16b-cond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 48 条分支，CPI=1，对应了 96-entry 的 nano BTB，没有 2 predicted branches per cycle，容量也只有 96 的一半&lt;/li&gt;&lt;li&gt;第二个台阶到 8192 条分支，CPI=2，对应 main BTB&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;预测的效果和 stride=8B cond 完全相同。&lt;/p&gt;&lt;p&gt;那么 stride=16B cond 的情况下就遗留了如下问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;64KB ICache 应该在 4096 条分支导致瓶颈，但是实际没有观察到&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;stride32b-uncond&#34;&gt;stride=32B uncond&lt;a class=&#34;headerlink&#34; href=&#34;#stride32b-uncond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=32B uncond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-32b-uncond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 96 条分支，CPI=0.5，对应了 96-entry 的 nano BTB，体现了 2 predicted branches per cycle&lt;/li&gt;&lt;li&gt;第二个台阶到 1024 条分支，CPI=1；略微上升到 2048，此时是 64KB L1 ICache 的容量；到 8192 右侧出现明显突变&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么 stride=32B uncond 的情况下就遗留了如下问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;从 1024 条分支开始性能有略微的下降&lt;/li&gt;&lt;li&gt;性能明显下降的点在 8192 右侧，而不是 8192&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;stride32b-cond&#34;&gt;stride=32B cond&lt;a class=&#34;headerlink&#34; href=&#34;#stride32b-cond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=32B cond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-32b-cond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 48 条分支，CPI=1，对应了 96-entry 的 nano BTB，没有 2 predicted branches per cycle，容量也只有 96 的一半&lt;/li&gt;&lt;li&gt;第二个台阶到 2048 条分支，CPI=2，对应 64KB L1 ICache 容量，之后缓慢上升，到 8192 出现性能突变，对应 main BTB 容量&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;基本符合预期，只是在 stride=16B cond 的基础上，引入了 64KB L1 ICache 导致的性能下降。&lt;/p&gt;&lt;h3 id=&#34;stride64b-uncond&#34;&gt;stride=64B uncond&lt;a class=&#34;headerlink&#34; href=&#34;#stride64b-uncond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=64B uncond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-64b-uncond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 96 条分支，CPI=0.5，对应了 96-entry 的 nano BTB，体现了 2 predicted branches per cycle&lt;/li&gt;&lt;li&gt;第二个台阶到 1024 条分支，CPI=1，对应 64KB L1 ICache 的容量&lt;/li&gt;&lt;li&gt;第三个台阶到 4096，CPI=3，对应 main BTB 的容量；main BTB 容量减半，意味着 main BTB 应当是个组相连结构&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;stride64b-cond&#34;&gt;stride=64B cond&lt;a class=&#34;headerlink&#34; href=&#34;#stride64b-cond&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;stride=64B cond 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-v1-btb-64b-cond.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了如下比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 48 条分支，CPI=1，对应了 96-entry 的 nano BTB，没有 2 predicted branches per cycle，容量也只有 96 的一半&lt;/li&gt;&lt;li&gt;第二个台阶到 1024 条分支，CPI=2，对应 64KB L1 ICache 容量，之后缓慢上升，到 4096 出现性能突变，对应 main BTB 容量；main BTB 容量只有 8192 的一半，意味着它是组相连结构&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;小结&#34;&gt;小结&lt;a class=&#34;headerlink&#34; href=&#34;#小结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;测试到这里就差不多了，更大的 stride 得到的也是类似的结果，总结一下前面的发现：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;nano BTB 是 96-entry，1 cycle latency，对于 uncond 分支可以做到一次预测两条分支，大小不随着 stride 变化，对应全相连结构&lt;/li&gt;&lt;li&gt;main BTB 是 8K-entry，2 cycle latency，对于 uncond 分支可以做到一次预测两条分支，此时可以达到 CPI=1；容量随着 stride 变化，对应组相连结构&lt;/li&gt;&lt;li&gt;64KB ICache 很多时候会比 main BTB 更早成为瓶颈&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;也总结一下前面发现了各种没有解释的遗留问题：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;cond 分支情况下，没有 2 predicted branches per cycle，此时两级 BTB 分别可以做到 CPI=1 和 CPI=2，同时 nano BTB 容量减半到 48：解释见后&lt;/li&gt;&lt;li&gt;stride=4B uncond/cond 的情况下，main BTB 没有像预期那样工作：解释见后&lt;/li&gt;&lt;li&gt;stride=8B/16B/32B uncond 的情况下，4096/2048/1024 条分支处出现了性能下降：暂无解释&lt;/li&gt;&lt;li&gt;stride=32B uncond 的情况下，main BTB 导致的拐点应该在 8192，但实际上在 8192 右侧：暂无解释&lt;/li&gt;&lt;li&gt;stride=16B cond 的情况下，64KB ICache 应该在 4096 条分支导致瓶颈，但是实际没有观察到：暂无解释&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;接下来尝试解析一下这些遗留问题背后的原理。部分遗留问题，并没有被解释出来，欢迎读者提出猜想。&lt;/p&gt;&lt;h2 id=&#34;解析遗留问题&#34;&gt;解析遗留问题&lt;a class=&#34;headerlink&#34; href=&#34;#解析遗留问题&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;cond-分支情况下没有-2-predicted-branches-per-cycle同时-nano-btb-只有-48-的容量&#34;&gt;cond 分支情况下，没有 2 predicted branches per cycle，同时 nano BTB 只有 48 的容量&lt;a class=&#34;headerlink&#34; href=&#34;#cond-分支情况下没有-2-predicted-branches-per-cycle同时-nano-btb-只有-48-的容量&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;比较相同 stride 下，cond 和 uncond 的情况，可以看到，cond 情况下两级 BTB 的 CPI 都翻倍，这意味着，当遇到全是 cond 分支时，大概是因为条件分支预测器的带宽问题，不能一次性预测两个 cond 分支的方向，而只能预测第一条 cond 分支，那么第二条 cond 分支的信息，即使通过 BTB 读取出来，也不能立即使用，还得等下一次的预测。&lt;/p&gt;&lt;p&gt;为了验证这个猜想，额外做了一组实验：把分支按照 cond, uncond, cond, uncond, ... 的顺序排列，也就是每个 cond 分支的目的地址有一条 uncond 分支。此时测出来的结果，和 uncond 相同，也就是可以做到 2 predicted branches per cycle。此时，BTB 依然一次提供了两条分支的信息，只不过条件分支预测器只预测了第一个 cond 的方向。如果它预测为不跳转，那么下一个 PC 就是 cond 分支的下一条指令；如果它预测为跳转，那么下一个 PC 就是 uncond 分支的目的地址。&lt;/p&gt;&lt;p&gt;nano BTB 的容量减半，意味着 nano BTB 的 96 的容量，实际上是 48 个 entry，每个 entry 最多记录两条分支。考虑到 nano BTB 的容量不随 stride 变化，大概率是全相连，并且是根据第一条分支的地址进行全相连匹配，这样，在 cond + cond 这种情况下，就只能表现出 48 的容量。但是 stride=4B uncond 的情况下表现出介于 48 和 64 之间的容量，还不知道是什么原因。&lt;/p&gt;&lt;p&gt;main BTB 的容量不变，意味着它在 cond + cond 的情况下，会退化为普通的 BTB，此时所有容量都可以用来保存 cond 分支，并且都能匹配到。&lt;/p&gt;&lt;p&gt;那么，具体是怎么做到 2 predicted branches per cycle 呢？猜测在执行的时候，检测这种一个分支的目的地址后，跟着一条 uncond 分支的情况：如果有的话，就把第二条分支的信息，放在第一条分支的信息后面（这在 &lt;a href=&#34;https://dl.acm.org/doi/pdf/10.1145/3613424.3623774&#34;&gt;Branch Target Buffer Organizations&lt;/a&gt; 中被称为 MB-BTB 结构），单个周期直接从 SRAM 读取出来，然后组成两个 fetch bundle：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;prediction pc -- first branch pc&lt;/li&gt;&lt;li&gt;first branch target -- second branch pc&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;然后下一个周期从 second branch target 开始继续预测。根据官方信息，Neoverse V1 的 L1 ICache 支持 2x32B 的带宽，这个 2x 代表了可以从两个不同的地方读取指令，也就是 L1 ICache 至少是双 bank 甚至双端口的 SRAM。考虑到前面的测试中，CPI=0.5 的范围跨越了各种 stride，认为 L1 ICache 是双 bank 的可能写比较小，不然应该会观测到 bank conflict，大概率就是双端口了。&lt;/p&gt;&lt;p&gt;此外，考虑到 fetch bundle 的长度限制，first branch target 到 second branch pc 不能太远。在上面的测试中，这个距离总是 0；读者如果感兴趣，可以尝试把距离拉长，看看超过 32B 以后，是不是会让 2 predicted branches per cycle 失效。类似的表述，在 &lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/processor-tech-docs/software-optimization-guides/57647.zip&#34;&gt;AMD Zen 4 Software Optimization Guide&lt;/a&gt; 中也有出现：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;The branch target buffer (BTB) is a two-level structure accessed using the fetch address of the previous fetch block.&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;Each BTB entry includes information for branches and their targets.&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;Each BTB entry can hold up to two branches, and two pair cases are supported:&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;• A conditional branch followed by another branch with both branches having their last byte in the same 64 byte aligned cacheline.&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;• A direct branch (excluding CALLs) followed by a branch ending within the 64 byte aligned cacheline containing the target of the first branch.&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;Predicting with BTB pairs allows two fetches to be predicted in one prediction cycle.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的第二种情况，对应了第二条分支的 pc，在第一条分支的 target 的同一个 64 字节 cacheline 内的要求。可见，ARM 和 AMD 在 BTB 的设计上是趋同的。&lt;/p&gt;&lt;p&gt;小结，Neoverse V1 在满足如下条件时，可以做到 2 predicted branches per cycle：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;uncond + uncond&lt;/li&gt;&lt;li&gt;cond + uncond&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;stride4b-uncondcond-的情况下main-btb-没有像预期那样工作&#34;&gt;stride=4B uncond/cond 的情况下，main BTB 没有像预期那样工作&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b-uncondcond-的情况下main-btb-没有像预期那样工作&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;类似的情况，我们在分析 &lt;a href=&#34;../../05/arm-neoverse-n1-btb/&#34;&gt;Neoverse N1&lt;/a&gt; 的时候就遇到了。Neoverse N1 的情况是，每对齐的 32B 块内，由于 6 路组相连，最多记录 6 条分支，而 stride=4B 时，有 8 条分支，所以出现了性能问题。&lt;/p&gt;&lt;p&gt;那么 Neoverse V1 是不是还是类似的情况呢？查阅 &lt;a href=&#34;https://developer.arm.com/documentation/101427/latest/&#34;&gt;Neoverse V1 TRM&lt;/a&gt;，可以看到它的 L1 (main) BTB 的描述是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Index: [15:4]&lt;/li&gt;&lt;li&gt;Data: [91:0]&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;回想之前 Neoverse N1 的 main BTB 容量：Index 是 [14:5]，意味着有 1024 个 set；3 个 Way，每个 Way 里面是 82 bit 的数据，每个分支占用 41 bit，所以一共可以存 &lt;code&gt;1024*3*2=6K&lt;/code&gt; 条分支。&lt;/p&gt;&lt;p&gt;类比一下，Neoverse V1 的 main BTB 容量也就可以计算得出：Index 是 [15:4]，意味着有 4096 个 set；没有 Way，说明就是直接映射；92 bit 的数据，大概率也是每个分支占用一半也就是 46 bit，所以一共可以存 &lt;code&gt;4096*2=8K&lt;/code&gt; 条分支，和官方数据吻合。在需要 2 predicted branches 的时候，就把这两个分支放到同一个 92-bit entry 内即可。一共占用 &lt;code&gt;4096*92=376832&lt;/code&gt; bit 也就是 46 KB 的空间。&lt;/p&gt;&lt;p&gt;那么，在 stride=4B 的情况下，对齐的 16B 块内的分支会被放到同一个 set 内，而每个 set 只能放两条分支，而 stride=4B 时需要放四条分支，这就导致了 main BTB 出现性能问题。&lt;/p&gt;&lt;p&gt;但比较奇怪的是，main BTB 的容量，在 stride=32B 时是 8192，而 stride=64B 时是 4096，这和 Index 是 PC[15:4] 不符，这成为了新的遗留问题。有一种可能，就是 TRM 写的不准确，Index 并非 PC[15:4]。另外还有一个佐证：Neoverse N2 的 BTB 设计和 Neoverse V1 基本相同，但是它的 TRM 写的 Index 就是 [11:0]，这就肯定不是 PC[11:0] 了。&lt;/p&gt;&lt;p&gt;抛开 TRM，根据 JamesAslan 在 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/595585895&#34;&gt;偷懒的 BTB？ARM Cortex X1 初探&lt;/a&gt; 中的测试，Main BTB 是四路组相连。如果按照四路组相连来考虑，那么 8K 条分支，实际上应该是 2048 个 set，2 个 way，一共是 4K 个 entry，每个 entry 最多保存两条分支。此时 Index 应该有 11 个 bit。在 2 way 每 way 两条分支等效为 4 way 的情况下，stride=4B 出现分支数比 way 数量更多的情况，stride=8B 则不会，意味着参与到 Index 的最低的 PC 应该是 PC[5]，即每个对齐的 32B 块内，最多放四条分支（Neoverse N1 上是每个对齐的 32B 块内最多放六条分支）。这样的话，Index 可能实际上是 PC[15:5]。&lt;/p&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;a class=&#34;headerlink&#34; href=&#34;#总结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最后总结一下 Neoverse V1 的 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;48-entry(96 branches) nano BTB, at most 2 branches per entry, 1 cycle latency, at most 2 predicted branches every 1 cycle, fully associative&lt;/li&gt;&lt;li&gt;4K-entry(8K branches) main BTB, at most 2 branches per entry, 2 cycle latency, at most 2 predicted branches every 2 cycles, 2-way(4-branch-way) set-associative, index PC[15:5]&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;当 uncond + uncond 或者 cond + uncond 时，可以实现每次预测两条分支；对于 cond + cond，每次只能预测一条分支。&lt;/p&gt;&lt;p&gt;2 predicted branches per cycle 通常也被称为 2 taken branches per cycle，简称 2 taken。&lt;/p&gt;&lt;h2 id=&#34;附录&#34;&gt;附录&lt;a class=&#34;headerlink&#34; href=&#34;#附录&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;neoverse-n2代号-perseus的-btb-结构分析&#34;&gt;Neoverse N2（代号 Perseus）的 BTB 结构分析&lt;a class=&#34;headerlink&#34; href=&#34;#neoverse-n2代号-perseus的-btb-结构分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;根据官方信息，Neoverse N2 和 Neoverse V1 的 BTB 配置十分类似，从数字来看只有 nano BTB 缩小到了 32-entry(64 branches)，其余是相同的，例如 main BTB 容量也是 8K branches。实测下来，BTB 测试图像和 Neoverse V1 基本一样，只有 nano BTB 容量的区别。因此本文也可以认为是对 Neoverse N2 的 BTB 结构分析。考虑到 Neoverse N2 和 Neoverse V1 的发布时间相同，可以认为它们用的就是相同的前端设计，只是改了一下参数。&lt;/p&gt;&lt;h3 id=&#34;各代-neoverse-处理器的-btb-结构对比&#34;&gt;各代 Neoverse 处理器的 BTB 结构对比&lt;a class=&#34;headerlink&#34; href=&#34;#各代-neoverse-处理器的-btb-结构对比&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;比较一下 Neoverse V1 和 Neoverse N1 的设计：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Neoverse N1 设计了三级 BTB（16+64+6K），分别对应 1-3 的周期的延迟，特别地，main BTB 设计了 fastpath 来实现一定情况下的 2 周期延迟&lt;/li&gt;&lt;li&gt;Neoverse V1 设计了两级 BTB（96+8K），分别对应 1-2 的周期的延迟，并且都支持 2 taken&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Neoverse V1 相比 Neoverse N1，在容量和延迟上都有比较明显的提升，还额外给两级 BTB 都引入了 2 taken 的支持，进一步提升了吞吐。&lt;/p&gt;&lt;p&gt;下面是一个对比表格：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;uArch&lt;/th&gt;&lt;th&gt;Neoverse N1&lt;/th&gt;&lt;th&gt;Neoverse V1&lt;/th&gt;&lt;th&gt;Neoverse N2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Nano BTB size&lt;/td&gt;&lt;td&gt;16 branches&lt;/td&gt;&lt;td&gt;48*2 branches&lt;/td&gt;&lt;td&gt;32*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Nano BTB latency&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;td&gt;1 cycle&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Nano BTB throughput&lt;/td&gt;&lt;td&gt;1 branch&lt;/td&gt;&lt;td&gt;1-2 branches&lt;/td&gt;&lt;td&gt;1-2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Micro BTB size&lt;/td&gt;&lt;td&gt;64 branches&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Micro BTB latency&lt;/td&gt;&lt;td&gt;2 cycles&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Main BTB size&lt;/td&gt;&lt;td&gt;3K*2 branches&lt;/td&gt;&lt;td&gt;4K*2 branches&lt;/td&gt;&lt;td&gt;4K*2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Main BTB latency&lt;/td&gt;&lt;td&gt;2-3 cycles&lt;/td&gt;&lt;td&gt;2 cycle&lt;/td&gt;&lt;td&gt;2 cycle&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Main BTB throughput&lt;/td&gt;&lt;td&gt;1 branch&lt;/td&gt;&lt;td&gt;1-2 branches&lt;/td&gt;&lt;td&gt;1-2 branches&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Main BTB area (bits)&lt;/td&gt;&lt;td&gt;3K*82=251904&lt;/td&gt;&lt;td&gt;4K*92=376832&lt;/td&gt;&lt;td&gt;4K*92=376832&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Main BTB area (KiB)&lt;/td&gt;&lt;td&gt;30.75&lt;/td&gt;&lt;td&gt;46&lt;/td&gt;&lt;td&gt;46&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Technology Node&lt;/td&gt;&lt;td&gt;7nm&lt;/td&gt;&lt;td&gt;5nm&lt;/td&gt;&lt;td&gt;5nm&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</description><link>https://jia.je/hardware/2025/06/23/arm-neoverse-v1-btb/</link> <pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/06/23/arm-neoverse-v1-btb/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/arm-neoverse-v1-btb.png" type="image/png" length="81052" /> </item> <item> <title>在鸿蒙电脑上的虚拟机内启动 Linux</title> <category>arm64</category> <category>hardware</category> <category>harmonyos</category> <category>huawei</category> <category>linux</category> <category>matebook</category> <category>matebookpro</category> <description>&lt;h1 id=&#34;在鸿蒙电脑上的虚拟机内启动-linux&#34;&gt;在鸿蒙电脑上的虚拟机内启动 Linux&lt;a class=&#34;headerlink&#34; href=&#34;#在鸿蒙电脑上的虚拟机内启动-linux&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最近在研究鸿蒙电脑，群友 &lt;a href=&#34;https://github.com/Fearyncess&#34;&gt;@Fearyncess&lt;/a&gt; 摸索出了，如何在鸿蒙电脑上的虚拟机内启动 Linux，而不是 Windows。在此做个复现并记录。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;方法&#34;&gt;方法&lt;a class=&#34;headerlink&#34; href=&#34;#方法&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;目前鸿蒙的应用市场上有两家虚拟机，我用 Oseasy 虚拟机，但是理论上铠大师也是可以的。（P.S. @driver1998 反馈：“铠大师测试也能启动，但键盘左右方向键的处理有点问题，虚拟机内收不到按键松开的信号，EFI 和 Linux 里 面都是这样。目前建议用 OSEasy。”）&lt;/p&gt;&lt;p&gt;首先需要在 U 盘上，把一个 UEFI arm64 的 Linux 安装盘写进去。我用的是 Ventoy + Debian Installer，理论上直接写例如 Debian 发行版的安装 ISO 也是可以的。&lt;/p&gt;&lt;p&gt;然后把 U 盘插到鸿蒙电脑上，打开 Windows 虚拟机，直通到虚拟机里面，保证虚拟机里面可以看到 U 盘。&lt;/p&gt;&lt;p&gt;接着，进入 Windows 磁盘管理，缩小 Windows 的 NTFS 分区，留出空间。注意 Windows 启动的时候会自动 growpart，所以装 Debian 前，不要回到 Windows。装好以后，可以继续用 Windows。&lt;/p&gt;&lt;p&gt;接着，重启 Windows，同时按住 Escape，进入 OVMF 的界面，然后选择 Boot Manager，从 U 盘启动，然后就进入 Ventoy 的界面了。（注：根据 @quiccat 群友提醒，在 Windows 内，通过设置-&amp;gt;系统-&amp;gt;恢复-&amp;gt;高级启动-&amp;gt;UEFI 固件设置也可以进入 OVMF 的设置界面）&lt;/p&gt;&lt;p&gt;剩下的就是正常的 Linux 安装过程了，分区的时候，注意保留 Windows 已有的 NTFS，可以和 Windows 用同一个 ESP 分区。网络的话，配置静态 IP 是 172.16.100.2，默认网关是 172.16.100.1 即可。重启以后，在 grub 界面，修改 linux 配置，在 cmdline 一栏添加 &lt;code&gt;modprobe.blacklist=vmwgfx&lt;/code&gt;，这样就能启动了。内核版本是 Debian Bookworm 的 6.1。&lt;/p&gt;&lt;p&gt;各内核版本启动情况：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;5.10 from debian：正常&lt;/li&gt;&lt;li&gt;6.1 from debian：正常&lt;/li&gt;&lt;li&gt;6.2/6.3/6.4 from kernel.ubuntu.com: &lt;code&gt;echo simpledrm &amp;gt; /etc/modules-load.d/simpledrm.conf&lt;/code&gt; 后正常，否则系统可以启动但是图形界面起不来&lt;/li&gt;&lt;li&gt;6.5 from kernel.ubuntu.com：起不来，需要强制关机&lt;/li&gt;&lt;li&gt;6.12 from debian：起不来，需要强制关机&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;经过 @Fearyncess 的二分，找到了导致问题的 &lt;a href=&#34;https://github.com/torvalds/linux/commit/edc25898f0b6cceed6c90b0e79916bd04de7dd19&#34;&gt;commit&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;最终效果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../../software/linux-vm-on-harmonyos-computer.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;主要的遗憾是分辨率：屏幕两侧有黑边，并且由于宽度不同，触摸屏的位置映射会偏中间。&lt;/p&gt;&lt;h2 id=&#34;附录&#34;&gt;附录&lt;a class=&#34;headerlink&#34; href=&#34;#附录&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Geekbench 6 测试结果：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;6 核：&lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12309313&#34;&gt;Windows Single-Core 1436, Multi-Core 5296&lt;/a&gt;, &lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12373700&#34;&gt;Linux Single-Core 1500, Multi-Core 5699&lt;/a&gt;&lt;/li&gt;&lt;li&gt;8 核：&lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12309427&#34;&gt;Windows Single-Core 1462, Multi-Core 7043&lt;/a&gt;, &lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12373488&#34;&gt;Linux Single-Core 1489, Multi-Core 6076&lt;/a&gt;, &lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12373797&#34;&gt;Linux Single-Core 1503, Multi-Core 6289&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果没有 blacklist 的话，vmwgfx 驱动的报错：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;vmwgfx 0000:00:04.0: [drm] FIFO at 0x0000000020000000 size is 2048 kiB&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;vmwgfx 0000:00:04.0: [drm] VRAM at 0x0000000010000000 size is 262144 kiB&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;vmwgfx 0000:00:04.0: [drm] *ERROR* Unsupported SVGA ID 0xffffffff on chipset 0x405&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;vmwgfx: probe of 0000:00:04.0 failed with error -38&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;blacklist vmwgfx 后用的是 efifb：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;[ 0.465898] pci 0000:00:04.0: BAR 1: assigned to efifb&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;[ 1.197638] efifb: probing for efifb&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;[ 1.197705] efifb: framebuffer at 0x10000000, using 7500k, total 7500k&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;[ 1.197708] efifb: mode is 1600x1200x32, linelength=6400, pages=1&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;[ 1.197711] efifb: scrolling: redraw&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;[ 1.197712] efifb: Truecolor: size=8:8:8:8, shift=24:16:8:0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;虚拟机的 IP 地址，从宿主机也可以直接访问，通过 WVMBr 访问，目测是直接 Tap 接出来，然后建了个 Bridge，外加 NAT，只是没有 DHCP。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/06/10/linux-vm-on-harmonyos-computer/</link> <pubDate>Tue, 10 Jun 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/06/10/linux-vm-on-harmonyos-computer/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/linux-vm-on-harmonyos-computer.png" type="image/png" length="62592" /> </item> <item> <title>终端模拟器的文字绘制</title> <category>arm64</category> <category>hardware</category> <category>harmonyos</category> <category>huawei</category> <category>matebook</category> <category>matebookpro</category> <category>termony</category> <description>&lt;h1 id=&#34;终端模拟器的文字绘制&#34;&gt;终端模拟器的文字绘制&lt;a class=&#34;headerlink&#34; href=&#34;#终端模拟器的文字绘制&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最近在造鸿蒙电脑上的终端模拟器 &lt;a href=&#34;https://github.com/jiegec/Termony&#34;&gt;Termony&lt;/a&gt;，一开始用 ArkTS 的 Text + Span 空间来绘制终端，后来发现这样性能和可定制性比较差，就选择了自己用 OpenGL 实现，顺带学习了一下终端模拟器的文字绘制是什么样的一个过程。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;读取字形&#34;&gt;读取字形&lt;a class=&#34;headerlink&#34; href=&#34;#读取字形&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;文本绘制，首先就要从字体文件中读取字形，提取出 Bitmap 来，然后把 Bitmap 绘制到该去的地方。为了提取这些信息，首先用 FreeType 库，它可以解析字体文件，然后计算出给定大小的给定字符的 Bitmap。但是，这个 Bitmap 它只记录字体非空白的部分（准确的说，是 Bounding Box），如下图的 width * height 部分：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../../software/terminal-emulator-text-rendering-font.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;（图源：&lt;a href=&#34;https://freetype.org/freetype2/docs/tutorial/step2.html&#34;&gt;Managing Glyphs - FreeType Tutorial II&lt;/a&gt;）&lt;/p&gt;&lt;p&gt;其中 x 轴，应该是同一行的字体对齐的，这样才会看到有高有低的字符出现在同一行，而不是全部上对齐或者下对齐。得到的 Bitmap 是行优先的，也就是说：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;图中左上角，坐标 (xMin, yMax) 对应 Bitmap 数组的下标是 &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;&lt;li&gt;图中右上角，坐标 (xMax, yMax) 对应 Bitmap 数组的下标是 &lt;code&gt;width-1&lt;/code&gt;&lt;/li&gt;&lt;li&gt;图中左下角，坐标 (xMin, yMin) 对应 Bitmap 数组的下标是 &lt;code&gt;width*(height-1)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;图中右下角，坐标 (xMax, yMax) 对应 Bitmap 数组的下标是 &lt;code&gt;width*(height-1)+width-1&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;得到这个 Bitmap 后，如果我们不用 OpenGL，而是直接生成 PNG，那就直接进行一次 copy 甚至 blend 就可以把文字绘制上去了。但是，我们要用 OpenGL 的 shader，就需要把 bitmap 放到 texture 里面。由于目前我们用的就是单色的字体，所以它对应只有一个 channel 的 texture。&lt;/p&gt;&lt;p&gt;OpenGL 的 texture，里面也是保存的 bitmap，但它的坐标系统的命名方式不太一样：它的水平向右方向是 U 轴，竖直向上方向是 V 轴，然后它的 bitmap 保存个数也是行优先，但是从 (0, 0) 坐标开始保存像素，然后 U 和 V 的范围都是 0 到 1。&lt;/p&gt;&lt;p&gt;所以，如果我们创建一个 width*height 的单通道 texture，直接把上面的 bitmap 拷贝到 texture 内部，实际的效果大概是：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt; V&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt; ^&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt; |&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt; C D&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt; |&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt; |&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt; A------B---&amp;gt;U&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上图中几个点的坐标以及对应的 bitmap 数组的下标：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A 点：U = 0，V = 0，对应 bitmap 数组下标 &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;&lt;li&gt;B 点：U = 1，V = 0，对应 bitmap 数组下标 &lt;code&gt;width-1&lt;/code&gt;&lt;/li&gt;&lt;li&gt;C 点：U = 0，V = 1，对应 bitmap 数组下标 &lt;code&gt;width*(height-1)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;D 点：U = 1，V = 1，对应 bitmap 数组下标 &lt;code&gt;width*(height-1)+width-1&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;所以在向 OpenGL 的 texture 保存 bitmap 的时候，相当于做了一个上下翻转，不过这没有关系，后续在指定三角形顶点的 U V 坐标的时候，保证对应关系即可。&lt;/p&gt;&lt;h2 id=&#34;逐个字符绘制&#34;&gt;逐个字符绘制&lt;a class=&#34;headerlink&#34; href=&#34;#逐个字符绘制&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;有了这个基础以后，就可以实现逐个字符绘制：提前把所有要用到的字符，从字体提取出对应的 Bitmap，每个字符对应到一个 Texture。然后要绘制文字的时候，逐个字符，用对应的 Texture，在想要绘制的位置上，绘制一个字符。为了实现这个目的，写一个简单的 Shader：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// vertex shader&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#version 320 es&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// xy is position, zw is its texture coordinates&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// output texture coordinates&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl_Position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl_Position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// we don&amp;#39;t care about depth now&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl_Position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// (x, y, z, w) corresponds to (x/w, y/w, z/w), so we set w = 1.0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-12&#34;&gt;&lt;a id=&#34;__codelineno-1-12&#34; name=&#34;__codelineno-1-12&#34; href=&#34;#__codelineno-1-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// fragment shader&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-13&#34;&gt;&lt;a id=&#34;__codelineno-1-13&#34; name=&#34;__codelineno-1-13&#34; href=&#34;#__codelineno-1-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#version 320 es&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-14&#34;&gt;&lt;a id=&#34;__codelineno-1-14&#34; name=&#34;__codelineno-1-14&#34; href=&#34;#__codelineno-1-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;precision&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lowp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-15&#34;&gt;&lt;a id=&#34;__codelineno-1-15&#34; name=&#34;__codelineno-1-15&#34; href=&#34;#__codelineno-1-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-16&#34;&gt;&lt;a id=&#34;__codelineno-1-16&#34; name=&#34;__codelineno-1-16&#34; href=&#34;#__codelineno-1-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-17&#34;&gt;&lt;a id=&#34;__codelineno-1-17&#34; name=&#34;__codelineno-1-17&#34; href=&#34;#__codelineno-1-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;uniform&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sampler2D&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-18&#34;&gt;&lt;a id=&#34;__codelineno-1-18&#34; name=&#34;__codelineno-1-18&#34; href=&#34;#__codelineno-1-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-19&#34;&gt;&lt;a id=&#34;__codelineno-1-19&#34; name=&#34;__codelineno-1-19&#34; href=&#34;#__codelineno-1-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-20&#34;&gt;&lt;a id=&#34;__codelineno-1-20&#34; name=&#34;__codelineno-1-20&#34; href=&#34;#__codelineno-1-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-21&#34;&gt;&lt;a id=&#34;__codelineno-1-21&#34; name=&#34;__codelineno-1-21&#34; href=&#34;#__codelineno-1-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这里，我们给每个顶点设置四个属性，包在一个 vec4 中：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;xy：记录了这个顶点的坐标，x 和 y 范围都是 -1 到 1&lt;/li&gt;&lt;li&gt;zw：记录了这个顶点的 texture 坐标 u 和 v，范围都是 0 到 1&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;vertex shader 只是简单地把这些信息传递到顶点的坐标和 fragment shader。fragment shader 做的事情是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;根据当前点经过插值出来的 u v 坐标，在 texture 中进行采样&lt;/li&gt;&lt;li&gt;由于这个 texture 只有单通道，所以它的第一个 channel 也就是 &lt;code&gt;texture(text, texCoords).r&lt;/code&gt; 就代表了这个字体在这个位置的 alpha 值&lt;/li&gt;&lt;li&gt;然后把 alpha 值输出：&lt;code&gt;(1.0, 1.0, 1.0, alpha)&lt;/code&gt;，即带有 alpha 的白色&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在绘制文字之前，先绘制好背景色，然后通过设置 blending function：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;glEnable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GL_BLEND&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;glBlendFunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GL_SRC_ALPHA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GL_ONE_MINUS_SRC_ALPHA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它使得 blending 采用如下的公式：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里 dest 就是绘制文本前的颜色，src 就是 fragment shader 输出的颜色，也就是 &lt;code&gt;(1.0, 1.0, 1.0, alpha)&lt;/code&gt;。代入公式，就知道最终的结果是：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也就是以 alpha 为不透明度，把白色和背景颜色进行了一次 blend。&lt;/p&gt;&lt;p&gt;如果要设置字体颜色，只需要修改一下 fragment shader：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#version 320 es&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;precision&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lowp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-3&#34;&gt;&lt;a id=&#34;__codelineno-5-3&#34; name=&#34;__codelineno-5-3&#34; href=&#34;#__codelineno-5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-4&#34;&gt;&lt;a id=&#34;__codelineno-5-4&#34; name=&#34;__codelineno-5-4&#34; href=&#34;#__codelineno-5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-5&#34;&gt;&lt;a id=&#34;__codelineno-5-5&#34; name=&#34;__codelineno-5-5&#34; href=&#34;#__codelineno-5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;uniform&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sampler2D&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-6&#34;&gt;&lt;a id=&#34;__codelineno-5-6&#34; name=&#34;__codelineno-5-6&#34; href=&#34;#__codelineno-5-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;uniform&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-7&#34;&gt;&lt;a id=&#34;__codelineno-5-7&#34; name=&#34;__codelineno-5-7&#34; href=&#34;#__codelineno-5-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-8&#34;&gt;&lt;a id=&#34;__codelineno-5-8&#34; name=&#34;__codelineno-5-8&#34; href=&#34;#__codelineno-5-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-9&#34;&gt;&lt;a id=&#34;__codelineno-5-9&#34; name=&#34;__codelineno-5-9&#34; href=&#34;#__codelineno-5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-10&#34;&gt;&lt;a id=&#34;__codelineno-5-10&#34; name=&#34;__codelineno-5-10&#34; href=&#34;#__codelineno-5-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时 src 等于 &lt;code&gt;(textColor.r, textColor.g, textColor.b, alpha)&lt;/code&gt;，经过融合后的结果为：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即最终颜色，等于字体颜色和原来背景颜色，基于 bitmap 的 alpha 值的融合。&lt;/p&gt;&lt;p&gt;解决了颜色，接下来考虑如何设置顶点的信息。前面提到，得到的 bitmap 是一个矩形，而 OpenGL 绘图的基本元素是三角形，因此我们需要拆分成两个三角形来绘图，假如说要绘制一个矩形，它个四个顶点如下：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-7-1&#34;&gt;&lt;a id=&#34;__codelineno-7-1&#34; name=&#34;__codelineno-7-1&#34; href=&#34;#__codelineno-7-1&#34;&gt;&lt;/a&gt;3-4&lt;/span&gt;&lt;span id=&#34;__span-7-2&#34;&gt;&lt;a id=&#34;__codelineno-7-2&#34; name=&#34;__codelineno-7-2&#34; href=&#34;#__codelineno-7-2&#34;&gt;&lt;/a&gt;| |&lt;/span&gt;&lt;span id=&#34;__span-7-3&#34;&gt;&lt;a id=&#34;__codelineno-7-3&#34; name=&#34;__codelineno-7-3&#34; href=&#34;#__codelineno-7-3&#34;&gt;&lt;/a&gt;1-2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果确定左下角 3 这个顶点的坐标是 (xpos, ypos)，然后矩形的宽度是 w，高度是 h，考虑到 OpenGL 的坐标系也是向右 X 正方向，向上 Y 正方向，那么这四个顶点的坐标：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;顶点 1：(xpos, ypos)&lt;/li&gt;&lt;li&gt;顶点 2：(xpos + w, ypos)&lt;/li&gt;&lt;li&gt;顶点 3：(xpos, ypos + h)&lt;/li&gt;&lt;li&gt;顶点 4：(xpos + w, ypos + h)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;接下来考虑这些顶点对应的 uv 坐标。首先，我们知道这些顶点对应的 bitmap 的下标在哪里；然后我们又知道这些 bitmap 的下标对应的 uv 坐标，那就每个顶点找一次对应关系：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;顶点 1：(xpos, ypos)，下标是 &lt;code&gt;width*(height-1)&lt;/code&gt;，uv 坐标是 (0, 1)&lt;/li&gt;&lt;li&gt;顶点 2：(xpos + w, ypos)，下标是 &lt;code&gt;width*(height-1)+width-1&lt;/code&gt;，uv 坐标是 (1, 1)&lt;/li&gt;&lt;li&gt;顶点 3：(xpos, ypos + h)，下标是 &lt;code&gt;0&lt;/code&gt;，uv 坐标是 (0, 0)&lt;/li&gt;&lt;li&gt;顶点 4：(xpos + w, ypos + h)，下标是 &lt;code&gt;width-1&lt;/code&gt;，uv 坐标是 (1, 0)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了绘制这个矩形，绘制两个三角形，分别是 3-&amp;gt;1-&amp;gt;2 和 3-&amp;gt;2-&amp;gt;4，一共六个顶点的 (x, y, u, v) 信息就是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;3: (xpos , ypos + h, 0, 0)&lt;/li&gt;&lt;li&gt;1: (xpos , ypos , 0, 1)&lt;/li&gt;&lt;li&gt;2: (xpos + w, ypos , 1, 1)&lt;/li&gt;&lt;li&gt;3: (xpos , ypos + h, 0, 0)&lt;/li&gt;&lt;li&gt;2: (xpos + w, ypos , 1, 1)&lt;/li&gt;&lt;li&gt;4: (xpos + w, ypos + h, 1, 0)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;把这些数传递给 vertex shader，就可以画出来这个字符了。&lt;/p&gt;&lt;p&gt;最后还有一个小细节：上述的 xpos 和 ypos 说的是矩形左下角的坐标，但是我们画图的时候，实际上期望的是把字符都画到同一条线上。也就是说，我们指定 origin 的 xy 坐标，然后根据每个字符的 bearingX 和 bearingY 来算出它的矩形的左下角的坐标 xpos 和 ypos：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;xpos = originX + bearingX&lt;/li&gt;&lt;li&gt;ypos = originY + bearingY - height&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;至此就实现了逐个字符绘制需要的所有内容。这也是 &lt;a href=&#34;https://learnopengl.com/In-Practice/Text-Rendering&#34;&gt;Text Rendering - Learn OpenGL&lt;/a&gt; 这篇文章所讲的内容。&lt;/p&gt;&lt;h2 id=&#34;texture-atlas&#34;&gt;Texture Atlas&lt;a class=&#34;headerlink&#34; href=&#34;#texture-atlas&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;上面这种逐字符绘制的方法比较简单，但是也有硬伤，比如每次绘制字符，都需要切换 texture，更新 buffer，再进行一次 glDrawArrays 进行绘制，效率比较低。所以一个想法是，把这些 bitmap 拼接起来，合成一个大的 texture，然后把每个字符在这个大的 texture 内的 uv 坐标保存下来。这样，可以一次性把所有字符的所有三角形都传递给 OpenGL，一次绘制完成，不涉及到 texture 的切换。这样效率会高很多。&lt;/p&gt;&lt;p&gt;具体到代码上，也就是分成两步：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;bitmap 的拼接，这一步比较灵活，理想情况下是构造一个比较紧密的排布，但也可以留一些空间，直接对齐到最大宽度/高度的整数倍网格上，然后进行 uv 坐标的计算&lt;/li&gt;&lt;li&gt;剩下的，就是在计算顶点信息的时候，用计算好的 uv 坐标，其中 left/right 对应 bitmap 左右两侧的 u 坐标，top/bottom 对应 bitmap 上下两侧的 v 坐标（注意 top 比 bottom 小，因为竖直方向是反的）：&lt;ul&gt;&lt;li&gt;3: (xpos , ypos + h, left , top )&lt;/li&gt;&lt;li&gt;1: (xpos , ypos , left , bottom)&lt;/li&gt;&lt;li&gt;2: (xpos + w, ypos , right, bottom)&lt;/li&gt;&lt;li&gt;3: (xpos , ypos + h, left , top )&lt;/li&gt;&lt;li&gt;2: (xpos + w, ypos , right, bottom)&lt;/li&gt;&lt;li&gt;4: (xpos + w, ypos + h, right, top )&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此外，在前面的 shader 代码里，字体颜色用的是 uniform，也就是每次调用只能用同一种颜色。修改的方法，就是把它也变成顶点的属性，从 vertex shader 直接传给 fragment shader，替代 uniform 变量。不过由于 vec4 已经放不下更多的维度了，所以需要另外开一个 attribute：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-8-1&#34;&gt;&lt;a id=&#34;__codelineno-8-1&#34; name=&#34;__codelineno-8-1&#34; href=&#34;#__codelineno-8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// vertex shader&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-2&#34;&gt;&lt;a id=&#34;__codelineno-8-2&#34; name=&#34;__codelineno-8-2&#34; href=&#34;#__codelineno-8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#version 320 es&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-3&#34;&gt;&lt;a id=&#34;__codelineno-8-3&#34; name=&#34;__codelineno-8-3&#34; href=&#34;#__codelineno-8-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-4&#34;&gt;&lt;a id=&#34;__codelineno-8-4&#34; name=&#34;__codelineno-8-4&#34; href=&#34;#__codelineno-8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// xy is position, zw is its texture coordinates&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-5&#34;&gt;&lt;a id=&#34;__codelineno-8-5&#34; name=&#34;__codelineno-8-5&#34; href=&#34;#__codelineno-8-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-6&#34;&gt;&lt;a id=&#34;__codelineno-8-6&#34; name=&#34;__codelineno-8-6&#34; href=&#34;#__codelineno-8-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// output texture coordinates&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-7&#34;&gt;&lt;a id=&#34;__codelineno-8-7&#34; name=&#34;__codelineno-8-7&#34; href=&#34;#__codelineno-8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fragTextColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// send to fragment shader&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-8&#34;&gt;&lt;a id=&#34;__codelineno-8-8&#34; name=&#34;__codelineno-8-8&#34; href=&#34;#__codelineno-8-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-9&#34;&gt;&lt;a id=&#34;__codelineno-8-9&#34; name=&#34;__codelineno-8-9&#34; href=&#34;#__codelineno-8-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl_Position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-10&#34;&gt;&lt;a id=&#34;__codelineno-8-10&#34; name=&#34;__codelineno-8-10&#34; href=&#34;#__codelineno-8-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl_Position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// we don&amp;#39;t care about depth now&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-11&#34;&gt;&lt;a id=&#34;__codelineno-8-11&#34; name=&#34;__codelineno-8-11&#34; href=&#34;#__codelineno-8-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl_Position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// (x, y, z, w) corresponds to (x/w, y/w, z/w), so we set w = 1.0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-12&#34;&gt;&lt;a id=&#34;__codelineno-8-12&#34; name=&#34;__codelineno-8-12&#34; href=&#34;#__codelineno-8-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-13&#34;&gt;&lt;a id=&#34;__codelineno-8-13&#34; name=&#34;__codelineno-8-13&#34; href=&#34;#__codelineno-8-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fragTextColor&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-14&#34;&gt;&lt;a id=&#34;__codelineno-8-14&#34; name=&#34;__codelineno-8-14&#34; href=&#34;#__codelineno-8-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-15&#34;&gt;&lt;a id=&#34;__codelineno-8-15&#34; name=&#34;__codelineno-8-15&#34; href=&#34;#__codelineno-8-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-16&#34;&gt;&lt;a id=&#34;__codelineno-8-16&#34; name=&#34;__codelineno-8-16&#34; href=&#34;#__codelineno-8-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// fragment shader&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-17&#34;&gt;&lt;a id=&#34;__codelineno-8-17&#34; name=&#34;__codelineno-8-17&#34; href=&#34;#__codelineno-8-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#version 320 es&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-18&#34;&gt;&lt;a id=&#34;__codelineno-8-18&#34; name=&#34;__codelineno-8-18&#34; href=&#34;#__codelineno-8-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;precision&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lowp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-19&#34;&gt;&lt;a id=&#34;__codelineno-8-19&#34; name=&#34;__codelineno-8-19&#34; href=&#34;#__codelineno-8-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-20&#34;&gt;&lt;a id=&#34;__codelineno-8-20&#34; name=&#34;__codelineno-8-20&#34; href=&#34;#__codelineno-8-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fragTextColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-21&#34;&gt;&lt;a id=&#34;__codelineno-8-21&#34; name=&#34;__codelineno-8-21&#34; href=&#34;#__codelineno-8-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-22&#34;&gt;&lt;a id=&#34;__codelineno-8-22&#34; name=&#34;__codelineno-8-22&#34; href=&#34;#__codelineno-8-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;uniform&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sampler2D&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-23&#34;&gt;&lt;a id=&#34;__codelineno-8-23&#34; name=&#34;__codelineno-8-23&#34; href=&#34;#__codelineno-8-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-24&#34;&gt;&lt;a id=&#34;__codelineno-8-24&#34; name=&#34;__codelineno-8-24&#34; href=&#34;#__codelineno-8-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;texCoords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-25&#34;&gt;&lt;a id=&#34;__codelineno-8-25&#34; name=&#34;__codelineno-8-25&#34; href=&#34;#__codelineno-8-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vec4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fragTextColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-26&#34;&gt;&lt;a id=&#34;__codelineno-8-26&#34; name=&#34;__codelineno-8-26&#34; href=&#34;#__codelineno-8-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;背景和光标绘制&#34;&gt;背景和光标绘制&lt;a class=&#34;headerlink&#34; href=&#34;#背景和光标绘制&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;接下来回到终端模拟器，它除了绘制字符，还需要绘制背景颜色和光标。前面在绘制字符的时候，只把 bounding box 绘制了出来，那么剩下的空白部分是没有绘制的。但是终端里，每一个位置的背景颜色都可能不同，所以还需要给每个位置绘制对应的背景颜色。这里有两种做法：&lt;/p&gt;&lt;p&gt;第一种做法是，把前面每个字符的 bitmap 扩展到终端里一个固定的位置的大小，这样每次绘制的矩形，就是完整的一个位置的区域，这个时候再去绘制背景颜色，就比较容易了：修改 vertex shader 和 fragment shader，在内部进行一次 blend：&lt;code&gt;color = vec4(fragTextColor.rgb * alpha + fragBackgroundColor.rgb * (1.0 - alpha), 1.0)&lt;/code&gt;，相当于是丢掉了 OpenGL 的 blend function，自己完成了前景和后景的绘制。&lt;/p&gt;&lt;p&gt;但这个方法有个问题：并非所有的字符的 bitmap 都可以放到一个固定大小的矩形里的。有一些特殊字符，要么长的太高，要么在很下面的位置。后续可能还有更复杂的需求，比如 CJK 和 Emoji，那么字符的宽度又不一样了。所以这个时候导出了第二种做法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一轮，先绘制出终端每个位置的背景颜色&lt;/li&gt;&lt;li&gt;第二轮，再绘制出每个位置的字符，和背景进行融合&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这时候 shader 没法自己做 blend，所以这考虑怎么用 blend function 来实现这个 blend 的计算。首先，要考虑我们最终需要的结果是：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-9-1&#34;&gt;&lt;a id=&#34;__codelineno-9-1&#34; name=&#34;__codelineno-9-1&#34; href=&#34;#__codelineno-9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-2&#34;&gt;&lt;a id=&#34;__codelineno-9-2&#34; name=&#34;__codelineno-9-2&#34; href=&#34;#__codelineno-9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-3&#34;&gt;&lt;a id=&#34;__codelineno-9-3&#34; name=&#34;__codelineno-9-3&#34; href=&#34;#__codelineno-9-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-4&#34;&gt;&lt;a id=&#34;__codelineno-9-4&#34; name=&#34;__codelineno-9-4&#34; href=&#34;#__codelineno-9-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于是 OpenGL 做的 blending，我们需要用 OpenGL 自带的 blending mode 来实现上述公式。OpenGL 可以指定 RGB 的 source 和 dest 的 blending 方式，比如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;GL_ONE：乘以 1 的系数&lt;/li&gt;&lt;li&gt;GL_ONE_MINUS_SRC_ALPHA：乘以 (1 - source.a) 的系数&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;根据这个，就可以想到，设置 &lt;code&gt;source = vec4(textColor.rgb * alpha, alpha)&lt;/code&gt;，设置 source 采用 GL_ONE 方式，dest 采用 GL_ONE_MINUS_SRC_ALPHA 模式，那么 OpenGL 负责剩下的 blending 工作 &lt;code&gt;final = source * 1 + dest * (1 - source.a)&lt;/code&gt;（要求 &lt;code&gt;dest.a = 1.0&lt;/code&gt;）：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-10-1&#34;&gt;&lt;a id=&#34;__codelineno-10-1&#34; name=&#34;__codelineno-10-1&#34; href=&#34;#__codelineno-10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-2&#34;&gt;&lt;a id=&#34;__codelineno-10-2&#34; name=&#34;__codelineno-10-2&#34; href=&#34;#__codelineno-10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-3&#34;&gt;&lt;a id=&#34;__codelineno-10-3&#34; name=&#34;__codelineno-10-3&#34; href=&#34;#__codelineno-10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;textColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-4&#34;&gt;&lt;a id=&#34;__codelineno-10-4&#34; name=&#34;__codelineno-10-4&#34; href=&#34;#__codelineno-10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;正好实现了想要的计算公式。这个方法来自于 &lt;a href=&#34;https://github.com/servo/webrender/blob/main/webrender/doc/text-rendering.md&#34;&gt;Text Rendering - WebRender&lt;/a&gt;。有了这个推导后，就可以分两轮，完成终端里前后景的绘制了。&lt;/p&gt;&lt;p&gt;目前 &lt;a href=&#34;https://github.com/jiegec/Termony&#34;&gt;Termony&lt;/a&gt; 用的就是这种实现方法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;首先把不同字重的各种字符的 bitmap 拼在一起，放在一个 texture 内部&lt;/li&gt;&lt;li&gt;使用两阶段绘制，第一阶段&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;注：如果在 source 使用 GL_SRC_ALPHA，设置 &lt;code&gt;source = vec4(textColor.rgb, alpha)&lt;/code&gt;，这样 &lt;code&gt;final.r = source.r * source.a + dest.r * (1 - source.a) = textColor.r * alpha + dest.r * (1 - alpha)&lt;/code&gt;，结果是上面是一样的，不过这个时候 final 的 alpha 值等于 &lt;code&gt;source.a * source.a + dest.a * (1 - source.a)&lt;/code&gt; 是 alpha 和 dest.a 经过 blend 以后的结果，不再是 1.0，如果不用它就无所谓。上面这种 &lt;code&gt;vec4(textColor.rgb * alpha, alpha)&lt;/code&gt; 的计算方法，叫做 premultiplied alpha，也就是预先把 alpha 乘到颜色项里，可以方便后续的计算。&lt;/p&gt;&lt;h2 id=&#34;在鸿蒙上使用-opengl-渲染&#34;&gt;在鸿蒙上使用 OpenGL 渲染&lt;a class=&#34;headerlink&#34; href=&#34;#在鸿蒙上使用-opengl-渲染&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最后再简单列举一下，在鸿蒙上用 OpenGL 渲染都需要哪些事情：&lt;/p&gt;&lt;p&gt;首先，在 ArkTS 中，插入一个 XComponent，然后在 XComponentController 的回调函数中，通知 native api：&lt;/p&gt;&lt;div class=&#34;language-javascript highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-11-1&#34;&gt;&lt;a id=&#34;__codelineno-11-1&#34; name=&#34;__codelineno-11-1&#34; href=&#34;#__codelineno-11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testNapi&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;libentry.so&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-2&#34;&gt;&lt;a id=&#34;__codelineno-11-2&#34; name=&#34;__codelineno-11-2&#34; href=&#34;#__codelineno-11-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-3&#34;&gt;&lt;a id=&#34;__codelineno-11-3&#34; name=&#34;__codelineno-11-3&#34; href=&#34;#__codelineno-11-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MyXComponentController&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;XComponentController&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-4&#34;&gt;&lt;a id=&#34;__codelineno-11-4&#34; name=&#34;__codelineno-11-4&#34; href=&#34;#__codelineno-11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onSurfaceCreated&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-5&#34;&gt;&lt;a id=&#34;__codelineno-11-5&#34; name=&#34;__codelineno-11-5&#34; href=&#34;#__codelineno-11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hilog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DOMAIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;testTag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;onSurfaceCreated surfaceId: %{public}s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-6&#34;&gt;&lt;a id=&#34;__codelineno-11-6&#34; name=&#34;__codelineno-11-6&#34; href=&#34;#__codelineno-11-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testNapi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createSurface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;BigInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-7&#34;&gt;&lt;a id=&#34;__codelineno-11-7&#34; name=&#34;__codelineno-11-7&#34; href=&#34;#__codelineno-11-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-8&#34;&gt;&lt;a id=&#34;__codelineno-11-8&#34; name=&#34;__codelineno-11-8&#34; href=&#34;#__codelineno-11-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-9&#34;&gt;&lt;a id=&#34;__codelineno-11-9&#34; name=&#34;__codelineno-11-9&#34; href=&#34;#__codelineno-11-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onSurfaceChanged&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SurfaceRect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-10&#34;&gt;&lt;a id=&#34;__codelineno-11-10&#34; name=&#34;__codelineno-11-10&#34; href=&#34;#__codelineno-11-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hilog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DOMAIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;testTag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;onSurfaceChanged surfaceId: %{public}s rect: %{public}s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-11&#34;&gt;&lt;a id=&#34;__codelineno-11-11&#34; name=&#34;__codelineno-11-11&#34; href=&#34;#__codelineno-11-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testNapi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resizeSurface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;BigInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceWidth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceHeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-12&#34;&gt;&lt;a id=&#34;__codelineno-11-12&#34; name=&#34;__codelineno-11-12&#34; href=&#34;#__codelineno-11-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-13&#34;&gt;&lt;a id=&#34;__codelineno-11-13&#34; name=&#34;__codelineno-11-13&#34; href=&#34;#__codelineno-11-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-14&#34;&gt;&lt;a id=&#34;__codelineno-11-14&#34; name=&#34;__codelineno-11-14&#34; href=&#34;#__codelineno-11-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onSurfaceDestroyed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-15&#34;&gt;&lt;a id=&#34;__codelineno-11-15&#34; name=&#34;__codelineno-11-15&#34; href=&#34;#__codelineno-11-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hilog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DOMAIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;testTag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;onSurfaceDestroyed surfaceId: %{public}s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-16&#34;&gt;&lt;a id=&#34;__codelineno-11-16&#34; name=&#34;__codelineno-11-16&#34; href=&#34;#__codelineno-11-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testNapi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;destroySurface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;BigInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-17&#34;&gt;&lt;a id=&#34;__codelineno-11-17&#34; name=&#34;__codelineno-11-17&#34; href=&#34;#__codelineno-11-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-18&#34;&gt;&lt;a id=&#34;__codelineno-11-18&#34; name=&#34;__codelineno-11-18&#34; href=&#34;#__codelineno-11-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-19&#34;&gt;&lt;a id=&#34;__codelineno-11-19&#34; name=&#34;__codelineno-11-19&#34; href=&#34;#__codelineno-11-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-20&#34;&gt;&lt;a id=&#34;__codelineno-11-20&#34; name=&#34;__codelineno-11-20&#34; href=&#34;#__codelineno-11-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Component&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-21&#34;&gt;&lt;a id=&#34;__codelineno-11-21&#34; name=&#34;__codelineno-11-21&#34; href=&#34;#__codelineno-11-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-22&#34;&gt;&lt;a id=&#34;__codelineno-11-22&#34; name=&#34;__codelineno-11-22&#34; href=&#34;#__codelineno-11-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xComponentController&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;XComponentController&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MyXComponentController&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-23&#34;&gt;&lt;a id=&#34;__codelineno-11-23&#34; name=&#34;__codelineno-11-23&#34; href=&#34;#__codelineno-11-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-24&#34;&gt;&lt;a id=&#34;__codelineno-11-24&#34; name=&#34;__codelineno-11-24&#34; href=&#34;#__codelineno-11-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-25&#34;&gt;&lt;a id=&#34;__codelineno-11-25&#34; name=&#34;__codelineno-11-25&#34; href=&#34;#__codelineno-11-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-26&#34;&gt;&lt;a id=&#34;__codelineno-11-26&#34; name=&#34;__codelineno-11-26&#34; href=&#34;#__codelineno-11-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;XComponent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-27&#34;&gt;&lt;a id=&#34;__codelineno-11-27&#34; name=&#34;__codelineno-11-27&#34; href=&#34;#__codelineno-11-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;XComponentType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SURFACE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-28&#34;&gt;&lt;a id=&#34;__codelineno-11-28&#34; name=&#34;__codelineno-11-28&#34; href=&#34;#__codelineno-11-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xComponentController&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-29&#34;&gt;&lt;a id=&#34;__codelineno-11-29&#34; name=&#34;__codelineno-11-29&#34; href=&#34;#__codelineno-11-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-30&#34;&gt;&lt;a id=&#34;__codelineno-11-30&#34; name=&#34;__codelineno-11-30&#34; href=&#34;#__codelineno-11-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-31&#34;&gt;&lt;a id=&#34;__codelineno-11-31&#34; name=&#34;__codelineno-11-31&#34; href=&#34;#__codelineno-11-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;native 部分需要实现至少两个函数：createSurface 和 resizeSurface。其中主要的工作在 CreateSurface 中完成，ResizeSurface 会在窗口大小变化的时候被调用。&lt;/p&gt;&lt;p&gt;CreateSurface 要做的事情：&lt;/p&gt;&lt;p&gt;读取 surface id：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-12-1&#34;&gt;&lt;a id=&#34;__codelineno-12-1&#34; name=&#34;__codelineno-12-1&#34; href=&#34;#__codelineno-12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-2&#34;&gt;&lt;a id=&#34;__codelineno-12-2&#34; name=&#34;__codelineno-12-2&#34; href=&#34;#__codelineno-12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;napi_value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-3&#34;&gt;&lt;a id=&#34;__codelineno-12-3&#34; name=&#34;__codelineno-12-3&#34; href=&#34;#__codelineno-12-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;napi_get_cb_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-4&#34;&gt;&lt;a id=&#34;__codelineno-12-4&#34; name=&#34;__codelineno-12-4&#34; href=&#34;#__codelineno-12-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-5&#34;&gt;&lt;a id=&#34;__codelineno-12-5&#34; name=&#34;__codelineno-12-5&#34; href=&#34;#__codelineno-12-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;surface_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-6&#34;&gt;&lt;a id=&#34;__codelineno-12-6&#34; name=&#34;__codelineno-12-6&#34; href=&#34;#__codelineno-12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lossless&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-7&#34;&gt;&lt;a id=&#34;__codelineno-12-7&#34; name=&#34;__codelineno-12-7&#34; href=&#34;#__codelineno-12-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;napi_status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;napi_get_value_bigint_int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;surface_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lossless&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-8&#34;&gt;&lt;a id=&#34;__codelineno-12-8&#34; name=&#34;__codelineno-12-8&#34; href=&#34;#__codelineno-12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;napi_ok&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建 OHNativeWindow：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-13-1&#34;&gt;&lt;a id=&#34;__codelineno-13-1&#34; name=&#34;__codelineno-13-1&#34; href=&#34;#__codelineno-13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;OHNativeWindow&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;native_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-2&#34;&gt;&lt;a id=&#34;__codelineno-13-2&#34; name=&#34;__codelineno-13-2&#34; href=&#34;#__codelineno-13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;OH_NativeWindow_CreateNativeWindowFromSurfaceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;surface_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;native_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-3&#34;&gt;&lt;a id=&#34;__codelineno-13-3&#34; name=&#34;__codelineno-13-3&#34; href=&#34;#__codelineno-13-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;native_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建 EGLDisplay：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-14-1&#34;&gt;&lt;a id=&#34;__codelineno-14-1&#34; name=&#34;__codelineno-14-1&#34; href=&#34;#__codelineno-14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLNativeWindowType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_window&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGLNativeWindowType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;native_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-2&#34;&gt;&lt;a id=&#34;__codelineno-14-2&#34; name=&#34;__codelineno-14-2&#34; href=&#34;#__codelineno-14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLDisplay&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eglGetDisplay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_DEFAULT_DISPLAY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-3&#34;&gt;&lt;a id=&#34;__codelineno-14-3&#34; name=&#34;__codelineno-14-3&#34; href=&#34;#__codelineno-14-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_NO_DISPLAY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;初始化 EGL：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-15-1&#34;&gt;&lt;a id=&#34;__codelineno-15-1&#34; name=&#34;__codelineno-15-1&#34; href=&#34;#__codelineno-15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;major_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-2&#34;&gt;&lt;a id=&#34;__codelineno-15-2&#34; name=&#34;__codelineno-15-2&#34; href=&#34;#__codelineno-15-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minor_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-3&#34;&gt;&lt;a id=&#34;__codelineno-15-3&#34; name=&#34;__codelineno-15-3&#34; href=&#34;#__codelineno-15-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLBoolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eglInitialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;major_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minor_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-4&#34;&gt;&lt;a id=&#34;__codelineno-15-4&#34; name=&#34;__codelineno-15-4&#34; href=&#34;#__codelineno-15-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;选择 EGL 配置：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-16-1&#34;&gt;&lt;a id=&#34;__codelineno-16-1&#34; name=&#34;__codelineno-16-1&#34; href=&#34;#__codelineno-16-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGLint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attrib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_SURFACE_TYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-2&#34;&gt;&lt;a id=&#34;__codelineno-16-2&#34; name=&#34;__codelineno-16-2&#34; href=&#34;#__codelineno-16-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_WINDOW_BIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-3&#34;&gt;&lt;a id=&#34;__codelineno-16-3&#34; name=&#34;__codelineno-16-3&#34; href=&#34;#__codelineno-16-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_RENDERABLE_TYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-4&#34;&gt;&lt;a id=&#34;__codelineno-16-4&#34; name=&#34;__codelineno-16-4&#34; href=&#34;#__codelineno-16-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_OPENGL_ES2_BIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-5&#34;&gt;&lt;a id=&#34;__codelineno-16-5&#34; name=&#34;__codelineno-16-5&#34; href=&#34;#__codelineno-16-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_RED_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-6&#34;&gt;&lt;a id=&#34;__codelineno-16-6&#34; name=&#34;__codelineno-16-6&#34; href=&#34;#__codelineno-16-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-7&#34;&gt;&lt;a id=&#34;__codelineno-16-7&#34; name=&#34;__codelineno-16-7&#34; href=&#34;#__codelineno-16-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_GREEN_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-8&#34;&gt;&lt;a id=&#34;__codelineno-16-8&#34; name=&#34;__codelineno-16-8&#34; href=&#34;#__codelineno-16-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-9&#34;&gt;&lt;a id=&#34;__codelineno-16-9&#34; name=&#34;__codelineno-16-9&#34; href=&#34;#__codelineno-16-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_BLUE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-10&#34;&gt;&lt;a id=&#34;__codelineno-16-10&#34; name=&#34;__codelineno-16-10&#34; href=&#34;#__codelineno-16-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-11&#34;&gt;&lt;a id=&#34;__codelineno-16-11&#34; name=&#34;__codelineno-16-11&#34; href=&#34;#__codelineno-16-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_ALPHA_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-12&#34;&gt;&lt;a id=&#34;__codelineno-16-12&#34; name=&#34;__codelineno-16-12&#34; href=&#34;#__codelineno-16-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-13&#34;&gt;&lt;a id=&#34;__codelineno-16-13&#34; name=&#34;__codelineno-16-13&#34; href=&#34;#__codelineno-16-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_DEPTH_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-14&#34;&gt;&lt;a id=&#34;__codelineno-16-14&#34; name=&#34;__codelineno-16-14&#34; href=&#34;#__codelineno-16-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-15&#34;&gt;&lt;a id=&#34;__codelineno-16-15&#34; name=&#34;__codelineno-16-15&#34; href=&#34;#__codelineno-16-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_STENCIL_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-16&#34;&gt;&lt;a id=&#34;__codelineno-16-16&#34; name=&#34;__codelineno-16-16&#34; href=&#34;#__codelineno-16-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-17&#34;&gt;&lt;a id=&#34;__codelineno-16-17&#34; name=&#34;__codelineno-16-17&#34; href=&#34;#__codelineno-16-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_SAMPLE_BUFFERS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-18&#34;&gt;&lt;a id=&#34;__codelineno-16-18&#34; name=&#34;__codelineno-16-18&#34; href=&#34;#__codelineno-16-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-19&#34;&gt;&lt;a id=&#34;__codelineno-16-19&#34; name=&#34;__codelineno-16-19&#34; href=&#34;#__codelineno-16-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_SAMPLES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-20&#34;&gt;&lt;a id=&#34;__codelineno-16-20&#34; name=&#34;__codelineno-16-20&#34; href=&#34;#__codelineno-16-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Request 4 samples for multisampling&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-21&#34;&gt;&lt;a id=&#34;__codelineno-16-21&#34; name=&#34;__codelineno-16-21&#34; href=&#34;#__codelineno-16-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_NONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-22&#34;&gt;&lt;a id=&#34;__codelineno-16-22&#34; name=&#34;__codelineno-16-22&#34; href=&#34;#__codelineno-16-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-23&#34;&gt;&lt;a id=&#34;__codelineno-16-23&#34; name=&#34;__codelineno-16-23&#34; href=&#34;#__codelineno-16-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGLint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_config_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-24&#34;&gt;&lt;a id=&#34;__codelineno-16-24&#34; name=&#34;__codelineno-16-24&#34; href=&#34;#__codelineno-16-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-25&#34;&gt;&lt;a id=&#34;__codelineno-16-25&#34; name=&#34;__codelineno-16-25&#34; href=&#34;#__codelineno-16-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLConfig&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-26&#34;&gt;&lt;a id=&#34;__codelineno-16-26&#34; name=&#34;__codelineno-16-26&#34; href=&#34;#__codelineno-16-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;egl_res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eglChooseConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attrib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_config_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-27&#34;&gt;&lt;a id=&#34;__codelineno-16-27&#34; name=&#34;__codelineno-16-27&#34; href=&#34;#__codelineno-16-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建 EGLSurface：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-17-1&#34;&gt;&lt;a id=&#34;__codelineno-17-1&#34; name=&#34;__codelineno-17-1&#34; href=&#34;#__codelineno-17-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLSurface&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_surface&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eglCreateWindowSurface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建 EGLContext：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-18-1&#34;&gt;&lt;a id=&#34;__codelineno-18-1&#34; name=&#34;__codelineno-18-1&#34; href=&#34;#__codelineno-18-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context_attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_CONTEXT_CLIENT_VERSION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_NONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-2&#34;&gt;&lt;a id=&#34;__codelineno-18-2&#34; name=&#34;__codelineno-18-2&#34; href=&#34;#__codelineno-18-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;EGLContext&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_context&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eglCreateContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EGL_NO_CONTEXT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context_attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在当前线程启用 EGL：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-19-1&#34;&gt;&lt;a id=&#34;__codelineno-19-1&#34; name=&#34;__codelineno-19-1&#34; href=&#34;#__codelineno-19-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;eglMakeCurrent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_surface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_surface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这之后就可以用 OpenGL 的各种函数了。OpenGL 绘制完成以后，更新到窗口上：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-20-1&#34;&gt;&lt;a id=&#34;__codelineno-20-1&#34; name=&#34;__codelineno-20-1&#34; href=&#34;#__codelineno-20-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;eglSwapBuffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;egl_surface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 ResizeSurface 中，主要是更新 glViewport，让它按照新的 surface 大小来绘制。&lt;/p&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;a class=&#34;headerlink&#34; href=&#34;#参考&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://learnopengl.com/In-Practice/Text-Rendering&#34;&gt;Text Rendering - Learn OpenGL&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/servo/webrender/blob/main/webrender/doc/text-rendering.md&#34;&gt;Text Rendering - WebRender&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/hardware/2025/06/10/terminal-emulator-text-rendering/</link> <pubDate>Tue, 10 Jun 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/06/10/terminal-emulator-text-rendering/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/terminal-emulator-text-rendering.png" type="image/png" length="65340" /> </item> <item> <title>鸿蒙电脑 MateBook Pro 开箱体验</title> <category>arm64</category> <category>hardware</category> <category>harmonyos</category> <category>huawei</category> <category>matebook</category> <category>matebookpro</category> <description>&lt;h1 id=&#34;鸿蒙电脑-matebook-pro-开箱体验&#34;&gt;鸿蒙电脑 MateBook Pro 开箱体验&lt;a class=&#34;headerlink&#34; href=&#34;#鸿蒙电脑-matebook-pro-开箱体验&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;购买&#34;&gt;购买&lt;a class=&#34;headerlink&#34; href=&#34;#购买&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;2025.6.6 号正式开卖，当华为线上商城显示没货的时候，果断去线下门店买了一台回来。购买的是 32GB 内存，1TB SSD 存储，加柔光屏的版本，型号 HAD-W32，原价 9999，国补后 7999。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;开箱&#34;&gt;开箱&lt;a class=&#34;headerlink&#34; href=&#34;#开箱&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;由于用了国补，需要当面激活，就在店里直接激活了，所以没有体验到鸿蒙系统的扫码激活功能，有点可惜。激活前的第一次开机需要插电，直接按电源键是没有反应的。激活过程也很简单，联网，创建用户，登录华为账号，输入指纹，就可以了。包装盒里还有 140W 单口 Type-C 电源适配器，体积挺小的。此外附赠了一条 Type-C to Type-C 的线，还有一个 Type-C 有线耳机，外加一个 Type-A 母口加 Type-C 公口的线，可以用来接 Type-A 公口的外设。此外还有快速指南和一个超纤抛光布。店家还贴心地提供了一个虚拟机的安装教程。&lt;/p&gt;&lt;p&gt;外形上，就是 MateBook X Pro 加了一个 HarmonyOS 的标识，上手很轻，不愧是不到一公斤的笔记本，对于习惯用 MacBookAir 轻薄本的我来说，是很大的一个亮点。不像 MacBookAir，这台鸿蒙电脑有风扇，有点小小的不习惯，但还算安静。&lt;/p&gt;&lt;p&gt;规格如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;970g 重量&lt;/li&gt;&lt;li&gt;14.2 寸显示器&lt;/li&gt;&lt;li&gt;3120x2080 分辨率，120 Hz 刷新率&lt;/li&gt;&lt;li&gt;1.8mm 键程键盘&lt;/li&gt;&lt;li&gt;70 Wh 电池&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;系统体验&#34;&gt;系统体验&lt;a class=&#34;headerlink&#34; href=&#34;#系统体验&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;预装的版本是 HarmonyOS 5.0.1.305，有更新 5.0.1.310 SP9（SP9C00E301R9P2patch02，内核 1.9.5 2025-05-26），首先更新了一下系统。这是我的第一台支持触屏的笔记本，所以用起来还有点新奇。这个柔光屏用起来触感不错，和之前买的柔光屏 MatePad 的触感类似。&lt;/p&gt;&lt;p&gt;底部状态栏的颜色会随着情况变化，比如在桌面的时候，默认壁纸是黑色的，状态栏也就是黑色的。如果打开了设置，设置是白色的，状态栏也就是白色的。之后可以多测试一下它具体的变色逻辑。&lt;/p&gt;&lt;p&gt;系统里预装了 WPS Office，迅雷，亿图，中望 CAD，剪映，好压，抖音等，面向的客户群体很显然了。虽然预装，但都可以卸载。&lt;/p&gt;&lt;p&gt;内置了控制手机屏幕的功能，有略微的不跟手，但由于电脑本身也是触屏，所以体验还是和手机很接近的。下方是经典的三个按钮。这个协同，可以电脑和手机同时操作，还是挺好的，不会说电脑控制了手机，手机就不能用的情况。手机界面左上角会提示协同中。键鼠共享功能不错，可以把手机当屏幕，然后用电脑的键盘和触摸板控制，外接的鼠标也可以。&lt;/p&gt;&lt;p&gt;触摸板手势方面，可以在设置里修改，比如菜单弹出改成双指点按或轻点。触摸板的手感比苹果还是有一定的差距，但是屏幕触摸弥补了这个问题。没有找到三指拖拽的手势，它用的是类似 Windows 的轻点两次，第二次不抬起的做法。&lt;/p&gt;&lt;p&gt;屏幕分辨率 2080 x 3120，14.2 英寸。&lt;/p&gt;&lt;p&gt;2025-06-17 推送了 5.0.1.310 SP9，SP9C00E301R9P2patch05，内核 1.9.5 2025-05-26。&lt;/p&gt;&lt;p&gt;2025-06-24 推送了 5.0.1.315 SP12，SP12C00E302R9P3patch01，内核 1.9.5 2025-06-20。&lt;/p&gt;&lt;p&gt;2025-06-30 推送了 5.0.1.315 SP17，SP17C00E302R9P3，内核 1.9.5 2025-06-24。&lt;/p&gt;&lt;h2 id=&#34;应用体验&#34;&gt;应用体验&lt;a class=&#34;headerlink&#34; href=&#34;#应用体验&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;目前（2025 年 6 月 6 日）应用商城有这些软件：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Bilibili&lt;/li&gt;&lt;li&gt;飞书&lt;/li&gt;&lt;li&gt;钉钉&lt;/li&gt;&lt;li&gt;腾讯会议&lt;/li&gt;&lt;li&gt;QQ（在应用尝鲜内）&lt;/li&gt;&lt;li&gt;CodeArts IDE（在应用尝鲜内，需要开发者模式）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;暂时还没有微信，可以通过操控手机来发微信，但是在消息栏里按回车是换行，没找到发送按钮对应的电脑按键，需要手动操。但是居然有企业微信。&lt;/p&gt;&lt;p&gt;UPDATE: 2025-06-26 微信正式上架。&lt;/p&gt;&lt;p&gt;UPDATE: 2025-06-13 收到了微信的测试短信，可以体验了，版本是 4.0.1.30。2025-06-14 推送了 4.0.1.31 测试版本。2025-06-19 推送了 4.0.1.32 版本。&lt;/p&gt;&lt;p&gt;支持应用接续，在手机上播放的 B 站视频，可以在电脑上接续继续看。&lt;/p&gt;&lt;p&gt;期待一个功能，当电脑上出现需要扫的二维码的时候，可以通过协同功能，不用操作手机，让手机直接扫电脑的屏幕。不过反过来，如果电脑上有需要输入手机短信验证码的场景，就已经很方便了。&lt;/p&gt;&lt;p&gt;试了一下腾讯会议，声音，视频，共享屏幕都是正常工作的。但是共享的屏幕只有笔记本自己的屏幕，还不能选取共享哪个屏幕的内容，也不能选取共享哪个窗口。&lt;/p&gt;&lt;h2 id=&#34;开发者模式&#34;&gt;开发者模式&lt;a class=&#34;headerlink&#34; href=&#34;#开发者模式&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;开发者模式的打开方式和手机上一样，在设置里狂点软件版本。自带了一个 Terminal App，会提示你如何打开开发者模式。&lt;/p&gt;&lt;p&gt;打开以后就可以访问终端了。shell 是用的 toybox。df 如下：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;df&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-h&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;Filesystem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Size&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Used&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Avail&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Use%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Mounted&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;on&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;tmpfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;16G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;52K&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;16G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;tmpfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;16G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;16G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/storage/hmdfs&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;/dev/block/dm-4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;.7M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;.7M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/cust&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;/dev/block/dm-6&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/preload&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;/dev/block/dm-0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.0G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.0G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/system/variant&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;/dev/block/dm-5&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;.0K&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;.0K&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/version&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;/dev/block/platform/b0000000.hi_pcie/by-name/userdata&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;928G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;59G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;869G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/data/service/hnp&lt;/span&gt;&lt;span id=&#34;__span-0-10&#34;&gt;&lt;a id=&#34;__codelineno-0-10&#34; name=&#34;__codelineno-0-10&#34; href=&#34;#__codelineno-0-10&#34;&gt;&lt;/a&gt;tmpfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;16G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;16G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/module_update&lt;/span&gt;&lt;span id=&#34;__span-0-11&#34;&gt;&lt;a id=&#34;__codelineno-0-11&#34; name=&#34;__codelineno-0-11&#34; href=&#34;#__codelineno-0-11&#34;&gt;&lt;/a&gt;/dev/block/dm-2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;.3G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;88&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/sys_prod&lt;/span&gt;&lt;span id=&#34;__span-0-12&#34;&gt;&lt;a id=&#34;__codelineno-0-12&#34; name=&#34;__codelineno-0-12&#34; href=&#34;#__codelineno-0-12&#34;&gt;&lt;/a&gt;devfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;15G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;104M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;15G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev&lt;/span&gt;&lt;span id=&#34;__span-0-13&#34;&gt;&lt;a id=&#34;__codelineno-0-13&#34; name=&#34;__codelineno-0-13&#34; href=&#34;#__codelineno-0-13&#34;&gt;&lt;/a&gt;/data/service/el2/100/hmdfs/non_account&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;928G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;59G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;869G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/mnt/hmdfs/100/non_account&lt;/span&gt;&lt;span id=&#34;__span-0-14&#34;&gt;&lt;a id=&#34;__codelineno-0-14&#34; name=&#34;__codelineno-0-14&#34; href=&#34;#__codelineno-0-14&#34;&gt;&lt;/a&gt;/dev/block/loop0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;114M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;112M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/module_update/ArkWebCore&lt;/span&gt;&lt;span id=&#34;__span-0-15&#34;&gt;&lt;a id=&#34;__codelineno-0-15&#34; name=&#34;__codelineno-0-15&#34; href=&#34;#__codelineno-0-15&#34;&gt;&lt;/a&gt;tmpfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.0G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;608K&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.9G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/shm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看 &lt;a href=&#34;../../../../huawei-matebook-pro-cpuinfo.txt&#34;&gt;&lt;code&gt;/proc/cpuinfo&lt;/code&gt;&lt;/a&gt;。四个 0xd42（2.0 GHz），八个 0xd43（2.0 GHz），八个 0xd03（2.3 GHz），共 20 个逻辑核。从 part id 来看，0xd03 和 0xd42 对应麒麟 9010 的大核和中核，但 0xd43 是新的 part id。&lt;/p&gt;&lt;p&gt;使用 &lt;a href=&#34;https://github.com/jiegec/SPECCPU2017Harmony&#34;&gt;https://github.com/jiegec/SPECCPU2017Harmony&lt;/a&gt; 性能测试：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;X90 P-Core 2.3 GHz 0xd03 Full: INT 4.87 FP 7.42&lt;/li&gt;&lt;li&gt;X90 E-Core 2.0 GHz 0xd43 Full: INT 4.28 FP 6.52&lt;/li&gt;&lt;li&gt;X90 LPE-Core 2.0 GHz 0xd42 Full: INT 3.25 FP TODO&lt;/li&gt;&lt;li&gt;9010 P-Core 2.3 GHz 0xd03 Best: INT 4.18 FP 6.22&lt;/li&gt;&lt;li&gt;9010 P-Core 2.3 GHz 0xd03 Full: INT 3.96 FP 5.86&lt;/li&gt;&lt;li&gt;9010 E-Core 2.2 GHz 0xd42 Full: INT 3.21 FP 4.72&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;详细数据： &lt;a href=&#34;https://github.com/jiegec/SPECCPU2017Harmony/tree/master/results&#34;&gt;https://github.com/jiegec/SPECCPU2017Harmony/tree/master/results&lt;/a&gt;。Best 代表每一项单独跑，散热条件好，Full 代表顺着跑一遍，散热条件差。由于编译器和编译选项不同，不能和在其他平台上跑的 SPEC CPU 2017 成绩直接对比，仅供参考。&lt;/p&gt;&lt;p&gt;大概性能排序：X90 P-Core &amp;gt; X90 E-Core &amp;gt; 9010 P-Core &amp;gt; X90 LPE-Core &amp;gt; 9010 E-Core &amp;gt; 9010 LPE-Core。&lt;/p&gt;&lt;p&gt;即使是同样的 2.3 GHz 0xd03 的核，X90 比 9010 快上 20%：可能是散热问题，或者缓存大小和内存带宽的问题，或许连微架构都是不一样的，这些都需要后续进一步测试。而 X90 的中核也比 9010 的大核要快。&lt;/p&gt;&lt;h3 id=&#34;codearts-ide&#34;&gt;CodeArts IDE&lt;a class=&#34;headerlink&#34; href=&#34;#codearts-ide&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;试了一下从应用商城安装的 CodeArts IDE，显示支持 Java 和 Python 开发，UI 上有点像 JetBrains，但应该是基于 VSCode 做的二次开发。实际测了一下，用它创建 Python 项目后，可以在 CodeArts IDE 的命令行里用 Python3：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;/storage/Users/currentUser/IDEProjects/pythonProject&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;main.py&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;Hello&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;World!&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;which&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python3&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;/storage/Users/currentUser/IDEProjects/pythonProject/venv/bin/python3o&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/data/app/bin/python&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--version&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;Python&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.12.5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的 &lt;code&gt;/storage/Users/currentUser/&lt;/code&gt; 就是 HOME 目录，对应文件管理器的个人目录。&lt;/p&gt;&lt;p&gt;看了看 &lt;code&gt;/data/app/bin&lt;/code&gt; 目录，下面有 git，python，unzip, vi，rg，java（bisheng jdk 8/17），ssh，electron（用来跑 LSP！）等等。&lt;/p&gt;&lt;p&gt;试了试 pip，也是工作的：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;venv&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-m&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;requests&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;venv&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python3&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;Python&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.12.5&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;main,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Aug&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2024&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;01&lt;/span&gt;:18:17&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Clang&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;.0.4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;llvm-project&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;81cdec3cd117b1e6e3a9f1ebc4695d790c978463&lt;span class=&#34;o&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;on&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;linux&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;Type&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;help&amp;quot;&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;credits&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;or&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;more&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;information.&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;import&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;requests&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;requests.get&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;https://github.com&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.status_code&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;需要 native 编译的库，比如 numpy 还不行，会提示找不到 make。&lt;/p&gt;&lt;p&gt;终端里的 ssh 是可以用的，实测 ssh 到远程的 linux 上是没问题的。&lt;/p&gt;&lt;p&gt;终端里的括号补全有一些问题，等待修复。CodeArts IDE 的 Python 单步调试功能也是工作的。&lt;/p&gt;&lt;p&gt;似乎没有安装 Remote 开发的插件，也没有安装插件的菜单。&lt;/p&gt;&lt;p&gt;既然可以跑 shell，意味着可以 execve 了，意味着可以做 termux 的类似物了。期待鸿蒙 5 上早日有 Termux 用，直接跑 Linux 发行版。实际测了一下，Popen 确实是工作的。&lt;/p&gt;&lt;p&gt;UPDATE: 开了个坑：&lt;a href=&#34;https://github.com/jiegec/Termony&#34;&gt;https://github.com/jiegec/Termony&lt;/a&gt;，目前已经能跑很多命令了，包括在鸿蒙电脑上编译 C/C++ 代码。&lt;/p&gt;&lt;p&gt;试了一下 HOME 目录，发现它里面不能有可执行的文件，所以可能还是得打包到一个 App 里面，通过 &lt;code&gt;/data/app/bin&lt;/code&gt; 类似的路径来访问。&lt;/p&gt;&lt;p&gt;在 CodeArts IDE 里，可以访问 /data/storage/el1/bundle 目录，里面有一个 pc_entry.hap 文件，可以通过 &lt;code&gt;cat /data/storage/el1/bundle/pc_entry.hap | ssh hostname &#34;cat - &amp;gt; pc_entry.hap&#34;&lt;/code&gt; 拷贝到其他机器上。这个文件有 1.9GB，可以看到在 &lt;code&gt;/data/app&lt;/code&gt; 下面的各种文件，其实是来自于这个 &lt;code&gt;pc_entry.hap&lt;/code&gt; 的 &lt;code&gt;hnp/arm64-v8a&lt;/code&gt; 下面的一系列文件，例如 &lt;code&gt;git.hnp&lt;/code&gt; 就是一个 zip 压缩包，里面就是 &lt;code&gt;/data/app/git.org/git_1.2&lt;/code&gt; 目录的内容，这个东西叫做 &lt;code&gt;应用包内 Native 包（.hnp）&lt;/code&gt;。这些文件在 module.json 里声明，对应 &lt;a href=&#34;https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/module-configuration-file#hnppackages%E6%A0%87%E7%AD%BE&#34;&gt;hnpPackages 标签&lt;/a&gt;：&lt;/p&gt;&lt;div class=&#34;language-json highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;module&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;hnpPackages&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;electron.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-9&#34;&gt;&lt;a id=&#34;__codelineno-3-9&#34; name=&#34;__codelineno-3-9&#34; href=&#34;#__codelineno-3-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;huaweicloud-smartassist-java-ls.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-10&#34;&gt;&lt;a id=&#34;__codelineno-3-10&#34; name=&#34;__codelineno-3-10&#34; href=&#34;#__codelineno-3-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-11&#34;&gt;&lt;a id=&#34;__codelineno-3-11&#34; name=&#34;__codelineno-3-11&#34; href=&#34;#__codelineno-3-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-12&#34;&gt;&lt;a id=&#34;__codelineno-3-12&#34; name=&#34;__codelineno-3-12&#34; href=&#34;#__codelineno-3-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-13&#34;&gt;&lt;a id=&#34;__codelineno-3-13&#34; name=&#34;__codelineno-3-13&#34; href=&#34;#__codelineno-3-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;bishengjdk8.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-14&#34;&gt;&lt;a id=&#34;__codelineno-3-14&#34; name=&#34;__codelineno-3-14&#34; href=&#34;#__codelineno-3-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-15&#34;&gt;&lt;a id=&#34;__codelineno-3-15&#34; name=&#34;__codelineno-3-15&#34; href=&#34;#__codelineno-3-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-16&#34;&gt;&lt;a id=&#34;__codelineno-3-16&#34; name=&#34;__codelineno-3-16&#34; href=&#34;#__codelineno-3-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-17&#34;&gt;&lt;a id=&#34;__codelineno-3-17&#34; name=&#34;__codelineno-3-17&#34; href=&#34;#__codelineno-3-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;rg.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-18&#34;&gt;&lt;a id=&#34;__codelineno-3-18&#34; name=&#34;__codelineno-3-18&#34; href=&#34;#__codelineno-3-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-19&#34;&gt;&lt;a id=&#34;__codelineno-3-19&#34; name=&#34;__codelineno-3-19&#34; href=&#34;#__codelineno-3-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-20&#34;&gt;&lt;a id=&#34;__codelineno-3-20&#34; name=&#34;__codelineno-3-20&#34; href=&#34;#__codelineno-3-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-21&#34;&gt;&lt;a id=&#34;__codelineno-3-21&#34; name=&#34;__codelineno-3-21&#34; href=&#34;#__codelineno-3-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;unzip.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-22&#34;&gt;&lt;a id=&#34;__codelineno-3-22&#34; name=&#34;__codelineno-3-22&#34; href=&#34;#__codelineno-3-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-23&#34;&gt;&lt;a id=&#34;__codelineno-3-23&#34; name=&#34;__codelineno-3-23&#34; href=&#34;#__codelineno-3-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-24&#34;&gt;&lt;a id=&#34;__codelineno-3-24&#34; name=&#34;__codelineno-3-24&#34; href=&#34;#__codelineno-3-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-25&#34;&gt;&lt;a id=&#34;__codelineno-3-25&#34; name=&#34;__codelineno-3-25&#34; href=&#34;#__codelineno-3-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;git.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-26&#34;&gt;&lt;a id=&#34;__codelineno-3-26&#34; name=&#34;__codelineno-3-26&#34; href=&#34;#__codelineno-3-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-27&#34;&gt;&lt;a id=&#34;__codelineno-3-27&#34; name=&#34;__codelineno-3-27&#34; href=&#34;#__codelineno-3-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-28&#34;&gt;&lt;a id=&#34;__codelineno-3-28&#34; name=&#34;__codelineno-3-28&#34; href=&#34;#__codelineno-3-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-29&#34;&gt;&lt;a id=&#34;__codelineno-3-29&#34; name=&#34;__codelineno-3-29&#34; href=&#34;#__codelineno-3-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;bishengjdk17.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-30&#34;&gt;&lt;a id=&#34;__codelineno-3-30&#34; name=&#34;__codelineno-3-30&#34; href=&#34;#__codelineno-3-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-31&#34;&gt;&lt;a id=&#34;__codelineno-3-31&#34; name=&#34;__codelineno-3-31&#34; href=&#34;#__codelineno-3-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-32&#34;&gt;&lt;a id=&#34;__codelineno-3-32&#34; name=&#34;__codelineno-3-32&#34; href=&#34;#__codelineno-3-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-33&#34;&gt;&lt;a id=&#34;__codelineno-3-33&#34; name=&#34;__codelineno-3-33&#34; href=&#34;#__codelineno-3-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;package&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;python.hnp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-34&#34;&gt;&lt;a id=&#34;__codelineno-3-34&#34; name=&#34;__codelineno-3-34&#34; href=&#34;#__codelineno-3-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-35&#34;&gt;&lt;a id=&#34;__codelineno-3-35&#34; name=&#34;__codelineno-3-35&#34; href=&#34;#__codelineno-3-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-36&#34;&gt;&lt;a id=&#34;__codelineno-3-36&#34; name=&#34;__codelineno-3-36&#34; href=&#34;#__codelineno-3-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-37&#34;&gt;&lt;a id=&#34;__codelineno-3-37&#34; name=&#34;__codelineno-3-37&#34; href=&#34;#__codelineno-3-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;pc_entry&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-38&#34;&gt;&lt;a id=&#34;__codelineno-3-38&#34; name=&#34;__codelineno-3-38&#34; href=&#34;#__codelineno-3-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;packageName&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;pc_entry&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-39&#34;&gt;&lt;a id=&#34;__codelineno-3-39&#34; name=&#34;__codelineno-3-39&#34; href=&#34;#__codelineno-3-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-40&#34;&gt;&lt;a id=&#34;__codelineno-3-40&#34; name=&#34;__codelineno-3-40&#34; href=&#34;#__codelineno-3-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解压 &lt;code&gt;git.hnp&lt;/code&gt; 后，里面的文件会被复制到 &lt;code&gt;/data/app/git.org/git_1.2&lt;/code&gt; 目录下，然后有一个 &lt;code&gt;hnp.json&lt;/code&gt; 指定了在 &lt;code&gt;/data/app/bin&lt;/code&gt; 创建哪些文件的软连接，比如：&lt;/p&gt;&lt;div class=&#34;language-json highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;install&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;links&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-4&#34;&gt;&lt;a id=&#34;__codelineno-4-4&#34; name=&#34;__codelineno-4-4&#34; href=&#34;#__codelineno-4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-5&#34;&gt;&lt;a id=&#34;__codelineno-4-5&#34; name=&#34;__codelineno-4-5&#34; href=&#34;#__codelineno-4-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;bin/expr&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-6&#34;&gt;&lt;a id=&#34;__codelineno-4-6&#34; name=&#34;__codelineno-4-6&#34; href=&#34;#__codelineno-4-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;target&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;expr&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-7&#34;&gt;&lt;a id=&#34;__codelineno-4-7&#34; name=&#34;__codelineno-4-7&#34; href=&#34;#__codelineno-4-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-8&#34;&gt;&lt;a id=&#34;__codelineno-4-8&#34; name=&#34;__codelineno-4-8&#34; href=&#34;#__codelineno-4-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-9&#34;&gt;&lt;a id=&#34;__codelineno-4-9&#34; name=&#34;__codelineno-4-9&#34; href=&#34;#__codelineno-4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;bin/git&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-10&#34;&gt;&lt;a id=&#34;__codelineno-4-10&#34; name=&#34;__codelineno-4-10&#34; href=&#34;#__codelineno-4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;target&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;git&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-11&#34;&gt;&lt;a id=&#34;__codelineno-4-11&#34; name=&#34;__codelineno-4-11&#34; href=&#34;#__codelineno-4-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-12&#34;&gt;&lt;a id=&#34;__codelineno-4-12&#34; name=&#34;__codelineno-4-12&#34; href=&#34;#__codelineno-4-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-13&#34;&gt;&lt;a id=&#34;__codelineno-4-13&#34; name=&#34;__codelineno-4-13&#34; href=&#34;#__codelineno-4-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-14&#34;&gt;&lt;a id=&#34;__codelineno-4-14&#34; name=&#34;__codelineno-4-14&#34; href=&#34;#__codelineno-4-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;git&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-15&#34;&gt;&lt;a id=&#34;__codelineno-4-15&#34; name=&#34;__codelineno-4-15&#34; href=&#34;#__codelineno-4-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;hnp-config&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-16&#34;&gt;&lt;a id=&#34;__codelineno-4-16&#34; name=&#34;__codelineno-4-16&#34; href=&#34;#__codelineno-4-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;1.2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-17&#34;&gt;&lt;a id=&#34;__codelineno-4-17&#34; name=&#34;__codelineno-4-17&#34; href=&#34;#__codelineno-4-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 HarmonyOS SDK 里，有一个 hnpcli，可以用来生成 .hnp 文件。&lt;/p&gt;&lt;p&gt;除此之外，就是 VSCode 加各种插件了。&lt;/p&gt;&lt;p&gt;鸿蒙电脑上，可以访问各个 App 的内部目录了，无论是自带的文件浏览器，还是通过 DevEco Studio。这给调试带来了很多便利。&lt;/p&gt;&lt;p&gt;UPDATE: 2025-06-21 推送了 1.0.3 版本。实测在 shell 里面输入括号，不会出现括号补全跑到错误的位置的问题了。&lt;/p&gt;&lt;h2 id=&#34;虚拟机&#34;&gt;虚拟机&lt;a class=&#34;headerlink&#34; href=&#34;#虚拟机&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;目前应用商城有两家虚拟机：Oseasy 和铠大师。两者都是提示安装 ARM64 版本的 Windows，尝试了一下给它一个 Debian 的安装 ISO，它不认。用的 unattended install，不需要进行什么操作。Oseasy 和铠大师的虚拟机不能同时开，但是可以一边安装完，再去安装另一边的 Windows。&lt;/p&gt;&lt;p&gt;试了试在虚拟机里装 WSL，说没有硬件虚拟化，大概是没有打开嵌套虚拟化的功能。&lt;/p&gt;&lt;p&gt;在 6 核 Oseasy 虚拟机里运行 ARM64 Geekbench 6：&lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12309313&#34;&gt;Single-Core 1436, Multi-Core 5296&lt;/a&gt;。Oseasy 8 核：&lt;a href=&#34;https://browser.geekbench.com/v6/cpu/12309427&#34;&gt;Single-Core 1462, Multi-Core 7043&lt;/a&gt;。算上剩下的 12 个逻辑核，考虑虚拟化的开销，多核分数达到网传的 11640 分，感觉是可能的。&lt;/p&gt;&lt;p&gt;Oseasy 虚拟机只允许开到 8 个核心，实测下来，会优先调度到 0xD03 的八个逻辑核中其中四个逻辑核（不同时用一个物理核的两个逻辑核），之后再调度到 0xD43 的八个逻辑核中的四个逻辑核（也不同时用同一个物理核的两个逻辑核）。在 Oseasy 虚拟机里看到的 CPU 信息是 Cortex-A53，没有正确暴露外面的处理器信息，从 cpuinfo 来看，也没有暴露 SVE。&lt;/p&gt;&lt;p&gt;UPDATE: 能跑 Linux 了，见 &lt;a href=&#34;../../10/linux-vm-on-harmonyos-computer/&#34;&gt;在鸿蒙电脑上的虚拟机内启动 Linux&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;外设&#34;&gt;外设&lt;a class=&#34;headerlink&#34; href=&#34;#外设&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;把 Type-C Hub 接到 MateBook Pro 上，显示器，键盘鼠标都正常工作了。&lt;/p&gt;&lt;h2 id=&#34;侧载&#34;&gt;侧载&lt;a class=&#34;headerlink&#34; href=&#34;#侧载&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;打开开发者模式后，在设置里，可以打开 USB 调试：把电脑右边的 USB Type-C 接到另一台电脑上，就可以用 hdc 连接了。&lt;/p&gt;&lt;p&gt;然后给自己的项目加上 2in1 的 device type：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;diff --git a/entry/build-profile.json5 b/entry/build-profile.json5&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;index 38bdcc9..ad6fd45 100644&lt;/span&gt;&lt;span id=&#34;__span-5-3&#34;&gt;&lt;a id=&#34;__codelineno-5-3&#34; name=&#34;__codelineno-5-3&#34; href=&#34;#__codelineno-5-3&#34;&gt;&lt;/a&gt;--- a/entry/build-profile.json5&lt;/span&gt;&lt;span id=&#34;__span-5-4&#34;&gt;&lt;a id=&#34;__codelineno-5-4&#34; name=&#34;__codelineno-5-4&#34; href=&#34;#__codelineno-5-4&#34;&gt;&lt;/a&gt;+++ b/entry/build-profile.json5&lt;/span&gt;&lt;span id=&#34;__span-5-5&#34;&gt;&lt;a id=&#34;__codelineno-5-5&#34; name=&#34;__codelineno-5-5&#34; href=&#34;#__codelineno-5-5&#34;&gt;&lt;/a&gt;@@ -30,7 +30,13 @@&lt;/span&gt;&lt;span id=&#34;__span-5-6&#34;&gt;&lt;a id=&#34;__codelineno-5-6&#34; name=&#34;__codelineno-5-6&#34; href=&#34;#__codelineno-5-6&#34;&gt;&lt;/a&gt; ],&lt;/span&gt;&lt;span id=&#34;__span-5-7&#34;&gt;&lt;a id=&#34;__codelineno-5-7&#34; name=&#34;__codelineno-5-7&#34; href=&#34;#__codelineno-5-7&#34;&gt;&lt;/a&gt; &amp;quot;targets&amp;quot;: [&lt;/span&gt;&lt;span id=&#34;__span-5-8&#34;&gt;&lt;a id=&#34;__codelineno-5-8&#34; name=&#34;__codelineno-5-8&#34; href=&#34;#__codelineno-5-8&#34;&gt;&lt;/a&gt; {&lt;/span&gt;&lt;span id=&#34;__span-5-9&#34;&gt;&lt;a id=&#34;__codelineno-5-9&#34; name=&#34;__codelineno-5-9&#34; href=&#34;#__codelineno-5-9&#34;&gt;&lt;/a&gt;- &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-5-10&#34;&gt;&lt;a id=&#34;__codelineno-5-10&#34; name=&#34;__codelineno-5-10&#34; href=&#34;#__codelineno-5-10&#34;&gt;&lt;/a&gt;+ &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,&lt;/span&gt;&lt;span id=&#34;__span-5-11&#34;&gt;&lt;a id=&#34;__codelineno-5-11&#34; name=&#34;__codelineno-5-11&#34; href=&#34;#__codelineno-5-11&#34;&gt;&lt;/a&gt;+ &amp;quot;config&amp;quot;: {&lt;/span&gt;&lt;span id=&#34;__span-5-12&#34;&gt;&lt;a id=&#34;__codelineno-5-12&#34; name=&#34;__codelineno-5-12&#34; href=&#34;#__codelineno-5-12&#34;&gt;&lt;/a&gt;+ &amp;quot;deviceType&amp;quot;: [&lt;/span&gt;&lt;span id=&#34;__span-5-13&#34;&gt;&lt;a id=&#34;__codelineno-5-13&#34; name=&#34;__codelineno-5-13&#34; href=&#34;#__codelineno-5-13&#34;&gt;&lt;/a&gt;+ &amp;quot;default&amp;quot;,&lt;/span&gt;&lt;span id=&#34;__span-5-14&#34;&gt;&lt;a id=&#34;__codelineno-5-14&#34; name=&#34;__codelineno-5-14&#34; href=&#34;#__codelineno-5-14&#34;&gt;&lt;/a&gt;+ &amp;quot;2in1&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-5-15&#34;&gt;&lt;a id=&#34;__codelineno-5-15&#34; name=&#34;__codelineno-5-15&#34; href=&#34;#__codelineno-5-15&#34;&gt;&lt;/a&gt;+ ]&lt;/span&gt;&lt;span id=&#34;__span-5-16&#34;&gt;&lt;a id=&#34;__codelineno-5-16&#34; name=&#34;__codelineno-5-16&#34; href=&#34;#__codelineno-5-16&#34;&gt;&lt;/a&gt;+ }&lt;/span&gt;&lt;span id=&#34;__span-5-17&#34;&gt;&lt;a id=&#34;__codelineno-5-17&#34; name=&#34;__codelineno-5-17&#34; href=&#34;#__codelineno-5-17&#34;&gt;&lt;/a&gt; },&lt;/span&gt;&lt;span id=&#34;__span-5-18&#34;&gt;&lt;a id=&#34;__codelineno-5-18&#34; name=&#34;__codelineno-5-18&#34; href=&#34;#__codelineno-5-18&#34;&gt;&lt;/a&gt; {&lt;/span&gt;&lt;span id=&#34;__span-5-19&#34;&gt;&lt;a id=&#34;__codelineno-5-19&#34; name=&#34;__codelineno-5-19&#34; href=&#34;#__codelineno-5-19&#34;&gt;&lt;/a&gt; &amp;quot;name&amp;quot;: &amp;quot;ohosTest&amp;quot;,&lt;/span&gt;&lt;span id=&#34;__span-5-20&#34;&gt;&lt;a id=&#34;__codelineno-5-20&#34; name=&#34;__codelineno-5-20&#34; href=&#34;#__codelineno-5-20&#34;&gt;&lt;/a&gt;diff --git a/entry/src/main/module.json5 b/entry/src/main/module.json5&lt;/span&gt;&lt;span id=&#34;__span-5-21&#34;&gt;&lt;a id=&#34;__codelineno-5-21&#34; name=&#34;__codelineno-5-21&#34; href=&#34;#__codelineno-5-21&#34;&gt;&lt;/a&gt;index 7b8532f..76c009c 100644&lt;/span&gt;&lt;span id=&#34;__span-5-22&#34;&gt;&lt;a id=&#34;__codelineno-5-22&#34; name=&#34;__codelineno-5-22&#34; href=&#34;#__codelineno-5-22&#34;&gt;&lt;/a&gt;--- a/entry/src/main/module.json5&lt;/span&gt;&lt;span id=&#34;__span-5-23&#34;&gt;&lt;a id=&#34;__codelineno-5-23&#34; name=&#34;__codelineno-5-23&#34; href=&#34;#__codelineno-5-23&#34;&gt;&lt;/a&gt;+++ b/entry/src/main/module.json5&lt;/span&gt;&lt;span id=&#34;__span-5-24&#34;&gt;&lt;a id=&#34;__codelineno-5-24&#34; name=&#34;__codelineno-5-24&#34; href=&#34;#__codelineno-5-24&#34;&gt;&lt;/a&gt;@@ -5,7 +5,8 @@&lt;/span&gt;&lt;span id=&#34;__span-5-25&#34;&gt;&lt;a id=&#34;__codelineno-5-25&#34; name=&#34;__codelineno-5-25&#34; href=&#34;#__codelineno-5-25&#34;&gt;&lt;/a&gt; &amp;quot;description&amp;quot;: &amp;quot;$string:module_desc&amp;quot;,&lt;/span&gt;&lt;span id=&#34;__span-5-26&#34;&gt;&lt;a id=&#34;__codelineno-5-26&#34; name=&#34;__codelineno-5-26&#34; href=&#34;#__codelineno-5-26&#34;&gt;&lt;/a&gt; &amp;quot;mainElement&amp;quot;: &amp;quot;EntryAbility&amp;quot;,&lt;/span&gt;&lt;span id=&#34;__span-5-27&#34;&gt;&lt;a id=&#34;__codelineno-5-27&#34; name=&#34;__codelineno-5-27&#34; href=&#34;#__codelineno-5-27&#34;&gt;&lt;/a&gt; &amp;quot;deviceTypes&amp;quot;: [&lt;/span&gt;&lt;span id=&#34;__span-5-28&#34;&gt;&lt;a id=&#34;__codelineno-5-28&#34; name=&#34;__codelineno-5-28&#34; href=&#34;#__codelineno-5-28&#34;&gt;&lt;/a&gt;- &amp;quot;default&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-5-29&#34;&gt;&lt;a id=&#34;__codelineno-5-29&#34; name=&#34;__codelineno-5-29&#34; href=&#34;#__codelineno-5-29&#34;&gt;&lt;/a&gt;+ &amp;quot;default&amp;quot;,&lt;/span&gt;&lt;span id=&#34;__span-5-30&#34;&gt;&lt;a id=&#34;__codelineno-5-30&#34; name=&#34;__codelineno-5-30&#34; href=&#34;#__codelineno-5-30&#34;&gt;&lt;/a&gt;+ &amp;quot;2in1&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-5-31&#34;&gt;&lt;a id=&#34;__codelineno-5-31&#34; name=&#34;__codelineno-5-31&#34; href=&#34;#__codelineno-5-31&#34;&gt;&lt;/a&gt; ],&lt;/span&gt;&lt;span id=&#34;__span-5-32&#34;&gt;&lt;a id=&#34;__codelineno-5-32&#34; name=&#34;__codelineno-5-32&#34; href=&#34;#__codelineno-5-32&#34;&gt;&lt;/a&gt; &amp;quot;requestPermissions&amp;quot;: [&lt;/span&gt;&lt;span id=&#34;__span-5-33&#34;&gt;&lt;a id=&#34;__codelineno-5-33&#34; name=&#34;__codelineno-5-33&#34; href=&#34;#__codelineno-5-33&#34;&gt;&lt;/a&gt; {&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就可以在鸿蒙电脑上跑了。我编写的两个鸿蒙上的应用：&lt;a href=&#34;https://github.com/jiegec/SPECCPU2017Harmony&#34;&gt;https://github.com/jiegec/SPECCPU2017Harmony&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/jiegec/NetworkToolsHarmony&#34;&gt;https://github.com/jiegec/NetworkToolsHarmony&lt;/a&gt; 都能正常在 MateBook Pro 上运行。&lt;/p&gt;&lt;p&gt;测试的过程中，发现用 hdc 传文件到电脑比传手机更快：Pura 70 Pro+ 是 24 MB/s，MateBook Pro 是 31 MB/s。&lt;/p&gt;&lt;p&gt;开源的鸿蒙应用也可以编译 + 运行：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://gitee.com/smdsbz/moonlight-ohos&#34;&gt;https://gitee.com/smdsbz/moonlight-ohos&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;目前还没找到怎么让鸿蒙电脑自己调试自己。&lt;/p&gt;&lt;h2 id=&#34;移植问题&#34;&gt;移植问题&lt;a class=&#34;headerlink&#34; href=&#34;#移植问题&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;ioctl(fd, TCSETS) 会失败，ioctl(fd, TCSETSW) 则成功&lt;/li&gt;&lt;li&gt;libc 缺少一些函数，比如 getspnam，有一些函数不可用，例如 getpwuid&lt;/li&gt;&lt;li&gt;openssl 的 hwcap 检测有问题，可能会导致 sigill&lt;/li&gt;&lt;li&gt;无法访问 /proc/stat&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;termony&#34;&gt;Termony&lt;a class=&#34;headerlink&#34; href=&#34;#termony&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;目前通过 &lt;a href=&#34;https://github.com/jiegec/Termony&#34;&gt;https://github.com/jiegec/Termony&lt;/a&gt; 运行了一些 benchmark：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;vkpeak&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Maleoon&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;916&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-4&#34;&gt;&lt;a id=&#34;__codelineno-6-4&#34; name=&#34;__codelineno-6-4&#34; href=&#34;#__codelineno-6-4&#34;&gt;&lt;/a&gt;fp32-scalar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;718&lt;/span&gt;.54&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-5&#34;&gt;&lt;a id=&#34;__codelineno-6-5&#34; name=&#34;__codelineno-6-5&#34; href=&#34;#__codelineno-6-5&#34;&gt;&lt;/a&gt;fp32-vec4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1038&lt;/span&gt;.34&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-6&#34;&gt;&lt;a id=&#34;__codelineno-6-6&#34; name=&#34;__codelineno-6-6&#34; href=&#34;#__codelineno-6-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-7&#34;&gt;&lt;a id=&#34;__codelineno-6-7&#34; name=&#34;__codelineno-6-7&#34; href=&#34;#__codelineno-6-7&#34;&gt;&lt;/a&gt;fp16-scalar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1083&lt;/span&gt;.84&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-8&#34;&gt;&lt;a id=&#34;__codelineno-6-8&#34; name=&#34;__codelineno-6-8&#34; href=&#34;#__codelineno-6-8&#34;&gt;&lt;/a&gt;fp16-vec4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1791&lt;/span&gt;.44&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-9&#34;&gt;&lt;a id=&#34;__codelineno-6-9&#34; name=&#34;__codelineno-6-9&#34; href=&#34;#__codelineno-6-9&#34;&gt;&lt;/a&gt;fp16-matrix&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-10&#34;&gt;&lt;a id=&#34;__codelineno-6-10&#34; name=&#34;__codelineno-6-10&#34; href=&#34;#__codelineno-6-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-11&#34;&gt;&lt;a id=&#34;__codelineno-6-11&#34; name=&#34;__codelineno-6-11&#34; href=&#34;#__codelineno-6-11&#34;&gt;&lt;/a&gt;fp64-scalar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-12&#34;&gt;&lt;a id=&#34;__codelineno-6-12&#34; name=&#34;__codelineno-6-12&#34; href=&#34;#__codelineno-6-12&#34;&gt;&lt;/a&gt;fp64-vec4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-13&#34;&gt;&lt;a id=&#34;__codelineno-6-13&#34; name=&#34;__codelineno-6-13&#34; href=&#34;#__codelineno-6-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-14&#34;&gt;&lt;a id=&#34;__codelineno-6-14&#34; name=&#34;__codelineno-6-14&#34; href=&#34;#__codelineno-6-14&#34;&gt;&lt;/a&gt;int32-scalar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;303&lt;/span&gt;.34&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GIOPS&lt;/span&gt;&lt;span id=&#34;__span-6-15&#34;&gt;&lt;a id=&#34;__codelineno-6-15&#34; name=&#34;__codelineno-6-15&#34; href=&#34;#__codelineno-6-15&#34;&gt;&lt;/a&gt;int32-vec4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;316&lt;/span&gt;.56&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GIOPS&lt;/span&gt;&lt;span id=&#34;__span-6-16&#34;&gt;&lt;a id=&#34;__codelineno-6-16&#34; name=&#34;__codelineno-6-16&#34; href=&#34;#__codelineno-6-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-17&#34;&gt;&lt;a id=&#34;__codelineno-6-17&#34; name=&#34;__codelineno-6-17&#34; href=&#34;#__codelineno-6-17&#34;&gt;&lt;/a&gt;int16-scalar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;709&lt;/span&gt;.12&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GIOPS&lt;/span&gt;&lt;span id=&#34;__span-6-18&#34;&gt;&lt;a id=&#34;__codelineno-6-18&#34; name=&#34;__codelineno-6-18&#34; href=&#34;#__codelineno-6-18&#34;&gt;&lt;/a&gt;int16-vec4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;830&lt;/span&gt;.55&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GIOPS&lt;/span&gt;&lt;span id=&#34;__span-6-19&#34;&gt;&lt;a id=&#34;__codelineno-6-19&#34; name=&#34;__codelineno-6-19&#34; href=&#34;#__codelineno-6-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-20&#34;&gt;&lt;a id=&#34;__codelineno-6-20&#34; name=&#34;__codelineno-6-20&#34; href=&#34;#__codelineno-6-20&#34;&gt;&lt;/a&gt;int8-dotprod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GIOPS&lt;/span&gt;&lt;span id=&#34;__span-6-21&#34;&gt;&lt;a id=&#34;__codelineno-6-21&#34; name=&#34;__codelineno-6-21&#34; href=&#34;#__codelineno-6-21&#34;&gt;&lt;/a&gt;int8-matrix&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GIOPS&lt;/span&gt;&lt;span id=&#34;__span-6-22&#34;&gt;&lt;a id=&#34;__codelineno-6-22&#34; name=&#34;__codelineno-6-22&#34; href=&#34;#__codelineno-6-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-23&#34;&gt;&lt;a id=&#34;__codelineno-6-23&#34; name=&#34;__codelineno-6-23&#34; href=&#34;#__codelineno-6-23&#34;&gt;&lt;/a&gt;bf16-dotprod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;span id=&#34;__span-6-24&#34;&gt;&lt;a id=&#34;__codelineno-6-24&#34; name=&#34;__codelineno-6-24&#34; href=&#34;#__codelineno-6-24&#34;&gt;&lt;/a&gt;bf16-matrix&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GFLOPS&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;未完待续&#34;&gt;未完待续&lt;a class=&#34;headerlink&#34; href=&#34;#未完待续&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;</description><link>https://jia.je/hardware/2025/06/06/huawei-matebook-pro/</link> <pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/06/06/huawei-matebook-pro/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/huawei-matebook-pro.png" type="image/png" length="71980" /> </item> <item> <title>在 HarmonyOS 5 上运行 Fortran 程序</title> <category>arm64</category> <category>clang</category> <category>flang</category> <category>fortran</category> <category>hardware</category> <category>harmonyos</category> <category>huawei</category> <category>llvm</category> <description>&lt;h1 id=&#34;在-harmonyos-5-上运行-fortran-程序&#34;&gt;在 HarmonyOS 5 上运行 Fortran 程序&lt;a class=&#34;headerlink&#34; href=&#34;#在-harmonyos-5-上运行-fortran-程序&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;前段时间把 SPEC CPU 2017 移植到了鸿蒙 5 上：&lt;a href=&#34;https://github.com/jiegec/SPECCPU2017Harmony&#34;&gt;https://github.com/jiegec/SPECCPU2017Harmony&lt;/a&gt;，由于 SPEC CPU 2017 里有不少 Fortran 程序，所以就研究了一下怎么编译 Fortran 代码，最终搞成了，在这里记录一下。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;过程&#34;&gt;过程&lt;a class=&#34;headerlink&#34; href=&#34;#过程&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;HarmonyOS 5 的工具链用的是 LLVM 15，自带的编译器是 clang，那个时候还没有 LLVM flang。但是，经过实际测试，使用新版本的 flang，也是可以的，只是需要做一些额外的操作。例如 flang 有自己的 runtime（类比 libgcc 和 LLVM 的 compiler-rt），需要交叉编译一个 arm64 的版本，下面是仓库中 &lt;a href=&#34;https://github.com/jiegec/SPECCPU2017Harmony/blob/f02cbe4a043d4c1489ebfae8a190e4a1ab6ca2c8/build-flang.sh&#34;&gt;build-flang.sh&lt;/a&gt; 的内容：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# build missing libraries for aarch64-linux-ohos target&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# assume llvm-project is cloned at $HOME/llvm-project&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-x&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-e&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;flang&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~/command-line-tools/sdk/default/openharmony/native/llvm/bin:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;DST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;/flang&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/llvm-project&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;checkout&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;main&lt;/span&gt;&lt;span id=&#34;__span-0-10&#34;&gt;&lt;a id=&#34;__codelineno-0-10&#34; name=&#34;__codelineno-0-10&#34; href=&#34;#__codelineno-0-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# match hash in flang-new-20 --version&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-11&#34;&gt;&lt;a id=&#34;__codelineno-0-11&#34; name=&#34;__codelineno-0-11&#34; href=&#34;#__codelineno-0-11&#34;&gt;&lt;/a&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;reset&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;7cf14539b644&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--hard&lt;/span&gt;&lt;span id=&#34;__span-0-12&#34;&gt;&lt;a id=&#34;__codelineno-0-12&#34; name=&#34;__codelineno-0-12&#34; href=&#34;#__codelineno-0-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-13&#34;&gt;&lt;a id=&#34;__codelineno-0-13&#34; name=&#34;__codelineno-0-13&#34; href=&#34;#__codelineno-0-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libunwind&lt;/span&gt;&lt;span id=&#34;__span-0-14&#34;&gt;&lt;a id=&#34;__codelineno-0-14&#34; name=&#34;__codelineno-0-14&#34; href=&#34;#__codelineno-0-14&#34;&gt;&lt;/a&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-rf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-15&#34;&gt;&lt;a id=&#34;__codelineno-0-15&#34; name=&#34;__codelineno-0-15&#34; href=&#34;#__codelineno-0-15&#34;&gt;&lt;/a&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-16&#34;&gt;&lt;a id=&#34;__codelineno-0-16&#34; name=&#34;__codelineno-0-16&#34; href=&#34;#__codelineno-0-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-17&#34;&gt;&lt;a id=&#34;__codelineno-0-17&#34; name=&#34;__codelineno-0-17&#34; href=&#34;#__codelineno-0-17&#34;&gt;&lt;/a&gt;cmake&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;..&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Ninja&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-18&#34;&gt;&lt;a id=&#34;__codelineno-0-18&#34; name=&#34;__codelineno-0-18&#34; href=&#34;#__codelineno-0-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_C_FLAGS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-19&#34;&gt;&lt;a id=&#34;__codelineno-0-19&#34; name=&#34;__codelineno-0-19&#34; href=&#34;#__codelineno-0-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_C_COMPILER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;clang&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-20&#34;&gt;&lt;a id=&#34;__codelineno-0-20&#34; name=&#34;__codelineno-0-20&#34; href=&#34;#__codelineno-0-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_CXX_FLAGS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-21&#34;&gt;&lt;a id=&#34;__codelineno-0-21&#34; name=&#34;__codelineno-0-21&#34; href=&#34;#__codelineno-0-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_CXX_COMPILER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;clang++&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-22&#34;&gt;&lt;a id=&#34;__codelineno-0-22&#34; name=&#34;__codelineno-0-22&#34; href=&#34;#__codelineno-0-22&#34;&gt;&lt;/a&gt;ninja&lt;/span&gt;&lt;span id=&#34;__span-0-23&#34;&gt;&lt;a id=&#34;__codelineno-0-23&#34; name=&#34;__codelineno-0-23&#34; href=&#34;#__codelineno-0-23&#34;&gt;&lt;/a&gt;cp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lib/libunwind.a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DST&lt;/span&gt;/&lt;/span&gt;&lt;span id=&#34;__span-0-24&#34;&gt;&lt;a id=&#34;__codelineno-0-24&#34; name=&#34;__codelineno-0-24&#34; href=&#34;#__codelineno-0-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;../../&lt;/span&gt;&lt;span id=&#34;__span-0-25&#34;&gt;&lt;a id=&#34;__codelineno-0-25&#34; name=&#34;__codelineno-0-25&#34; href=&#34;#__codelineno-0-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-26&#34;&gt;&lt;a id=&#34;__codelineno-0-26&#34; name=&#34;__codelineno-0-26&#34; href=&#34;#__codelineno-0-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;flang/lib/Decimal&lt;/span&gt;&lt;span id=&#34;__span-0-27&#34;&gt;&lt;a id=&#34;__codelineno-0-27&#34; name=&#34;__codelineno-0-27&#34; href=&#34;#__codelineno-0-27&#34;&gt;&lt;/a&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-rf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-28&#34;&gt;&lt;a id=&#34;__codelineno-0-28&#34; name=&#34;__codelineno-0-28&#34; href=&#34;#__codelineno-0-28&#34;&gt;&lt;/a&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-29&#34;&gt;&lt;a id=&#34;__codelineno-0-29&#34; name=&#34;__codelineno-0-29&#34; href=&#34;#__codelineno-0-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-30&#34;&gt;&lt;a id=&#34;__codelineno-0-30&#34; name=&#34;__codelineno-0-30&#34; href=&#34;#__codelineno-0-30&#34;&gt;&lt;/a&gt;cmake&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;..&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Ninja&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-31&#34;&gt;&lt;a id=&#34;__codelineno-0-31&#34; name=&#34;__codelineno-0-31&#34; href=&#34;#__codelineno-0-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_C_FLAGS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld -fPIC&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-32&#34;&gt;&lt;a id=&#34;__codelineno-0-32&#34; name=&#34;__codelineno-0-32&#34; href=&#34;#__codelineno-0-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_C_COMPILER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;clang&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-33&#34;&gt;&lt;a id=&#34;__codelineno-0-33&#34; name=&#34;__codelineno-0-33&#34; href=&#34;#__codelineno-0-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_CXX_FLAGS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld -fPIC&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-34&#34;&gt;&lt;a id=&#34;__codelineno-0-34&#34; name=&#34;__codelineno-0-34&#34; href=&#34;#__codelineno-0-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_CXX_COMPILER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;clang++&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-35&#34;&gt;&lt;a id=&#34;__codelineno-0-35&#34; name=&#34;__codelineno-0-35&#34; href=&#34;#__codelineno-0-35&#34;&gt;&lt;/a&gt;ninja&lt;/span&gt;&lt;span id=&#34;__span-0-36&#34;&gt;&lt;a id=&#34;__codelineno-0-36&#34; name=&#34;__codelineno-0-36&#34; href=&#34;#__codelineno-0-36&#34;&gt;&lt;/a&gt;cp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libFortranDecimal.a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DST&lt;/span&gt;/&lt;/span&gt;&lt;span id=&#34;__span-0-37&#34;&gt;&lt;a id=&#34;__codelineno-0-37&#34; name=&#34;__codelineno-0-37&#34; href=&#34;#__codelineno-0-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;../../../../&lt;/span&gt;&lt;span id=&#34;__span-0-38&#34;&gt;&lt;a id=&#34;__codelineno-0-38&#34; name=&#34;__codelineno-0-38&#34; href=&#34;#__codelineno-0-38&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-39&#34;&gt;&lt;a id=&#34;__codelineno-0-39&#34; name=&#34;__codelineno-0-39&#34; href=&#34;#__codelineno-0-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;flang/runtime&lt;/span&gt;&lt;span id=&#34;__span-0-40&#34;&gt;&lt;a id=&#34;__codelineno-0-40&#34; name=&#34;__codelineno-0-40&#34; href=&#34;#__codelineno-0-40&#34;&gt;&lt;/a&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-rf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-41&#34;&gt;&lt;a id=&#34;__codelineno-0-41&#34; name=&#34;__codelineno-0-41&#34; href=&#34;#__codelineno-0-41&#34;&gt;&lt;/a&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-42&#34;&gt;&lt;a id=&#34;__codelineno-0-42&#34; name=&#34;__codelineno-0-42&#34; href=&#34;#__codelineno-0-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build&lt;/span&gt;&lt;span id=&#34;__span-0-43&#34;&gt;&lt;a id=&#34;__codelineno-0-43&#34; name=&#34;__codelineno-0-43&#34; href=&#34;#__codelineno-0-43&#34;&gt;&lt;/a&gt;cmake&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;..&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Ninja&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-44&#34;&gt;&lt;a id=&#34;__codelineno-0-44&#34; name=&#34;__codelineno-0-44&#34; href=&#34;#__codelineno-0-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_C_FLAGS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld -fPIC&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-45&#34;&gt;&lt;a id=&#34;__codelineno-0-45&#34; name=&#34;__codelineno-0-45&#34; href=&#34;#__codelineno-0-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_C_COMPILER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;clang&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-46&#34;&gt;&lt;a id=&#34;__codelineno-0-46&#34; name=&#34;__codelineno-0-46&#34; href=&#34;#__codelineno-0-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_CXX_FLAGS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld -fPIC&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-47&#34;&gt;&lt;a id=&#34;__codelineno-0-47&#34; name=&#34;__codelineno-0-47&#34; href=&#34;#__codelineno-0-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-DCMAKE_CXX_COMPILER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;clang++&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-48&#34;&gt;&lt;a id=&#34;__codelineno-0-48&#34; name=&#34;__codelineno-0-48&#34; href=&#34;#__codelineno-0-48&#34;&gt;&lt;/a&gt;ninja&lt;/span&gt;&lt;span id=&#34;__span-0-49&#34;&gt;&lt;a id=&#34;__codelineno-0-49&#34; name=&#34;__codelineno-0-49&#34; href=&#34;#__codelineno-0-49&#34;&gt;&lt;/a&gt;cp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libFortranRuntime.a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DST&lt;/span&gt;/&lt;/span&gt;&lt;span id=&#34;__span-0-50&#34;&gt;&lt;a id=&#34;__codelineno-0-50&#34; name=&#34;__codelineno-0-50&#34; href=&#34;#__codelineno-0-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;../../../&lt;/span&gt;&lt;span id=&#34;__span-0-51&#34;&gt;&lt;a id=&#34;__codelineno-0-51&#34; name=&#34;__codelineno-0-51&#34; href=&#34;#__codelineno-0-51&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-52&#34;&gt;&lt;a id=&#34;__codelineno-0-52&#34; name=&#34;__codelineno-0-52&#34; href=&#34;#__codelineno-0-52&#34;&gt;&lt;/a&gt;ls&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-al&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;核心就是以 aarch64-linux-ohos 为 target，编译出三个 &lt;code&gt;.a&lt;/code&gt; 文件，之后再链接上就可以了。需要注意的是，runtime 版本和 flang 版本需要一致。为了偷懒，直接用的是 LLVM APT 提供的 flang-new-20 的 binary，那么它是会随着 apt upgrade 而更新的，这个时候就需要重新编译一次 flang runtime，然后链接到程序里。如果版本不对上，可能遇到一些问题：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;fatal Fortran runtime error(/home/jiegec/llvm-project/flang/runtime/descriptor.cpp:74): not yet implemented: type category(6)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考 &lt;a href=&#34;https://github.com/llvm/llvm-project/issues/129877&#34;&gt;[flang] fatal Fortran runtime error&lt;/a&gt;，就知道是编译器版本和 runtime 不兼容的问题了。&lt;/p&gt;&lt;p&gt;编译好了 fortran runtime 之后，就可以用 flang-new-20 编译 fortran 代码了。这里给出 CMake 的配置方式，主要涉及到需要用的编译选项：&lt;/p&gt;&lt;div class=&#34;language-cmake highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;CMAKE_Fortran_COMPILER_FORCED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;CMAKE_Fortran_COMPILER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;flang-new-20&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;CMAKE_Fortran_FLAGS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;-target aarch64-linux-ohos -fuse-ld=lld -L ${CMAKE_CURRENT_SOURCE_DIR}/../../../../flang -nostdlib -L ${CMAKE_CURRENT_SOURCE_DIR}/../../../../../command-line-tools/sdk/default/openharmony/native/sysroot/usr/lib/aarch64-linux-ohos -lc -lm -L ${CMAKE_CURRENT_SOURCE_DIR}/../../../../../command-line-tools/sdk/default/openharmony/native/llvm/lib/clang/15.0.4/lib/aarch64-linux-ohos/ -lclang_rt.builtins -lFortranRuntime -lFortranDecimal&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;enable_language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Fortran&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的相对路径，其实就是要找到新编译出来的 flang runtime，以及 HarmonyOS command line tools 里面的一些库，具体路径需要根据实际情况来调整，这里只是一个样例。&lt;/p&gt;&lt;p&gt;到这里，就可以在 HarmonyOS 5 上运行 Fortran 程序了。其实还可以考虑研究一下 GFortran，或许也是能实现的，但目前还没有去做进一步的尝试。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/06/06/using-fortran-on-harmonyos-5/</link> <pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/06/06/using-fortran-on-harmonyos-5/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/using-fortran-on-harmonyos-5.png" type="image/png" length="68427" /> </item> <item> <title>ARM Neoverse N1 (代号 Ares) 的 BTB 结构分析</title> <category>arm</category> <category>btb</category> <category>cpu</category> <category>hardware</category> <category>neoverse</category> <description>&lt;h1 id=&#34;arm-neoverse-n1-代号-ares-的-btb-结构分析&#34;&gt;ARM Neoverse N1 (代号 Ares) 的 BTB 结构分析&lt;a class=&#34;headerlink&#34; href=&#34;#arm-neoverse-n1-代号-ares-的-btb-结构分析&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;本文同步发布到本人的&lt;a href=&#34;https://zhuanlan.zhihu.com/p/1926041649617826619&#34;&gt;知乎&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;ARM Neoverse N1 是 2019 年发布的比较早的一代 ARM 服务器的处理器，它在很多地方都和 Cortex-A76 类似。它的 BTB 结构比较有意思，所以在这里对它的 BTB 做一些分析。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先收集了一些 ARM Neoverse N1 的 BTB 结构的官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://hc33.hotchips.org/assets/program/conference/day1/20210818_Hotchips_NeoverseN2.pdf&#34;&gt;Arm Neoverse N2: Arm’s 2nd generation high performance infrastructure CPUs and system IPs&lt;/a&gt; 中对 Neoverse N1 的介绍：&lt;ul&gt;&lt;li&gt;Branch Prediction Width: 8 instrs&lt;/li&gt;&lt;li&gt;Nano BTB (0 cyc taken-branch bubble): 16 entry&lt;/li&gt;&lt;li&gt;Main BTB: 6K entry&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.arm.com/-/media/global/solutions/infrastructure/arm-neoverse-n1-platform.pdf&#34;&gt;The Arm Neoverse N1 Platform: Building Blocks for the Next-Gen Cloud-to-Edge Infrastructure SoC&lt;/a&gt; 的介绍：&lt;ul&gt;&lt;li&gt;6K entry Main BTB, 3 cycle access latency&lt;/li&gt;&lt;li&gt;64-entry Micro BTB&lt;/li&gt;&lt;li&gt;16-entry Nano BTB&lt;/li&gt;&lt;li&gt;4-way set associative 64KB L1 ICache&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;简单整理一下官方信息，大概有三级 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;16-entry Nano BTB, 1 cycle latency (0 cycle bubble)&lt;/li&gt;&lt;li&gt;64-entry Micro BTB&lt;/li&gt;&lt;li&gt;6K-entry Main BTB, 3 cycle latency&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是很多细节是缺失的，因此下面结合微架构测试，进一步研究它的内部结构。&lt;/p&gt;&lt;h2 id=&#34;微架构测试&#34;&gt;微架构测试&lt;a class=&#34;headerlink&#34; href=&#34;#微架构测试&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在之前的博客里，我们已经测试了各种处理器的 BTB，在这里也是一样的：按照一定的 stride 分布无条件直接分支，构成一个链条，然后测量 CPI。&lt;/p&gt;&lt;h3 id=&#34;stride4b&#34;&gt;stride=4B&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先是 stride=4B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-4b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 16 条分支，CPI=1，对应了 16-entry 的 Nano BTB&lt;/li&gt;&lt;li&gt;第二个台阶到 80 条分支，CPI=2，其中 &lt;code&gt;80=16+64&lt;/code&gt;，多出来的部分对应了 64-entry 的 Micro BTB，意味着 Micro BTB 相对 Nano BTB 是 Victim BTB 的地位：Nano BTB 被替换出去的 entry 会进入到 Micro BTB，而命中 Micro BTB 的 entry 会被移动到 Nano BTB&lt;/li&gt;&lt;li&gt;第三个台阶到 8192 条分支，CPI=5，大于 Main BTB 的 3 cycle latency，说明此时没有命中 Main BTB，而是要等到取指和译码后，计算出正确的目的地址再回滚，导致了 5 cycle latency；8192 的性能下降原因还需要进一步研究，16384 的性能下降对应了 64KB 的 ICache，因为 &lt;code&gt;4B*16384=64KB&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么 stride=4B 的情况下就遗留了两个问题：为什么没有命中 Main BTB；8192 处为什么出现了性能下降。&lt;/p&gt;&lt;h3 id=&#34;stride8b&#34;&gt;stride=8B&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来观察 stride=8B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-8b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 16 条分支，CPI=1，对应了 16-entry 的 Nano BTB，和之前一样&lt;/li&gt;&lt;li&gt;第二个台阶到 80 条分支，CPI=2，其中 &lt;code&gt;80=16+64&lt;/code&gt;，多出来的部分对应了 64-entry 的 Micro BTB，和之前一样&lt;/li&gt;&lt;li&gt;第三个台阶到 4096 条分支，CPI=2.75，约等于 Main BTB 的 3 cycle latency，说明此时命中的是 Main BTB，但是它并没有达到宣称的 6144-entry 的 Main BTB 容量；8192 还有一个性能下降，这对应了 64KB 的 ICache：&lt;code&gt;8B*8192=64KB&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;相比 stride=4B，Nano BTB 和 Micro BTB 的行为没有变化；而 Main BTB 开始能够命中，这代表 Main BTB 在分支特别密集的情况下，会出现性能问题。&lt;/p&gt;&lt;p&gt;那么 stride=8B 的情况下遗留了两个问题：为什么 CPI=2.75 而不是 3？为什么只观察到了 4K 的 Main BTB 容量，而不是 6K？&lt;/p&gt;&lt;h3 id=&#34;stride16b&#34;&gt;stride=16B&lt;a class=&#34;headerlink&#34; href=&#34;#stride16b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=16B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-16b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了四个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 16 条分支，CPI=1，对应了 16-entry 的 Nano BTB，和之前一样&lt;/li&gt;&lt;li&gt;第二个台阶到 80 条分支，CPI=2，其中 &lt;code&gt;80=16+64&lt;/code&gt;，多出来的部分对应了 64-entry 的 Micro BTB，和之前一样&lt;/li&gt;&lt;li&gt;第三个台阶到 4096 条分支，CPI=2.5，比 Main BTB 的 3 cycle latency 略小，但是大于 2，说明此时命中的是 Main BTB，此时遇到了 64KB ICache 的瓶颈：&lt;code&gt;4096*16B=64KB&lt;/code&gt;&lt;/li&gt;&lt;li&gt;第四个台阶到 6144 条分支，CPI=3.5，比 Main BTB 的 3 cycle latency 略大，是因为 64KB ICache 出现了缺失，但这个时候终于显现了宣传的 Main BTB 的 6144 的容量&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;相比 stride=8B，Nano BTB 和 Micro BTB 的行为没有变化；Main BTB 的 6144 容量开始显现，并且出现地比 64KB ICache 更晚。&lt;/p&gt;&lt;p&gt;那么 stride=16B 的情况下遗留了一个问题：为什么出现了 CPI=2.5 的平台？&lt;/p&gt;&lt;h3 id=&#34;stride32b&#34;&gt;stride=32B&lt;a class=&#34;headerlink&#34; href=&#34;#stride32b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=32B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-32b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 16 条分支，CPI=1，对应了 16-entry 的 Nano BTB，和之前一样&lt;/li&gt;&lt;li&gt;第二个台阶到 2048 条分支，CPI=2，此时遇到了 64KB ICache 的瓶颈：&lt;code&gt;2048*32B=64KB&lt;/code&gt;，但是这个时候已经超出了 Micro BTB 的容量，而 Main BTB 有 3 cycle 的 latency，为何还能保持 CPI=2 呢&lt;/li&gt;&lt;li&gt;第三个台阶到 6144 条分支，CPI=4，比 Main BTB 的 3 cycle latency 略大，是因为 64KB ICache 出现了缺失，显现的是宣传的 Main BTB 的 6144 的容量，更加说明第二个台阶内 Main BTB 是命中的&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么 stride=32B 的情况下遗留了一个问题：为什么在 Main BTB 的范围内出现了 CPI=2 的平台？&lt;/p&gt;&lt;h3 id=&#34;stride64b&#34;&gt;stride=64B&lt;a class=&#34;headerlink&#34; href=&#34;#stride64b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=64B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-64b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 16 条分支，CPI=1，对应了 16-entry 的 Nano BTB，和之前一样&lt;/li&gt;&lt;li&gt;第二个台阶到 1024 条分支，CPI=2，此时遇到了 64KB ICache 的瓶颈：&lt;code&gt;1024*64B=64KB&lt;/code&gt;，和之前一样&lt;/li&gt;&lt;li&gt;第三个台阶到 3122 条分支，CPI=6，比 Main BTB 的 3 cycle latency 大，是因为 64KB ICache 出现了缺失，此时 Main BTB 的容量砍半&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;stride=64B 相比 stride=32B 的 Main BTB 容量砍半，这是组相连的表现：如果 PC[5] 在组相连的 index 当中，那么当 stride=64B 时，PC[5] 恒等于 0，意味着只有一半的 set 可以被用到，那也就只有一半的容量了。&lt;/p&gt;&lt;p&gt;Nano BTB 和 Micro BTB 容量没有变小，意味着它们大概率是全相连的：这也和它们的大小相吻合。&lt;/p&gt;&lt;p&gt;那么 stride=64B 的情况下遗留的问题和 stride=32B 一样：为什么在 Main BTB 的范围内出现了 CPI=2 的平台？&lt;/p&gt;&lt;h3 id=&#34;stride128b&#34;&gt;stride=128B&lt;a class=&#34;headerlink&#34; href=&#34;#stride128b&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;继续观察 stride=128B 的情况：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-128b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到，图像上出现了三个比较显著的台阶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个台阶到 16 条分支，CPI=1，对应了 16-entry 的 Nano BTB，和之前一样&lt;/li&gt;&lt;li&gt;第二个台阶到 512 条分支，CPI=2，此时遇到了 64KB ICache 的瓶颈：&lt;code&gt;512*128B=64KB&lt;/code&gt;，和之前一样&lt;/li&gt;&lt;li&gt;第三个台阶到 1536 条分支，CPI=6.x，比 Main BTB 的 3 cycle latency 大，是因为 64KB ICache 出现了缺失，此时 Main BTB 的容量进一步砍半&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;stride=128B 相比 stride=64B 的 Main BTB 容量进一步砍半，也是组相连的表现，意味着 PC[6] 也在组相连的 idnex 当中，只有四分之一的 set 可以被用到。&lt;/p&gt;&lt;p&gt;那么 stride=128B 的情况下遗留的问题和 stride=32B 一样：为什么在 Main BTB 的范围内出现了 CPI=2 的平台？&lt;/p&gt;&lt;h3 id=&#34;小结&#34;&gt;小结&lt;a class=&#34;headerlink&#34; href=&#34;#小结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;测试到这里就差不多了，更大的 stride 得到的也是类似的结果，总结一下前面的发现：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Nano BTB 是 16-entry，1 cycle latency，不随着 stride 变化&lt;/li&gt;&lt;li&gt;Micro BTB 是 64-entry，2 cycle latency，也不随着 stride 变化&lt;/li&gt;&lt;li&gt;Main BTB 是 6K-entry，3 cycle latency，容量随着 stride 变化，大概率是 PC[n:5] 这一段被用于 index，使得 stride=64B 开始容量不断减半&lt;/li&gt;&lt;li&gt;64KB ICache 很多时候会比 Main BTB 更早成为瓶颈&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;也总结一下前面发现了各种没有解释的遗留问题：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;stride=4B 的情况下，Main BTB 没有像预期那样工作：解释见后&lt;/li&gt;&lt;li&gt;stride=4B 的情况下，8192 条分支处出现了性能下降：暂无解释&lt;/li&gt;&lt;li&gt;stride=8B 的情况下，只观察到 4096 的 Main BTB 容量，而不是 6144：解释见后&lt;/li&gt;&lt;li&gt;stride=8B 的情况下，在 Main BTB 命中的范围内，CPI=2.75：解释见后&lt;/li&gt;&lt;li&gt;stride=16B 的情况下，在 Main BTB 命中的范围内，CPI=2.5：解释见后&lt;/li&gt;&lt;li&gt;stride=32B 或 64B 或 128B 的情况下，在 Main BTB 命中的范围内，CPI=2：解释见后&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;接下来尝试解析一下这些遗留问题背后的原理。部分遗留问题，并没有被解释出来，欢迎读者提出猜想。&lt;/p&gt;&lt;h2 id=&#34;解析遗留问题&#34;&gt;解析遗留问题&lt;a class=&#34;headerlink&#34; href=&#34;#解析遗留问题&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;stride4b-的情况下main-btb-没有像预期那样工作&#34;&gt;stride=4B 的情况下，Main BTB 没有像预期那样工作&lt;a class=&#34;headerlink&#34; href=&#34;#stride4b-的情况下main-btb-没有像预期那样工作&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;对于这种类似 Cache 的结构，当它看起来总是没有命中的时候，其实就是每一个 Set 内要访问的数据超出了 Way，导致每次新访问的都会缺失。上面分析到，Main BTB 的 Index 大概是 PC[n:5] 这一段，那么一个对齐的 32B 范围内，分支指令都会被映射到同一个 set 内。当 stride=4B 的时候，对齐的 32B 范围内有 8 条指令；而 stride=8B 的时候，只有 4 条指令。8 条指令不行，4 条指令可以，暗示了中间跨越了 Way 的数量。&lt;/p&gt;&lt;p&gt;首先来回顾一下 Main BTB 的 6144-entry 是怎么来的：虽然它没说是几路组相连，但因为 6144 有一个 3 的因子，它不是二的幂次，所以一定是在 Way 数量上产生的。这就导致了至少这样几种可能：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;3-way set associative, 2048 sets&lt;/li&gt;&lt;li&gt;6-way set associative, 1024 sets&lt;/li&gt;&lt;li&gt;12-way set associative, 512 sets&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;回顾前面的分析：4 条指令没有超过 Way 数量，8 条指令超过了，那么只能是上述可能里的 6-way set associative，1024 sets 的情况。&lt;/p&gt;&lt;p&gt;翻阅 &lt;a href=&#34;https://developer.arm.com/documentation/100616/latest/&#34;&gt;Arm® Neoverse™ N1 Core Technical Reference Manual&lt;/a&gt;，它是这么说的：&lt;/p&gt;&lt;p&gt;L1 BTB data location encoding:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;[31:24]&lt;/code&gt;: RAMID = 0x02&lt;/li&gt;&lt;li&gt;&lt;code&gt;[23:20]&lt;/code&gt;: Reserved&lt;/li&gt;&lt;li&gt;&lt;code&gt;[19:18]&lt;/code&gt;: Way&lt;/li&gt;&lt;li&gt;&lt;code&gt;[17:15]&lt;/code&gt;: Reserved&lt;/li&gt;&lt;li&gt;&lt;code&gt;[14:5]&lt;/code&gt;: Index &lt;code&gt;[14:5]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;[4:0]&lt;/code&gt;: Reserved&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;它暗示了 L1 BTB（也就是 Main BTB）的 Index 是 PC[14:5]，这和我们之前的观察一致。这样算出来有 &lt;code&gt;2^(14-5+1)=1024&lt;/code&gt; 个 set，和我们前面的 6-way set associative，1024 sets 的猜测是一致的。&lt;/p&gt;&lt;p&gt;但是，这时候又出现一个问题：&lt;code&gt;[19:18]&lt;/code&gt; 只能记录两位的 Way 编号，也就是说不能超过 4 个 Way，但实际上有 6 个 Way。这似乎又出现了矛盾。&lt;/p&gt;&lt;p&gt;继续去阅读文档里对从 BTB 读出来的数据的描述：&lt;/p&gt;&lt;p&gt;L1 BTB cache format:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Instruction Register 0 [63:0]: Data [63:0]&lt;/li&gt;&lt;li&gt;Instruction Register 1 [17:0]: Data [81:64]&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这暗示了给定一个 Index 和一个 Way，可以读出来 82 bit 的数据，这不太寻常：一个分支的信息，通常不需要这么多 bit 的数据。一个 BTB Entry，通常需要这些信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;valid&lt;/li&gt;&lt;li&gt;branch type: conditional or unconditional, direct or indirect, call or return, etc.&lt;/li&gt;&lt;li&gt;tag&lt;/li&gt;&lt;li&gt;replacement policy&lt;/li&gt;&lt;li&gt;part of target address&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;除非保存了完整的 target address 和 tag，是达不到 82 bit 这么多的。但是这样又显得很浪费，可能还有其他的可能性。&lt;/p&gt;&lt;p&gt;考虑到上面出现的两位的 Way 编号，并且有 3 的素数因子，只能是 3-way 组相连了。如果按 3-way 组相连，1024 个 set 来算，只有 3072 个 entry，距离 Main BTB 的容量 6144 个 entry 刚好只有一半。一个想法诞生了：如果一个 BTB entry 可以保存两个分支的信息呢？82 bit 正好是 2 的倍数，除以二是 41 bit，每个分支存 41 bit 的数据是比较合理的数据。这样，就可以推导出来，它 Main BTB 的组织方式是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Index: PC[14:5]，有 1024 个 set&lt;/li&gt;&lt;li&gt;3-Way 组相连&lt;/li&gt;&lt;li&gt;每个 Entry 是 82 bit，可以记录两条分支的信息&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;所以 BTB 的 Entry 怎么计算其实会比较复杂，到底是按实际的 Entry 数，还是按分支数，需要深入分析才能理解。&lt;/p&gt;&lt;p&gt;那么，为什么要把两条分支保存在一个 BTB Entry 里呢？Neoverse N1 并没有实现 two taken，似乎并没有放在一起的必要。而且虽然是 3-Way 组相连，匹配的时候还是 6-Way 的，那么这样做的好处是什么呢？&lt;/p&gt;&lt;p&gt;这时候就要提到很多处理器实现的一个优化了：大多数分支，它的目的地址距离它自己是很短的，即使考虑指令支持的最大范围，比如 AArch64 指令里面，B 指令的立即数是 26 位，B.cond 和 CBNZ 的立即数是 19 位，也比完整的虚拟地址空间小很多。针对多数的跳转距离比较短的分支，可以用一个更压缩的表示来保存，使得 BTB 可以保存更多的分支；同时，也保留针对跳转距离比较长的分支的支持。这和前面的这个设计就对上了：对于跳转距离短的分支，每 41 bit 可以保存一条分支的信息；对于跳转距离远的分支，再用 82 bit 来保存一条分支的信息。从另外一个角度来说，41 bit 也确实保存不下完整的虚拟地址，所以需要有一个方案给跳转距离远的分支兜底。&lt;/p&gt;&lt;p&gt;那么如果跳转距离比较远，Main BTB 的容量将会只有一半。感兴趣的读者可以设计实验来验证这一点。&lt;/p&gt;&lt;p&gt;小结：Main BTB 是 1024 set，3 way set associative 的结构，一共 3072 个 entry，每个 entry 可以保存两条分支，Index 是 PC[14:5]。stride=4B 的情况下，会出现一个 set 内 8 条分支的情况，无法在 3 个 entry 内放下，所以总是会出现缺失。一共占用 &lt;code&gt;3072*82=251904&lt;/code&gt; bit 也就是 30.75 KB 的空间。&lt;/p&gt;&lt;h3 id=&#34;stride8b-的情况下只观察到-4096-的-main-btb-容量而不是-6144&#34;&gt;stride=8B 的情况下，只观察到 4096 的 Main BTB 容量，而不是 6144&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b-的情况下只观察到-4096-的-main-btb-容量而不是-6144&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在 stride=8B 的情况下，只观察到 4096 的 Main BTB 容量，实际上，用刚才分析的 Main BTB 结构，就可以分析出来。&lt;/p&gt;&lt;p&gt;首先，这个测试的构造方法是，给定分支数和 stride，按照这个 stride 在连续的一段虚拟地址上分布这些分支。以 stride=8B 为例，那么分支 i 的地址就是 &lt;code&gt;8*i&lt;/code&gt;（实际情况下高位不是 0，但是所有的分支的高位是相同的，例如 &lt;code&gt;0x100000000+8*i&lt;/code&gt;，但这不影响分析）。我们来观察一下前几个分支的信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Branch 0: addr=0x00, index=0&lt;/li&gt;&lt;li&gt;Branch 1: addr=0x08, index=0&lt;/li&gt;&lt;li&gt;Branch 2: addr=0x10, index=0&lt;/li&gt;&lt;li&gt;Branch 3: addr=0x18, index=0&lt;/li&gt;&lt;li&gt;Branch 4: addr=0x20, index=1&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;可以看到从分支 5 开始，到了一个新的 set，第一个 set 内出现了 4 条分支，小于一个 set 内可以保存的最多 6 条分支。接下来看从分支 4096 开始的几个分支：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Branch 4096: addr=0x8000, index=0&lt;/li&gt;&lt;li&gt;Branch 4097: addr=0x8008, index=0&lt;/li&gt;&lt;li&gt;Branch 4098: addr=0x8010, index=0&lt;/li&gt;&lt;li&gt;Branch 4099: addr=0x8018, index=0&lt;/li&gt;&lt;li&gt;Branch 4100: addr=0x8020, index=1&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;可以看到，index=0 这个 set 出现了 8 个 Branch：Branch 0-3 和 Branch 4096-4099，已经大于一个 set 内可以保存的最多 6 条分支。虽然 Main BTB 容量是 6144，但由于分支的排布方式，会首先在一个 set 里出现溢出。然后随着分支继续增加，产生溢出的 set 的比例逐渐上升，直到 8192 条分支的时候，每个 set 都完全溢出了。此时也恰好遇到了 64KB ICache 的瓶颈，如果 ICache 更大，应该会在 8192 的地方观察到一个平台，此时 Main BTB 完全缺失。&lt;/p&gt;&lt;p&gt;继续增加 stride，就没有了这个问题。以 stride=16B 为例子，Branch i 地址是 &lt;code&gt;i*16&lt;/code&gt;，那么这些分支的地址是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Branch 0: addr=0x00, index=0&lt;/li&gt;&lt;li&gt;Branch 1: addr=0x10, index=0&lt;/li&gt;&lt;li&gt;Branch 2: addr=0x20, index=1&lt;/li&gt;&lt;li&gt;Branch 3: addr=0x30, index=1&lt;/li&gt;&lt;li&gt;... &lt;/li&gt;&lt;li&gt;Branch 2048: addr=0x8000, index=0&lt;/li&gt;&lt;li&gt;Branch 2049: addr=0x8010, index=0&lt;/li&gt;&lt;li&gt;Branch 2050: addr=0x8020, index=1&lt;/li&gt;&lt;li&gt;Branch 2051: addr=0x8030, index=1&lt;/li&gt;&lt;li&gt;... &lt;/li&gt;&lt;li&gt;Branch 4096: addr=0x10000, index=0&lt;/li&gt;&lt;li&gt;Branch 4097: addr=0x10010, index=0&lt;/li&gt;&lt;li&gt;Branch 4098: addr=0x10020, index=1&lt;/li&gt;&lt;li&gt;Branch 4099: addr=0x10030, index=1&lt;/li&gt;&lt;li&gt;... &lt;/li&gt;&lt;li&gt;Branch 6144: addr=0x18000, index=0&lt;/li&gt;&lt;li&gt;Branch 6145: addr=0x18010, index=0&lt;/li&gt;&lt;li&gt;Branch 6146: addr=0x18020, index=1&lt;/li&gt;&lt;li&gt;Branch 6147: addr=0x18030, index=1&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这个时候，每个 set 会以两个 branch 的粒度来增加，由于 6 是 2 的倍数，所以从 4096 开始，set 逐渐被填满，会等到 6144 条分支才会产生溢出。&lt;/p&gt;&lt;p&gt;小结：由于 Main BTB 的 Index 是 PC[14:5]，所以在 stride=8B 的情况下，每个 set 内以 4 个 branch 的粒度来增加，会有部分 set 已经出现溢出（只能存 6 个分支，但需要存 8 个分支），而另一部分 set 还没有满的情况（能存 6 个分支，但只存了 4 个分支）。这个拐点就是 4096 条分支。&lt;/p&gt;&lt;h3 id=&#34;stride8b-的情况下在-main-btb-命中的范围内cpi275stride16b-的情况下在-main-btb-命中的范围内cpi25stride32b-或-64b-或-128b-的情况下在-main-btb-命中的范围内cpi2&#34;&gt;stride=8B 的情况下，在 Main BTB 命中的范围内，CPI=2.75；stride=16B 的情况下，在 Main BTB 命中的范围内，CPI=2.5；stride=32B 或 64B 或 128B 的情况下，在 Main BTB 命中的范围内，CPI=2&lt;a class=&#34;headerlink&#34; href=&#34;#stride8b-的情况下在-main-btb-命中的范围内cpi275stride16b-的情况下在-main-btb-命中的范围内cpi25stride32b-或-64b-或-128b-的情况下在-main-btb-命中的范围内cpi2&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;前面提到，命中 Main BTB 的时候，其实 CPI 并不是 3，而是 2 到 3 之间的一个数，这似乎意味着 Main BTB 并非总是 3 周期提供一个预测。考虑到 Main BTB 容量比较大，很难单周期提供一个预测，猜测 Main BTB 可以两周期或者三周期提供一个预测。那么为什么会在不同的延迟下给出预测结果呢？&lt;/p&gt;&lt;p&gt;首先来分析一下 Main BTB 是如何做预测的：它首先会用传入的 VA 访问 SRAM，得到 3 个 82-bit 的数据，里面最多可以存 6 条分支指令的信息。得到这些数据以后，进行 tag 比较，筛选出其中匹配的部分。如果没有匹配的，或者只有一个匹配的分支，那都好说。但是，如果有多条匹配的分支呢？&lt;/p&gt;&lt;p&gt;例如，这是一个对齐的 32B 块，里面有 8 条 4 字节的指令：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;0 4 8 12 16 20 24 28 &lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;+-----+-----+-----+-----+-----+-----+-----+-----+&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;| NOP | NOP | Br | NOP | NOP | NOP | Br | NOP |&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;+-----+-----+-----+-----+-----+-----+-----+-----+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;假如要从地址 4 处开始执行，那么 Main BTB 应该要得到的是位于地址 8 的分支的信息；假如要从地址 16 处开始执行，那么 Main BTB 应该要得到的是位于地址 24 的分支的信息。为了实现这个事情，硬件上应该：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;首先找到在同一个 32B 块内的所有分支：通过 tag 比对，找到这个 set 内的在该 32B 内的所有分支&lt;/li&gt;&lt;li&gt;接着，找到比输入的 VA &lt;strong&gt;大于或者等于&lt;/strong&gt;的&lt;strong&gt;第一个&lt;/strong&gt;分支&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这个逻辑是比较复杂的，首先要筛选出地址大于或等于输入的 VA 的分支，其次要找到其中 VA 最小的分支。一个思路是保证 BTB 里面的 VA 是排好序的，但是硬件上排序并不好做，而且即使排序了，也需要做类似二分搜索的事情。另一个思路就是不管顺序，用组合逻辑把所有可能性都考虑到，计算出要找的分支。&lt;/p&gt;&lt;p&gt;但是这个组合逻辑比较复杂，本质上就是一个 filter+min 操作，需要比较大的延迟。三个周期能做下来，但是两个周期内，就做不下这么复杂的组合逻辑了。那怎么办呢？&lt;/p&gt;&lt;p&gt;观察一下 CPI 比 3 小的情况：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;stride=8B 的 CPI=2.75&lt;/li&gt;&lt;li&gt;stride=16B 的 CPI=2.5&lt;/li&gt;&lt;li&gt;stride=32B 或 64B 或 128B 的 CPI=2&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;可以看到，随着 stride 增加，CPI 逐渐减少，到 stride=32B 的时候，能够稳定地达到 CPI=2 的情况。设想 Main BTB 有一个 2 周期出结果的 fast path，那么它此时可以稳定地触发；而 stride=16B 只有一半的时候可以触发 fast path：&lt;code&gt;0.5*2+0.5*3=2.5&lt;/code&gt;；stride=8B 只有四分之一的时候可以触发 fast path：&lt;code&gt;0.25*2+0.75*3=2.75&lt;/code&gt;。这样这些 CPI 都说得通了，其实就是有多大的概率能够触发 fast path。那么 fast path 生效的比例是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;stride=8B 有四分之一的概率走 fast path&lt;/li&gt;&lt;li&gt;stride=16B 有二分之一的概率走 fast path&lt;/li&gt;&lt;li&gt;stride=32B 或 64B 或 128B 一定可以走 fast path&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此时你可能已经发现了一些规律：&lt;code&gt;32/4=8&lt;/code&gt;，然后 &lt;code&gt;32/2=16&lt;/code&gt;。也就是说，当对齐的 32B 块里，有四条分支的时候，平均只有一条分支可以走 fast path；有两条分支的时候，平均也是一条分支可以走 fast path；只有一条分支的时候，它总是可以走 fast path。&lt;/p&gt;&lt;p&gt;再回想一下前面的匹配逻辑：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;找到该 32B 块内所有的分支：这一步免不了&lt;/li&gt;&lt;li&gt;找到大于或等于输入 VA 地址的所有分支：这一步也免不了&lt;/li&gt;&lt;li&gt;找到第一个满足要求的分支：如果只有一条分支，那就不用寻找最小值了，这就是 fast path 的条件&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这就解释了前面的现象：当 stride=8B 的时候，对齐的 32B 块内部是：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;0 4 8 12 16 20 24 28 &lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;+-----+-----+-----+-----+-----+-----+-----+-----+&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;| Br | NOP | Br | NOP | Br | NOP | Br | NOP |&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;+-----+-----+-----+-----+-----+-----+-----+-----+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分支预测的时候，用的地址分别是 0、8、16 和 24。当用 0、8 和 16 的输入 VA 查询的时候，分别能找到 4、3 和 2 条 VA 大于或等于输入 VA 的分支。只有在用 24 的输入 VA 查询的时候，只能找到一条分支，不需要再求 min。&lt;/p&gt;&lt;p&gt;stride=16B 的情况类似，在预测第二条分支的时候，只有一条分支满足要求，可以走 fast path。&lt;/p&gt;&lt;p&gt;stride=32B 或更大的时候，对齐的 32B 块内都只有一条分支，满足走 fast path 的条件。&lt;/p&gt;&lt;p&gt;这就解释了前面看到的各种奇怪的 CPI 现象。&lt;/p&gt;&lt;p&gt;那么，为什么只有 Main BTB 会出现这种现象呢，理论上来说，Nano BTB 和 Micro BTB 也可以做类似的优化？这就涉及到了 BTB 的不同的组织方式：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;一种是 Main BTB 这种，每条分支只保存一份，那么为了找到某个 VA 开始的第一条分支，就需要把满足要求的分支都找出来，再寻找地址最小的那一个；具体实现上，也有两种情况：&lt;ol&gt;&lt;li&gt;对于每个可能出现分支指令的地址，都进行一次 BTB 查询（这种结构叫 Instruction BTB）&lt;/li&gt;&lt;li&gt;对于每个对齐的块，记录这个块内的有限条分支的信息（这种结构叫 Region BTB），Main BTB 采用的就是这种，每个对齐的 32B 块内最多保存六条分支&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;另一种结构，则是直接记录从某个 VA 开始的第一条分支，即给定 VA，查询 BTB 后，匹配到的 entry 里记录的就是从这个 VA 开始的第一条分支（这种结构叫做 Block BTB）；这样一条分支可能会出现在多个 entry 内，此时就不会涉及到上面所述的 fast path 优化&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;那么猜测 Nano BTB 和 Micro BTB 采用了 Block BTB 的方法，或者因为延迟本身就足够低，即使可以做 fast path，也没有引入 fast path 优化。&lt;/p&gt;&lt;p&gt;详细的 BTB 设计分析，可以参考 &lt;a href=&#34;../../../../2024/09/12/brief-into-ooo-3/&#34;&gt;浅谈乱序执行 CPU（三：前端）&lt;/a&gt; 的相关内容。&lt;/p&gt;&lt;p&gt;小结：Main BTB 可以在 2 或 3 周期提供预测，其中 2 周期预测的条件是，只找到一条 VA 大于或等于输入 VA 的分支，此时可以跳过求 min 的组合逻辑，在第二个周期给出预测。&lt;/p&gt;&lt;h2 id=&#34;模拟&#34;&gt;模拟&lt;a class=&#34;headerlink&#34; href=&#34;#模拟&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;既然已经知道了它的 BTB 结构，就写了一段程序来模拟它的工作过程：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// Cortex-A76/Neoverse-N1 BTB model&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// 16-entry Nano BTB, fully associative, 1 cycle latency.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// 64-entry Micro BTB, fully associative, 2 cycle latency.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// 3072-entry Main BTB, 3-way set associative, 2-3 cycle latency, each entry at&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// most 2 branches, index PC[14:5].&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;utility&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-16&#34;&gt;&lt;a id=&#34;__codelineno-2-16&#34; name=&#34;__codelineno-2-16&#34; href=&#34;#__codelineno-2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-17&#34;&gt;&lt;a id=&#34;__codelineno-2-17&#34; name=&#34;__codelineno-2-17&#34; href=&#34;#__codelineno-2-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-18&#34;&gt;&lt;a id=&#34;__codelineno-2-18&#34; name=&#34;__codelineno-2-18&#34; href=&#34;#__codelineno-2-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-19&#34;&gt;&lt;a id=&#34;__codelineno-2-19&#34; name=&#34;__codelineno-2-19&#34; href=&#34;#__codelineno-2-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-20&#34;&gt;&lt;a id=&#34;__codelineno-2-20&#34; name=&#34;__codelineno-2-20&#34; href=&#34;#__codelineno-2-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-21&#34;&gt;&lt;a id=&#34;__codelineno-2-21&#34; name=&#34;__codelineno-2-21&#34; href=&#34;#__codelineno-2-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NanoBTBEntry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-22&#34;&gt;&lt;a id=&#34;__codelineno-2-22&#34; name=&#34;__codelineno-2-22&#34; href=&#34;#__codelineno-2-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MicroBTBEntry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-23&#34;&gt;&lt;a id=&#34;__codelineno-2-23&#34; name=&#34;__codelineno-2-23&#34; href=&#34;#__codelineno-2-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MainBTBEntry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-24&#34;&gt;&lt;a id=&#34;__codelineno-2-24&#34; name=&#34;__codelineno-2-24&#34; href=&#34;#__codelineno-2-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-25&#34;&gt;&lt;a id=&#34;__codelineno-2-25&#34; name=&#34;__codelineno-2-25&#34; href=&#34;#__codelineno-2-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-26&#34;&gt;&lt;a id=&#34;__codelineno-2-26&#34; name=&#34;__codelineno-2-26&#34; href=&#34;#__codelineno-2-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NanoBTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-27&#34;&gt;&lt;a id=&#34;__codelineno-2-27&#34; name=&#34;__codelineno-2-27&#34; href=&#34;#__codelineno-2-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MicroBTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-28&#34;&gt;&lt;a id=&#34;__codelineno-2-28&#34; name=&#34;__codelineno-2-28&#34; href=&#34;#__codelineno-2-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// pretend as 6-way&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-29&#34;&gt;&lt;a id=&#34;__codelineno-2-29&#34; name=&#34;__codelineno-2-29&#34; href=&#34;#__codelineno-2-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MainBTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-30&#34;&gt;&lt;a id=&#34;__codelineno-2-30&#34; name=&#34;__codelineno-2-30&#34; href=&#34;#__codelineno-2-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 64KB ICache, pretend as direct mapped&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-31&#34;&gt;&lt;a id=&#34;__codelineno-2-31&#34; name=&#34;__codelineno-2-31&#34; href=&#34;#__codelineno-2-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// index: PC[15:6]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-32&#34;&gt;&lt;a id=&#34;__codelineno-2-32&#34; name=&#34;__codelineno-2-32&#34; href=&#34;#__codelineno-2-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// tag: PC[:16]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-33&#34;&gt;&lt;a id=&#34;__codelineno-2-33&#34; name=&#34;__codelineno-2-33&#34; href=&#34;#__codelineno-2-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iCache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-34&#34;&gt;&lt;a id=&#34;__codelineno-2-34&#34; name=&#34;__codelineno-2-34&#34; href=&#34;#__codelineno-2-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-35&#34;&gt;&lt;a id=&#34;__codelineno-2-35&#34; name=&#34;__codelineno-2-35&#34; href=&#34;#__codelineno-2-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// return latency&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-36&#34;&gt;&lt;a id=&#34;__codelineno-2-36&#34; name=&#34;__codelineno-2-36&#34; href=&#34;#__codelineno-2-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// use pc to predict a branch at pc, i.e. pva = pc&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-37&#34;&gt;&lt;a id=&#34;__codelineno-2-37&#34; name=&#34;__codelineno-2-37&#34; href=&#34;#__codelineno-2-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-38&#34;&gt;&lt;a id=&#34;__codelineno-2-38&#34; name=&#34;__codelineno-2-38&#34; href=&#34;#__codelineno-2-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// BTB miss penalty&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-39&#34;&gt;&lt;a id=&#34;__codelineno-2-39&#34; name=&#34;__codelineno-2-39&#34; href=&#34;#__codelineno-2-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Nano BTB at P1&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-40&#34;&gt;&lt;a id=&#34;__codelineno-2-40&#34; name=&#34;__codelineno-2-40&#34; href=&#34;#__codelineno-2-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-41&#34;&gt;&lt;a id=&#34;__codelineno-2-41&#34; name=&#34;__codelineno-2-41&#34; href=&#34;#__codelineno-2-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-42&#34;&gt;&lt;a id=&#34;__codelineno-2-42&#34; name=&#34;__codelineno-2-42&#34; href=&#34;#__codelineno-2-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Nano BTB hit&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-43&#34;&gt;&lt;a id=&#34;__codelineno-2-43&#34; name=&#34;__codelineno-2-43&#34; href=&#34;#__codelineno-2-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// LRU: move it to head&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-44&#34;&gt;&lt;a id=&#34;__codelineno-2-44&#34; name=&#34;__codelineno-2-44&#34; href=&#34;#__codelineno-2-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-45&#34;&gt;&lt;a id=&#34;__codelineno-2-45&#34; name=&#34;__codelineno-2-45&#34; href=&#34;#__codelineno-2-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-46&#34;&gt;&lt;a id=&#34;__codelineno-2-46&#34; name=&#34;__codelineno-2-46&#34; href=&#34;#__codelineno-2-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-47&#34;&gt;&lt;a id=&#34;__codelineno-2-47&#34; name=&#34;__codelineno-2-47&#34; href=&#34;#__codelineno-2-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-48&#34;&gt;&lt;a id=&#34;__codelineno-2-48&#34; name=&#34;__codelineno-2-48&#34; href=&#34;#__codelineno-2-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-49&#34;&gt;&lt;a id=&#34;__codelineno-2-49&#34; name=&#34;__codelineno-2-49&#34; href=&#34;#__codelineno-2-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-50&#34;&gt;&lt;a id=&#34;__codelineno-2-50&#34; name=&#34;__codelineno-2-50&#34; href=&#34;#__codelineno-2-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_btb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-51&#34;&gt;&lt;a id=&#34;__codelineno-2-51&#34; name=&#34;__codelineno-2-51&#34; href=&#34;#__codelineno-2-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-52&#34;&gt;&lt;a id=&#34;__codelineno-2-52&#34; name=&#34;__codelineno-2-52&#34; href=&#34;#__codelineno-2-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-53&#34;&gt;&lt;a id=&#34;__codelineno-2-53&#34; name=&#34;__codelineno-2-53&#34; href=&#34;#__codelineno-2-53&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-54&#34;&gt;&lt;a id=&#34;__codelineno-2-54&#34; name=&#34;__codelineno-2-54&#34; href=&#34;#__codelineno-2-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Nano BTB miss, check Micro BTB at P1&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-55&#34;&gt;&lt;a id=&#34;__codelineno-2-55&#34; name=&#34;__codelineno-2-55&#34; href=&#34;#__codelineno-2-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// like victim cache&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-56&#34;&gt;&lt;a id=&#34;__codelineno-2-56&#34; name=&#34;__codelineno-2-56&#34; href=&#34;#__codelineno-2-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-57&#34;&gt;&lt;a id=&#34;__codelineno-2-57&#34; name=&#34;__codelineno-2-57&#34; href=&#34;#__codelineno-2-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-58&#34;&gt;&lt;a id=&#34;__codelineno-2-58&#34; name=&#34;__codelineno-2-58&#34; href=&#34;#__codelineno-2-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Micro BTB hit&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-59&#34;&gt;&lt;a id=&#34;__codelineno-2-59&#34; name=&#34;__codelineno-2-59&#34; href=&#34;#__codelineno-2-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Move to Nano BTB&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-60&#34;&gt;&lt;a id=&#34;__codelineno-2-60&#34; name=&#34;__codelineno-2-60&#34; href=&#34;#__codelineno-2-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-61&#34;&gt;&lt;a id=&#34;__codelineno-2-61&#34; name=&#34;__codelineno-2-61&#34; href=&#34;#__codelineno-2-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-62&#34;&gt;&lt;a id=&#34;__codelineno-2-62&#34; name=&#34;__codelineno-2-62&#34; href=&#34;#__codelineno-2-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-63&#34;&gt;&lt;a id=&#34;__codelineno-2-63&#34; name=&#34;__codelineno-2-63&#34; href=&#34;#__codelineno-2-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-64&#34;&gt;&lt;a id=&#34;__codelineno-2-64&#34; name=&#34;__codelineno-2-64&#34; href=&#34;#__codelineno-2-64&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-65&#34;&gt;&lt;a id=&#34;__codelineno-2-65&#34; name=&#34;__codelineno-2-65&#34; href=&#34;#__codelineno-2-65&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-66&#34;&gt;&lt;a id=&#34;__codelineno-2-66&#34; name=&#34;__codelineno-2-66&#34; href=&#34;#__codelineno-2-66&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-67&#34;&gt;&lt;a id=&#34;__codelineno-2-67&#34; name=&#34;__codelineno-2-67&#34; href=&#34;#__codelineno-2-67&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-68&#34;&gt;&lt;a id=&#34;__codelineno-2-68&#34; name=&#34;__codelineno-2-68&#34; href=&#34;#__codelineno-2-68&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-69&#34;&gt;&lt;a id=&#34;__codelineno-2-69&#34; name=&#34;__codelineno-2-69&#34; href=&#34;#__codelineno-2-69&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-70&#34;&gt;&lt;a id=&#34;__codelineno-2-70&#34; name=&#34;__codelineno-2-70&#34; href=&#34;#__codelineno-2-70&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-71&#34;&gt;&lt;a id=&#34;__codelineno-2-71&#34; name=&#34;__codelineno-2-71&#34; href=&#34;#__codelineno-2-71&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-72&#34;&gt;&lt;a id=&#34;__codelineno-2-72&#34; name=&#34;__codelineno-2-72&#34; href=&#34;#__codelineno-2-72&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_btb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-73&#34;&gt;&lt;a id=&#34;__codelineno-2-73&#34; name=&#34;__codelineno-2-73&#34; href=&#34;#__codelineno-2-73&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-74&#34;&gt;&lt;a id=&#34;__codelineno-2-74&#34; name=&#34;__codelineno-2-74&#34; href=&#34;#__codelineno-2-74&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-75&#34;&gt;&lt;a id=&#34;__codelineno-2-75&#34; name=&#34;__codelineno-2-75&#34; href=&#34;#__codelineno-2-75&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-76&#34;&gt;&lt;a id=&#34;__codelineno-2-76&#34; name=&#34;__codelineno-2-76&#34; href=&#34;#__codelineno-2-76&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Micro BTB miss&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-77&#34;&gt;&lt;a id=&#34;__codelineno-2-77&#34; name=&#34;__codelineno-2-77&#34; href=&#34;#__codelineno-2-77&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-78&#34;&gt;&lt;a id=&#34;__codelineno-2-78&#34; name=&#34;__codelineno-2-78&#34; href=&#34;#__codelineno-2-78&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-79&#34;&gt;&lt;a id=&#34;__codelineno-2-79&#34; name=&#34;__codelineno-2-79&#34; href=&#34;#__codelineno-2-79&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-80&#34;&gt;&lt;a id=&#34;__codelineno-2-80&#34; name=&#34;__codelineno-2-80&#34; href=&#34;#__codelineno-2-80&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-81&#34;&gt;&lt;a id=&#34;__codelineno-2-81&#34; name=&#34;__codelineno-2-81&#34; href=&#34;#__codelineno-2-81&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;microBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-82&#34;&gt;&lt;a id=&#34;__codelineno-2-82&#34; name=&#34;__codelineno-2-82&#34; href=&#34;#__codelineno-2-82&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-83&#34;&gt;&lt;a id=&#34;__codelineno-2-83&#34; name=&#34;__codelineno-2-83&#34; href=&#34;#__codelineno-2-83&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-84&#34;&gt;&lt;a id=&#34;__codelineno-2-84&#34; name=&#34;__codelineno-2-84&#34; href=&#34;#__codelineno-2-84&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-85&#34;&gt;&lt;a id=&#34;__codelineno-2-85&#34; name=&#34;__codelineno-2-85&#34; href=&#34;#__codelineno-2-85&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-86&#34;&gt;&lt;a id=&#34;__codelineno-2-86&#34; name=&#34;__codelineno-2-86&#34; href=&#34;#__codelineno-2-86&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-87&#34;&gt;&lt;a id=&#34;__codelineno-2-87&#34; name=&#34;__codelineno-2-87&#34; href=&#34;#__codelineno-2-87&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nanoBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-88&#34;&gt;&lt;a id=&#34;__codelineno-2-88&#34; name=&#34;__codelineno-2-88&#34; href=&#34;#__codelineno-2-88&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-89&#34;&gt;&lt;a id=&#34;__codelineno-2-89&#34; name=&#34;__codelineno-2-89&#34; href=&#34;#__codelineno-2-89&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;main_btb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-90&#34;&gt;&lt;a id=&#34;__codelineno-2-90&#34; name=&#34;__codelineno-2-90&#34; href=&#34;#__codelineno-2-90&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// check Main BTB&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-91&#34;&gt;&lt;a id=&#34;__codelineno-2-91&#34; name=&#34;__codelineno-2-91&#34; href=&#34;#__codelineno-2-91&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// PC[4:2]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-92&#34;&gt;&lt;a id=&#34;__codelineno-2-92&#34; name=&#34;__codelineno-2-92&#34; href=&#34;#__codelineno-2-92&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-93&#34;&gt;&lt;a id=&#34;__codelineno-2-93&#34; name=&#34;__codelineno-2-93&#34; href=&#34;#__codelineno-2-93&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// PC[14:5]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-94&#34;&gt;&lt;a id=&#34;__codelineno-2-94&#34; name=&#34;__codelineno-2-94&#34; href=&#34;#__codelineno-2-94&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x7fe0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-95&#34;&gt;&lt;a id=&#34;__codelineno-2-95&#34; name=&#34;__codelineno-2-95&#34; href=&#34;#__codelineno-2-95&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-96&#34;&gt;&lt;a id=&#34;__codelineno-2-96&#34; name=&#34;__codelineno-2-96&#34; href=&#34;#__codelineno-2-96&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// PC[n:15]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-97&#34;&gt;&lt;a id=&#34;__codelineno-2-97&#34; name=&#34;__codelineno-2-97&#34; href=&#34;#__codelineno-2-97&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-98&#34;&gt;&lt;a id=&#34;__codelineno-2-98&#34; name=&#34;__codelineno-2-98&#34; href=&#34;#__codelineno-2-98&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-99&#34;&gt;&lt;a id=&#34;__codelineno-2-99&#34; name=&#34;__codelineno-2-99&#34; href=&#34;#__codelineno-2-99&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-100&#34;&gt;&lt;a id=&#34;__codelineno-2-100&#34; name=&#34;__codelineno-2-100&#34; href=&#34;#__codelineno-2-100&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-101&#34;&gt;&lt;a id=&#34;__codelineno-2-101&#34; name=&#34;__codelineno-2-101&#34; href=&#34;#__codelineno-2-101&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-102&#34;&gt;&lt;a id=&#34;__codelineno-2-102&#34; name=&#34;__codelineno-2-102&#34; href=&#34;#__codelineno-2-102&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// find matches&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-103&#34;&gt;&lt;a id=&#34;__codelineno-2-103&#34; name=&#34;__codelineno-2-103&#34; href=&#34;#__codelineno-2-103&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-104&#34;&gt;&lt;a id=&#34;__codelineno-2-104&#34; name=&#34;__codelineno-2-104&#34; href=&#34;#__codelineno-2-104&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// check offset&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-105&#34;&gt;&lt;a id=&#34;__codelineno-2-105&#34; name=&#34;__codelineno-2-105&#34; href=&#34;#__codelineno-2-105&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-106&#34;&gt;&lt;a id=&#34;__codelineno-2-106&#34; name=&#34;__codelineno-2-106&#34; href=&#34;#__codelineno-2-106&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-107&#34;&gt;&lt;a id=&#34;__codelineno-2-107&#34; name=&#34;__codelineno-2-107&#34; href=&#34;#__codelineno-2-107&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-108&#34;&gt;&lt;a id=&#34;__codelineno-2-108&#34; name=&#34;__codelineno-2-108&#34; href=&#34;#__codelineno-2-108&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-109&#34;&gt;&lt;a id=&#34;__codelineno-2-109&#34; name=&#34;__codelineno-2-109&#34; href=&#34;#__codelineno-2-109&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-110&#34;&gt;&lt;a id=&#34;__codelineno-2-110&#34; name=&#34;__codelineno-2-110&#34; href=&#34;#__codelineno-2-110&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-111&#34;&gt;&lt;a id=&#34;__codelineno-2-111&#34; name=&#34;__codelineno-2-111&#34; href=&#34;#__codelineno-2-111&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-112&#34;&gt;&lt;a id=&#34;__codelineno-2-112&#34; name=&#34;__codelineno-2-112&#34; href=&#34;#__codelineno-2-112&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-113&#34;&gt;&lt;a id=&#34;__codelineno-2-113&#34; name=&#34;__codelineno-2-113&#34; href=&#34;#__codelineno-2-113&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-114&#34;&gt;&lt;a id=&#34;__codelineno-2-114&#34; name=&#34;__codelineno-2-114&#34; href=&#34;#__codelineno-2-114&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-115&#34;&gt;&lt;a id=&#34;__codelineno-2-115&#34; name=&#34;__codelineno-2-115&#34; href=&#34;#__codelineno-2-115&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-116&#34;&gt;&lt;a id=&#34;__codelineno-2-116&#34; name=&#34;__codelineno-2-116&#34; href=&#34;#__codelineno-2-116&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-117&#34;&gt;&lt;a id=&#34;__codelineno-2-117&#34; name=&#34;__codelineno-2-117&#34; href=&#34;#__codelineno-2-117&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-118&#34;&gt;&lt;a id=&#34;__codelineno-2-118&#34; name=&#34;__codelineno-2-118&#34; href=&#34;#__codelineno-2-118&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// hit&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-119&#34;&gt;&lt;a id=&#34;__codelineno-2-119&#34; name=&#34;__codelineno-2-119&#34; href=&#34;#__codelineno-2-119&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-120&#34;&gt;&lt;a id=&#34;__codelineno-2-120&#34; name=&#34;__codelineno-2-120&#34; href=&#34;#__codelineno-2-120&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-121&#34;&gt;&lt;a id=&#34;__codelineno-2-121&#34; name=&#34;__codelineno-2-121&#34; href=&#34;#__codelineno-2-121&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// LRU&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-122&#34;&gt;&lt;a id=&#34;__codelineno-2-122&#34; name=&#34;__codelineno-2-122&#34; href=&#34;#__codelineno-2-122&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MainBTBEntry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-123&#34;&gt;&lt;a id=&#34;__codelineno-2-123&#34; name=&#34;__codelineno-2-123&#34; href=&#34;#__codelineno-2-123&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-124&#34;&gt;&lt;a id=&#34;__codelineno-2-124&#34; name=&#34;__codelineno-2-124&#34; href=&#34;#__codelineno-2-124&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-125&#34;&gt;&lt;a id=&#34;__codelineno-2-125&#34; name=&#34;__codelineno-2-125&#34; href=&#34;#__codelineno-2-125&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-126&#34;&gt;&lt;a id=&#34;__codelineno-2-126&#34; name=&#34;__codelineno-2-126&#34; href=&#34;#__codelineno-2-126&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-127&#34;&gt;&lt;a id=&#34;__codelineno-2-127&#34; name=&#34;__codelineno-2-127&#34; href=&#34;#__codelineno-2-127&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-128&#34;&gt;&lt;a id=&#34;__codelineno-2-128&#34; name=&#34;__codelineno-2-128&#34; href=&#34;#__codelineno-2-128&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-129&#34;&gt;&lt;a id=&#34;__codelineno-2-129&#34; name=&#34;__codelineno-2-129&#34; href=&#34;#__codelineno-2-129&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-130&#34;&gt;&lt;a id=&#34;__codelineno-2-130&#34; name=&#34;__codelineno-2-130&#34; href=&#34;#__codelineno-2-130&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// fast path&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-131&#34;&gt;&lt;a id=&#34;__codelineno-2-131&#34; name=&#34;__codelineno-2-131&#34; href=&#34;#__codelineno-2-131&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-132&#34;&gt;&lt;a id=&#34;__codelineno-2-132&#34; name=&#34;__codelineno-2-132&#34; href=&#34;#__codelineno-2-132&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-133&#34;&gt;&lt;a id=&#34;__codelineno-2-133&#34; name=&#34;__codelineno-2-133&#34; href=&#34;#__codelineno-2-133&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-134&#34;&gt;&lt;a id=&#34;__codelineno-2-134&#34; name=&#34;__codelineno-2-134&#34; href=&#34;#__codelineno-2-134&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-135&#34;&gt;&lt;a id=&#34;__codelineno-2-135&#34; name=&#34;__codelineno-2-135&#34; href=&#34;#__codelineno-2-135&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-136&#34;&gt;&lt;a id=&#34;__codelineno-2-136&#34; name=&#34;__codelineno-2-136&#34; href=&#34;#__codelineno-2-136&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// slow path&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-137&#34;&gt;&lt;a id=&#34;__codelineno-2-137&#34; name=&#34;__codelineno-2-137&#34; href=&#34;#__codelineno-2-137&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-138&#34;&gt;&lt;a id=&#34;__codelineno-2-138&#34; name=&#34;__codelineno-2-138&#34; href=&#34;#__codelineno-2-138&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-139&#34;&gt;&lt;a id=&#34;__codelineno-2-139&#34; name=&#34;__codelineno-2-139&#34; href=&#34;#__codelineno-2-139&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-140&#34;&gt;&lt;a id=&#34;__codelineno-2-140&#34; name=&#34;__codelineno-2-140&#34; href=&#34;#__codelineno-2-140&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-141&#34;&gt;&lt;a id=&#34;__codelineno-2-141&#34; name=&#34;__codelineno-2-141&#34; href=&#34;#__codelineno-2-141&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-142&#34;&gt;&lt;a id=&#34;__codelineno-2-142&#34; name=&#34;__codelineno-2-142&#34; href=&#34;#__codelineno-2-142&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-143&#34;&gt;&lt;a id=&#34;__codelineno-2-143&#34; name=&#34;__codelineno-2-143&#34; href=&#34;#__codelineno-2-143&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-144&#34;&gt;&lt;a id=&#34;__codelineno-2-144&#34; name=&#34;__codelineno-2-144&#34; href=&#34;#__codelineno-2-144&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// miss&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-145&#34;&gt;&lt;a id=&#34;__codelineno-2-145&#34; name=&#34;__codelineno-2-145&#34; href=&#34;#__codelineno-2-145&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-146&#34;&gt;&lt;a id=&#34;__codelineno-2-146&#34; name=&#34;__codelineno-2-146&#34; href=&#34;#__codelineno-2-146&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-147&#34;&gt;&lt;a id=&#34;__codelineno-2-147&#34; name=&#34;__codelineno-2-147&#34; href=&#34;#__codelineno-2-147&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-148&#34;&gt;&lt;a id=&#34;__codelineno-2-148&#34; name=&#34;__codelineno-2-148&#34; href=&#34;#__codelineno-2-148&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-149&#34;&gt;&lt;a id=&#34;__codelineno-2-149&#34; name=&#34;__codelineno-2-149&#34; href=&#34;#__codelineno-2-149&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-150&#34;&gt;&lt;a id=&#34;__codelineno-2-150&#34; name=&#34;__codelineno-2-150&#34; href=&#34;#__codelineno-2-150&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mainBTB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-151&#34;&gt;&lt;a id=&#34;__codelineno-2-151&#34; name=&#34;__codelineno-2-151&#34; href=&#34;#__codelineno-2-151&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-152&#34;&gt;&lt;a id=&#34;__codelineno-2-152&#34; name=&#34;__codelineno-2-152&#34; href=&#34;#__codelineno-2-152&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-153&#34;&gt;&lt;a id=&#34;__codelineno-2-153&#34; name=&#34;__codelineno-2-153&#34; href=&#34;#__codelineno-2-153&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// BTB miss&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-154&#34;&gt;&lt;a id=&#34;__codelineno-2-154&#34; name=&#34;__codelineno-2-154&#34; href=&#34;#__codelineno-2-154&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-155&#34;&gt;&lt;a id=&#34;__codelineno-2-155&#34; name=&#34;__codelineno-2-155&#34; href=&#34;#__codelineno-2-155&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// compute icache penalty&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-156&#34;&gt;&lt;a id=&#34;__codelineno-2-156&#34; name=&#34;__codelineno-2-156&#34; href=&#34;#__codelineno-2-156&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-157&#34;&gt;&lt;a id=&#34;__codelineno-2-157&#34; name=&#34;__codelineno-2-157&#34; href=&#34;#__codelineno-2-157&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-158&#34;&gt;&lt;a id=&#34;__codelineno-2-158&#34; name=&#34;__codelineno-2-158&#34; href=&#34;#__codelineno-2-158&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iCache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-159&#34;&gt;&lt;a id=&#34;__codelineno-2-159&#34; name=&#34;__codelineno-2-159&#34; href=&#34;#__codelineno-2-159&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// extra 4 cycle penalty&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-160&#34;&gt;&lt;a id=&#34;__codelineno-2-160&#34; name=&#34;__codelineno-2-160&#34; href=&#34;#__codelineno-2-160&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-161&#34;&gt;&lt;a id=&#34;__codelineno-2-161&#34; name=&#34;__codelineno-2-161&#34; href=&#34;#__codelineno-2-161&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iCache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-162&#34;&gt;&lt;a id=&#34;__codelineno-2-162&#34; name=&#34;__codelineno-2-162&#34; href=&#34;#__codelineno-2-162&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-163&#34;&gt;&lt;a id=&#34;__codelineno-2-163&#34; name=&#34;__codelineno-2-163&#34; href=&#34;#__codelineno-2-163&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-164&#34;&gt;&lt;a id=&#34;__codelineno-2-164&#34; name=&#34;__codelineno-2-164&#34; href=&#34;#__codelineno-2-164&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-165&#34;&gt;&lt;a id=&#34;__codelineno-2-165&#34; name=&#34;__codelineno-2-165&#34; href=&#34;#__codelineno-2-165&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-166&#34;&gt;&lt;a id=&#34;__codelineno-2-166&#34; name=&#34;__codelineno-2-166&#34; href=&#34;#__codelineno-2-166&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-167&#34;&gt;&lt;a id=&#34;__codelineno-2-167&#34; name=&#34;__codelineno-2-167&#34; href=&#34;#__codelineno-2-167&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-168&#34;&gt;&lt;a id=&#34;__codelineno-2-168&#34; name=&#34;__codelineno-2-168&#34; href=&#34;#__codelineno-2-168&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-169&#34;&gt;&lt;a id=&#34;__codelineno-2-169&#34; name=&#34;__codelineno-2-169&#34; href=&#34;#__codelineno-2-169&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;FILE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;btb_size.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-170&#34;&gt;&lt;a id=&#34;__codelineno-2-170&#34; name=&#34;__codelineno-2-170&#34; href=&#34;#__codelineno-2-170&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-171&#34;&gt;&lt;a id=&#34;__codelineno-2-171&#34; name=&#34;__codelineno-2-171&#34; href=&#34;#__codelineno-2-171&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16384&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-172&#34;&gt;&lt;a id=&#34;__codelineno-2-172&#34; name=&#34;__codelineno-2-172&#34; href=&#34;#__codelineno-2-172&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1048576&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-173&#34;&gt;&lt;a id=&#34;__codelineno-2-173&#34; name=&#34;__codelineno-2-173&#34; href=&#34;#__codelineno-2-173&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mults&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-174&#34;&gt;&lt;a id=&#34;__codelineno-2-174&#34; name=&#34;__codelineno-2-174&#34; href=&#34;#__codelineno-2-174&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-175&#34;&gt;&lt;a id=&#34;__codelineno-2-175&#34; name=&#34;__codelineno-2-175&#34; href=&#34;#__codelineno-2-175&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-176&#34;&gt;&lt;a id=&#34;__codelineno-2-176&#34; name=&#34;__codelineno-2-176&#34; href=&#34;#__codelineno-2-176&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;pattern,size,stride,min,avg,max&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-177&#34;&gt;&lt;a id=&#34;__codelineno-2-177&#34; name=&#34;__codelineno-2-177&#34; href=&#34;#__codelineno-2-177&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-178&#34;&gt;&lt;a id=&#34;__codelineno-2-178&#34; name=&#34;__codelineno-2-178&#34; href=&#34;#__codelineno-2-178&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-179&#34;&gt;&lt;a id=&#34;__codelineno-2-179&#34; name=&#34;__codelineno-2-179&#34; href=&#34;#__codelineno-2-179&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-180&#34;&gt;&lt;a id=&#34;__codelineno-2-180&#34; name=&#34;__codelineno-2-180&#34; href=&#34;#__codelineno-2-180&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-181&#34;&gt;&lt;a id=&#34;__codelineno-2-181&#34; name=&#34;__codelineno-2-181&#34; href=&#34;#__codelineno-2-181&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-182&#34;&gt;&lt;a id=&#34;__codelineno-2-182&#34; name=&#34;__codelineno-2-182&#34; href=&#34;#__codelineno-2-182&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-183&#34;&gt;&lt;a id=&#34;__codelineno-2-183&#34; name=&#34;__codelineno-2-183&#34; href=&#34;#__codelineno-2-183&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-184&#34;&gt;&lt;a id=&#34;__codelineno-2-184&#34; name=&#34;__codelineno-2-184&#34; href=&#34;#__codelineno-2-184&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-185&#34;&gt;&lt;a id=&#34;__codelineno-2-185&#34; name=&#34;__codelineno-2-185&#34; href=&#34;#__codelineno-2-185&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-186&#34;&gt;&lt;a id=&#34;__codelineno-2-186&#34; name=&#34;__codelineno-2-186&#34; href=&#34;#__codelineno-2-186&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-187&#34;&gt;&lt;a id=&#34;__codelineno-2-187&#34; name=&#34;__codelineno-2-187&#34; href=&#34;#__codelineno-2-187&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-188&#34;&gt;&lt;a id=&#34;__codelineno-2-188&#34; name=&#34;__codelineno-2-188&#34; href=&#34;#__codelineno-2-188&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-189&#34;&gt;&lt;a id=&#34;__codelineno-2-189&#34; name=&#34;__codelineno-2-189&#34; href=&#34;#__codelineno-2-189&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-190&#34;&gt;&lt;a id=&#34;__codelineno-2-190&#34; name=&#34;__codelineno-2-190&#34; href=&#34;#__codelineno-2-190&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-191&#34;&gt;&lt;a id=&#34;__codelineno-2-191&#34; name=&#34;__codelineno-2-191&#34; href=&#34;#__codelineno-2-191&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-192&#34;&gt;&lt;a id=&#34;__codelineno-2-192&#34; name=&#34;__codelineno-2-192&#34; href=&#34;#__codelineno-2-192&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-193&#34;&gt;&lt;a id=&#34;__codelineno-2-193&#34; name=&#34;__codelineno-2-193&#34; href=&#34;#__codelineno-2-193&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-194&#34;&gt;&lt;a id=&#34;__codelineno-2-194&#34; name=&#34;__codelineno-2-194&#34; href=&#34;#__codelineno-2-194&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cycles&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-195&#34;&gt;&lt;a id=&#34;__codelineno-2-195&#34; name=&#34;__codelineno-2-195&#34; href=&#34;#__codelineno-2-195&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;branch_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-196&#34;&gt;&lt;a id=&#34;__codelineno-2-196&#34; name=&#34;__codelineno-2-196&#34; href=&#34;#__codelineno-2-196&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// warmup&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-197&#34;&gt;&lt;a id=&#34;__codelineno-2-197&#34; name=&#34;__codelineno-2-197&#34; href=&#34;#__codelineno-2-197&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;branch_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-198&#34;&gt;&lt;a id=&#34;__codelineno-2-198&#34; name=&#34;__codelineno-2-198&#34; href=&#34;#__codelineno-2-198&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-199&#34;&gt;&lt;a id=&#34;__codelineno-2-199&#34; name=&#34;__codelineno-2-199&#34; href=&#34;#__codelineno-2-199&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-200&#34;&gt;&lt;a id=&#34;__codelineno-2-200&#34; name=&#34;__codelineno-2-200&#34; href=&#34;#__codelineno-2-200&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-201&#34;&gt;&lt;a id=&#34;__codelineno-2-201&#34; name=&#34;__codelineno-2-201&#34; href=&#34;#__codelineno-2-201&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-202&#34;&gt;&lt;a id=&#34;__codelineno-2-202&#34; name=&#34;__codelineno-2-202&#34; href=&#34;#__codelineno-2-202&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-203&#34;&gt;&lt;a id=&#34;__codelineno-2-203&#34; name=&#34;__codelineno-2-203&#34; href=&#34;#__codelineno-2-203&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// test&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-204&#34;&gt;&lt;a id=&#34;__codelineno-2-204&#34; name=&#34;__codelineno-2-204&#34; href=&#34;#__codelineno-2-204&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;branch_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-205&#34;&gt;&lt;a id=&#34;__codelineno-2-205&#34; name=&#34;__codelineno-2-205&#34; href=&#34;#__codelineno-2-205&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-206&#34;&gt;&lt;a id=&#34;__codelineno-2-206&#34; name=&#34;__codelineno-2-206&#34; href=&#34;#__codelineno-2-206&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-207&#34;&gt;&lt;a id=&#34;__codelineno-2-207&#34; name=&#34;__codelineno-2-207&#34; href=&#34;#__codelineno-2-207&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cycles&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-208&#34;&gt;&lt;a id=&#34;__codelineno-2-208&#34; name=&#34;__codelineno-2-208&#34; href=&#34;#__codelineno-2-208&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-209&#34;&gt;&lt;a id=&#34;__codelineno-2-209&#34; name=&#34;__codelineno-2-209&#34; href=&#34;#__codelineno-2-209&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpi&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cycles&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;branch_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-210&#34;&gt;&lt;a id=&#34;__codelineno-2-210&#34; name=&#34;__codelineno-2-210&#34; href=&#34;#__codelineno-2-210&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0,%d,%d,%.2f,%.2f,%.2f&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-211&#34;&gt;&lt;a id=&#34;__codelineno-2-211&#34; name=&#34;__codelineno-2-211&#34; href=&#34;#__codelineno-2-211&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fflush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-212&#34;&gt;&lt;a id=&#34;__codelineno-2-212&#34; name=&#34;__codelineno-2-212&#34; href=&#34;#__codelineno-2-212&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-213&#34;&gt;&lt;a id=&#34;__codelineno-2-213&#34; name=&#34;__codelineno-2-213&#34; href=&#34;#__codelineno-2-213&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-214&#34;&gt;&lt;a id=&#34;__codelineno-2-214&#34; name=&#34;__codelineno-2-214&#34; href=&#34;#__codelineno-2-214&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-215&#34;&gt;&lt;a id=&#34;__codelineno-2-215&#34; name=&#34;__codelineno-2-215&#34; href=&#34;#__codelineno-2-215&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个模型只评估了 BTB 和 L1 ICache 的性能影响。下面是模拟和实际的对比图，左边是模拟，右边是实际：&lt;/p&gt;&lt;p&gt;stride=4B：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-4b-model.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;stride=8B：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-8b-model.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;stride=16B：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-16b-model.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;stride=32B：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-32b-model.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;stride=64B：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-64b-model.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;stride=128B：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../arm-neoverse-n1-btb-128b-model.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到模型和实际的表现是非常一致的。&lt;/p&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;a class=&#34;headerlink&#34; href=&#34;#总结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最后总结一下 Neoverse N1 的 BTB：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;16-entry Nano BTB, fully associative, 1 cycle latency&lt;/li&gt;&lt;li&gt;64-entry Micro BTB, fully associative, 2 cycle latency, behave as victim BTB of Nano BTB&lt;/li&gt;&lt;li&gt;3072-entry(6144 branches) Main BTB, 3-way(6-branch-way) set associative, 2-3 cycle latency, each entry at most 2 branches, index PC[14:5]&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/hardware/2025/06/05/arm-neoverse-n1-btb/</link> <pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/06/05/arm-neoverse-n1-btb/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/arm-neoverse-n1-btb.png" type="image/png" length="80369" /> </item> <item> <title>Apple M4 微架构评测</title> <category>apple</category> <category>cpu</category> <category>hardware</category> <category>m4</category> <category>performance</category> <category>uarch-review</category> <description>&lt;h1 id=&#34;apple-m4-微架构评测&#34;&gt;Apple M4 微架构评测&lt;a class=&#34;headerlink&#34; href=&#34;#apple-m4-微架构评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最近拿到了 Apple M4 的环境，借此机会测试一下 Apple M4 的微架构，和之前&lt;a href=&#34;../../../../2024/12/26/apple-m1/&#34;&gt;分析的 Apple M1 的微架构&lt;/a&gt;做比较。由于 Asahi Linux 尚不支持 Apple M4，所以这里的测试都在 macOS 上进行。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Apple M4 的官方信息乏善可陈，关于微架构的信息几乎为零，但能从操作系统汇报的硬件信息中找到一些内容。&lt;/p&gt;&lt;h2 id=&#34;现有评测&#34;&gt;现有评测&lt;a class=&#34;headerlink&#34; href=&#34;#现有评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;网上已经有针对 Apple M4 微架构的评测和分析，建议阅读：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1NJ4m1w7zk/&#34;&gt;苹果 M4 性能分析：尽力了，但芯片工艺快到头了！&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下面分各个模块分别记录官方提供的信息，以及实测的结果。读者可以对照已有的第三方评测理解。官方信息与实测结果一致的数据会加粗。&lt;/p&gt;&lt;h2 id=&#34;前端&#34;&gt;前端&lt;a class=&#34;headerlink&#34; href=&#34;#前端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;取指带宽&#34;&gt;取指带宽&lt;a class=&#34;headerlink&#34; href=&#34;#取指带宽&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;为了测试实际的 Fetch 宽度，参考 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/720136752&#34;&gt;如何测量真正的取指带宽（I-fetch width） - JamesAslan&lt;/a&gt; 构造了测试。&lt;/p&gt;&lt;p&gt;其原理是当 Fetch 要跨页的时候，由于两个相邻页可能映射到不同的物理地址，如果要支持单周期跨页取指，需要查询两次 ITLB，或者 ITLB 需要把相邻两个页的映射存在一起。这个场景一般比较少，处理器很少会针对这种特殊情况做优化，但也不是没有。经过测试，把循环放在两个页的边界上，发现 M4 P-Core 微架构遇到跨页的取指时确实会拆成两个周期来进行。&lt;/p&gt;&lt;p&gt;在此基础上，构造一个循环，循环的第一条指令放在第一个页的最后四个字节，其余指令放第二个页上，那么每次循环的取指时间，就是一个周期（读取第一个页内的指令）加上第二个页内指令需要 Fetch 的周期数，多的这一个周期就足以把 Fetch 宽度从后端限制中区分开，实验结果如下：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-if-width.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;图中蓝线（cross-page）表示的就是上面所述的第一条指令放一个页，其余指令放第二个页的情况，横坐标是第二个页内的指令数，那么一次循环的指令数等于横坐标 +1。纵坐标是运行很多次循环的总 cycle 数除以循环次数，也就是平均每次循环耗费的周期数。可以看到每 16 条指令会多一个周期，因此 M4 P-Core 的前端取指宽度确实是 16 条指令，和 Apple M1 的 P-Core 是相同的。&lt;/p&gt;&lt;p&gt;为了确认这个瓶颈是由取指造成的，又构造了一组实验，把循环的所有指令都放到一个页中，这个时候 Fetch 不再成为瓶颈（图中 aligned），两个曲线的对比可以明确地得出上述结论。&lt;/p&gt;&lt;p&gt;随着指令数进一步增加，最终瓶颈在每周期执行的 NOP 指令数，因此两条线重合。&lt;/p&gt;&lt;h4 id=&#34;e-core&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;用相同的方式测试 M4 E-Core，结果如下：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-if-width.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;由于两个曲线汇合的点太前（NOP 指令执行得不够快），无法确定 M4 E-Core 的取指宽度，但可以确认的是它每周期取值不少于 10 条指令，比 Apple M1 的 E-Core 要更快。如果读者想到什么办法来确认 M4 E-Core 的取指宽度，欢迎在评论区给出。&lt;/p&gt;&lt;h3 id=&#34;l1-icache&#34;&gt;L1 ICache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-icache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：通过 sysctl 可以看到，P-Core 具有 192KB L1 ICache，E-Core 具有 128KB L1 ICache：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;hw.perflevel0.l1icachesize: 196608&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;hw.perflevel1.l1icachesize: 131072&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;延续了从 Apple M1 以来的大小。&lt;/p&gt;&lt;h4 id=&#34;p-core_1&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;为了测试 L1 ICache 容量，构造一个具有巨大指令 footprint 的循环，由大量的 nop 和最后的分支指令组成。观察在不同 footprint 大小下 M4 P-Core 的 IPC：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-fetch-bandwidth.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 footprint 在 192 KB 之前时可以达到 10 IPC，之后则快速降到 2.5 IPC，这里的 192 KB 就对应了 M4 P-Core 的 L1 ICache 的容量。虽然 Fetch 可以每周期 16 条指令，也就是一条 64B 的缓存行，由于后端的限制，只能观察到 10 的 IPC。&lt;/p&gt;&lt;h4 id=&#34;e-core_1&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;用相同的方式测试 M4 E-Core，结果如下：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-fetch-bandwidth.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 footprint 在 128 KB 之前时可以达到 5 IPC，之后则快速降到 2.0 IPC，这里的 128 KB 就对应了 M4 E-Core 的 L1 ICache 的容量。&lt;/p&gt;&lt;h3 id=&#34;btb&#34;&gt;BTB&lt;a class=&#34;headerlink&#34; href=&#34;#btb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;../../../../2024/12/26/apple-m1/&#34;&gt;Apple M1&lt;/a&gt; 的 BTB 设计相对比较简单：1024 项的组相连 L1 BTB，接着是以 192KB L1 ICache 作为兜底的 3 周期的等效 BTB。但是 M4 上的 BTB 测试图像变化很大，下面进行仔细的分析。&lt;/p&gt;&lt;h4 id=&#34;p-core_2&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_2&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;构造大量的无条件分支指令（B 指令），BTB 需要记录这些指令的目的地址，那么如果分支数量超过了 BTB 的容量，性能会出现明显下降。当把大量 B 指令紧密放置，也就是每 4 字节一条 B 指令时：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-btb-4b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到最低的 CPI 能达到接近 0.5（实际值在 0.55），说明 Apple M4 有了一定的每周期执行 2 taken branches 的能力，后面会着重讨论这一点。在经过 CPI 最低点之后，性能出现了先下降后上升再下降的情况，最终在 2048 个分支开始稳定在 2 左右（实际值在 2.10）的 CPI。&lt;/p&gt;&lt;p&gt;这个 2 左右的 CPI 一直稳定维持，一直延续到 49152 个分支。超出 BTB 容量以后，分支预测时，无法从 BTB 中得到哪些指令是分支指令的信息，只能等到取指甚至译码后才能后知后觉地发现这是一条分支指令，这样就出现了性能损失，出现了 2 CPI 的情况。49152 这个拐点，对应的是指令 footprint 超出 L1 ICache 的情况：L1 ICache 是 192KB，按照每 4 字节一个 B 指令计算，最多可以存放 49152 条 B 指令。&lt;/p&gt;&lt;p&gt;这个 2 CPI 的平台在 Apple M1 中是 3 CPI，这是一个巨大的优化，在大多数情况下，通过 L1 ICache 能以每 2 周期一条无条件分支的性能兜底。&lt;/p&gt;&lt;p&gt;接下来降低分支指令的密度，在 B 指令之间插入 NOP 指令，使得每 8 个字节有一条 B 指令，得到如下结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-btb-8b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;图像基本就是 4 字节间距情况下，整体左移的结果，说明各级 BTB 结构大概是组相连，当间距为 8 字节，PC[2] 恒为 0 的时候，只有一半的组可以被用到。&lt;/p&gt;&lt;p&gt;继续降低分支指令的密度，在 B 指令之间插入 NOP 指令，使得每 16 个字节有一条 B 指令，得到如下结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-btb-16b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;每 32 个字节有一条 B 指令：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-btb-32b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;从间距为 4 字节到间距为 32 字节，整个的图像都是类似的，只是不断在左移。但是当每 64 个字节有一条 B 指令的时候，情况就不同了：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-btb-64b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;整体的 CPI 有比较明显的下降，最低的 CPI 也在 2 以上，这和 Apple M1 上依然是在 4 字节间距的图像的基础上左移有显著的不同。&lt;/p&gt;&lt;p&gt;前面提到，Apple M4 P-Core 出现了每周期 2 taken branches，但是当分支不在同一个 64B 内的时候，性能会有明显下降；另一方面，以 ARM Neoverse V2 为例，它实现的每周期 2 taken branches，即使分支不在同一个 64B 内，也是可以做到的，下面是在 64B 间距下 ARM Neoverse V2 的测试结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-neoverse-v2-2-taken.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;根据这些现象，找到了 Apple 的一篇专利 &lt;a href=&#34;https://patents.google.com/patent/US20240028339A1/en&#34;&gt;Using a Next Fetch Predictor Circuit with Short Branches and Return Fetch Groups&lt;/a&gt;，它提到了一种符合上述现象的实现 2 taken branches 的方法：如果在一个 fetch group（在这里是 64B）内，有一条分支，它的目的地址还在这个 fetch group 内，由于 fetch group 的指令都已经取出来了，所以同一个周期内，可以从这条分支的目的地址开始，继续获取指令。下面是一个例子：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# the beginning of a fetch group&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;nop&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# the branch&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;target&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# some instructions are skipped between branch and its target&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;svc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# the branch target resides in the same fetch group&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;target:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# some instructions after the branch target&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x1&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么在传统的设计里，这段代码会被分成两个周期去取指，第一个周期取 &lt;code&gt;nop&lt;/code&gt; 和 &lt;code&gt;b target&lt;/code&gt;，第二个周期取 &lt;code&gt;add x3, x2, x1&lt;/code&gt; 和 &lt;code&gt;ret&lt;/code&gt;；按照这个专利的说法，可以在一个周期内取出所有指令，然后把中间被跳过的 &lt;code&gt;svc #0&lt;/code&gt; 指令跳过去，不去执行它。当然了，分支预测器那边也需要做修改，能够去预测第二个分支的目的地址，用于下一个周期。&lt;/p&gt;&lt;p&gt;如果是这种实现方法，是可能在一个 Coupled 前端内，实现这种有限场景的每周期执行 2 taken branches，核心是每周期依然只访问一次 ICache。&lt;/p&gt;&lt;h4 id=&#34;e-core_2&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_2&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;另一方面，M4 E-Core 的 BTB 设计和 Apple M1 的 E-Core 十分接近，当分支间距是 4 字节时：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-btb-4b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 1024 的拐点，1024 之前是 1 IPC，之后增加到 3 IPC。比较奇怪的是，没有看到第二个拐点。&lt;/p&gt;&lt;p&gt;8B 的间距：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-btb-8b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;拐点前移到 512。&lt;/p&gt;&lt;p&gt;16B 的间距：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-btb-16b.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;第一个拐点前移到 256，第二个拐点出现在 8192，而 M4 E-Core 的 L1 ICache 容量是 128KB，16B 间距下正好可以保存 8192 个分支。&lt;/p&gt;&lt;p&gt;可见 M4 E-Core 的前端设计和 M4 P-Core 有较大的不同。&lt;/p&gt;&lt;h3 id=&#34;l1-itlb&#34;&gt;L1 ITLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-itlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_3&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_3&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;构造一系列的 B 指令，使得 B 指令分布在不同的 page 上，使得 ITLB 成为瓶颈，在 M4 P-Core 上进行测试：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-itlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;第一个拐点是由于 L1 BTB 的冲突缺失，之后在 192 个页时从 3 Cycle 快速增加到 12 Cycle，则对应了 192 项的 L1 ITLB 容量。这和 M1 P-Core 是一样的。&lt;/p&gt;&lt;h4 id=&#34;e-core_3&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_3&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 E-Core 上重复实验：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-itlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;第一个拐点是由于 L1 BTB 的冲突缺失，之后在 192 个页时从 3 Cycle 快速增加到 10 Cycle，则对应了 192 项的 L1 ITLB 容量。相比 M1 E-Core 的 128 项，容量变大了，和 M4 P-Core 看齐。&lt;/p&gt;&lt;h3 id=&#34;decode&#34;&gt;Decode&lt;a class=&#34;headerlink&#34; href=&#34;#decode&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;从前面的测试来看，M4 P-Core 最大观察到 10 IPC，M4 E-Core 最大观察到 5 IPC，那么 Decode 宽度也至少是这么多，暂时也不能排除有更大的 Decode 宽度。相比 M1 的 P-Core 8 IPC，E-Core 4 IPC 都有拓宽。&lt;/p&gt;&lt;h3 id=&#34;return-stack&#34;&gt;Return Stack&lt;a class=&#34;headerlink&#34; href=&#34;#return-stack&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_4&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_4&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;构造不同深度的调用链，测试每次调用花费的平均时间，在 M4 P-Core 上得到下面的图：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-rs.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到调用链深度为 60 时性能突然变差，因此 M4 P-Core 的 Return Stack 深度为 60，比 M1 P-Core 的 50 要更大。这里测试的两个 Variant，对应的是 Return 的目的地址不变还是会变化。&lt;/p&gt;&lt;h4 id=&#34;e-core_4&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_4&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 E-Core 上测试：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-rs.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到调用链深度为 40 时性能突然变差，因此 M4 E-Core 的 Return Stack 深度为 40，比 M1 E-Core 的 32 要更大。&lt;/p&gt;&lt;h2 id=&#34;后端&#34;&gt;后端&lt;a class=&#34;headerlink&#34; href=&#34;#后端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;物理寄存器堆&#34;&gt;物理寄存器堆&lt;a class=&#34;headerlink&#34; href=&#34;#物理寄存器堆&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_5&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_5&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;为了测试物理寄存器堆的大小，一般会用两个依赖链很长的操作放在开头和结尾，中间填入若干个无关的指令，并且用这些指令来耗费物理寄存器堆。M4 P-Core 测试结果见下图：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-prf.png&#34; /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;32b int：测试 speculative 32 位整数寄存器的数量，拐点在 720 左右&lt;/li&gt;&lt;li&gt;64b int：测试 speculative 64 位整数寄存器的数量，拐点在 360 左右，只有 32b 的一半，可见实际的物理寄存器堆有 360 左右个 64 位整数寄存器，但是可以分成两半分别当成 32 位整数寄存器用，这一个优化在 M1 是没有的，即用 32b 或者用 64b 整数，测出来的整数寄存器数量相同&lt;/li&gt;&lt;li&gt;flags：测试 speculative NZCV 寄存器的数量，拐点在 175 左右&lt;/li&gt;&lt;li&gt;32b fp：测试 speculative 32 位浮点寄存器的数量，没有观察到明显的拐点&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;寄存器堆大小和 M1 P-Core 比较类似，但是多了 32 位整数寄存器的优化。&lt;/p&gt;&lt;h4 id=&#34;e-core_5&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_5&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 E-Core 上复现相同的测试，发现性能非常不稳定，不确定是什么原因。&lt;/p&gt;&lt;h3 id=&#34;load-store-unit--l1-dcache&#34;&gt;Load Store Unit + L1 DCache&lt;a class=&#34;headerlink&#34; href=&#34;#load-store-unit--l1-dcache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;l1-dcache-容量&#34;&gt;L1 DCache 容量&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dcache-容量&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;官方信息：通过 sysctl 可以看到，M4 P-Core 具有 128KB L1 DCache，M4 E-Core 具有 64KB L1 DCache：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;hw.perflevel0.l1dcachesize: 131072&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;hw.perflevel1.l1dcachesize: 65536&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;和 M1 相同。&lt;/p&gt;&lt;h5 id=&#34;p-core_6&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_6&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;构造不同大小 footprint 的 pointer chasing 链，在每个页的开头放一个指针，测试不同 footprint 下每条 load 指令耗费的时间，M4 P-Core 上的结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-l1dc.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 128KB 出现了拐点，对应的就是 128KB 的 L1 DCache 容量。当 footprint 比较小的时候，由于 Load Address/Value Predictor 的介入，打破了依赖链，所以出现了 latency 小于正常 load to use 的 3 cycle latency 的情况。&lt;/p&gt;&lt;h5 id=&#34;e-core_6&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_6&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;M4 E-Core 上的结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-l1dc.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 128KB 出现了明显的拐点，但实际上 M4 E-Core 的 L1 DCache 只有 64KB。猜测这是因为在测试的时候，是在每个 16KB 页的开头放一个指针，但如果 L1 DCache 的 Index 并非都在 16KB 内部，就会导致实际测出来的不是 L1 DCache 的大小。修改测试，使得每 8 字节一个指针，此时测出来的结果就是正确的 64KB 大小：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-l1dc-2.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;此时 64KB 对应的就是 64KB 的 L1 DCache 容量。L1 DCache 范围内延迟是 3 cycle，之后提升到 14+ cycle。由此可见 M4 E-Core 没有 Load Address/Value Predictor，不能打断依赖链。&lt;/p&gt;&lt;h4 id=&#34;l1-dtlb-容量&#34;&gt;L1 DTLB 容量&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dtlb-容量&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;h5 id=&#34;p-core_7&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_7&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;用类似的方法测试 L1 DTLB 容量，只不过这次 pointer chasing 链的指针分布在不同的 page 的不同 cache line 上，使得 DTLB 成为瓶颈，在 M4 P-Core 上：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-l1dtlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;从 160 个页开始性能下降，到 200 个页时性能稳定在 9 CPI，认为 M4 P-Core 的 L1 DTLB 有 160 项，大小和 M1 P-Core 相同。9 CPI 包括了 L1 DTLB miss L2 TLB hit 带来的额外延迟。中间有时性能特别快，是 Load Address/Value Predictor 的功劳。&lt;/p&gt;&lt;h5 id=&#34;e-core_7&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_7&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;M4 E-Core 测试结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-l1dtlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;从 192 个页开始性能下降，到 224 个页时性能稳定在 9 CPI，认为 M4 E-Core 的 L1 DTLB 有 192 项，比 M1 E-Core 的 128 项更大，甚至大过了 P-Core。9 CPI 包括了 L1 DTLB miss L2 TLB hit 带来的额外延迟，比 M1 E-Core 少了一个周期。&lt;/p&gt;&lt;h4 id=&#34;loadstore-带宽&#34;&gt;Load/Store 带宽&lt;a class=&#34;headerlink&#34; href=&#34;#loadstore-带宽&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;h5 id=&#34;p-core_8&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_8&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;针对 Load Store 带宽，实测 M4 P-Core 每个周期可以完成：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;3x 128b Load + 1x 128b Store&lt;/li&gt;&lt;li&gt;2x 128b Load + 2x 128b Store&lt;/li&gt;&lt;li&gt;1x 128b Load + 2x 128b Store&lt;/li&gt;&lt;li&gt;2x 128b Store&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果把每条指令的访存位宽从 128b 改成 256b，读写带宽不变，指令吞吐减半。也就是说最大的读带宽是 48B/cyc，最大的写带宽是 32B/cyc，二者不能同时达到。和 M1 P-Core 相同。&lt;/p&gt;&lt;h5 id=&#34;e-core_8&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_8&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;实测 M4 E-Core 每个周期可以完成：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2x 128b Load&lt;/li&gt;&lt;li&gt;1x 128b Load + 1x 128b Store&lt;/li&gt;&lt;li&gt;1x 128b Store&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果把每条指令的访存位宽从 128b 改成 256b，读写带宽不变，指令吞吐减半。也就是说最大的读带宽是 32B/cyc，最大的写带宽是 16B/cyc，二者不能同时达到。和 M1 E-Core 相同。&lt;/p&gt;&lt;h4 id=&#34;memory-dependency-predictor&#34;&gt;Memory Dependency Predictor&lt;a class=&#34;headerlink&#34; href=&#34;#memory-dependency-predictor&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;为了预测执行 Load，需要保证 Load 和之前的 Store 访问的内存没有 Overlap，那么就需要有一个预测器来预测 Load 和 Store 之前在内存上的依赖。参考 &lt;a href=&#34;https://blog.stuffedcow.net/2014/01/x86-memory-disambiguation/&#34;&gt;Store-to-Load Forwarding and Memory Disambiguation in x86 Processors&lt;/a&gt; 的方法，构造两个指令模式，分别在地址和数据上有依赖：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;数据依赖，地址无依赖：&lt;code&gt;str x3, [x1]&lt;/code&gt; 和 &lt;code&gt;ldr x3, [x2]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;地址依赖，数据无依赖：&lt;code&gt;str x2, [x1]&lt;/code&gt; 和 &lt;code&gt;ldr x1, [x2]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;初始化时，&lt;code&gt;x1&lt;/code&gt; 和 &lt;code&gt;x2&lt;/code&gt; 指向同一个地址，重复如上的指令模式，观察到多少条 &lt;code&gt;ldr&lt;/code&gt; 指令时会出现性能下降。&lt;/p&gt;&lt;h5 id=&#34;p-core_9&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_9&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;在 M4 P-Core 上测试：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-memory-dependency-predictor.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;数据依赖没有明显的阈值，但从 72 开始出现了一个小的增长，且斜率不为零；地址依赖的阈值是 39。相比 M1 P-Core 有所减小。&lt;/p&gt;&lt;h5 id=&#34;e-core_9&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_9&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;M4 E-Core:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-memory-dependency-predictor.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;数据依赖的阈值是 20，地址依赖的阈值是 14。比 M1 E-Core 略大。&lt;/p&gt;&lt;h4 id=&#34;store-to-load-forwarding&#34;&gt;Store to Load Forwarding&lt;a class=&#34;headerlink&#34; href=&#34;#store-to-load-forwarding&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;h5 id=&#34;p-core_10&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_10&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;经过实际测试，M4 P-Core 上如下的情况可以成功转发，对地址 x 的 Store 转发到对地址 y 的 Load 成功时 y-x 的取值范围：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Store\Load&lt;/th&gt;&lt;th&gt;8b Load&lt;/th&gt;&lt;th&gt;16b Load&lt;/th&gt;&lt;th&gt;32b Load&lt;/th&gt;&lt;th&gt;64b Load&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;8b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;[-1,0]&lt;/td&gt;&lt;td&gt;[-3,0]&lt;/td&gt;&lt;td&gt;[-7,0]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16b Store&lt;/td&gt;&lt;td&gt;[0,1]&lt;/td&gt;&lt;td&gt;[-1,1]&lt;/td&gt;&lt;td&gt;[-3,1]&lt;/td&gt;&lt;td&gt;[-7,1]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;32b Store&lt;/td&gt;&lt;td&gt;[0,3]&lt;/td&gt;&lt;td&gt;[-1,3]&lt;/td&gt;&lt;td&gt;[-3,3]&lt;/td&gt;&lt;td&gt;[-7,3]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;64b Store&lt;/td&gt;&lt;td&gt;[0,7]&lt;/td&gt;&lt;td&gt;[-1,7]&lt;/td&gt;&lt;td&gt;[-3,7]&lt;/td&gt;&lt;td&gt;[-7,7]&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;从上表可以看到，所有 Store 和 Load Overlap 的情况，无论地址偏移，都能成功转发。甚至在 Load 或 Store 跨越 64B 缓存行边界时，也可以成功转发，代价是多一个周期。&lt;/p&gt;&lt;p&gt;一个 Load 需要转发两个、四个甚至八个 Store 的数据时，也可以成功转发。即使数据跨越缓存行，也可以转发，只是多耗费 1-2 个周期。但在跨 64B 缓存行的时候，代价可能多于一个周期。相比 M1 P-Core，M4 P-Core 在跨越缓存行的情况下也可以得到比较好的性能。&lt;/p&gt;&lt;p&gt;成功转发时 7 cycle 左右。&lt;/p&gt;&lt;p&gt;小结：Apple M4 P-Core 的 Store to Load Forwarding：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 ld + 1 st: 支持&lt;/li&gt;&lt;li&gt;1 ld + 2 st: 支持&lt;/li&gt;&lt;li&gt;1 ld + 4 st: 支持&lt;/li&gt;&lt;li&gt;1 ld + 8 st: 支持&lt;/li&gt;&lt;li&gt;跨 64B 缓存行边界时，性能略微下降&lt;/li&gt;&lt;/ul&gt;&lt;h5 id=&#34;e-core_10&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_10&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;在 M4 E-Core 上，如果 Load 和 Store 访问范围出现重叠，当需要转发一个到两个 Store 的数据时，需要 7 Cycle，无论是否跨缓存行。如果需要转发四个 Store 的数据，则需要 8 Cycle；转发八个 Store 的数据需要 11 Cycle。相比 M1 E-Core，多数情况下获得了性能提升。&lt;/p&gt;&lt;h4 id=&#34;load-to-use-latency&#34;&gt;Load to use latency&lt;a class=&#34;headerlink&#34; href=&#34;#load-to-use-latency&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;h5 id=&#34;p-core_11&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_11&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;实测 M4 P-Core 的 Load to use latency 针对 pointer chasing 场景做了优化，在下列的场景下可以达到 3 cycle:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;ldr x0, [x0]&lt;/code&gt;: load 结果转发到基地址，无偏移&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldr x0, [x0, 8]&lt;/code&gt;：load 结果转发到基地址，有立即数偏移&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldr x0, [x0, x1]&lt;/code&gt;：load 结果转发到基地址，有寄存器偏移&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldp x0, x1, [x0]&lt;/code&gt;：load pair 的第一个目的寄存器转发到基地址，无偏移&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果访存跨越了 8B 边界，则退化到 4 cycle。&lt;/p&gt;&lt;p&gt;在下列场景下 Load to use latency 则是 4 cycle：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;load 的目的寄存器作为 alu 的源寄存器（下称 load to alu latency）&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldr x0, [sp, x0, lsl #3]&lt;/code&gt;：load 结果转发到 index&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldp x1, x0, [x0]&lt;/code&gt;：load pair 的第二个目的寄存器转发到基地址，无偏移&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;注意由于 Load Address/Value Predictor 的存在，测试的时候需要排除预测器带来的影响。延迟方面，和 M1 P-Core 相同。&lt;/p&gt;&lt;h5 id=&#34;e-core_11&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_11&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;实测 M4 E-Core 的 Load to use latency 针对 pointer chasing 场景做了优化，在下列的场景下可以达到 3 cycle:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;ldr x0, [x0]&lt;/code&gt;: load 结果转发到基地址，无偏移&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldr x0, [x0, 8]&lt;/code&gt;：load 结果转发到基地址，有立即数偏移&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldr x0, [x0, x1]&lt;/code&gt;：load 结果转发到基地址，有寄存器偏移&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldp x0, x1, [x0]&lt;/code&gt;：load pair 的第一个目的寄存器转发到基地址，无偏移&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果访存跨越了 8B/16B/32B 边界，依然是 3 cycle；跨越了 64B 边界则退化到 7 cycle。&lt;/p&gt;&lt;p&gt;在下列场景下 Load to use latency 则是 4 cycle：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;load 的目的寄存器作为 alu 的源寄存器（下称 load to alu latency）&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldr x0, [sp, x0, lsl #3]&lt;/code&gt;：load 结果转发到 index&lt;/li&gt;&lt;li&gt;&lt;code&gt;ldp x1, x0, [x0]&lt;/code&gt;：load pair 的第二个目的寄存器转发到基地址，无偏移&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;延迟方面，和 M1 E-Core 相同。&lt;/p&gt;&lt;h4 id=&#34;virtual-address-utagway-predictor&#34;&gt;Virtual Address UTag/Way-Predictor&lt;a class=&#34;headerlink&#34; href=&#34;#virtual-address-utagway-predictor&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Linear Address UTag/Way-Predictor 是 AMD 的叫法，但使用相同的测试方法，也可以在 Apple M1 上观察到类似的现象，猜想它也用了类似的基于虚拟地址的 UTag/Way Predictor 方案，并测出来它的 UTag 也有 8 bit，M4 P-Core 和 M4 E-Core 都是相同的：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;VA[14] xor VA[22] xor VA[30] xor VA[38] xor VA[46]&lt;/li&gt;&lt;li&gt;VA[15] xor VA[23] xor VA[31] xor VA[39] xor VA[47]&lt;/li&gt;&lt;li&gt;VA[16] xor VA[24] xor VA[32] xor VA[40]&lt;/li&gt;&lt;li&gt;VA[17] xor VA[25] xor VA[33] xor VA[41]&lt;/li&gt;&lt;li&gt;VA[18] xor VA[26] xor VA[34] xor VA[42]&lt;/li&gt;&lt;li&gt;VA[19] xor VA[27] xor VA[35] xor VA[43]&lt;/li&gt;&lt;li&gt;VA[20] xor VA[28] xor VA[36] xor VA[44]&lt;/li&gt;&lt;li&gt;VA[21] xor VA[29] xor VA[37] xor VA[45]&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;一共有 8 bit，由 VA[47:14] 折叠而来。和 Apple M1 相同。&lt;/p&gt;&lt;h4 id=&#34;load-addressvalue-predictor&#34;&gt;Load Address/Value Predictor&lt;a class=&#34;headerlink&#34; href=&#34;#load-addressvalue-predictor&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Apple 从 M2 开始引入 Load Address Predictor，从 M3 开始引入 Load Value Predictor，相关的信息如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Load Address Predictor：支持 Constant 和 Striding Address 两种模式，专利是 &lt;a href=&#34;https://patents.google.com/patent/US11829763B2/&#34;&gt;Early load execution via constant address and stride prediction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Load Value Predictor（也称 Load Output Predictor）：只支持 Constant Value，专利是 &lt;a href=&#34;https://patents.google.com/patent/US12067398B1/en&#34;&gt;Shared learning table for load value prediction and load address prediction&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这两个 Predictor 会对已有的基于 Load 的各种 microbenchmark 带来深刻的影响。&lt;/p&gt;&lt;p&gt;网上已有针对这两个 Predictor 的逆向和攻击：&lt;a href=&#34;https://predictors.fail/&#34;&gt;SLAP: Data Speculation Attacks via Load Address Prediction on Apple Silicon;FLOP Breaking the Apple M3 CPU via False Load Output Predictions&lt;/a&gt;。&lt;/p&gt;&lt;h5 id=&#34;p-core_12&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_12&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;构造依赖链，但是实际测试可以观察到打破依赖链的情况，比串行执行要更快。测试下来，大概可以跟踪 60 条 Load 指令的地址并实现预测。&lt;/p&gt;&lt;h5 id=&#34;e-core_12&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_12&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;M4 E-Core 没有实现 Load Address/Value Predictor。&lt;/p&gt;&lt;h3 id=&#34;执行单元&#34;&gt;执行单元&lt;a class=&#34;headerlink&#34; href=&#34;#执行单元&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_13&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_13&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 P-Core 上测试如下各类指令的延迟和每周期吞吐：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Instruction&lt;/th&gt;&lt;th&gt;Latency&lt;/th&gt;&lt;th&gt;Throughput&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;asimd int add&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd aesd/aese&lt;/td&gt;&lt;td&gt;2/3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd aesimc/aesmc&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fabs&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fadd&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fdiv 64b&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fdiv 32b&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmax&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmin&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmla&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmul&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fneg&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd frecpe&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd frsqrte&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fsqrt 64b&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fsqrt 32b&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp cvtf2i (fcvtzs)&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp cvti2f (scvtf)&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fabs&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fadd&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv 64b&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv 32b&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fjcvtzs&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmax&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmin&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmov f2i&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmov i2f&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmul&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fneg&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp frecpe&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp frecpx&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp frsqrte&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fsqrt 64b&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fsqrt 32b&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int add&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int addi&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int bfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int crc&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int csel&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int madd (addend)&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2.8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int madd (others)&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2.8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int mrs nzcv&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int mul&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int nop&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int sbfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int sdiv&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int smull&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int ubfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int udiv&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;not taken branch&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;taken branch&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;1-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem asimd load&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem asimd store&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem int load&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem int store&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;从上面的结果可以初步得到的信息：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;标量浮点和 ASIMD 吞吐最大都是 4，意味着有 4 个浮点/ASIMD 执行单元，但并非完全对称，例如 fdiv/frecpe/frecpx/frsqrte/fsqrt/fjcvtzs 由于吞吐不超过 1，大概率只能在一个执行单元内执行。但这些指令是不是都只能在同一个执行单元内执行，还需要进一步的测试；这部分和 M1 P-Core 相同，但浮点乘法 fmla/fmul 的延迟从 4 周期降低到了 3 周期&lt;/li&gt;&lt;li&gt;浮点和整数之间的 move 或 convert 指令，fmov i2f/cvti2f 吞吐是 3，fmov f2i/cvtf2i 吞吐是 2，那么这些指令是在哪个执行单元里实现的，是否需要同时占用整数执行单元和浮点执行单元，需要进一步测试；这部分和 M1 P-Core 相同&lt;/li&gt;&lt;li&gt;整数方面，根据吞吐，推断出如下几类指令对应的执行单元数量：&lt;ol&gt;&lt;li&gt;ALU: 8&lt;/li&gt;&lt;li&gt;CSEL: 4&lt;/li&gt;&lt;li&gt;Mul/MAdd: 3&lt;/li&gt;&lt;li&gt;Br/MRS NZCV: 2&lt;/li&gt;&lt;li&gt;CRC/BFM/Div: 1&lt;/li&gt;&lt;li&gt;ALU/CSEL/Mul/MAdd 的执行单元相比 M1 P-Core 有扩充&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;访存方面，每周期最多 3 Load 或者 2 Store；这部分和 M1 P-Core 相同&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;首先来看浮点和 ASIMD 单元，根据上面的信息，认为至少有 4 个执行单元，每个执行单元都可以做这些操作：asimd int add/aes/fabs/fadd/fmax/fmin/fmla/fmul/fneg，下面把这些指令称为 basic fp/asimd ops + aes。接下来要判断，fmov f2i/fmov i2f/fdiv/frecpe/frecpx/frsqrte/fsqrt 由哪些执行单元负责执行，方法是把这些指令混合起来测试吞吐（此处的吞吐不代表 CPI，而是每周能够执行多少次指令组合，例如用 2 条指令的组合测试，那么吞吐等于 CPI 除以 2）：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指令&lt;/th&gt;&lt;th&gt;吞吐&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp frecpe&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp frecpx&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp frsqrte&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp fsqrt&lt;/td&gt;&lt;td&gt;0.33=1/3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fmov f2i&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 2x fmov f2i&lt;/td&gt;&lt;td&gt;0.33=1/3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 3x fmov i2f&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 4x fmov i2f&lt;/td&gt;&lt;td&gt;0.75=1/1.33&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fmov i2f + 4x fp fadd&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fmov f2i + 4x fp fadd&lt;/td&gt;&lt;td&gt;0.75=1/1.33&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;根据以上测试结果，可以得到如下的推论：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;fp fdiv/frecpe/frecpx/frsqrte 混合的时候，吞吐只有一半，IPC 不变，说明这些指令在同一个执行单元中，混合并不能带来更高的 IPC；这部分和 M1 P-Core 相同&lt;/li&gt;&lt;li&gt;fp fdiv 和 fp fsqrt 混合时，吞吐下降到 0.33 一个不太整的数字，猜测是因为它们属于同一个执行单元内的不同流水线，抢占寄存器堆写口；这部分和 M1 P-Core 相同&lt;/li&gt;&lt;li&gt;fp fdiv + fmov f2i 的时候吞吐是 0.5，而 fdiv + 2x fmov f2i 时吞吐下降到 0.33，IPC 维持在 1，说明有 1 个执行单元执行 fdiv 或 fmov f2i，但奇怪的是单独执行 fmov f2i 可以达到 2 的 IPC；这部分吞吐比 M1 P-Core 要差&lt;/li&gt;&lt;li&gt;fp fdiv + 3x fmov i2f 的时候吞吐是 1，而 fdiv + 4x fmov i2f 时吞吐下降到 0.75，此时每周期还是执行 3 条 fmov i2f 指令，意味着 fdiv 没有抢占 fmov i2f 的执行单元，它们用的执行单元是独立的；这部分和 M1 P-Core 相同&lt;/li&gt;&lt;li&gt;fmov i2f + 4x fp fadd 的时候吞吐是 1，说明 fmov i2f 没有抢占 fp fadd 的执行单元；这部分和 M1 P-Core 相同&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;推断这四个执行单元支持的操作：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;basic fp/asimd ops + aes + fdiv + frecpe + frecpx + frsqrte + fsqrt + fmov f2i + cvtf2i&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fmov f2i + cvtf2i&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;当然还有很多指令没有测，不过原理是一样的。这部分和 M1 P-Core 相同。&lt;/p&gt;&lt;p&gt;访存部分，前面已经在测 LSU 的时候测过了，每周期 Load + Store 不超过 4 个，其中 Load 不超过 3 个，Store 不超过 2 个。虽然从 IPC 的角度来看 LSU 的 Load/Store Pipe 未必准确，比如可能它发射和提交的带宽是不同的，但先暂时简化为如下的执行单元：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;load + store&lt;/li&gt;&lt;li&gt;load&lt;/li&gt;&lt;li&gt;load&lt;/li&gt;&lt;li&gt;store&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这部分和 M1 P-Core 相同。&lt;/p&gt;&lt;p&gt;最后是整数部分。从 addi 的指令来看，有 8 个 ALU，能够执行基本的整数指令。但其他很多指令可能只有一部分执行单元可以执行：bfm/crc/csel/madd/mrs nzcv/mul/div/branch/fmov i2f。为了测试这些指令使用的执行单元是否重合，进行一系列的混合指令测试，吞吐的定义和上面相同：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指令&lt;/th&gt;&lt;th&gt;吞吐&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;4x int csel + 3x fmov i2f&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int csel + 2x fmov f2i&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x int csel + 2x fmov f2i&lt;/td&gt;&lt;td&gt;0.80=1/1.25&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int csel + int bfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + int bfm&lt;/td&gt;&lt;td&gt;0.80=1/1.25&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + int crc&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int csel + int madd&lt;/td&gt;&lt;td&gt;1.33=1/0.75&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + int madd&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + 2x int madd&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + 3x int madd&lt;/td&gt;&lt;td&gt;0.75=1/1.33&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + int mul&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int csel + int sdiv&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + int sdiv&lt;/td&gt;&lt;td&gt;0.45=1/2.23&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int csel + mrs nzcv&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + mrs nzcv&lt;/td&gt;&lt;td&gt;0.80=1/1.25&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int csel + not taken branch&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4x int csel + not taken branch&lt;/td&gt;&lt;td&gt;0.80=1/1.25&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mrs nzcv + not taken branch&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mrs nzcv + 2x not taken branch&lt;/td&gt;&lt;td&gt;0.67=1/1.50&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x fmov f2i + 2x not taken branch&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x fmov f2i + 2x int mul&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x int madd + int crc&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int madd + int crc&lt;/td&gt;&lt;td&gt;0.75=1/1.33&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x int madd + int mul&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int madd + int mul&lt;/td&gt;&lt;td&gt;0.75&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x int madd + int sdiv&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int madd + int sdiv&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3x int madd + mrs nzcv&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;根据上述结果分析：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;吞吐与不混合时相同，代表混合的指令对应的执行单元不重合&lt;/li&gt;&lt;li&gt;2x int madd + int mul 的 IPC 是 3，3x int add + int mul 的 IPC 也是 3，说明有三个执行单元可以执行 madd 和 mul：&lt;ol&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;2x int madd + int crc 的 IPC 是 3，3x int madd + int crc 的 IPC 也是 3，说明其中一个执行单元可以执行 crc：&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;4x int csel + 2x int madd 的吞吐是 1，4x int csel + 3x int madd 的吞吐是 0.75，说明它们有一个重合的执行单元，并且由于 4x int csel + int crc 的吞吐是 1，所以重合的执行单元不是 crc 的那一个：&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu + madd + mul + csel&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;4x int csel + mrs nzcv 的 IPC 等于 4，说明 mrs nzcv 的执行单元被包括在能执行 csel 的四个执行单元当中；而 3x int madd + mrs nzcv 的吞吐等于 1，说明 mrs nzcv 的执行单元和 int madd 不重合：&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu + madd + mul + csel&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;因为 mrs nzcv + 2x not taken branch 的吞吐是 0.67，此时 IPC 等于 2，说明它们的执行单元重合：&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu + madd + mul + csel&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;得到初步的结果：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu + madd + mul + csel&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;li&gt;alu&lt;/li&gt;&lt;li&gt;alu&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;还有很多其他的指令没有测试，不过方法是类似的。从上面的结果里，可以看到一些值得一提的点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;fmov f2i 同时占用了浮点执行单元和整数执行单元，这主要是为了复用寄存器堆读写口：fmov f2i 需要读浮点寄存器堆，又需要写整数寄存器堆，那就在浮点侧读寄存器，在整数侧写寄存器。&lt;/li&gt;&lt;li&gt;fmov i2f 既不在浮点，也不在整数，那只能在访存了：而正好访存执行单元需要读整数，写整数或浮点，那就可以复用它的寄存器堆写口来实现 fmov i2f 的功能。&lt;/li&gt;&lt;li&gt;可见整数/浮点/访存执行单元并不是完全隔离的，例如一些微架构，整数和浮点是直接放在一起的。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;小结：M4 P-Core 的执行单元如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu + madd + mul + csel&lt;/li&gt;&lt;li&gt;alu + madd + mul&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel&lt;/li&gt;&lt;li&gt;alu&lt;/li&gt;&lt;li&gt;alu&lt;/li&gt;&lt;li&gt;load + store&lt;/li&gt;&lt;li&gt;load&lt;/li&gt;&lt;li&gt;load&lt;/li&gt;&lt;li&gt;store&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fdiv + frecpe + frecpx + frsqrte + fsqrt + fmov f2i + cvtf2i&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fmov f2i + cvtf2i&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;相比 M1 P-Core，只在整数方面有扩充。&lt;/p&gt;&lt;h4 id=&#34;e-core_13&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_13&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;接下来用类似的方法测试 M4 E-Core：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Instruction&lt;/th&gt;&lt;th&gt;Latency&lt;/th&gt;&lt;th&gt;Throughput&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;asimd int add&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd aesd/aese&lt;/td&gt;&lt;td&gt;2.5/3&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd aesimc/aesmc&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fabs&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fadd&lt;/td&gt;&lt;td&gt;2.5&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fdiv 64b&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fdiv 32b&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmax&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmin&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmla&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fmul&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fneg&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd frecpe&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd frsqrte&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fsqrt 64b&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asimd fsqrt 32b&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp cvtf2i (fcvtzs)&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp cvti2f (scvtf)&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fabs&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fadd&lt;/td&gt;&lt;td&gt;2.5&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv 64b&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv 32b&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fjcvtzs&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmax&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmin&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmov f2i&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmov i2f&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmul&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fneg&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp frecpe&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp frecpx&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp frsqrte&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fsqrt 64b&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fsqrt 32b&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int add&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int addi&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int bfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int crc&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int csel&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int madd (addend)&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int madd (others)&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int mrs nzcv&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int mul&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int nop&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int sbfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int sdiv&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;0.125=1/8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int smull&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int ubfm&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int udiv&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;0.125=1/8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;not taken branch&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;taken branch&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem asimd load&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem asimd store&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem int load&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mem int store&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;从上面的结果可以初步得到的信息：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;标量浮点和 ASIMD 吞吐最大都是 3，意味着有 3 个浮点/ASIMD 执行单元，但并非完全对称，例如 fdiv/frecpe/frecpx/frsqrte/fsqrt 由于吞吐不超过 1，大概率只能在一个执行单元内执行；fmla/fmul 的吞吐只有 2，只能在其中两个执行单元内执行。但这些指令是不是都只能在同一个执行单元内执行，还需要进一步的测试；相比 M1 E-Core，添加了一个浮点/ASIMD 执行单元&lt;/li&gt;&lt;li&gt;整数方面，根据吞吐，推断出如下几类指令对应的执行单元数量：&lt;ol&gt;&lt;li&gt;ALU: 4&lt;/li&gt;&lt;li&gt;CSEL/MRS NZCV/SBFM/UBFM: 3&lt;/li&gt;&lt;li&gt;Br: 2&lt;/li&gt;&lt;li&gt;Mul/CRC/BFM/MAdd/Div: 1&lt;/li&gt;&lt;li&gt;相比 M1 E-Core 增加了 ALU 的数量&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;虽然 Br 的吞吐可以达到 2，但是每周期只能有一个 taken branch，和 M1 E-Core 相同&lt;/li&gt;&lt;li&gt;访存方面，每周期最多 2 Load 或者 1 Store，和 M1 E-Core 相同&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;还是先看浮点，基本指令 add/aes/fabs/fadd/fmax/fmin/fneg 都能做到 3 的吞吐，也就是这三个执行单元都能执行这些基本指令。接下来测其余指令的混合吞吐（吞吐定义见上）：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指令&lt;/th&gt;&lt;th&gt;吞吐&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp frecpe&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp frecpx&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp frsqrte&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp fsqrt&lt;/td&gt;&lt;td&gt;0.31=1/3.25&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fmov f2i&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 2x fmov f2i&lt;/td&gt;&lt;td&gt;0.66=1/1.50&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 2x fmov i2f&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 3x fmov i2f&lt;/td&gt;&lt;td&gt;0.67=1/1.50&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + fp fmul&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fdiv + 2x fp fmul&lt;/td&gt;&lt;td&gt;0.6&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp fmul + fmov f2i&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2x fp fmul + fmov f2i&lt;/td&gt;&lt;td&gt;0.67=1/1.50&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可见 fdiv/frecpe/frecpx/frsqrte/fsqrt 都在同一个执行单元内：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;basic fp/asimd ops + aes + fdiv + frecpe + frecpx + frsqrte + fsqrt&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由于 fp fdiv + 2x fmov f2i 的 IPC 是 2，说明它们有重合的执行单元：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;basic fp/asimd ops + aes + fdiv + frecpe + frecpx + frsqrte + fsqrt + fmov f2i&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fmov f2i&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;因为 2x fp fmul + fmov f2i 的 IPC 也只有 2，说明 fp fmul 和 fmov f2i 是重合的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;basic fp/asimd ops + aes + fdiv + frecpe + frecpx + frsqrte + fsqrt + fmov f2i + fmul&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fmov f2i + fmul&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;还有很多指令没有测，不过原理是一样的。访存在前面测 LSU 的时候已经测过了：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;load + store&lt;/li&gt;&lt;li&gt;load&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;最后是整数部分。从 add 的指令来看，有 4 个 ALU，能够执行基本的整数指令。但其他很多指令可能只有一部分执行单元可以执行：bfm/crc/csel/madd/mul/div/branch。为了测试这些指令使用的执行单元是否重合，进行一系列的混合指令测试，吞吐的定义和上面相同：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指令&lt;/th&gt;&lt;th&gt;吞吐&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;int madd + int mul&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int madd + int crc&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int madd + 2x not taken branch&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;由此可见，madd/mul/crc 是一个执行单元，和 branch 的两个执行单元不重合，因此整数侧的执行单元有：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;小结：M4 E-Core 的执行单元如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + madd + mul + crc&lt;/li&gt;&lt;li&gt;alu&lt;/li&gt;&lt;li&gt;load + store&lt;/li&gt;&lt;li&gt;load&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fdiv + frecpe + frecpx + frsqrte + fsqrt + fmov f2i + fmul&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes + fmov f2i + fmul&lt;/li&gt;&lt;li&gt;basic fp/asimd ops + aes&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;相比 M1 E-Core，整数和浮点方面都有扩充。&lt;/p&gt;&lt;h3 id=&#34;scheduler&#34;&gt;Scheduler&lt;a class=&#34;headerlink&#34; href=&#34;#scheduler&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_14&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_14&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 P-Core 上测试，结果如下：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指令&lt;/th&gt;&lt;th&gt;可调度 + 不可调度&lt;/th&gt;&lt;th&gt;可调度&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;ld&lt;/td&gt;&lt;td&gt;66&lt;/td&gt;&lt;td&gt;51&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;st addr&lt;/td&gt;&lt;td&gt;66&lt;/td&gt;&lt;td&gt;51&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;st data&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;alu&lt;/td&gt;&lt;td&gt;198&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fp&lt;/td&gt;&lt;td&gt;266&lt;/td&gt;&lt;td&gt;243&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;crc&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;idiv&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;bfm&lt;/td&gt;&lt;td&gt;31&lt;/td&gt;&lt;td&gt;18&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fjcvtzs&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fmov f2i&lt;/td&gt;&lt;td&gt;144&lt;/td&gt;&lt;td&gt;121&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;csel&lt;/td&gt;&lt;td&gt;98&lt;/td&gt;&lt;td&gt;85&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mrs nzcv&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;47&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;首先看浮点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;可调度部分 fp 是 243，fmov f2i 是 121，fjcvtzs 是 60，有明显的 4:2:1 的关系&lt;/li&gt;&lt;li&gt;fp/fmov f2i/fjcvtzs 吞吐刚好也是 4:2:1 的关系&lt;/li&gt;&lt;li&gt;因此四个执行单元前面各有一个独立的 60 entry 的 Scheduler&lt;/li&gt;&lt;li&gt;不可调度部分，266-243=23，144-121=23，72-60=12，猜测有两个 Non Scheduling Queue，每个 Non Scheduling Queue 12 entry，分别对应两个 Scheduler&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;相比 M1 P-Core 有比较大的扩充：Scheduler 大小从 36 扩大到 60，Non Scheduling Queue 从 6 扩大到了 12。&lt;/p&gt;&lt;p&gt;下面是访存部分，load 和 store addr 一样，但 store data 要更多，可能做了不同的处理。&lt;/p&gt;&lt;p&gt;最后是整数部分，由于有 8 个整数执行单元，情况会比较复杂：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;可调度部分 alu 一共是 175，其中 csel 是 85，crc/idiv 都是 23，bfm 是 18，mrs nzcv 是 47，结合 8 个整数执行单元，可以得到这 8 个执行单元对应的 Scheduler 大小关系：&lt;ol&gt;&lt;li&gt;alu + madd + mul + crc: 23 entries&lt;/li&gt;&lt;li&gt;alu + madd + mul + csel: a entries&lt;/li&gt;&lt;li&gt;alu + madd + mul: b entries&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch: c entries&lt;/li&gt;&lt;li&gt;alu + csel + mrs nzcv + branch: 47-c entries&lt;/li&gt;&lt;li&gt;alu + csel: 38-a entries&lt;/li&gt;&lt;li&gt;alu: d entries&lt;/li&gt;&lt;li&gt;alu: 67-b-d entries&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;alu 不可调度部分是 198-175=23，crc/idiv/bfm/csel/mrs nzcv 不可调度部分都是 13，应该是其中四个执行单元共享一个 12 entry 的 Non Scheduling Queue；另外四个执行单元共享剩下的 12 entry 的 Non Scheduling Queue&lt;/li&gt;&lt;li&gt;最后只差 a 到 d 的取值没有求出来，可以通过进一步测试来更加精确地求出&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Scheduler 大小相比 M1 P-Core 有比较大的扩充，Non Scheduling Queue 没有变化。&lt;/p&gt;&lt;h4 id=&#34;e-core_14&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_14&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 E-Core 上测试，结果很不稳定，需要进一步研究。&lt;/p&gt;&lt;h3 id=&#34;reorder-buffer&#34;&gt;Reorder Buffer&lt;a class=&#34;headerlink&#34; href=&#34;#reorder-buffer&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_15&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_15&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;首先用不同数量的 fsqrt 依赖链加 NOP 指令测试 M4 P-Core 的 ROB 大小：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-rob.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到当 fsqrt 数量足够多的时候，出现了统一的拐点，在 3184 条指令左右。&lt;/p&gt;&lt;p&gt;为了测 Coalesced ROB 的大小，改成用 load/store 指令，可以测到拐点在 313 左右：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-rob-load.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;3184 除以 313 约等于 10，意味着每个 group 可以保存 10 条指令，一共有 313 左右个 group。相比 M1 P-Core，Group 数量差不多，但是能保存的指令数量有了很大的提升。&lt;/p&gt;&lt;h4 id=&#34;e-core_15&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_15&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;首先用 NOP 指令测试 M4 E-Core 的 ROB 大小：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-rob.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到拐点是 513 条指令。&lt;/p&gt;&lt;p&gt;为了测 Coalesced ROB 的大小，改成用 load/store 指令，可以测到拐点在 121 左右：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-rob-load.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;但是 513 除以 121 是 4.24，离 4 或者 5 都有一段距离，比较奇怪，不确定每个 group 可以放多少条指令。容量上比 M1 E-Core 有明显提升。&lt;/p&gt;&lt;h3 id=&#34;l2-cache&#34;&gt;L2 Cache&lt;a class=&#34;headerlink&#34; href=&#34;#l2-cache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：通过 sysctl 可以看到，4 个 M4 P-Core 核心共享一个 16MB L2 Cache，6 个 M4 E-Core 核心共享一个 4MB L2 Cache：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;hw.perflevel0.l2cachesize: 16777216&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;hw.perflevel0.cpusperl2: 4&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;hw.perflevel1.l2cachesize: 4194304&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;hw.perflevel1.cpusperl2: 6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;l2-tlb&#34;&gt;L2 TLB&lt;a class=&#34;headerlink&#34; href=&#34;#l2-tlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;p-core_16&#34;&gt;P-Core&lt;a class=&#34;headerlink&#34; href=&#34;#p-core_16&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;沿用之前测试 L1 DTLB 的方法，把规模扩大到 L2 Unified TLB 的范围，就可以测出来 L2 Unified TLB 的容量，下面是 M4 P-Core 上的测试结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-p-core-l2tlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到拐点是 3072 个 Page，说明 M4 P-Core 的 L2 TLB 容量是 3072 项。这和 M1 P-Core 是一样的。&lt;/p&gt;&lt;h4 id=&#34;e-core_16&#34;&gt;E-Core&lt;a class=&#34;headerlink&#34; href=&#34;#e-core_16&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 M4 E-Core 上测试：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../apple-m4-e-core-l2tlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到拐点是 1024 个 Page，说明 M4 E-Core 的 L2 TLB 容量是 1024 项。这和 M4 E-Core 是一样的。&lt;/p&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;a class=&#34;headerlink&#34; href=&#34;#总结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;M4 相比 M1，在很多方面做了迭代：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;P-Core 的前端有较大改进，尤其是 BTB 部分&lt;/li&gt;&lt;li&gt;各种结构相比 M1 有了容量的增加&lt;/li&gt;&lt;li&gt;寄存器堆增加了对 32 位整数寄存器的优化&lt;/li&gt;&lt;li&gt;引入了 Load Address/Value Predictor&lt;/li&gt;&lt;li&gt;扩充了执行单元，P-Core 主要扩充了整数，E-Core 则是整数和浮点都做了扩充&lt;/li&gt;&lt;li&gt;添加了 SME 指令集&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;但也有一些遗憾，例如访存方面没有每周期带宽上的增加，P-Core 的浮点也没有增加。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/05/21/apple-m4/</link> <pubDate>Wed, 21 May 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/05/21/apple-m4/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/apple-m4.png" type="image/png" length="61963" /> </item> <item> <title>分析 Rocket Chip 中 Diplomacy 系统</title> <category>chisel</category> <category>diplomacy</category> <category>hardware</category> <category>rocketchip</category> <description>&lt;h1 id=&#34;分析-rocket-chip-中-diplomacy-系统&#34;&gt;分析 Rocket Chip 中 Diplomacy 系统&lt;a class=&#34;headerlink&#34; href=&#34;#分析-rocket-chip-中-diplomacy-系统&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Rocket Chip 大量使用了 Diplomacy 系统来组织它的总线、中断和时钟网络。因此，如果想要对 Rocket Chip 进行定制，那么必须要对 Rocket Chip 中 Diplomacy 系统的使用有充分的了解，而这方面的文档比较欠缺。本文是对 Rocket Chip 中 Diplomacy 系统的使用的分析。阅读本文前，建议阅读先前的 &lt;a href=&#34;../../../../2022/01/05/diplomacy/&#34;&gt;分析 Diplomacy 系统&lt;/a&gt; 文章，对 Diplomacy 系统的设计和内部实现获得一定的了解。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;rocket-chip-总线结构概要&#34;&gt;Rocket Chip 总线结构概要&lt;a class=&#34;headerlink&#34; href=&#34;#rocket-chip-总线结构概要&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Rocket Chip 主要有以下几个总线：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;sbus: System Bus&lt;/li&gt;&lt;li&gt;mbus: Memory Bus&lt;/li&gt;&lt;li&gt;cbus: Control Bus&lt;/li&gt;&lt;li&gt;pbus: Periphery Bus&lt;/li&gt;&lt;li&gt;fbus: Frontend Bus&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;图示可以见参考文档中的链接，不过链接中的结构和实际的有一些区别。目前的 Rocket Chip 的总线结构大致是这样：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;fbus -&amp;gt; sbus -&amp;gt; mbus&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;tile --/ \-&amp;gt; cbus -&amp;gt; pbus&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;主要是 pbus 的位置从连接 sbus 移动到了连接 cbus。&lt;/p&gt;&lt;p&gt;根据配置不同，总线结构也不同，例如在有 coh(coherence manager) 的时候，是：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;fbus -&amp;gt; sbus -&amp;gt; coh -&amp;gt; mbus&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;tile --/ \-&amp;gt; cbus -&amp;gt; pbus&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;深入分析-rocket-chip-总线结构&#34;&gt;深入分析 Rocket Chip 总线结构&lt;a class=&#34;headerlink&#34; href=&#34;#深入分析-rocket-chip-总线结构&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;下面是一个双核 Rocket Chip 的 GraphML 导出来用 yED 绘制的架构图：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../rocket-chip-diplomacy.svg&#34; /&gt;&lt;/p&gt;&lt;p&gt;接下来深入分析图中的各个连接关系以及对应的代码。&lt;/p&gt;&lt;h3 id=&#34;tilelink-和-axi-总线&#34;&gt;TileLink 和 AXI 总线&lt;a class=&#34;headerlink&#34; href=&#34;#tilelink-和-axi-总线&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这个图比较复杂，混合了多个 Diplomacy 网络，首先是总线的部分，包括 TileLink 和 AXI：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;两个 Tile，对应一个双核的系统；每个 Tile 内部有一个 dcache 和 icache，连接到一个 tlMasterXbar 上，再通过 coupler_from_rockettile 连接到 fixer 再到 system_bus_xbar&lt;/li&gt;&lt;li&gt;从 system_bus_xbar 分出来三路 Slave：&lt;ol&gt;&lt;li&gt;第一路是 cbus，通过 out_xbar，连接到多个 slave：debug，error device，plic，clint，l2 control，bootrom&lt;/li&gt;&lt;li&gt;第二路是 mmio，通过 tl2axi4，转成 AXI4 连接到外部的 MMIO 外设&lt;/li&gt;&lt;li&gt;第三路是 coh，连接到 InclusiveCache，再连接到 mbus，通过 tl2axi4，转成 AXI4 连接到外部的内存&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;system_bus_xbar 除了每个 tile 对应一个 master 以外，还有一个 master：fbus，它从外部的 AXI4 进来，通过 axi42tl 转换，接到 fbus，提供一个有缓存一致性的 AXI 访问接口，用于 DMA&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;简化后的结构如图：&lt;/p&gt;&lt;pre class=&#34;mermaid&#34;&gt;&lt;code&gt;flowchart TD subgraph tile0 dcache0[dcache] icache0[icache] tlMasterXbar0[tlMasterXbar] dcache0 --&amp;gt; tlMasterXbar0 icache0 --&amp;gt; tlMasterXbar0 end subgraph tile1 dcache1[dcache] icache1[icache] tlMasterXbar1[tlMasterXbar] dcache1 --&amp;gt; tlMasterXbar1 icache1 --&amp;gt; tlMasterXbar1 end sbus tlMasterXbar0 --&amp;gt; sbus tlMasterXbar1 --&amp;gt; sbus axi_fbus --&amp;gt; axi42tl --&amp;gt; fbus --&amp;gt; sbus sbus --&amp;gt; cbus --&amp;gt; out_xbar out_xbar --&amp;gt; debug out_xbar --&amp;gt; error out_xbar --&amp;gt; plit out_xbar --&amp;gt; clint out_xbar --&amp;gt; l2_ctrl out_xbar --&amp;gt; bootrom cbus --&amp;gt; pbus sbus --&amp;gt; tl2axi4_mmio[tl2axi4] --&amp;gt; axi_mmio sbus --&amp;gt; coh --&amp;gt; mbus --&amp;gt; tl2axi4_mem[tl2axi4] --&amp;gt; axi_mem&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么这些连接关系在代码中是怎么搭建的呢：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;首先是 tile 内部，dcache 和 icache 分别通过一个 widget 连到一个 tlMasterXbar 上：&lt;/p&gt;&lt;p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Frontend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icacheParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ICacheParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FrontendModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// icache resides in frontend&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ICache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icacheParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;masterNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;masterNode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaveNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaveNode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resetVectorSinkNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BundleBridgeSink&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;UInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;UInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;masterNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addressBits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasICacheFrontend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanHavePTW&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseTile&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;frontend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Frontend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// tlMasterXbar.node &amp;lt;-- TLWidthWidget &amp;lt;-- frontend.masterNode(i.e. icache.masterNode)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterXbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLWidthWidget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;icache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rowBits&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;frontend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;masterNode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-16&#34;&gt;&lt;a id=&#34;__codelineno-2-16&#34; name=&#34;__codelineno-2-16&#34; href=&#34;#__codelineno-2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasHellaCache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseTile&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-17&#34;&gt;&lt;a id=&#34;__codelineno-2-17&#34; name=&#34;__codelineno-2-17&#34; href=&#34;#__codelineno-2-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HellaCache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BuildHellaCache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-18&#34;&gt;&lt;a id=&#34;__codelineno-2-18&#34; name=&#34;__codelineno-2-18&#34; href=&#34;#__codelineno-2-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterXbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLWidthWidget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rowBits&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-19&#34;&gt;&lt;a id=&#34;__codelineno-2-19&#34; name=&#34;__codelineno-2-19&#34; href=&#34;#__codelineno-2-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;2. 其次是每个 tile 的 tlMasterXbar 连接到 coupler_from_rockettile，再连到 sbus(system_bus_xbar)&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in HasTiles.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/** Connect the port where the tile is the master to a TileLink interconnect. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;connectMasterPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TilePRCIDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TileType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Attachable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Unit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// crossingParams.master.where defaults to SBUS, see below&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// so dataBus is system_bus_xbar&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataBus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;locateTLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// coupler_from_rockettile (val baseName = &amp;quot;rockettile&amp;quot; in RocketTileParams)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-9&#34;&gt;&lt;a id=&#34;__codelineno-3-9&#34; name=&#34;__codelineno-3-9&#34; href=&#34;#__codelineno-3-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tileParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;baseName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-10&#34;&gt;&lt;a id=&#34;__codelineno-3-10&#34; name=&#34;__codelineno-3-10&#34; href=&#34;#__codelineno-3-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// crossMasterPort is defined below&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-11&#34;&gt;&lt;a id=&#34;__codelineno-3-11&#34; name=&#34;__codelineno-3-11&#34; href=&#34;#__codelineno-3-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;injectNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossMasterPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-12&#34;&gt;&lt;a id=&#34;__codelineno-3-12&#34; name=&#34;__codelineno-3-12&#34; href=&#34;#__codelineno-3-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-13&#34;&gt;&lt;a id=&#34;__codelineno-3-13&#34; name=&#34;__codelineno-3-13&#34; href=&#34;#__codelineno-3-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-14&#34;&gt;&lt;a id=&#34;__codelineno-3-14&#34; name=&#34;__codelineno-3-14&#34; href=&#34;#__codelineno-3-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-15&#34;&gt;&lt;a id=&#34;__codelineno-3-15&#34; name=&#34;__codelineno-3-15&#34; href=&#34;#__codelineno-3-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in HierarchicalElementPRCIDomain.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-16&#34;&gt;&lt;a id=&#34;__codelineno-3-16&#34; name=&#34;__codelineno-3-16&#34; href=&#34;#__codelineno-3-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;crossMasterPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockCrossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLOutwardNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-17&#34;&gt;&lt;a id=&#34;__codelineno-3-17&#34; name=&#34;__codelineno-3-17&#34; href=&#34;#__codelineno-3-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterResetXing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;DisableMonitors&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-18&#34;&gt;&lt;a id=&#34;__codelineno-3-18&#34; name=&#34;__codelineno-3-18&#34; href=&#34;#__codelineno-3-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makeMasterBoundaryBuffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-19&#34;&gt;&lt;a id=&#34;__codelineno-3-19&#34; name=&#34;__codelineno-3-19&#34; href=&#34;#__codelineno-3-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// masterNode is defined below&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-20&#34;&gt;&lt;a id=&#34;__codelineno-3-20&#34; name=&#34;__codelineno-3-20&#34; href=&#34;#__codelineno-3-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element_reset_domain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTLOut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;masterNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-21&#34;&gt;&lt;a id=&#34;__codelineno-3-21&#34; name=&#34;__codelineno-3-21&#34; href=&#34;#__codelineno-3-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-22&#34;&gt;&lt;a id=&#34;__codelineno-3-22&#34; name=&#34;__codelineno-3-22&#34; href=&#34;#__codelineno-3-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterClockXing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossOut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterResetXing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-23&#34;&gt;&lt;a id=&#34;__codelineno-3-23&#34; name=&#34;__codelineno-3-23&#34; href=&#34;#__codelineno-3-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterClockXing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-24&#34;&gt;&lt;a id=&#34;__codelineno-3-24&#34; name=&#34;__codelineno-3-24&#34; href=&#34;#__codelineno-3-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-25&#34;&gt;&lt;a id=&#34;__codelineno-3-25&#34; name=&#34;__codelineno-3-25&#34; href=&#34;#__codelineno-3-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-26&#34;&gt;&lt;a id=&#34;__codelineno-3-26&#34; name=&#34;__codelineno-3-26&#34; href=&#34;#__codelineno-3-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in RocketTile.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-27&#34;&gt;&lt;a id=&#34;__codelineno-3-27&#34; name=&#34;__codelineno-3-27&#34; href=&#34;#__codelineno-3-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tlOtherMastersNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlMasterXbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-28&#34;&gt;&lt;a id=&#34;__codelineno-3-28&#34; name=&#34;__codelineno-3-28&#34; href=&#34;#__codelineno-3-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;masterNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlOtherMastersNode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-29&#34;&gt;&lt;a id=&#34;__codelineno-3-29&#34; name=&#34;__codelineno-3-29&#34; href=&#34;#__codelineno-3-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-30&#34;&gt;&lt;a id=&#34;__codelineno-3-30&#34; name=&#34;__codelineno-3-30&#34; href=&#34;#__codelineno-3-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// crossingParams defaults to RocketCrossingParams()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-31&#34;&gt;&lt;a id=&#34;__codelineno-3-31&#34; name=&#34;__codelineno-3-31&#34; href=&#34;#__codelineno-3-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in RocketSubsystem.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-32&#34;&gt;&lt;a id=&#34;__codelineno-3-32&#34; name=&#34;__codelineno-3-32&#34; href=&#34;#__codelineno-3-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;RocketCrossingParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-33&#34;&gt;&lt;a id=&#34;__codelineno-3-33&#34; name=&#34;__codelineno-3-33&#34; href=&#34;#__codelineno-3-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockCrossingType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SynchronousCrossing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-34&#34;&gt;&lt;a id=&#34;__codelineno-3-34&#34; name=&#34;__codelineno-3-34&#34; href=&#34;#__codelineno-3-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementPortParamsLike&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementMasterPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-35&#34;&gt;&lt;a id=&#34;__codelineno-3-35&#34; name=&#34;__codelineno-3-35&#34; href=&#34;#__codelineno-3-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slave&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementSlavePortParams&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementSlavePortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-36&#34;&gt;&lt;a id=&#34;__codelineno-3-36&#34; name=&#34;__codelineno-3-36&#34; href=&#34;#__codelineno-3-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioBaseAddressPrefixWhere&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperLocation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-37&#34;&gt;&lt;a id=&#34;__codelineno-3-37&#34; name=&#34;__codelineno-3-37&#34; href=&#34;#__codelineno-3-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resetCrossingType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ResetCrossingType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;NoResetCrossing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-38&#34;&gt;&lt;a id=&#34;__codelineno-3-38&#34; name=&#34;__codelineno-3-38&#34; href=&#34;#__codelineno-3-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;forceSeparateClockReset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-39&#34;&gt;&lt;a id=&#34;__codelineno-3-39&#34; name=&#34;__codelineno-3-39&#34; href=&#34;#__codelineno-3-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementCrossingParamsLike&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-40&#34;&gt;&lt;a id=&#34;__codelineno-3-40&#34; name=&#34;__codelineno-3-40&#34; href=&#34;#__codelineno-3-40&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-41&#34;&gt;&lt;a id=&#34;__codelineno-3-41&#34; name=&#34;__codelineno-3-41&#34; href=&#34;#__codelineno-3-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// default crossingParams.master.where is SBUS(System Bus)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-42&#34;&gt;&lt;a id=&#34;__codelineno-3-42&#34; name=&#34;__codelineno-3-42&#34; href=&#34;#__codelineno-3-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementMasterPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-43&#34;&gt;&lt;a id=&#34;__codelineno-3-43&#34; name=&#34;__codelineno-3-43&#34; href=&#34;#__codelineno-3-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-44&#34;&gt;&lt;a id=&#34;__codelineno-3-44&#34; name=&#34;__codelineno-3-44&#34; href=&#34;#__codelineno-3-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-45&#34;&gt;&lt;a id=&#34;__codelineno-3-45&#34; name=&#34;__codelineno-3-45&#34; href=&#34;#__codelineno-3-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperLocation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-46&#34;&gt;&lt;a id=&#34;__codelineno-3-46&#34; name=&#34;__codelineno-3-46&#34; href=&#34;#__codelineno-3-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalElementPortParamsLike&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-47&#34;&gt;&lt;a id=&#34;__codelineno-3-47&#34; name=&#34;__codelineno-3-47&#34; href=&#34;#__codelineno-3-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;injectNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Attachable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-48&#34;&gt;&lt;a id=&#34;__codelineno-3-48&#34; name=&#34;__codelineno-3-48&#34; href=&#34;#__codelineno-3-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chainNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLCacheCork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsafe&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrElse&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLTempNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-49&#34;&gt;&lt;a id=&#34;__codelineno-3-49&#34; name=&#34;__codelineno-3-49&#34; href=&#34;#__codelineno-3-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-50&#34;&gt;&lt;a id=&#34;__codelineno-3-50&#34; name=&#34;__codelineno-3-50&#34; href=&#34;#__codelineno-3-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;接着是 sbus 连接到 coh，coh 连接到 mbus：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in BusTopology.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/** Parameterization of a topology containing a banked coherence manager and a bus for attaching memory devices. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CoherentBusTopologyParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-4&#34;&gt;&lt;a id=&#34;__codelineno-4-4&#34; name=&#34;__codelineno-4-4&#34; href=&#34;#__codelineno-4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MemoryBusParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-5&#34;&gt;&lt;a id=&#34;__codelineno-4-5&#34; name=&#34;__codelineno-4-5&#34; href=&#34;#__codelineno-4-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coherence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BankedCoherenceParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-6&#34;&gt;&lt;a id=&#34;__codelineno-4-6&#34; name=&#34;__codelineno-4-6&#34; href=&#34;#__codelineno-4-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sbusToMbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockCrossingType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;NoCrossing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-7&#34;&gt;&lt;a id=&#34;__codelineno-4-7&#34; name=&#34;__codelineno-4-7&#34; href=&#34;#__codelineno-4-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveMBusClockFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-8&#34;&gt;&lt;a id=&#34;__codelineno-4-8&#34; name=&#34;__codelineno-4-8&#34; href=&#34;#__codelineno-4-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperTopology&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-9&#34;&gt;&lt;a id=&#34;__codelineno-4-9&#34; name=&#34;__codelineno-4-9&#34; href=&#34;#__codelineno-4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// instantiate mbus and coherence manager&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-10&#34;&gt;&lt;a id=&#34;__codelineno-4-10&#34; name=&#34;__codelineno-4-10&#34; href=&#34;#__codelineno-4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instantiations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coherence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nBanks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-11&#34;&gt;&lt;a id=&#34;__codelineno-4-11&#34; name=&#34;__codelineno-4-11&#34; href=&#34;#__codelineno-4-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-12&#34;&gt;&lt;a id=&#34;__codelineno-4-12&#34; name=&#34;__codelineno-4-12&#34; href=&#34;#__codelineno-4-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;COH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CoherenceManagerWrapperParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coherence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nBanks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;COH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coherence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coherenceManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-13&#34;&gt;&lt;a id=&#34;__codelineno-4-13&#34; name=&#34;__codelineno-4-13&#34; href=&#34;#__codelineno-4-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connections&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coherence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nBanks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-14&#34;&gt;&lt;a id=&#34;__codelineno-4-14&#34; name=&#34;__codelineno-4-14&#34; href=&#34;#__codelineno-4-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// (master, slave, parameters)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-15&#34;&gt;&lt;a id=&#34;__codelineno-4-15&#34; name=&#34;__codelineno-4-15&#34; href=&#34;#__codelineno-4-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// coh := sbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-16&#34;&gt;&lt;a id=&#34;__codelineno-4-16&#34; name=&#34;__codelineno-4-16&#34; href=&#34;#__codelineno-4-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;COH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClockFromMaster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodeBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BIND_STAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)()),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-17&#34;&gt;&lt;a id=&#34;__codelineno-4-17&#34; name=&#34;__codelineno-4-17&#34; href=&#34;#__codelineno-4-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// mbus := coh&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-18&#34;&gt;&lt;a id=&#34;__codelineno-4-18&#34; name=&#34;__codelineno-4-18&#34; href=&#34;#__codelineno-4-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;COH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-19&#34;&gt;&lt;a id=&#34;__codelineno-4-19&#34; name=&#34;__codelineno-4-19&#34; href=&#34;#__codelineno-4-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sbusToMbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-20&#34;&gt;&lt;a id=&#34;__codelineno-4-20&#34; name=&#34;__codelineno-4-20&#34; href=&#34;#__codelineno-4-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClockFromMaster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveMBusClockFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-21&#34;&gt;&lt;a id=&#34;__codelineno-4-21&#34; name=&#34;__codelineno-4-21&#34; href=&#34;#__codelineno-4-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodeBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BIND_QUERY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-22&#34;&gt;&lt;a id=&#34;__codelineno-4-22&#34; name=&#34;__codelineno-4-22&#34; href=&#34;#__codelineno-4-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-23&#34;&gt;&lt;a id=&#34;__codelineno-4-23&#34; name=&#34;__codelineno-4-23&#34; href=&#34;#__codelineno-4-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-24&#34;&gt;&lt;a id=&#34;__codelineno-4-24&#34; name=&#34;__codelineno-4-24&#34; href=&#34;#__codelineno-4-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-25&#34;&gt;&lt;a id=&#34;__codelineno-4-25&#34; name=&#34;__codelineno-4-25&#34; href=&#34;#__codelineno-4-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in BusWrapper.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-26&#34;&gt;&lt;a id=&#34;__codelineno-4-26&#34; name=&#34;__codelineno-4-26&#34; href=&#34;#__codelineno-4-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperTopology&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-27&#34;&gt;&lt;a id=&#34;__codelineno-4-27&#34; name=&#34;__codelineno-4-27&#34; href=&#34;#__codelineno-4-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instantiations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperInstantiationLike&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)],&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-28&#34;&gt;&lt;a id=&#34;__codelineno-4-28&#34; name=&#34;__codelineno-4-28&#34; href=&#34;#__codelineno-4-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnectionLike&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-29&#34;&gt;&lt;a id=&#34;__codelineno-4-29&#34; name=&#34;__codelineno-4-29&#34; href=&#34;#__codelineno-4-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanInstantiateWithinContextThatHasTileLinkLocations&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-30&#34;&gt;&lt;a id=&#34;__codelineno-4-30&#34; name=&#34;__codelineno-4-30&#34; href=&#34;#__codelineno-4-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanConnectWithinContextThatHasTileLinkLocations&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-31&#34;&gt;&lt;a id=&#34;__codelineno-4-31&#34; name=&#34;__codelineno-4-31&#34; href=&#34;#__codelineno-4-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-32&#34;&gt;&lt;a id=&#34;__codelineno-4-32&#34; name=&#34;__codelineno-4-32&#34; href=&#34;#__codelineno-4-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;instantiate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasTileLinkLocations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Unit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-33&#34;&gt;&lt;a id=&#34;__codelineno-4-33&#34; name=&#34;__codelineno-4-33&#34; href=&#34;#__codelineno-4-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instantiations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instantiate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-34&#34;&gt;&lt;a id=&#34;__codelineno-4-34&#34; name=&#34;__codelineno-4-34&#34; href=&#34;#__codelineno-4-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-35&#34;&gt;&lt;a id=&#34;__codelineno-4-35&#34; name=&#34;__codelineno-4-35&#34; href=&#34;#__codelineno-4-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasTileLinkLocations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Unit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-36&#34;&gt;&lt;a id=&#34;__codelineno-4-36&#34; name=&#34;__codelineno-4-36&#34; href=&#34;#__codelineno-4-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slave&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slave&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-37&#34;&gt;&lt;a id=&#34;__codelineno-4-37&#34; name=&#34;__codelineno-4-37&#34; href=&#34;#__codelineno-4-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-38&#34;&gt;&lt;a id=&#34;__codelineno-4-38&#34; name=&#34;__codelineno-4-38&#34; href=&#34;#__codelineno-4-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;为了让 Rocket Chip 可以访问外部的 AXI MMIO 设备，在 sbus 下面添加了 tl 到 axi 的一条路径：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/** Adds a AXI4 port to the system intended to master an MMIO device bus */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanHaveMasterAXI4MMIOPort&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseSubsystem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-3&#34;&gt;&lt;a id=&#34;__codelineno-5-3&#34; name=&#34;__codelineno-5-3&#34; href=&#34;#__codelineno-5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioPortParamsOpt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ExtBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-4&#34;&gt;&lt;a id=&#34;__codelineno-5-4&#34; name=&#34;__codelineno-5-4&#34; href=&#34;#__codelineno-5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;mmio_port_axi4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-5&#34;&gt;&lt;a id=&#34;__codelineno-5-5&#34; name=&#34;__codelineno-5-5&#34; href=&#34;#__codelineno-5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SimpleBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kebab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-6&#34;&gt;&lt;a id=&#34;__codelineno-5-6&#34; name=&#34;__codelineno-5-6&#34; href=&#34;#__codelineno-5-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-7&#34;&gt;&lt;a id=&#34;__codelineno-5-7&#34; name=&#34;__codelineno-5-7&#34; href=&#34;#__codelineno-5-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioAXI4Node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4SlaveNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-8&#34;&gt;&lt;a id=&#34;__codelineno-5-8&#34; name=&#34;__codelineno-5-8&#34; href=&#34;#__codelineno-5-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioPortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-9&#34;&gt;&lt;a id=&#34;__codelineno-5-9&#34; name=&#34;__codelineno-5-9&#34; href=&#34;#__codelineno-5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4SlavePortParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-10&#34;&gt;&lt;a id=&#34;__codelineno-5-10&#34; name=&#34;__codelineno-5-10&#34; href=&#34;#__codelineno-5-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaves&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4SlaveParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-11&#34;&gt;&lt;a id=&#34;__codelineno-5-11&#34; name=&#34;__codelineno-5-11&#34; href=&#34;#__codelineno-5-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AddressSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misaligned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-12&#34;&gt;&lt;a id=&#34;__codelineno-5-12&#34; name=&#34;__codelineno-5-12&#34; href=&#34;#__codelineno-5-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ranges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-13&#34;&gt;&lt;a id=&#34;__codelineno-5-13&#34; name=&#34;__codelineno-5-13&#34; href=&#34;#__codelineno-5-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;executable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;executable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-14&#34;&gt;&lt;a id=&#34;__codelineno-5-14&#34; name=&#34;__codelineno-5-14&#34; href=&#34;#__codelineno-5-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;supportsWrite&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TransferSizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxXferBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-15&#34;&gt;&lt;a id=&#34;__codelineno-5-15&#34; name=&#34;__codelineno-5-15&#34; href=&#34;#__codelineno-5-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;supportsRead&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TransferSizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxXferBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-16&#34;&gt;&lt;a id=&#34;__codelineno-5-16&#34; name=&#34;__codelineno-5-16&#34; href=&#34;#__codelineno-5-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toSeq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-17&#34;&gt;&lt;a id=&#34;__codelineno-5-17&#34; name=&#34;__codelineno-5-17&#34; href=&#34;#__codelineno-5-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-18&#34;&gt;&lt;a id=&#34;__codelineno-5-18&#34; name=&#34;__codelineno-5-18&#34; href=&#34;#__codelineno-5-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// in BaseSubsystem.scala:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-19&#34;&gt;&lt;a id=&#34;__codelineno-5-19&#34; name=&#34;__codelineno-5-19&#34; href=&#34;#__codelineno-5-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// def viewpointBus: TLBusWrapper = tlBusWrapperLocationMap(p(TLManagerViewpointLocated(location)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-20&#34;&gt;&lt;a id=&#34;__codelineno-5-20&#34; name=&#34;__codelineno-5-20&#34; href=&#34;#__codelineno-5-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// case class TLManagerViewpointLocated(where: HierarchicalLocation) extends Field[Location[TLBusWrapper]](SBUS)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-21&#34;&gt;&lt;a id=&#34;__codelineno-5-21&#34; name=&#34;__codelineno-5-21&#34; href=&#34;#__codelineno-5-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// so viewpointBus points to sbus by default&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-22&#34;&gt;&lt;a id=&#34;__codelineno-5-22&#34; name=&#34;__codelineno-5-22&#34; href=&#34;#__codelineno-5-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioPortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-23&#34;&gt;&lt;a id=&#34;__codelineno-5-23&#34; name=&#34;__codelineno-5-23&#34; href=&#34;#__codelineno-5-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;s&amp;quot;port_named_&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-24&#34;&gt;&lt;a id=&#34;__codelineno-5-24&#34; name=&#34;__codelineno-5-24&#34; href=&#34;#__codelineno-5-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioAXI4Node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-25&#34;&gt;&lt;a id=&#34;__codelineno-5-25&#34; name=&#34;__codelineno-5-25&#34; href=&#34;#__codelineno-5-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4Buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-26&#34;&gt;&lt;a id=&#34;__codelineno-5-26&#34; name=&#34;__codelineno-5-26&#34; href=&#34;#__codelineno-5-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4UserYanker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-27&#34;&gt;&lt;a id=&#34;__codelineno-5-27&#34; name=&#34;__codelineno-5-27&#34; href=&#34;#__codelineno-5-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4Deinterleaver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-28&#34;&gt;&lt;a id=&#34;__codelineno-5-28&#34; name=&#34;__codelineno-5-28&#34; href=&#34;#__codelineno-5-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4IdIndexer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idBits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-29&#34;&gt;&lt;a id=&#34;__codelineno-5-29&#34; name=&#34;__codelineno-5-29&#34; href=&#34;#__codelineno-5-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLToAXI4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-30&#34;&gt;&lt;a id=&#34;__codelineno-5-30&#34; name=&#34;__codelineno-5-30&#34; href=&#34;#__codelineno-5-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLWidthWidget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-31&#34;&gt;&lt;a id=&#34;__codelineno-5-31&#34; name=&#34;__codelineno-5-31&#34; href=&#34;#__codelineno-5-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-32&#34;&gt;&lt;a id=&#34;__codelineno-5-32&#34; name=&#34;__codelineno-5-32&#34; href=&#34;#__codelineno-5-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-33&#34;&gt;&lt;a id=&#34;__codelineno-5-33&#34; name=&#34;__codelineno-5-33&#34; href=&#34;#__codelineno-5-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-34&#34;&gt;&lt;a id=&#34;__codelineno-5-34&#34; name=&#34;__codelineno-5-34&#34; href=&#34;#__codelineno-5-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-35&#34;&gt;&lt;a id=&#34;__codelineno-5-35&#34; name=&#34;__codelineno-5-35&#34; href=&#34;#__codelineno-5-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmio_axi4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InModuleBody&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmioAXI4Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makeIOs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-36&#34;&gt;&lt;a id=&#34;__codelineno-5-36&#34; name=&#34;__codelineno-5-36&#34; href=&#34;#__codelineno-5-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;类似地，为了让 Rocket Chip 可以访问外部的 AXI Memory，在 mbus 下面添加了 tl 到 axi 的一条路径：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/** Adds a port to the system intended to master an AXI4 DRAM controller. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanHaveMasterAXI4MemPort&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseSubsystem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParamsOpt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ExtMem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-4&#34;&gt;&lt;a id=&#34;__codelineno-6-4&#34; name=&#34;__codelineno-6-4&#34; href=&#34;#__codelineno-6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;axi4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-5&#34;&gt;&lt;a id=&#34;__codelineno-6-5&#34; name=&#34;__codelineno-6-5&#34; href=&#34;#__codelineno-6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MemoryDevice&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-6&#34;&gt;&lt;a id=&#34;__codelineno-6-6&#34; name=&#34;__codelineno-6-6&#34; href=&#34;#__codelineno-6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idBits&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idBits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrElse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-7&#34;&gt;&lt;a id=&#34;__codelineno-6-7&#34; name=&#34;__codelineno-6-7&#34; href=&#34;#__codelineno-6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlBusWrapperLocationMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrElse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-8&#34;&gt;&lt;a id=&#34;__codelineno-6-8&#34; name=&#34;__codelineno-6-8&#34; href=&#34;#__codelineno-6-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-9&#34;&gt;&lt;a id=&#34;__codelineno-6-9&#34; name=&#34;__codelineno-6-9&#34; href=&#34;#__codelineno-6-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memAXI4Node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4SlaveNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MemoryPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nMemoryChannels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-10&#34;&gt;&lt;a id=&#34;__codelineno-6-10&#34; name=&#34;__codelineno-6-10&#34; href=&#34;#__codelineno-6-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tabulate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nMemoryChannels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;channel&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-11&#34;&gt;&lt;a id=&#34;__codelineno-6-11&#34; name=&#34;__codelineno-6-11&#34; href=&#34;#__codelineno-6-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AddressSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misaligned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-12&#34;&gt;&lt;a id=&#34;__codelineno-6-12&#34; name=&#34;__codelineno-6-12&#34; href=&#34;#__codelineno-6-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AddressSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;channel&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nMemoryChannels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-13&#34;&gt;&lt;a id=&#34;__codelineno-6-13&#34; name=&#34;__codelineno-6-13&#34; href=&#34;#__codelineno-6-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-14&#34;&gt;&lt;a id=&#34;__codelineno-6-14&#34; name=&#34;__codelineno-6-14&#34; href=&#34;#__codelineno-6-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4SlavePortParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-15&#34;&gt;&lt;a id=&#34;__codelineno-6-15&#34; name=&#34;__codelineno-6-15&#34; href=&#34;#__codelineno-6-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaves&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4SlaveParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-16&#34;&gt;&lt;a id=&#34;__codelineno-6-16&#34; name=&#34;__codelineno-6-16&#34; href=&#34;#__codelineno-6-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flatMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intersect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-17&#34;&gt;&lt;a id=&#34;__codelineno-6-17&#34; name=&#34;__codelineno-6-17&#34; href=&#34;#__codelineno-6-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-18&#34;&gt;&lt;a id=&#34;__codelineno-6-18&#34; name=&#34;__codelineno-6-18&#34; href=&#34;#__codelineno-6-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;RegionType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;UNCACHED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// cacheable&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-19&#34;&gt;&lt;a id=&#34;__codelineno-6-19&#34; name=&#34;__codelineno-6-19&#34; href=&#34;#__codelineno-6-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;executable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-20&#34;&gt;&lt;a id=&#34;__codelineno-6-20&#34; name=&#34;__codelineno-6-20&#34; href=&#34;#__codelineno-6-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;supportsWrite&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TransferSizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-21&#34;&gt;&lt;a id=&#34;__codelineno-6-21&#34; name=&#34;__codelineno-6-21&#34; href=&#34;#__codelineno-6-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;supportsRead&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TransferSizes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-22&#34;&gt;&lt;a id=&#34;__codelineno-6-22&#34; name=&#34;__codelineno-6-22&#34; href=&#34;#__codelineno-6-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interleavedId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// slave does not interleave read responses&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-23&#34;&gt;&lt;a id=&#34;__codelineno-6-23&#34; name=&#34;__codelineno-6-23&#34; href=&#34;#__codelineno-6-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-24&#34;&gt;&lt;a id=&#34;__codelineno-6-24&#34; name=&#34;__codelineno-6-24&#34; href=&#34;#__codelineno-6-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-25&#34;&gt;&lt;a id=&#34;__codelineno-6-25&#34; name=&#34;__codelineno-6-25&#34; href=&#34;#__codelineno-6-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flatten&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-26&#34;&gt;&lt;a id=&#34;__codelineno-6-26&#34; name=&#34;__codelineno-6-26&#34; href=&#34;#__codelineno-6-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-27&#34;&gt;&lt;a id=&#34;__codelineno-6-27&#34; name=&#34;__codelineno-6-27&#34; href=&#34;#__codelineno-6-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;until&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memAXI4Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-28&#34;&gt;&lt;a id=&#34;__codelineno-6-28&#34; name=&#34;__codelineno-6-28&#34; href=&#34;#__codelineno-6-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mem_bypass_xbar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLXbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-29&#34;&gt;&lt;a id=&#34;__codelineno-6-29&#34; name=&#34;__codelineno-6-29&#34; href=&#34;#__codelineno-6-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-30&#34;&gt;&lt;a id=&#34;__codelineno-6-30&#34; name=&#34;__codelineno-6-30&#34; href=&#34;#__codelineno-6-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Create an incoherent alias for the AXI4 memory&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-31&#34;&gt;&lt;a id=&#34;__codelineno-6-31&#34; name=&#34;__codelineno-6-31&#34; href=&#34;#__codelineno-6-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParams&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-32&#34;&gt;&lt;a id=&#34;__codelineno-6-32&#34; name=&#34;__codelineno-6-32&#34; href=&#34;#__codelineno-6-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memPortParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohBase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohBase&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-33&#34;&gt;&lt;a id=&#34;__codelineno-6-33&#34; name=&#34;__codelineno-6-33&#34; href=&#34;#__codelineno-6-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cohRegion&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AddressSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohBase&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-34&#34;&gt;&lt;a id=&#34;__codelineno-6-34&#34; name=&#34;__codelineno-6-34&#34; href=&#34;#__codelineno-6-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohRegion&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AddressSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohBase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohBase&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-35&#34;&gt;&lt;a id=&#34;__codelineno-6-35&#34; name=&#34;__codelineno-6-35&#34; href=&#34;#__codelineno-6-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replicator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlBusWrapperLocationMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLManagerViewpointLocated&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-36&#34;&gt;&lt;a id=&#34;__codelineno-6-36&#34; name=&#34;__codelineno-6-36&#34; href=&#34;#__codelineno-6-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replicator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;RegionReplicator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ReplicatedRegion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cohRegion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cohRegion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;widen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incohBase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-37&#34;&gt;&lt;a id=&#34;__codelineno-6-37&#34; name=&#34;__codelineno-6-37&#34; href=&#34;#__codelineno-6-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefixSource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BundleBridgeSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;UInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;UInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-38&#34;&gt;&lt;a id=&#34;__codelineno-6-38&#34; name=&#34;__codelineno-6-38&#34; href=&#34;#__codelineno-6-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replicator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefixSource&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-39&#34;&gt;&lt;a id=&#34;__codelineno-6-39&#34; name=&#34;__codelineno-6-39&#34; href=&#34;#__codelineno-6-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// prefix is unused for TL uncached, so this is ok&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-40&#34;&gt;&lt;a id=&#34;__codelineno-6-40&#34; name=&#34;__codelineno-6-40&#34; href=&#34;#__codelineno-6-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InModuleBody&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefixSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bundle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-41&#34;&gt;&lt;a id=&#34;__codelineno-6-41&#34; name=&#34;__codelineno-6-41&#34; href=&#34;#__codelineno-6-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replicator&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-42&#34;&gt;&lt;a id=&#34;__codelineno-6-42&#34; name=&#34;__codelineno-6-42&#34; href=&#34;#__codelineno-6-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-43&#34;&gt;&lt;a id=&#34;__codelineno-6-43&#34; name=&#34;__codelineno-6-43&#34; href=&#34;#__codelineno-6-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;s&amp;quot;memory_controller_bypass_port_named_&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-44&#34;&gt;&lt;a id=&#34;__codelineno-6-44&#34; name=&#34;__codelineno-6-44&#34; href=&#34;#__codelineno-6-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossIn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mem_bypass_xbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ValName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;bus_xing&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SbusToMbusXTypeKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-45&#34;&gt;&lt;a id=&#34;__codelineno-6-45&#34; name=&#34;__codelineno-6-45&#34; href=&#34;#__codelineno-6-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLWidthWidget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-46&#34;&gt;&lt;a id=&#34;__codelineno-6-46&#34; name=&#34;__codelineno-6-46&#34; href=&#34;#__codelineno-6-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replicator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-47&#34;&gt;&lt;a id=&#34;__codelineno-6-47&#34; name=&#34;__codelineno-6-47&#34; href=&#34;#__codelineno-6-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mSubtract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cohRegion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-48&#34;&gt;&lt;a id=&#34;__codelineno-6-48&#34; name=&#34;__codelineno-6-48&#34; href=&#34;#__codelineno-6-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mResourceRemover&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-49&#34;&gt;&lt;a id=&#34;__codelineno-6-49&#34; name=&#34;__codelineno-6-49&#34; href=&#34;#__codelineno-6-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-50&#34;&gt;&lt;a id=&#34;__codelineno-6-50&#34; name=&#34;__codelineno-6-50&#34; href=&#34;#__codelineno-6-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-51&#34;&gt;&lt;a id=&#34;__codelineno-6-51&#34; name=&#34;__codelineno-6-51&#34; href=&#34;#__codelineno-6-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-52&#34;&gt;&lt;a id=&#34;__codelineno-6-52&#34; name=&#34;__codelineno-6-52&#34; href=&#34;#__codelineno-6-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-53&#34;&gt;&lt;a id=&#34;__codelineno-6-53&#34; name=&#34;__codelineno-6-53&#34; href=&#34;#__codelineno-6-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-54&#34;&gt;&lt;a id=&#34;__codelineno-6-54&#34; name=&#34;__codelineno-6-54&#34; href=&#34;#__codelineno-6-54&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-55&#34;&gt;&lt;a id=&#34;__codelineno-6-55&#34; name=&#34;__codelineno-6-55&#34; href=&#34;#__codelineno-6-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;s&amp;quot;memory_controller_port_named_&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-56&#34;&gt;&lt;a id=&#34;__codelineno-6-56&#34; name=&#34;__codelineno-6-56&#34; href=&#34;#__codelineno-6-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memAXI4Node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-57&#34;&gt;&lt;a id=&#34;__codelineno-6-57&#34; name=&#34;__codelineno-6-57&#34; href=&#34;#__codelineno-6-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4UserYanker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-58&#34;&gt;&lt;a id=&#34;__codelineno-6-58&#34; name=&#34;__codelineno-6-58&#34; href=&#34;#__codelineno-6-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4IdIndexer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idBits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-59&#34;&gt;&lt;a id=&#34;__codelineno-6-59&#34; name=&#34;__codelineno-6-59&#34; href=&#34;#__codelineno-6-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLToAXI4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-60&#34;&gt;&lt;a id=&#34;__codelineno-6-60&#34; name=&#34;__codelineno-6-60&#34; href=&#34;#__codelineno-6-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLWidthWidget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-61&#34;&gt;&lt;a id=&#34;__codelineno-6-61&#34; name=&#34;__codelineno-6-61&#34; href=&#34;#__codelineno-6-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mem_bypass_xbar&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-62&#34;&gt;&lt;a id=&#34;__codelineno-6-62&#34; name=&#34;__codelineno-6-62&#34; href=&#34;#__codelineno-6-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-63&#34;&gt;&lt;a id=&#34;__codelineno-6-63&#34; name=&#34;__codelineno-6-63&#34; href=&#34;#__codelineno-6-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-64&#34;&gt;&lt;a id=&#34;__codelineno-6-64&#34; name=&#34;__codelineno-6-64&#34; href=&#34;#__codelineno-6-64&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-65&#34;&gt;&lt;a id=&#34;__codelineno-6-65&#34; name=&#34;__codelineno-6-65&#34; href=&#34;#__codelineno-6-65&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-66&#34;&gt;&lt;a id=&#34;__codelineno-6-66&#34; name=&#34;__codelineno-6-66&#34; href=&#34;#__codelineno-6-66&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-67&#34;&gt;&lt;a id=&#34;__codelineno-6-67&#34; name=&#34;__codelineno-6-67&#34; href=&#34;#__codelineno-6-67&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mem_axi4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InModuleBody&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memAXI4Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makeIOs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-68&#34;&gt;&lt;a id=&#34;__codelineno-6-68&#34; name=&#34;__codelineno-6-68&#34; href=&#34;#__codelineno-6-68&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;类似地，为了让外部的 AXI Master 可以访问一致的内存，在 fbus 上面添加了从 axi 到 tl 的一条路径，而 fbus 是连到 sbus 上的：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-7-1&#34;&gt;&lt;a id=&#34;__codelineno-7-1&#34; name=&#34;__codelineno-7-1&#34; href=&#34;#__codelineno-7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/** Adds an AXI4 port to the system intended to be a slave on an MMIO device bus */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-2&#34;&gt;&lt;a id=&#34;__codelineno-7-2&#34; name=&#34;__codelineno-7-2&#34; href=&#34;#__codelineno-7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanHaveSlaveAXI4Port&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseSubsystem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-3&#34;&gt;&lt;a id=&#34;__codelineno-7-3&#34; name=&#34;__codelineno-7-3&#34; href=&#34;#__codelineno-7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slavePortParamsOpt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ExtIn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-4&#34;&gt;&lt;a id=&#34;__codelineno-7-4&#34; name=&#34;__codelineno-7-4&#34; href=&#34;#__codelineno-7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;slave_port_axi4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-5&#34;&gt;&lt;a id=&#34;__codelineno-7-5&#34; name=&#34;__codelineno-7-5&#34; href=&#34;#__codelineno-7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fifoBits&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-6&#34;&gt;&lt;a id=&#34;__codelineno-7-6&#34; name=&#34;__codelineno-7-6&#34; href=&#34;#__codelineno-7-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fbus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlBusWrapperLocationMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrElse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-7&#34;&gt;&lt;a id=&#34;__codelineno-7-7&#34; name=&#34;__codelineno-7-7&#34; href=&#34;#__codelineno-7-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-8&#34;&gt;&lt;a id=&#34;__codelineno-7-8&#34; name=&#34;__codelineno-7-8&#34; href=&#34;#__codelineno-7-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l2FrontendAXI4Node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4MasterNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-9&#34;&gt;&lt;a id=&#34;__codelineno-7-9&#34; name=&#34;__codelineno-7-9&#34; href=&#34;#__codelineno-7-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slavePortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-10&#34;&gt;&lt;a id=&#34;__codelineno-7-10&#34; name=&#34;__codelineno-7-10&#34; href=&#34;#__codelineno-7-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4MasterPortParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-11&#34;&gt;&lt;a id=&#34;__codelineno-7-11&#34; name=&#34;__codelineno-7-11&#34; href=&#34;#__codelineno-7-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;masters&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4MasterParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-12&#34;&gt;&lt;a id=&#34;__codelineno-7-12&#34; name=&#34;__codelineno-7-12&#34; href=&#34;#__codelineno-7-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kebab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-13&#34;&gt;&lt;a id=&#34;__codelineno-7-13&#34; name=&#34;__codelineno-7-13&#34; href=&#34;#__codelineno-7-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IdRange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idBits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toSeq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-14&#34;&gt;&lt;a id=&#34;__codelineno-7-14&#34; name=&#34;__codelineno-7-14&#34; href=&#34;#__codelineno-7-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-15&#34;&gt;&lt;a id=&#34;__codelineno-7-15&#34; name=&#34;__codelineno-7-15&#34; href=&#34;#__codelineno-7-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slavePortParamsOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-16&#34;&gt;&lt;a id=&#34;__codelineno-7-16&#34; name=&#34;__codelineno-7-16&#34; href=&#34;#__codelineno-7-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;s&amp;quot;port_named_&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;portName&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-17&#34;&gt;&lt;a id=&#34;__codelineno-7-17&#34; name=&#34;__codelineno-7-17&#34; href=&#34;#__codelineno-7-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-18&#34;&gt;&lt;a id=&#34;__codelineno-7-18&#34; name=&#34;__codelineno-7-18&#34; href=&#34;#__codelineno-7-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BufferParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-19&#34;&gt;&lt;a id=&#34;__codelineno-7-19&#34; name=&#34;__codelineno-7-19&#34; href=&#34;#__codelineno-7-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFIFOFixer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFIFOFixer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-20&#34;&gt;&lt;a id=&#34;__codelineno-7-20&#34; name=&#34;__codelineno-7-20&#34; href=&#34;#__codelineno-7-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLWidthWidget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-21&#34;&gt;&lt;a id=&#34;__codelineno-7-21&#34; name=&#34;__codelineno-7-21&#34; href=&#34;#__codelineno-7-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4ToTL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-22&#34;&gt;&lt;a id=&#34;__codelineno-7-22&#34; name=&#34;__codelineno-7-22&#34; href=&#34;#__codelineno-7-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4UserYanker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sourceBits&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fifoBits&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-23&#34;&gt;&lt;a id=&#34;__codelineno-7-23&#34; name=&#34;__codelineno-7-23&#34; href=&#34;#__codelineno-7-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4Fragmenter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-24&#34;&gt;&lt;a id=&#34;__codelineno-7-24&#34; name=&#34;__codelineno-7-24&#34; href=&#34;#__codelineno-7-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;AXI4IdIndexer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fifoBits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-25&#34;&gt;&lt;a id=&#34;__codelineno-7-25&#34; name=&#34;__codelineno-7-25&#34; href=&#34;#__codelineno-7-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l2FrontendAXI4Node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-26&#34;&gt;&lt;a id=&#34;__codelineno-7-26&#34; name=&#34;__codelineno-7-26&#34; href=&#34;#__codelineno-7-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-27&#34;&gt;&lt;a id=&#34;__codelineno-7-27&#34; name=&#34;__codelineno-7-27&#34; href=&#34;#__codelineno-7-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-28&#34;&gt;&lt;a id=&#34;__codelineno-7-28&#34; name=&#34;__codelineno-7-28&#34; href=&#34;#__codelineno-7-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-29&#34;&gt;&lt;a id=&#34;__codelineno-7-29&#34; name=&#34;__codelineno-7-29&#34; href=&#34;#__codelineno-7-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l2_frontend_bus_axi4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InModuleBody&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l2FrontendAXI4Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makeIOs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-30&#34;&gt;&lt;a id=&#34;__codelineno-7-30&#34; name=&#34;__codelineno-7-30&#34; href=&#34;#__codelineno-7-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-31&#34;&gt;&lt;a id=&#34;__codelineno-7-31&#34; name=&#34;__codelineno-7-31&#34; href=&#34;#__codelineno-7-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-32&#34;&gt;&lt;a id=&#34;__codelineno-7-32&#34; name=&#34;__codelineno-7-32&#34; href=&#34;#__codelineno-7-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalBusTopologyParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-33&#34;&gt;&lt;a id=&#34;__codelineno-7-33&#34; name=&#34;__codelineno-7-33&#34; href=&#34;#__codelineno-7-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;PeripheryBusParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-34&#34;&gt;&lt;a id=&#34;__codelineno-7-34&#34; name=&#34;__codelineno-7-34&#34; href=&#34;#__codelineno-7-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FrontBusParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-35&#34;&gt;&lt;a id=&#34;__codelineno-7-35&#34; name=&#34;__codelineno-7-35&#34; href=&#34;#__codelineno-7-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;PeripheryBusParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-36&#34;&gt;&lt;a id=&#34;__codelineno-7-36&#34; name=&#34;__codelineno-7-36&#34; href=&#34;#__codelineno-7-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SubsystemCrossingParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-37&#34;&gt;&lt;a id=&#34;__codelineno-7-37&#34; name=&#34;__codelineno-7-37&#34; href=&#34;#__codelineno-7-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-38&#34;&gt;&lt;a id=&#34;__codelineno-7-38&#34; name=&#34;__codelineno-7-38&#34; href=&#34;#__codelineno-7-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperTopology&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-39&#34;&gt;&lt;a id=&#34;__codelineno-7-39&#34; name=&#34;__codelineno-7-39&#34; href=&#34;#__codelineno-7-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instantiations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-40&#34;&gt;&lt;a id=&#34;__codelineno-7-40&#34; name=&#34;__codelineno-7-40&#34; href=&#34;#__codelineno-7-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;PBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-41&#34;&gt;&lt;a id=&#34;__codelineno-7-41&#34; name=&#34;__codelineno-7-41&#34; href=&#34;#__codelineno-7-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-42&#34;&gt;&lt;a id=&#34;__codelineno-7-42&#34; name=&#34;__codelineno-7-42&#34; href=&#34;#__codelineno-7-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-43&#34;&gt;&lt;a id=&#34;__codelineno-7-43&#34; name=&#34;__codelineno-7-43&#34; href=&#34;#__codelineno-7-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connections&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-44&#34;&gt;&lt;a id=&#34;__codelineno-7-44&#34; name=&#34;__codelineno-7-44&#34; href=&#34;#__codelineno-7-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// (master, slave, params)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-45&#34;&gt;&lt;a id=&#34;__codelineno-7-45&#34; name=&#34;__codelineno-7-45&#34; href=&#34;#__codelineno-7-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// cbus := sbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-46&#34;&gt;&lt;a id=&#34;__codelineno-7-46&#34; name=&#34;__codelineno-7-46&#34; href=&#34;#__codelineno-7-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sbusToCbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-47&#34;&gt;&lt;a id=&#34;__codelineno-7-47&#34; name=&#34;__codelineno-7-47&#34; href=&#34;#__codelineno-7-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// pbus := cbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-48&#34;&gt;&lt;a id=&#34;__codelineno-7-48&#34; name=&#34;__codelineno-7-48&#34; href=&#34;#__codelineno-7-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;PBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbusToPbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-49&#34;&gt;&lt;a id=&#34;__codelineno-7-49&#34; name=&#34;__codelineno-7-49&#34; href=&#34;#__codelineno-7-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// sbus := fbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-50&#34;&gt;&lt;a id=&#34;__codelineno-7-50&#34; name=&#34;__codelineno-7-50&#34; href=&#34;#__codelineno-7-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fbusToSbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-51&#34;&gt;&lt;a id=&#34;__codelineno-7-51&#34; name=&#34;__codelineno-7-51&#34; href=&#34;#__codelineno-7-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;上一段代码中，在 sbus 的下游挂载了 cbus，在 cbus 下游挂载了 pbus；那么 debug/plic/clint 等设备都是挂载在 cbus 下的：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-8-1&#34;&gt;&lt;a id=&#34;__codelineno-8-1&#34; name=&#34;__codelineno-8-1&#34; href=&#34;#__codelineno-8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in HasPeripheryDebug of Periphery.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-2&#34;&gt;&lt;a id=&#34;__codelineno-8-2&#34; name=&#34;__codelineno-8-2&#34; href=&#34;#__codelineno-8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// default to cbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-3&#34;&gt;&lt;a id=&#34;__codelineno-8-3&#34; name=&#34;__codelineno-8-3&#34; href=&#34;#__codelineno-8-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;locateTLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ExportDebug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaveWhere&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-4&#34;&gt;&lt;a id=&#34;__codelineno-8-4&#34; name=&#34;__codelineno-8-4&#34; href=&#34;#__codelineno-8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlDM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLDebugModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-5&#34;&gt;&lt;a id=&#34;__codelineno-8-5&#34; name=&#34;__codelineno-8-5&#34; href=&#34;#__codelineno-8-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tlDM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFragmenter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blockBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nameSuffix&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Debug&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-6&#34;&gt;&lt;a id=&#34;__codelineno-8-6&#34; name=&#34;__codelineno-8-6&#34; href=&#34;#__codelineno-8-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-7&#34;&gt;&lt;a id=&#34;__codelineno-8-7&#34; name=&#34;__codelineno-8-7&#34; href=&#34;#__codelineno-8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in CanHavePeripheryCLINT of CLINT.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-8&#34;&gt;&lt;a id=&#34;__codelineno-8-8&#34; name=&#34;__codelineno-8-8&#34; href=&#34;#__codelineno-8-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// default to cbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-9&#34;&gt;&lt;a id=&#34;__codelineno-8-9&#34; name=&#34;__codelineno-8-9&#34; href=&#34;#__codelineno-8-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;locateTLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CLINTAttachKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaveWhere&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-10&#34;&gt;&lt;a id=&#34;__codelineno-8-10&#34; name=&#34;__codelineno-8-10&#34; href=&#34;#__codelineno-8-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clintDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generateSynchronousDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CLINT&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suggestName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;clint_domain&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-11&#34;&gt;&lt;a id=&#34;__codelineno-8-11&#34; name=&#34;__codelineno-8-11&#34; href=&#34;#__codelineno-8-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clintDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CLINT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-12&#34;&gt;&lt;a id=&#34;__codelineno-8-12&#34; name=&#34;__codelineno-8-12&#34; href=&#34;#__codelineno-8-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;clintDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;clint&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFragmenter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CLINT&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-13&#34;&gt;&lt;a id=&#34;__codelineno-8-13&#34; name=&#34;__codelineno-8-13&#34; href=&#34;#__codelineno-8-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-14&#34;&gt;&lt;a id=&#34;__codelineno-8-14&#34; name=&#34;__codelineno-8-14&#34; href=&#34;#__codelineno-8-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in CanHavePeripheryPLIC of Plic.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-15&#34;&gt;&lt;a id=&#34;__codelineno-8-15&#34; name=&#34;__codelineno-8-15&#34; href=&#34;#__codelineno-8-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// default to cbus&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-16&#34;&gt;&lt;a id=&#34;__codelineno-8-16&#34; name=&#34;__codelineno-8-16&#34; href=&#34;#__codelineno-8-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;locateTLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;PLICAttachKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slaveWhere&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-17&#34;&gt;&lt;a id=&#34;__codelineno-8-17&#34; name=&#34;__codelineno-8-17&#34; href=&#34;#__codelineno-8-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plicDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generateSynchronousDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;PLIC&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suggestName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;plic_domain&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-18&#34;&gt;&lt;a id=&#34;__codelineno-8-18&#34; name=&#34;__codelineno-8-18&#34; href=&#34;#__codelineno-8-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plicDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLPLIC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beatBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-19&#34;&gt;&lt;a id=&#34;__codelineno-8-19&#34; name=&#34;__codelineno-8-19&#34; href=&#34;#__codelineno-8-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;plicDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupleTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;plic&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLFragmenter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tlbus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;PLIC&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-20&#34;&gt;&lt;a id=&#34;__codelineno-8-20&#34; name=&#34;__codelineno-8-20&#34; href=&#34;#__codelineno-8-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;plicDomainWrapper&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intnode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ibus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toPLIC&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;至此就把前面提到的 Rocket Chip 的总线结构在源码中的对应关系都找到了。&lt;/p&gt;&lt;p&gt;除了这一组大的总线结构，实际上调试模块内部还有一个小的总线，主要是把 RISC-V Debug 的 DMI 转化为 TileLink，然后访问内部的一些寄存器。&lt;/p&gt;&lt;h3 id=&#34;中断&#34;&gt;中断&lt;a class=&#34;headerlink&#34; href=&#34;#中断&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;除了总线，中断也是通过 Diplomacy 管理的。首先可以看到，每个 Tile 有一个中断的 SinkNode：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-9-1&#34;&gt;&lt;a id=&#34;__codelineno-9-1&#34; name=&#34;__codelineno-9-1&#34; href=&#34;#__codelineno-9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// Use diplomatic interrupts to external interrupts from the subsystem into the tile&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-2&#34;&gt;&lt;a id=&#34;__codelineno-9-2&#34; name=&#34;__codelineno-9-2&#34; href=&#34;#__codelineno-9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SinksExternalInterrupts&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseTile&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-3&#34;&gt;&lt;a id=&#34;__codelineno-9-3&#34; name=&#34;__codelineno-9-3&#34; href=&#34;#__codelineno-9-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intInwardNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intXbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intnode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IntIdentityNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ValName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;int_local&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-4&#34;&gt;&lt;a id=&#34;__codelineno-9-4&#34; name=&#34;__codelineno-9-4&#34; href=&#34;#__codelineno-9-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intSinkNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IntSinkNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IntSinkPortSimple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-5&#34;&gt;&lt;a id=&#34;__codelineno-9-5&#34; name=&#34;__codelineno-9-5&#34; href=&#34;#__codelineno-9-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intSinkNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intXbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intnode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-6&#34;&gt;&lt;a id=&#34;__codelineno-9-6&#34; name=&#34;__codelineno-9-6&#34; href=&#34;#__codelineno-9-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-7&#34;&gt;&lt;a id=&#34;__codelineno-9-7&#34; name=&#34;__codelineno-9-7&#34; href=&#34;#__codelineno-9-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// go from flat diplomatic Interrupts to bundled TileInterrupts&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-8&#34;&gt;&lt;a id=&#34;__codelineno-9-8&#34; name=&#34;__codelineno-9-8&#34; href=&#34;#__codelineno-9-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;decodeCoreInterrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TileInterrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Unit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-9&#34;&gt;&lt;a id=&#34;__codelineno-9-9&#34; name=&#34;__codelineno-9-9&#34; href=&#34;#__codelineno-9-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;async_ips&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-10&#34;&gt;&lt;a id=&#34;__codelineno-9-10&#34; name=&#34;__codelineno-9-10&#34; href=&#34;#__codelineno-9-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;periph_ips&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-11&#34;&gt;&lt;a id=&#34;__codelineno-9-11&#34; name=&#34;__codelineno-9-11&#34; href=&#34;#__codelineno-9-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-12&#34;&gt;&lt;a id=&#34;__codelineno-9-12&#34; name=&#34;__codelineno-9-12&#34; href=&#34;#__codelineno-9-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mtip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-13&#34;&gt;&lt;a id=&#34;__codelineno-9-13&#34; name=&#34;__codelineno-9-13&#34; href=&#34;#__codelineno-9-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;meip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-14&#34;&gt;&lt;a id=&#34;__codelineno-9-14&#34; name=&#34;__codelineno-9-14&#34; href=&#34;#__codelineno-9-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-15&#34;&gt;&lt;a id=&#34;__codelineno-9-15&#34; name=&#34;__codelineno-9-15&#34; href=&#34;#__codelineno-9-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isDefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Nil&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-16&#34;&gt;&lt;a id=&#34;__codelineno-9-16&#34; name=&#34;__codelineno-9-16&#34; href=&#34;#__codelineno-9-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-17&#34;&gt;&lt;a id=&#34;__codelineno-9-17&#34; name=&#34;__codelineno-9-17&#34; href=&#34;#__codelineno-9-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core_ips&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lip&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-18&#34;&gt;&lt;a id=&#34;__codelineno-9-18&#34; name=&#34;__codelineno-9-18&#34; href=&#34;#__codelineno-9-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-19&#34;&gt;&lt;a id=&#34;__codelineno-9-19&#34; name=&#34;__codelineno-9-19&#34; href=&#34;#__codelineno-9-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intSinkNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-20&#34;&gt;&lt;a id=&#34;__codelineno-9-20&#34; name=&#34;__codelineno-9-20&#34; href=&#34;#__codelineno-9-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;async_ips&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;periph_ips&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core_ips&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-21&#34;&gt;&lt;a id=&#34;__codelineno-9-21&#34; name=&#34;__codelineno-9-21&#34; href=&#34;#__codelineno-9-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-22&#34;&gt;&lt;a id=&#34;__codelineno-9-22&#34; name=&#34;__codelineno-9-22&#34; href=&#34;#__codelineno-9-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-23&#34;&gt;&lt;a id=&#34;__codelineno-9-23&#34; name=&#34;__codelineno-9-23&#34; href=&#34;#__codelineno-9-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-24&#34;&gt;&lt;a id=&#34;__codelineno-9-24&#34; name=&#34;__codelineno-9-24&#34; href=&#34;#__codelineno-9-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TileInterrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CoreBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-25&#34;&gt;&lt;a id=&#34;__codelineno-9-25&#34; name=&#34;__codelineno-9-25&#34; href=&#34;#__codelineno-9-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-26&#34;&gt;&lt;a id=&#34;__codelineno-9-26&#34; name=&#34;__codelineno-9-26&#34; href=&#34;#__codelineno-9-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mtip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-27&#34;&gt;&lt;a id=&#34;__codelineno-9-27&#34; name=&#34;__codelineno-9-27&#34; href=&#34;#__codelineno-9-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-28&#34;&gt;&lt;a id=&#34;__codelineno-9-28&#34; name=&#34;__codelineno-9-28&#34; href=&#34;#__codelineno-9-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;meip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-29&#34;&gt;&lt;a id=&#34;__codelineno-9-29&#34; name=&#34;__codelineno-9-29&#34; href=&#34;#__codelineno-9-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usingSupervisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-30&#34;&gt;&lt;a id=&#34;__codelineno-9-30&#34; name=&#34;__codelineno-9-30&#34; href=&#34;#__codelineno-9-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coreParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nLocalInterrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-31&#34;&gt;&lt;a id=&#34;__codelineno-9-31&#34; name=&#34;__codelineno-9-31&#34; href=&#34;#__codelineno-9-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nmi&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usingNMI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;NMI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resetVectorLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-32&#34;&gt;&lt;a id=&#34;__codelineno-9-32&#34; name=&#34;__codelineno-9-32&#34; href=&#34;#__codelineno-9-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它通过 Diplomacy 的 intXbar 输入多路的中断，然后按照顺序，还原出对应的 debug/mtip/msip/seip 等中断信号。从前面的图中，也可以看到 intXbar 的第一个输入 debug（经过 intsink）来自 dmOuter 也就是调试模块，第二个和第三个输入 msip 和 mtip（经过 intsink_1）来自 clint（负责时钟 mtimer 和软件中断），最后的 meip 和 seip（经过 intsink_2/3）来自 plic（负责外部中断）。为了处理外部中断，从外面接了 6 位的中断信号到 plic。&lt;/p&gt;&lt;h3 id=&#34;时钟&#34;&gt;时钟&lt;a class=&#34;headerlink&#34; href=&#34;#时钟&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;最后，时钟（时钟加上复位）也是由 Diplomacy 管理的：从前面的图中，从 aggregator 进来，首先到 sbus，然后分出来多路的时钟信号：第一路到 cbus，用于 cbus 的各个外设（plic/clint 等），进一步也从 cbus 引到 pbus；第二路到各个 tile；第三路到 coh（coherence wrapper）；第四路到 fbus。默认配置下，这些时钟都是同一个信号，没有额外的处理，但是通过配置，可以把它们区分开，放到不同的时钟域，并在跨时钟域的时候，添加合适的跨时钟域的处理。&lt;/p&gt;&lt;p&gt;那么这些时钟是怎么分出来的呢：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;aggregator 把时钟暴露到 IO 上，然后内部暴露一个 allClockGroupsNode，连接到 sbus 上：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-10-1&#34;&gt;&lt;a id=&#34;__codelineno-10-1&#34; name=&#34;__codelineno-10-1&#34; href=&#34;#__codelineno-10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in BaseSubsystem.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-2&#34;&gt;&lt;a id=&#34;__codelineno-10-2&#34; name=&#34;__codelineno-10-2&#34; href=&#34;#__codelineno-10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;trait&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasConfigurablePRCILocations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasPRCILocations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-3&#34;&gt;&lt;a id=&#34;__codelineno-10-3&#34; name=&#34;__codelineno-10-3&#34; href=&#34;#__codelineno-10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ibus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InterruptBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-4&#34;&gt;&lt;a id=&#34;__codelineno-10-4&#34; name=&#34;__codelineno-10-4&#34; href=&#34;#__codelineno-10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allClockGroupsNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockGroupIdentityNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-5&#34;&gt;&lt;a id=&#34;__codelineno-10-5&#34; name=&#34;__codelineno-10-5&#34; href=&#34;#__codelineno-10-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io_clocks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SubsystemDriveClockGroupsFromIO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-6&#34;&gt;&lt;a id=&#34;__codelineno-10-6&#34; name=&#34;__codelineno-10-6&#34; href=&#34;#__codelineno-10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockGroupAggregator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-7&#34;&gt;&lt;a id=&#34;__codelineno-10-7&#34; name=&#34;__codelineno-10-7&#34; href=&#34;#__codelineno-10-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockGroupSourceNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockGroupSourceParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-8&#34;&gt;&lt;a id=&#34;__codelineno-10-8&#34; name=&#34;__codelineno-10-8&#34; href=&#34;#__codelineno-10-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allClockGroupsNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:*=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-9&#34;&gt;&lt;a id=&#34;__codelineno-10-9&#34; name=&#34;__codelineno-10-9&#34; href=&#34;#__codelineno-10-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InModuleBody&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-10&#34;&gt;&lt;a id=&#34;__codelineno-10-10&#34; name=&#34;__codelineno-10-10&#34; href=&#34;#__codelineno-10-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;member&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flatten&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-11&#34;&gt;&lt;a id=&#34;__codelineno-10-11&#34; name=&#34;__codelineno-10-11&#34; href=&#34;#__codelineno-10-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Flipped&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;RecordMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-12&#34;&gt;&lt;a id=&#34;__codelineno-10-12&#34; name=&#34;__codelineno-10-12&#34; href=&#34;#__codelineno-10-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cloneType&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-13&#34;&gt;&lt;a id=&#34;__codelineno-10-13&#34; name=&#34;__codelineno-10-13&#34; href=&#34;#__codelineno-10-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-14&#34;&gt;&lt;a id=&#34;__codelineno-10-14&#34; name=&#34;__codelineno-10-14&#34; href=&#34;#__codelineno-10-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-15&#34;&gt;&lt;a id=&#34;__codelineno-10-15&#34; name=&#34;__codelineno-10-15&#34; href=&#34;#__codelineno-10-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-16&#34;&gt;&lt;a id=&#34;__codelineno-10-16&#34; name=&#34;__codelineno-10-16&#34; href=&#34;#__codelineno-10-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-17&#34;&gt;&lt;a id=&#34;__codelineno-10-17&#34; name=&#34;__codelineno-10-17&#34; href=&#34;#__codelineno-10-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-18&#34;&gt;&lt;a id=&#34;__codelineno-10-18&#34; name=&#34;__codelineno-10-18&#34; href=&#34;#__codelineno-10-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-19&#34;&gt;&lt;a id=&#34;__codelineno-10-19&#34; name=&#34;__codelineno-10-19&#34; href=&#34;#__codelineno-10-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-20&#34;&gt;&lt;a id=&#34;__codelineno-10-20&#34; name=&#34;__codelineno-10-20&#34; href=&#34;#__codelineno-10-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-21&#34;&gt;&lt;a id=&#34;__codelineno-10-21&#34; name=&#34;__codelineno-10-21&#34; href=&#34;#__codelineno-10-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-22&#34;&gt;&lt;a id=&#34;__codelineno-10-22&#34; name=&#34;__codelineno-10-22&#34; href=&#34;#__codelineno-10-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseSubsystem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HierarchicalLocation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;InSubsystem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-23&#34;&gt;&lt;a id=&#34;__codelineno-10-23&#34; name=&#34;__codelineno-10-23&#34; href=&#34;#__codelineno-10-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-24&#34;&gt;&lt;a id=&#34;__codelineno-10-24&#34; name=&#34;__codelineno-10-24&#34; href=&#34;#__codelineno-10-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BareSubsystem&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-25&#34;&gt;&lt;a id=&#34;__codelineno-10-25&#34; name=&#34;__codelineno-10-25&#34; href=&#34;#__codelineno-10-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasDTS&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-26&#34;&gt;&lt;a id=&#34;__codelineno-10-26&#34; name=&#34;__codelineno-10-26&#34; href=&#34;#__codelineno-10-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Attachable&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-27&#34;&gt;&lt;a id=&#34;__codelineno-10-27&#34; name=&#34;__codelineno-10-27&#34; href=&#34;#__codelineno-10-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasConfigurablePRCILocations&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-28&#34;&gt;&lt;a id=&#34;__codelineno-10-28&#34; name=&#34;__codelineno-10-28&#34; href=&#34;#__codelineno-10-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasConfigurableTLNetworkTopology&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-29&#34;&gt;&lt;a id=&#34;__codelineno-10-29&#34; name=&#34;__codelineno-10-29&#34; href=&#34;#__codelineno-10-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-30&#34;&gt;&lt;a id=&#34;__codelineno-10-30&#34; name=&#34;__codelineno-10-30&#34; href=&#34;#__codelineno-10-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-31&#34;&gt;&lt;a id=&#34;__codelineno-10-31&#34; name=&#34;__codelineno-10-31&#34; href=&#34;#__codelineno-10-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// viewpointBus points to sbus by default&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-32&#34;&gt;&lt;a id=&#34;__codelineno-10-32&#34; name=&#34;__codelineno-10-32&#34; href=&#34;#__codelineno-10-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewpointBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroupNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allClockGroupsNode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-33&#34;&gt;&lt;a id=&#34;__codelineno-10-33&#34; name=&#34;__codelineno-10-33&#34; href=&#34;#__codelineno-10-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;前面提到，通过 CoherentBusTopologyParams，实现 &lt;code&gt;mbus := coh := sbus&lt;/code&gt; 的连接，通过 HierarchicalBusTopologyParams，实现 &lt;code&gt;pbus := cbus := sbus := fbus&lt;/code&gt; 的连接，与此同时，时钟也被接上了：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-11-1&#34;&gt;&lt;a id=&#34;__codelineno-11-1&#34; name=&#34;__codelineno-11-1&#34; href=&#34;#__codelineno-11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in BusTopology.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-2&#34;&gt;&lt;a id=&#34;__codelineno-11-2&#34; name=&#34;__codelineno-11-2&#34; href=&#34;#__codelineno-11-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// (master, slave, parameters)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-3&#34;&gt;&lt;a id=&#34;__codelineno-11-3&#34; name=&#34;__codelineno-11-3&#34; href=&#34;#__codelineno-11-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// from CoherentBusTopologyParams&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-4&#34;&gt;&lt;a id=&#34;__codelineno-11-4&#34; name=&#34;__codelineno-11-4&#34; href=&#34;#__codelineno-11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// coh := sbus, use sbus&amp;#39;s clock for coh&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-5&#34;&gt;&lt;a id=&#34;__codelineno-11-5&#34; name=&#34;__codelineno-11-5&#34; href=&#34;#__codelineno-11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;COH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClockFromMaster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodeBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BIND_STAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)()),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-6&#34;&gt;&lt;a id=&#34;__codelineno-11-6&#34; name=&#34;__codelineno-11-6&#34; href=&#34;#__codelineno-11-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// mbus := coh, use coh&amp;#39;s clock for mbus by default&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-7&#34;&gt;&lt;a id=&#34;__codelineno-11-7&#34; name=&#34;__codelineno-11-7&#34; href=&#34;#__codelineno-11-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;COH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;MBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-8&#34;&gt;&lt;a id=&#34;__codelineno-11-8&#34; name=&#34;__codelineno-11-8&#34; href=&#34;#__codelineno-11-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sbusToMbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-9&#34;&gt;&lt;a id=&#34;__codelineno-11-9&#34; name=&#34;__codelineno-11-9&#34; href=&#34;#__codelineno-11-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClockFromMaster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveMBusClockFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-10&#34;&gt;&lt;a id=&#34;__codelineno-11-10&#34; name=&#34;__codelineno-11-10&#34; href=&#34;#__codelineno-11-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodeBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BIND_QUERY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-11&#34;&gt;&lt;a id=&#34;__codelineno-11-11&#34; name=&#34;__codelineno-11-11&#34; href=&#34;#__codelineno-11-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-12&#34;&gt;&lt;a id=&#34;__codelineno-11-12&#34; name=&#34;__codelineno-11-12&#34; href=&#34;#__codelineno-11-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// from HierarchicalBusTopologyParams&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-13&#34;&gt;&lt;a id=&#34;__codelineno-11-13&#34; name=&#34;__codelineno-11-13&#34; href=&#34;#__codelineno-11-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// cbus := sbus, use sbus&amp;#39;s clock for cbus by default&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-14&#34;&gt;&lt;a id=&#34;__codelineno-11-14&#34; name=&#34;__codelineno-11-14&#34; href=&#34;#__codelineno-11-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sbusToCbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-15&#34;&gt;&lt;a id=&#34;__codelineno-11-15&#34; name=&#34;__codelineno-11-15&#34; href=&#34;#__codelineno-11-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// pbus := cbus, use cbus&amp;#39;s clock for pbus by default&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-16&#34;&gt;&lt;a id=&#34;__codelineno-11-16&#34; name=&#34;__codelineno-11-16&#34; href=&#34;#__codelineno-11-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;PBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossTo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbusToPbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-17&#34;&gt;&lt;a id=&#34;__codelineno-11-17&#34; name=&#34;__codelineno-11-17&#34; href=&#34;#__codelineno-11-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// sbus := fbus, use sbus&amp;#39;s clock for fbus by default&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-18&#34;&gt;&lt;a id=&#34;__codelineno-11-18&#34; name=&#34;__codelineno-11-18&#34; href=&#34;#__codelineno-11-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;SBUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapperConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crossFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xTypes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fbusToSbusXType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driveClocksFromSBus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;具体地，每个 bus 有一个自己的 clockGroupNode，bus 之间的 clockGroupNode 按照上面所属的方式连接，然后 bus 下面的设备再挂到 fixedClockNode 下面：&lt;/p&gt;&lt;div class=&#34;language-scala highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-12-1&#34;&gt;&lt;a id=&#34;__codelineno-12-1&#34; name=&#34;__codelineno-12-1&#34; href=&#34;#__codelineno-12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;TLBusWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasTLBusParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;busName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-2&#34;&gt;&lt;a id=&#34;__codelineno-12-2&#34; name=&#34;__codelineno-12-2&#34; href=&#34;#__codelineno-12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockDomain&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-3&#34;&gt;&lt;a id=&#34;__codelineno-12-3&#34; name=&#34;__codelineno-12-3&#34; href=&#34;#__codelineno-12-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasTLBusParams&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-4&#34;&gt;&lt;a id=&#34;__codelineno-12-4&#34; name=&#34;__codelineno-12-4&#34; href=&#34;#__codelineno-12-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;CanHaveBuiltInDevices&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-5&#34;&gt;&lt;a id=&#34;__codelineno-12-5&#34; name=&#34;__codelineno-12-5&#34; href=&#34;#__codelineno-12-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-6&#34;&gt;&lt;a id=&#34;__codelineno-12-6&#34; name=&#34;__codelineno-12-6&#34; href=&#34;#__codelineno-12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroupAggregator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockGroupAggregator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;busName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;shouldBeInlined&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suggestName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;busName&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;_clock_groups&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-7&#34;&gt;&lt;a id=&#34;__codelineno-12-7&#34; name=&#34;__codelineno-12-7&#34; href=&#34;#__codelineno-12-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroup&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;busName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;shouldBeInlined&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-8&#34;&gt;&lt;a id=&#34;__codelineno-12-8&#34; name=&#34;__codelineno-12-8&#34; href=&#34;#__codelineno-12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroupNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroupAggregator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// other bus clock groups attach here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-9&#34;&gt;&lt;a id=&#34;__codelineno-12-9&#34; name=&#34;__codelineno-12-9&#34; href=&#34;#__codelineno-12-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-10&#34;&gt;&lt;a id=&#34;__codelineno-12-10&#34; name=&#34;__codelineno-12-10&#34; href=&#34;#__codelineno-12-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixedClockNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;FixedClockBroadcast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixedClockOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// device clocks attach here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-11&#34;&gt;&lt;a id=&#34;__codelineno-12-11&#34; name=&#34;__codelineno-12-11&#34; href=&#34;#__codelineno-12-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockSinkNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockSinkNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockSinkParameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;take&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixedClockOpt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-12&#34;&gt;&lt;a id=&#34;__codelineno-12-12&#34; name=&#34;__codelineno-12-12&#34; href=&#34;#__codelineno-12-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-13&#34;&gt;&lt;a id=&#34;__codelineno-12-13&#34; name=&#34;__codelineno-12-13&#34; href=&#34;#__codelineno-12-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroupAggregator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-14&#34;&gt;&lt;a id=&#34;__codelineno-12-14&#34; name=&#34;__codelineno-12-14&#34; href=&#34;#__codelineno-12-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixedClockNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// first member of group is always domain&amp;#39;s own clock&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-15&#34;&gt;&lt;a id=&#34;__codelineno-12-15&#34; name=&#34;__codelineno-12-15&#34; href=&#34;#__codelineno-12-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockSinkNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixedClockNode&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-16&#34;&gt;&lt;a id=&#34;__codelineno-12-16&#34; name=&#34;__codelineno-12-16&#34; href=&#34;#__codelineno-12-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-17&#34;&gt;&lt;a id=&#34;__codelineno-12-17&#34; name=&#34;__codelineno-12-17&#34; href=&#34;#__codelineno-12-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockSinkNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_1&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-18&#34;&gt;&lt;a id=&#34;__codelineno-12-18&#34; name=&#34;__codelineno-12-18&#34; href=&#34;#__codelineno-12-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-19&#34;&gt;&lt;a id=&#34;__codelineno-12-19&#34; name=&#34;__codelineno-12-19&#34; href=&#34;#__codelineno-12-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-20&#34;&gt;&lt;a id=&#34;__codelineno-12-20&#34; name=&#34;__codelineno-12-20&#34; href=&#34;#__codelineno-12-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in ClockDomain.scala&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-21&#34;&gt;&lt;a id=&#34;__codelineno-12-21&#34; name=&#34;__codelineno-12-21&#34; href=&#34;#__codelineno-12-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Domain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;implicit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;HasDomainCrossing&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-22&#34;&gt;&lt;a id=&#34;__codelineno-12-22&#34; name=&#34;__codelineno-12-22&#34; href=&#34;#__codelineno-12-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-23&#34;&gt;&lt;a id=&#34;__codelineno-12-23&#34; name=&#34;__codelineno-12-23&#34; href=&#34;#__codelineno-12-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ClockBundle&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-24&#34;&gt;&lt;a id=&#34;__codelineno-12-24&#34; name=&#34;__codelineno-12-24&#34; href=&#34;#__codelineno-12-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-25&#34;&gt;&lt;a id=&#34;__codelineno-12-25&#34; name=&#34;__codelineno-12-25&#34; href=&#34;#__codelineno-12-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Impl&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-26&#34;&gt;&lt;a id=&#34;__codelineno-12-26&#34; name=&#34;__codelineno-12-26&#34; href=&#34;#__codelineno-12-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Impl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyRawModuleImp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-27&#34;&gt;&lt;a id=&#34;__codelineno-12-27&#34; name=&#34;__codelineno-12-27&#34; href=&#34;#__codelineno-12-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;childClock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clock&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-28&#34;&gt;&lt;a id=&#34;__codelineno-12-28&#34; name=&#34;__codelineno-12-28&#34; href=&#34;#__codelineno-12-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;childReset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-29&#34;&gt;&lt;a id=&#34;__codelineno-12-29&#34; name=&#34;__codelineno-12-29&#34; href=&#34;#__codelineno-12-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;provideImplicitClockToLazyChildren&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-30&#34;&gt;&lt;a id=&#34;__codelineno-12-30&#34; name=&#34;__codelineno-12-30&#34; href=&#34;#__codelineno-12-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-31&#34;&gt;&lt;a id=&#34;__codelineno-12-31&#34; name=&#34;__codelineno-12-31&#34; href=&#34;#__codelineno-12-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// these are just for backwards compatibility with external devices&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-32&#34;&gt;&lt;a id=&#34;__codelineno-12-32&#34; name=&#34;__codelineno-12-32&#34; href=&#34;#__codelineno-12-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// that were manually wiring themselves to the domain&amp;#39;s clock/reset input:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-33&#34;&gt;&lt;a id=&#34;__codelineno-12-33&#34; name=&#34;__codelineno-12-33&#34; href=&#34;#__codelineno-12-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chiselTypeOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-34&#34;&gt;&lt;a id=&#34;__codelineno-12-34&#34; name=&#34;__codelineno-12-34&#34; href=&#34;#__codelineno-12-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;IO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chiselTypeOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-35&#34;&gt;&lt;a id=&#34;__codelineno-12-35&#34; name=&#34;__codelineno-12-35&#34; href=&#34;#__codelineno-12-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clock&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-36&#34;&gt;&lt;a id=&#34;__codelineno-12-36&#34; name=&#34;__codelineno-12-36&#34; href=&#34;#__codelineno-12-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clockBundle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-37&#34;&gt;&lt;a id=&#34;__codelineno-12-37&#34; name=&#34;__codelineno-12-37&#34; href=&#34;#__codelineno-12-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-38&#34;&gt;&lt;a id=&#34;__codelineno-12-38&#34; name=&#34;__codelineno-12-38&#34; href=&#34;#__codelineno-12-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;tilelink-widgets&#34;&gt;TileLink Widgets&lt;a class=&#34;headerlink&#34; href=&#34;#tilelink-widgets&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Rocket Chip 中用 Diplomacy 实现 TileLink 总线的连接。涉及到的相关结构如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;TLBundle：代表 TileLink 总线的接口，根据 TLBundleParameters 例化&lt;/li&gt;&lt;li&gt;TLMasterPortParameters：信息 TileLink Master 的信息，从 Upstream 向 Downstream 传递&lt;/li&gt;&lt;li&gt;TLSlavePortParameters：信息 TileLink Slave 的信息，从 Downstream 向 Upstream 传递&lt;/li&gt;&lt;li&gt;TLEdgeOut：记录 Outward 边，也就是 Master 侧的 TileLink 的信息&lt;/li&gt;&lt;li&gt;TLEdgeIn：记录 Inward 边，也就是 Slave 侧的 TileLink 的信息&lt;/li&gt;&lt;li&gt;TLImp: &lt;code&gt;extends NodeImp[TLMasterPortParameters, TLSlavePortParameters, TLEdgeOut, TLEdgeIn, TLBundle]&lt;/code&gt;，基于这个类型来导出各种类型的 TileLink Node&lt;/li&gt;&lt;li&gt;TLXBar：TileLink 的 Crossbar，生成一个继承 NexusNode 的 TLNexusNode，它的信息传递方式是，把下游的各个 Slave 信息拼起来传给上游，使得 Master 可以看到所有 Slave 的信息；把上游的各个 Master 信息拼起来传给下游，使得 Slave 可以看到所有 Master 的信息&lt;/li&gt;&lt;li&gt;TLToAXI4：生成一个继承 AdapterNode 的 TLToAXI4Node，把 TileLink Master 转成 AXI4 Master，把上游的 TileLink Master 信息转换为 AXI Master 传递给下游，把下游的 AXI Slave 信息转换为 TileLink Slave 传递给上游&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;参考文档&#34;&gt;参考文档&lt;a class=&#34;headerlink&#34; href=&#34;#参考文档&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://chipyard.readthedocs.io/en/latest/TileLink-Diplomacy-Reference/index.html&#34;&gt;TileLink and Diplomacy Reference&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://chipyard.readthedocs.io/en/latest/Generators/Rocket-Chip.html#memory-system&#34;&gt;Rocket Chip - Memory System&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/chipsalliance/diplomacy&#34;&gt;chipsalliance/diplomacy&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/hardware/2025/05/14/rocket-chip-diplomacy/</link> <pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/05/14/rocket-chip-diplomacy/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/rocket-chip-diplomacy.png" type="image/png" length="76218" /> </item> <item> <title>Intel Redwood Cove 微架构评测</title> <category>cpu</category> <category>graniterapids</category> <category>hardware</category> <category>intel</category> <category>meteorlake</category> <category>performance</category> <category>redwoodcove</category> <category>uarch-review</category> <description>&lt;h1 id=&#34;intel-redwood-cove-微架构评测&#34;&gt;Intel Redwood Cove 微架构评测&lt;a class=&#34;headerlink&#34; href=&#34;#intel-redwood-cove-微架构评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;之前我们测试了 Intel 的微架构 &lt;a href=&#34;../../../01/10/intel-golden-cove/&#34;&gt;Redwood Cove&lt;/a&gt;，这次就来测一下 Redwood Cove，它被用到了 Meteor Lake 以及 Granite Rapids 上。这次就以阿里云 &lt;a href=&#34;https://help.aliyun.com/zh/ecs/user-guide/overview-of-instance-families#g9i&#34;&gt;g9i&lt;/a&gt; 实例的 Granite Rapids 机器来测试一下 Redwood Cove 微架构的各项指标。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Intel 关于 Redwood Cove 微架构有这些官方的信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://www.intel.com/content/www/us/en/content-details/814198/intel-64-and-ia-32-architectures-optimization-reference-manual-volume-1.html&#34;&gt;Intel® 64 and IA-32 Architectures Optimization Reference Manual Volume 1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.thefpsreview.com/wp-content/uploads/2023/10/Meteor-Lake-Architecture-Overview.pdf&#34;&gt;Meteor Lake Architecture Overview&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;现有评测&#34;&gt;现有评测&lt;a class=&#34;headerlink&#34; href=&#34;#现有评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;网上已经有较多针对 Redwood Cove 微架构的评测和分析，建议阅读：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://chipsandcheese.com/p/intels-redwood-cove-baby-steps-are-still-steps&#34;&gt;Intel’s Redwood Cove: Baby Steps are Still Steps&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.anandtech.com/show/20046/intel-unveils-meteor-lake-architecture-intel-4-heralds-the-disaggregated-future-of-mobile-cpus/2&#34;&gt;Intel Unveils Meteor Lake Architecture: Intel 4 Heralds the Disaggregated Future of Mobile CPUs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下面分各个模块分别记录官方提供的信息，以及实测的结果。读者可以对照已有的第三方评测理解。官方信息与实测结果一致的数据会加粗。&lt;/p&gt;&lt;h2 id=&#34;benchmark&#34;&gt;Benchmark&lt;a class=&#34;headerlink&#34; href=&#34;#benchmark&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Intel Redwood Cove 的性能测试结果见 &lt;a href=&#34;../../../../../benchmark/&#34;&gt;SPEC&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;前端&#34;&gt;前端&lt;a class=&#34;headerlink&#34; href=&#34;#前端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;l1-icache&#34;&gt;L1 ICache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-icache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Larger instruction cache: 32K→&lt;strong&gt;64K&lt;/strong&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了测试 L1 ICache 容量，构造一个具有巨大指令 footprint 的循环，由大量的 4 字节 nop 和最后的分支指令组成。观察在不同 footprint 大小下的 IPC：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-redwood-cove-fetch-bandwidth.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 footprint 在 64 KB 之前时可以达到 6 IPC，之后则降到 3.2 IPC，这里的 64 KB 就对应了 L1 ICache 的容量。&lt;/p&gt;&lt;h3 id=&#34;l1-itlb&#34;&gt;L1 ITLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-itlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;构造一系列的 jmp 指令，使得 jmp 指令分布在不同的 page 上，使得 ITLB 成为瓶颈：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-redwood-cove-itlb-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 256 个 Page 出现了明显的拐点，对应的就是 256 的 L1 ITLB 容量。注意要避免 ICache 和 BTB 的容量成为瓶颈，把 jmp 指令分布在不同的 Cache Line 和 BTB entry 上。&lt;/p&gt;&lt;p&gt;超过 256 个 Page 以后，如图有周期数突然下降后缓慢上升的情况（例如横坐标 288-&amp;gt;289、320-&amp;gt;321、352-&amp;gt;353、384-&amp;gt;385 等，以 32 为周期），背后的原理需要进一步分析。&lt;/p&gt;&lt;p&gt;和 &lt;a href=&#34;../../../01/10/intel-golden-cove/&#34;&gt;Golden Cove&lt;/a&gt; 是一样的。&lt;/p&gt;&lt;h3 id=&#34;instruction-decode-queue-idq--loop-stream-detector-lsd&#34;&gt;Instruction Decode Queue (IDQ) + Loop Stream Detector (LSD)&lt;a class=&#34;headerlink&#34; href=&#34;#instruction-decode-queue-idq--loop-stream-detector-lsd&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Improved LSD coverage: the IDQ can hold &lt;strong&gt;192&lt;/strong&gt; μops per logical processor in single-thread mode or 96 μops per thread when SMT is active.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了测试 Instruction Decode Queue 的大小，构造不同大小的循环，循环体是复制若干份的 &lt;code&gt;inc %rsi&lt;/code&gt; 指令，最后是 &lt;code&gt;dec + jnz&lt;/code&gt; 作为循环结尾，通过 &lt;a href=&#34;https://perfmon-events.intel.com/index.html?pltfrm=ahybrid.html&amp;amp;evnt=LSD.UOPS&#34;&gt;LSD.UOPS&lt;/a&gt; 性能计数器统计每次循环有多少个 UOP 来自于 Loop Stream Detector 机制，发现其最大值为 191，说明 Redwood Cove 的 Loop Stream Detector 可以识别最多 191 个 uop 的循环。此时每个循环要执行 192 条指令，最后的 &lt;code&gt;dec + jnz&lt;/code&gt; 被融合成了一个 uop。&lt;/p&gt;&lt;p&gt;循环体中，如果用 &lt;code&gt;nop&lt;/code&gt; 指令来填充，会得到 39 左右的比 192 小得多的容量，猜测是进入了低功耗模式。&lt;/p&gt;&lt;h3 id=&#34;instruction-prefetch-instruction&#34;&gt;Instruction Prefetch Instruction&lt;a class=&#34;headerlink&#34; href=&#34;#instruction-prefetch-instruction&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code Software Prefetch x86 architecture extension (Granite Rapids only).&lt;/li&gt;&lt;li&gt;PREFETCHIT0: (temporal code)—prefetch code into all levels of the cache hierarchy.&lt;/li&gt;&lt;li&gt;PREFETCHIT1: (temporal code with respect to first level cache misses)—prefetch code into all but the first-level of the cache hierarchy.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;conditional-branch-predictor&#34;&gt;Conditional Branch Predictor&lt;a class=&#34;headerlink&#34; href=&#34;#conditional-branch-predictor&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&#34;https://cseweb.ucsd.edu/~dstefan/pubs/yavarzadeh:2023:half.pdf&#34;&gt;Half&amp;amp;Half: Demystifying Intel’s Directional Branch Predictors for Fast, Secure Partitioned Execution&lt;/a&gt; 论文的方法，可以测出 Redwood Cove 的分支预测器采用的历史更新方式为：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使用 388 位的 Path History Register，每次执行 taken branch 时更新&lt;/li&gt;&lt;li&gt;更新方式为：&lt;code&gt;PHRnew = (PHRold &amp;lt;&amp;lt; 2) xor footprint&lt;/code&gt;&lt;/li&gt;&lt;li&gt;footprint 共有 16 位，其中 B 代表分支指令的地址，T 代表分支跳转的目的地址：&lt;ul&gt;&lt;li&gt;footprint[0] = B[3] xor T[0]&lt;/li&gt;&lt;li&gt;footprint[1] = B[4] xor T[1]&lt;/li&gt;&lt;li&gt;footprint[2] = B[5]&lt;/li&gt;&lt;li&gt;footprint[3] = B[6]&lt;/li&gt;&lt;li&gt;footprint[4] = B[7]&lt;/li&gt;&lt;li&gt;footprint[5] = B[8]&lt;/li&gt;&lt;li&gt;footprint[6] = B[9]&lt;/li&gt;&lt;li&gt;footprint[7] = B[10]&lt;/li&gt;&lt;li&gt;footprint[8] = B[0] xor T[2]&lt;/li&gt;&lt;li&gt;footprint[9] = B[1] xor T[3]&lt;/li&gt;&lt;li&gt;footprint[10] = B[2] xor T[4]&lt;/li&gt;&lt;li&gt;footprint[11] = B[11] xor T[5]&lt;/li&gt;&lt;li&gt;footprint[12] = B[12]&lt;/li&gt;&lt;li&gt;footprint[13] = B[13]&lt;/li&gt;&lt;li&gt;footprint[14] = B[14]&lt;/li&gt;&lt;li&gt;footprint[15] = B[15]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;和 &lt;a href=&#34;../../../01/10/intel-golden-cove/&#34;&gt;Golden Cove&lt;/a&gt; 是一样的。各厂商处理器的 PHR 更新规则见 &lt;a href=&#34;https://jia.je/cpu/cbp.html&#34;&gt;jiegec/cpu&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;后端&#34;&gt;后端&lt;a class=&#34;headerlink&#34; href=&#34;#后端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;l1-dcache&#34;&gt;L1 DCache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dcache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;构造不同大小 footprint 的 pointer chasing 链，测试不同 footprint 下每条 load 指令耗费的时间：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;0KB-48KB: 5 cycle，对应 L1 DCache&lt;/li&gt;&lt;li&gt;48KB-384KB: 16 cycle，对应 L2 Cache，且命中了 L1 DTLB；说明 L1 miss L2 hit 带来了 11 cycle 的损失&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;l1-dtlb&#34;&gt;L1 DTLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dtlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;用类似测 L1 DCache 的方法测试 L1 DTLB 容量，只不过这次 pointer chasing 链的指针分布在不同的 page 上，使得 DTLB 成为瓶颈：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-redwood-cove-dtlb-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 96 Page 出现了明显的拐点，对应的就是 96 的 L1 DTLB 容量。没有超出 L1 DTLB 容量前，Load to use latency 是 5 cycle；超出 L1 DTLB 容量后，Load to use latency 是 12 cycle，说明 L1 DTLB miss 带来了 7 cycle 的损失。&lt;/p&gt;&lt;h3 id=&#34;执行单元&#34;&gt;执行单元&lt;a class=&#34;headerlink&#34; href=&#34;#执行单元&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;EXE: 3-cycle Floating Point multiplication.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;lsu&#34;&gt;LSU&lt;a class=&#34;headerlink&#34; href=&#34;#lsu&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;load-store-带宽&#34;&gt;Load Store 带宽&lt;a class=&#34;headerlink&#34; href=&#34;#load-store-带宽&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;针对 Load Store 带宽，实测每个周期可以完成：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;3x 256b Load&lt;/li&gt;&lt;li&gt;2x 256b Load + 2x 256b Store&lt;/li&gt;&lt;li&gt;1x 256b Load + 2x 256b Store&lt;/li&gt;&lt;li&gt;2x 256b Store&lt;/li&gt;&lt;li&gt;2x 512b Load&lt;/li&gt;&lt;li&gt;1x 512b Load + 1x 512b Store&lt;/li&gt;&lt;li&gt;1x 512b Store&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;store-to-load-forwarding&#34;&gt;Store to Load Forwarding&lt;a class=&#34;headerlink&#34; href=&#34;#store-to-load-forwarding&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;经过实际测试，Redwood Cove 上如下的情况可以成功转发，对地址 x 的 Store 转发到对地址 y 的 Load 成功时 y-x 的取值范围：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Store\Load&lt;/th&gt;&lt;th&gt;8b Load&lt;/th&gt;&lt;th&gt;16b Load&lt;/th&gt;&lt;th&gt;32b Load&lt;/th&gt;&lt;th&gt;64b Load&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;8b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16b Store&lt;/td&gt;&lt;td&gt;[0,1]&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;32b Store&lt;/td&gt;&lt;td&gt;[0,3]&lt;/td&gt;&lt;td&gt;[0,2]&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;64b Store&lt;/td&gt;&lt;td&gt;[0,7]&lt;/td&gt;&lt;td&gt;[0,6]&lt;/td&gt;&lt;td&gt;[0,4]&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可以看到，Redwood Cove 在 Store 完全包含 Load 的情况下都可以转发，没有额外的对齐要求。但当 Load 和 Store 只有部分重合时，就无法转发。两个连续的 32 位的 Store 和一个 64 位的 Load 重合也不能转发。&lt;/p&gt;&lt;p&gt;特别地，在 y=x 且不跨越缓存行边界且满足下列要求的情况下，Store Forwarding 不会或只带来很小的性能损失：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;8b Store -&amp;gt; 8b Load&lt;/li&gt;&lt;li&gt;32b Store -&amp;gt; 8b Load&lt;/li&gt;&lt;li&gt;64b Store -&amp;gt; 8b Load&lt;/li&gt;&lt;li&gt;32b Store -&amp;gt; 32b Load&lt;/li&gt;&lt;li&gt;64b Store -&amp;gt; 32b Load&lt;/li&gt;&lt;li&gt;64b Store -&amp;gt; 64b Load&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;考虑到 y 必须等于 x，也就是地址要一样，猜测 Redwood Cove 使用了类似 Memory Renaming 的技术来实现这个效果。如果是连续两个对同一个地址的 Store 对一个 Load 的转发，效果和只有一个 Store 是一样的。&lt;/p&gt;&lt;p&gt;除了上述情况以外，Store Forwarding 成功时的延迟在 5 个周期，失败则要 19 个周期。&lt;/p&gt;&lt;p&gt;和 &lt;a href=&#34;../../../01/10/intel-golden-cove/&#34;&gt;Golden Cove&lt;/a&gt; 是一样的。&lt;/p&gt;&lt;p&gt;小结：Redwood Cove 的 Store to Load Forwarding：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 ld + 1 st: 要求 st 包含 ld，特别地，地址相同时，性能最好&lt;/li&gt;&lt;li&gt;1 ld + 2+ st: 不支持&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;prefetcher&#34;&gt;Prefetcher&lt;a class=&#34;headerlink&#34; href=&#34;#prefetcher&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;New HW data prefetcher to recognize and prefetch the “Array of Pointers” pattern.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Intel Redwood Cove 的处理器通过 MSR 1A4H 可以配置各个预取器（来源：Software Developers Manual，Additional MSRs Supported by the Intel® Core™ Ultra 7 Processors Supporting Performance Hybrid Architecture）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;MSR_1A4H[0]: the L2 hardware prefetcher, which fetches additional lines of code or data into the L2 cache.&lt;/li&gt;&lt;li&gt;MSR_1A4H[1]: the L2 adjacent cache line prefetcher, which fetches the cache line that comprises a cache line pair (128 bytes). 这和 AMD 的 Up/Down Prefetcher 应该是一个意思&lt;/li&gt;&lt;li&gt;MSR_1A4H[2]: the L1 data cache prefetcher, which fetches the next cache line into L1 data cache. 这个应该属于 Next Line Prefetcher&lt;/li&gt;&lt;li&gt;MSR_1A4H[3]: the L1 data cache IP prefetcher, which uses sequential load history (based on instruction pointer of previous loads) to determine whether to prefetch additional lines.&lt;/li&gt;&lt;li&gt;MSR_1A4H[4]: Next page prefetcher，当访问快走到一个页的结尾的时候，从下一个页的开头开始 prefetch，提前进行可能的 TLB refill&lt;/li&gt;&lt;li&gt;MSR_1A4H[5]: the L2 Adaptive Multipath Probability (AMP) prefetcher. 这个应该属于 Spatial Prefetcher&lt;/li&gt;&lt;li&gt;MSR_1A4H[6]: LLC page prefetcher，类似 Next page prefetcher 的思路，但是把虚拟地址上连续的两个 4KB 的页，一共 8KB 的数据预取到 LLC 缓存上&lt;/li&gt;&lt;li&gt;MSR_1A4H[7]: Array of pointers prefetcher，针对指针数组 &lt;code&gt;T *arr[]&lt;/code&gt; 的场景进行预取&lt;/li&gt;&lt;li&gt;MSR_1A4H[8]: Stream prefetch code fetch&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;reorder-buffer&#34;&gt;ReOrder Buffer&lt;a class=&#34;headerlink&#34; href=&#34;#reorder-buffer&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;为了测试 ROB 的大小，设计了一个循环，循环开始和结束是长延迟的 long latency load。中间是若干条 NOP 指令，当 NOP 指令比较少时，循环的时候取决于 load 指令的时间；当 NOP 指令数量过多，填满了 ROB 以后，就会导致 ROB 无法保存循环末尾的 load 指令，性能出现下降。测试结果如下：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-redwood-cove-rob-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;当 NOP 数量达到 512 时，性能开始急剧下滑，说明 Redwood Cove 的 ROB 大小是 512。&lt;/p&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;a class=&#34;headerlink&#34; href=&#34;#总结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redwood Cove 相比 Golden Cove 是比较小的一个迭代，更新的部分主要有：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;扩大了 L1 ICache 容量&lt;/li&gt;&lt;li&gt;扩大了分支预测器的容量&lt;/li&gt;&lt;li&gt;增加了更多预取器&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;因此性能提升也比较小，希望 Intel 可以更加给力一些，给 AMD 一些竞争压力。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/04/23/intel-redwood-cove/</link> <pubDate>Wed, 23 Apr 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/04/23/intel-redwood-cove/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/intel-redwood-cove.png" type="image/png" length="70595" /> </item> <item> <title>如何进行条件分支预测器实验</title> <category>bp</category> <category>cbp</category> <category>cpu</category> <category>ooo</category> <category>software</category> <description>&lt;h1 id=&#34;如何进行条件分支预测器实验&#34;&gt;如何进行条件分支预测器实验&lt;a class=&#34;headerlink&#34; href=&#34;#如何进行条件分支预测器实验&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最近针对各种条件分支预测器（Conditional Branch Predictor）做了在各种 benchmark 上的实验，在此记录一下做这个实验的流程。&lt;/p&gt;&lt;p&gt;代码已开源：&lt;a href=&#34;https://github.com/jiegec/cbp-experiments&#34;&gt;jiegec/cbp-experiments&lt;/a&gt;。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;流程&#34;&gt;流程&lt;a class=&#34;headerlink&#34; href=&#34;#流程&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;说到做条件分支预测器实验，到底是做什么呢？其实就是针对未来的处理器中的条件分支预测器的设计，在提前准备好的一些 benchmark 上进行模拟，观察它的预测准确性。既然是未来的处理器，那么硬件肯定是没有的，如果直接用 RTL 去实现新的预测器，再用 RTL 仿真，结果固然准确，但这还是太复杂并且太慢了。所以在前期的时候，首先会构建一个单独的条件分支预测器的实验环境，在只考虑条件分支指令、不考虑其他指令的情况下，单纯来观察预测的效果，从而可以实现比较快速的设计迭代。&lt;/p&gt;&lt;p&gt;为了达成这个目的，需要：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;提前准备好一些 benchmark，提取出这个 benchmark 中所涉及到的条件分支 trace，以及条件分支预测器所需要的其他信息&lt;/li&gt;&lt;li&gt;为了进一步缩短模拟的时间和 trace 的大小，利用 SimPoint 等技术来减少要模拟的指令条数&lt;/li&gt;&lt;li&gt;搭建一个条件分支预测器模拟器，在上一步提取出来的 trace 中模拟条件分支预测器的执行，从而得到结果&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;下面按照这个顺序，分别来讨论一下这个流程。&lt;/p&gt;&lt;h2 id=&#34;benchmark-准备&#34;&gt;benchmark 准备&lt;a class=&#34;headerlink&#34; href=&#34;#benchmark-准备&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;比较常见的 benchmark 就是 SPEC INT 2017，当然现在很多论文也会自己去寻找一些其他的 benchmark，不同的 benchmark 它的程序的特性也是不一样的，未来也可能会有新的 benchmark 出来，所以有必要了解从 benchmark 到 trace 的过程。选好了 benchmark 以后，我们需要思考怎么去生成一个 trace：为了减少后续模拟的负担，我们需要从 benchmark 中提取条件分支的执行历史，作为 groundtruth，喂给条件分支预测器，这样才能知道每次预测是否准确。当然了，网上已经有很多现成的 trace，比如 CBP Championship 比赛也都有提供自己的 benchmark trace（P.S. 2025 年的 CBP Championship 正在火热进行中），但读完本文，你应该可以尝试自己完成这个从 benchmark 到 trace 的过程。&lt;/p&gt;&lt;p&gt;那么第一个问题就是，怎么获取 benchmark 中分支指令执行的信息呢？首先来看一组数据，在 amd64 上，用 &lt;code&gt;-O3&lt;/code&gt; 编译 SPEC INT 2017 的 benchmark，一共 10 个子 benchmark，加起来运行的指令数大约是 1.6e13 条，其中有大约 2.9e12 条分支指令（包括了有条件和无条件），这个数量是非常巨大的，无论是保存这些执行信息的性能开销，还是需要的存储空间，都是比较巨大的。&lt;/p&gt;&lt;p&gt;考虑到条件分支预测器只需要分支指令的信息，所以只考虑 2.9e12 条分支指令的部分，而不去考虑完整的 1.6e13 条指令，首先可以减少一个数量级。接着，考虑每个分支指令需要记录哪些信息：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;知道每一条分支指令的地址、每一条直接分支指令的目的地址&lt;/li&gt;&lt;li&gt;对于执行的每一条条件分支指令，要记录它跳转与否&lt;/li&gt;&lt;li&gt;对于执行的每一条间接分支指令，需要记录它跳转的目的地址&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;其中第一点，由于条件分支指令本身是不变的（不考虑 JIT），所以只需要存一份就行。而 SPEC INT 2017 所有程序的分支指令加起来大概只有 5e4 的量级，相比 2.9e12 的执行的分支指令数可以忽略不计。第三点，由于间接分支指令通常也是比较少的，而且同一条间接分支指令的目的地址通常来说不会特别多，也有压缩的空间。那么最主要的空间来自于：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;虽然条件分支指令数量不多，但是执行的条件分支指令次数很多，每一次执行的可能是不同的条件分支指令，如果要记录当前这次执行的是哪一条条件分支指令，那么这个指令的地址或者一个 id 所占用的空间会很大；如果不记录当前执行的是哪一条分支分支指令，就需要在后续处理的时候，结合可执行程序的汇编来推断，当前执行的是哪一条条件分支指令&lt;/li&gt;&lt;li&gt;其次就是要记录条件分支跳转与否，这一个的开销相对会小一些，只需要一个 bit&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由此可以推导出不同的 trace 记录方式：&lt;/p&gt;&lt;p&gt;第一种方式是，遇到条件分支指令时，只记录跳转（Taken）还是不跳转（Not Taken），这种方式保存的数据量最小（平均每个分支只需要比 1 bit 略多的空间），但是后续需要结合汇编，恢复出执行的过程，更进一步还可以压缩那些 return 的目的地址等于对应的 call 指令的下一条指令的地址的情况（Indirect Transfer Compression for Returns）。Intel PT 采用的是这种方法。&lt;/p&gt;&lt;p&gt;第二种方式是，遇到条件分支指令时，不仅记录跳转与否，还记录它执行的是哪一条分支指令。这种方式保存的数据量稍多，假如要支持 5e4 条不同的条件分支指令，为了保存这个 id，就需要 16 位。类似地，也可以只记录跳转了的条件分支指令，那么那些没有跳转的条件分支指令，就需要后续结合汇编或者完整的条件分支指令表来恢复出来。CBP Championship 的 trace 采用的是这种方法。&lt;/p&gt;&lt;p&gt;第一种方法明显空间会更小，以 2.9e12 条执行的分支指令数，大概需要 300GB 的磁盘空间；第二种方法，同样的分支指令数，就需要大概 5.8TB 的磁盘空间。当然了，第二种方法存的数据可以经过无损压缩进一步缩小空间，实测压缩后大概是每分支 0.16 字节（这个数字与所跑的 benchmark 有关系，分支容易被预测的 benchmark 对应更好的压缩率，因为某种意义来说分支预测也是一种无损压缩），只比第一种方法大概每分支 0.14 字节略大。同理，第一种方法存的数据也可以经过无损压缩进一步缩小空间，达到每分支大约 0.018 字节的程度（压缩率也和分支预测准确率有关）。&lt;/p&gt;&lt;p&gt;在评估条件分支预测器的时候，除了知道分支本身，还需要知道执行的指令数，用于计算 MPKI 等，这个可以通过 PMU 单独统计出来，或者直接根据控制流推算出执行的指令数，例如在等长指令的 ISA 上直接用地址差除以指令长度来计算指令数，在变长指令的 ISA 上 Parse ELF 去解析控制流经过的指令：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;解析 ELF，用反汇编器得到每条指令的地址，从小到大排序放到数组中&lt;/li&gt;&lt;li&gt;对于每个分支地址和目的地址，查询它对应的指令在指令数组中的下标，记录下来&lt;/li&gt;&lt;li&gt;统计指令数时，每遇到一个跳转的分支，就用当前跳转的分支的分支地址在指令数组中的下标，减去上一个跳转的分支的目的地址在指令数组中的下标，加上一，累加到指令数中&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;当然了，这里有一些细节，例如如果程序是 PIE，那么需要知道它加载的基地址，从而把运行时的指令地址和 ELF 对应起来；类似地，如果程序加载了 libc 等动态库，也需要知道它们的加载地址。这些信息可以在抓取指令 trace 的同时，顺带记录下来。如果想规避这个麻烦，可以使用静态编译，不过 vdso 依然会动态加载，但 vdso 内指令很少，通常可以忽略不计，可以特判忽略掉。&lt;/p&gt;&lt;p&gt;此外，如果分支预测器需要知道分支指令的 fallthrough 地址（例如 Path History Register），且使用的是变长指令集，还需要记录分支指令的长度。这些需求实现起来都并不复杂，也只需要占用很小的空间。&lt;/p&gt;&lt;p&gt;TB 级别的规模，无论是保存这些数据，还是生成这些数据，或者更进一步在这些数据上模拟条件分支预测器，都会带来很大的负担。因此，需要一个办法来减少要模拟的 trace 长度。&lt;/p&gt;&lt;h2 id=&#34;simpoint&#34;&gt;SimPoint&lt;a class=&#34;headerlink&#34; href=&#34;#simpoint&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://cseweb.ucsd.edu/~calder/papers/ASPLOS-02-SimPoint.pdf&#34;&gt;SimPoint&lt;/a&gt; 是解决这个问题的一个很重要的方法：它观察到了一个很重要的现象，就是这些 benchmark 其实大多数时候是在重复做相同的事情，只不过涉及到的数据不同。这也很好理解，因为很多程序里面都是循环，而循环是很有规律的，我们可以预期程序的行为在时间尺度上也会有一定的周期性。下面是 SimPoint 论文中的一个图，它记录了 gzip-graphic benchmark 的 IPC（每周期指令数，图中的实线）和 L1 数据缓存缺失率（图中的虚线）随着执行过程的变化：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../cbp-experiments-simpoint.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到比较明显的周期性，而涉及到周期性，就会想到利用周期的性质：如果在一个周期上评估它的 IPC 或者分支预测器的准确率，然后外推到其他的周期，是不是大大缩小了执行时间？SimPoint 利用这个思想，设计了如下的步骤：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;首先把整个执行过程按照执行的指令数切分成很多个 slice&lt;/li&gt;&lt;li&gt;接着对 slice 进行聚类，使得每一个类内的 slice 的行为类似，这个类就叫做一个 phase&lt;/li&gt;&lt;li&gt;之后做实验的时候，只需要对每个 phase 内的一个 slice 进行实验，评估出它的 IPC 或者其他性能指标，再按照 phase 内的 slice 数量加权平均，就可以得到完整执行过程的性能指标了&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这里比较核心的步骤，就是怎么对 slice 聚类？SimPoint 论文采用了机器学习的方法：针对每个 slice，统计它在不同 Basic Block 内执行的时间的比例，把这个统计数据记为 Basic Block Vector；那么聚类，就是针对那些 Basic Block Vector 相近的 Slice，进行 K-Means 算法。&lt;/p&gt;&lt;p&gt;由于 K-Means 算法执行的时候，需要首先知道聚出来多少个类，所以 SimPoint 枚举了若干个不同的类的个数，对每个 K-Means 聚类结果进行打分：BIC（Bayesian Information Criterion），根据打分找到一个聚类效果足够好，但是类又不是特别多的结果。&lt;/p&gt;&lt;p&gt;进一步为了提升聚类的性能，SimPoint 还进行了一次降维操作，把很长的 Basic Block Vector 线性映射到一个比较小的 15 维的向量上。&lt;/p&gt;&lt;p&gt;SimPoint 论文中展示了聚类的效果，还是很可观的：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../cbp-experiments-simpoint-2.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;完成聚类以后，SimPoint 的输出就是若干个 phase，每一个类对应一个 phase，每个 phase 包括：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;权重：权重就是这个类中 slice 的个数&lt;/li&gt;&lt;li&gt;代表这个 phase 的一个 slice 的信息，例如它是从第几条指令开始到第几条指令&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;完成 SimPoint 算法后，得到的 trace 长度大大减小，例如一段原始的长为 1e10 条指令的 trace，以 3e7 条指令为一个 slice，聚类以后，只剩下 10 个 phase，那么需要模拟和保存的 trace 长度只剩下了 3e8 条指令。SimPoint 聚类整个流程的性能大概在每秒 2e8 条分支指令的量级。&lt;/p&gt;&lt;p&gt;回顾前面提到的完整的 SPEC INT 2017 的量级：2.9e12 条执行的分支指令数，经过 SimPoint 处理后，假如每个子 benchmark 拆分成 15 个长度为 1e8 条指令的 phase，那么最终可能只需要 3e10 条指令，这就是一个比较好处理的大小了，以单核每秒模拟 1e7 条分支指令的速度，完整跑一次条件分支预测器实验，可能只需要几十分钟的时间，再加上多核，可以进一步缩短到几分钟。&lt;/p&gt;&lt;h2 id=&#34;trace-抓取&#34;&gt;trace 抓取&lt;a class=&#34;headerlink&#34; href=&#34;#trace-抓取&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;刚才讨论了很多 trace 的大小以及如何用 SimPoint 压缩空间，那么这个 trace 到底怎么抓取呢？主要有两种方法：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;基于硬件已有的 trace，比如 &lt;a href=&#34;../../../../2024/12/10/linux-perf-pmu/&#34;&gt;Intel PT&lt;/a&gt;，但需要注意，Intel PT 是可能丢失历史的，虽然比例比较小；为了避免丢失历史，建议设置 &lt;code&gt;sysctl kernel.perf_event_paranoid=-1&lt;/code&gt;（或者用 root 权限来运行 &lt;code&gt;perf record&lt;/code&gt;，即绕过 &lt;code&gt;mlock limit after perf_event_mlock_kb&lt;/code&gt; 的限制）来扩大 Intel PT 使用的 buffer 大小，从 32KB 扩大到 1MB（参考 &lt;a href=&#34;https://github.com/mysqlperformance/pt_perf&#34;&gt;pt_perf&lt;/a&gt;），在大小核机器上还要绑定到一个大核上&lt;/li&gt;&lt;li&gt;基于软件的 Binary Instrumentation，即针对分支指令插桩，比如 Pin、DynamoRIO 甚至 QEMU&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;第一种方法性能是最好的，运行开销比较小，耗费 1.4x 的时间，但是后续处理也比较费劲一些，此外比较依赖平台，ARM 上虽然也有 SPE，但是支持的平台比较少。其他平台就不好说了。&lt;/p&gt;&lt;p&gt;第二种方法性能会差一些，大概会有 30-50x 的性能开销，但是一天一夜也能够把 SPEC INT 2017 跑完。实现的时候，需要注意在遇到分支的时候，首先把信息保存在内存的 buffer 中，buffer 满了再写盘；此外，为了减少磁盘空间以及写盘所耗费的 I/O 时间，可以在内存中一边生成数据一边压缩，直接把压缩好的数据写入到文件中。&lt;/p&gt;&lt;p&gt;实践中，可以先用 Intel PT 抓取 trace，再把 trace 转换为第二种格式，最终的抓取 + 转换的性能开销大概是 15x。大致算法如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;遍历程序中所有的分支，按照地址从小到大保存起来在数组当中，针对那些直接分支，提前计算好从它的目的地址开始遇到的第一个分支在数组的下标&lt;/li&gt;&lt;li&gt;解析 perf.data 中的 Intel PT packet，提取出其中的 TNT 和 TIP packet，从程序的 entrypoint 开始，沿着 Intel PT 的 trace 重建控制流：条件分支从 TNT packet 获取方向，间接分支从 TIP packet 获取目的地址，&lt;/li&gt;&lt;li&gt;如果分支跳转了，就根据目的地址找到从目的地址开始遇到的下一个分支（二分查找）；如果没有跳转，就直接访问数组的下一个分支&lt;/li&gt;&lt;li&gt;注意 RET compression 的处理：维护 call stack，如果遇到 return 的时候刚好在 TNT packet 中，且对应的 bit 是 Taken，则从 call stack 取出目的地址；一个优化是 call stack 不仅记录地址，还记录从这个地址开始遇到的下一个分支在数组的下标&lt;/li&gt;&lt;li&gt;重建控制流的同时，输出第二种格式的 trace，在内存中完成流式压缩&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;以上的这些性能开销只是在一个程序上测得的结果，不同的程序上，其性能开销也有很大的不同。&lt;/p&gt;&lt;p&gt;对于动态链接，perf.data 会记录 mmap event；Pin 和 DynamoRIO 都可以对 module load 事件进行插桩。动态库可以从文件系统中访问，vdso 可以从内存中&lt;a href=&#34;https://ldpreload.com/p/blog/dump-vdso.c&#34;&gt;导出&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;条件分支预测器模拟&#34;&gt;条件分支预测器模拟&lt;a class=&#34;headerlink&#34; href=&#34;#条件分支预测器模拟&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在完成了前面的大部分步骤以后，最终就是搭建一个条件分支预测器的模拟器了。其实这一点倒是并不复杂，例如 CBP Championship 或者 ChampSim 都有现成的框架，它们也都提供了一些经典的分支预测器的实现代码，例如 TAGE-SC-L。在它们的基础上进行开发，就可以评估各种条件分支预测器的预测效果了。&lt;/p&gt;&lt;p&gt;实际上，除了条件分支预测器，还有很多其他的实验也可以用类似的方法构建 trace 然后运行。但条件分支预测器有个比较好的特点：它需要的状态比较简单，通常拿之前一段指令做预热即可，不需要 checkpoint；而如果要完整模拟整个处理器的执行，通常需要得到系统的整个状态，比如内存和寄存器，才能继续执行，这时候就可能需要提前把 slice 开始的状态保存下来（checkpoint），或者用一个简单的不精确的模拟器快速计算出 slice 开始的状态（fast forwarding）。&lt;/p&gt;&lt;h2 id=&#34;实验数据&#34;&gt;实验数据&lt;a class=&#34;headerlink&#34; href=&#34;#实验数据&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;trace-抓取_1&#34;&gt;Trace 抓取&lt;a class=&#34;headerlink&#34; href=&#34;#trace-抓取_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在这里列出最终使用的 trace 格式和实验数据：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;trace 格式：使用第二种 trace 记录方法，每次执行 branch 记录 4 字节的信息，包括 branch id 和是否跳转，使用 zstd 进行无损压缩&lt;/li&gt;&lt;li&gt;trace 大小和运行时间统计（GCC 12.2.0，&lt;code&gt;-O3 -static&lt;/code&gt; 编译，在 Intel i9-14900K 上实验）：&lt;/li&gt;&lt;/ol&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;benchmark&lt;/th&gt;&lt;th&gt;子 benchmark&lt;/th&gt;&lt;th&gt;分支执行次数&lt;/th&gt;&lt;th&gt;trace 大小&lt;/th&gt;&lt;th&gt;每分支空间开销&lt;/th&gt;&lt;th&gt;程序直接运行时间&lt;/th&gt;&lt;th&gt;Pin 抓取时间&lt;/th&gt;&lt;th&gt;时间开销&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;checkspam&lt;/td&gt;&lt;td&gt;2.40e11&lt;/td&gt;&lt;td&gt;8.87 GiB&lt;/td&gt;&lt;td&gt;0.32 bit&lt;/td&gt;&lt;td&gt;59s&lt;/td&gt;&lt;td&gt;6334s&lt;/td&gt;&lt;td&gt;107x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;diffmail&lt;/td&gt;&lt;td&gt;1.49e11&lt;/td&gt;&lt;td&gt;2.78 GiB&lt;/td&gt;&lt;td&gt;0.16 bit&lt;/td&gt;&lt;td&gt;33s&lt;/td&gt;&lt;td&gt;4615s&lt;/td&gt;&lt;td&gt;140x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;splitmail&lt;/td&gt;&lt;td&gt;1.33e11&lt;/td&gt;&lt;td&gt;1.49 GiB&lt;/td&gt;&lt;td&gt;0.10 bit&lt;/td&gt;&lt;td&gt;31s&lt;/td&gt;&lt;td&gt;3385s&lt;/td&gt;&lt;td&gt;109x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;5.22e11&lt;/td&gt;&lt;td&gt;13.14 GiB&lt;/td&gt;&lt;td&gt;0.22 bit&lt;/td&gt;&lt;td&gt;123s&lt;/td&gt;&lt;td&gt;14334s&lt;/td&gt;&lt;td&gt;117x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;gcc-pp -O3&lt;/td&gt;&lt;td&gt;4.50e10&lt;/td&gt;&lt;td&gt;3.28 GiB&lt;/td&gt;&lt;td&gt;0.63 bit&lt;/td&gt;&lt;td&gt;17s&lt;/td&gt;&lt;td&gt;1625s&lt;/td&gt;&lt;td&gt;96x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;gcc-pp -O2&lt;/td&gt;&lt;td&gt;5.37e10&lt;/td&gt;&lt;td&gt;3.46 GiB&lt;/td&gt;&lt;td&gt;0.55 bit&lt;/td&gt;&lt;td&gt;20s&lt;/td&gt;&lt;td&gt;1930s&lt;/td&gt;&lt;td&gt;97x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;gcc-smaller&lt;/td&gt;&lt;td&gt;5.51e10&lt;/td&gt;&lt;td&gt;2.84 GiB&lt;/td&gt;&lt;td&gt;0.44 bit&lt;/td&gt;&lt;td&gt;21s&lt;/td&gt;&lt;td&gt;1830s&lt;/td&gt;&lt;td&gt;87x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;ref32 -O5&lt;/td&gt;&lt;td&gt;4.22e10&lt;/td&gt;&lt;td&gt;1.20 GiB&lt;/td&gt;&lt;td&gt;0.24 bit&lt;/td&gt;&lt;td&gt;16s&lt;/td&gt;&lt;td&gt;1369s&lt;/td&gt;&lt;td&gt;86x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;ref32 -O3&lt;/td&gt;&lt;td&gt;4.80e10&lt;/td&gt;&lt;td&gt;1.50 GiB&lt;/td&gt;&lt;td&gt;0.27 bit&lt;/td&gt;&lt;td&gt;24s&lt;/td&gt;&lt;td&gt;2209s&lt;/td&gt;&lt;td&gt;92x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;2.44e11&lt;/td&gt;&lt;td&gt;12.24 GiB&lt;/td&gt;&lt;td&gt;0.43 bit&lt;/td&gt;&lt;td&gt;98s&lt;/td&gt;&lt;td&gt;8963s&lt;/td&gt;&lt;td&gt;91x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;505.mcf_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.21e11&lt;/td&gt;&lt;td&gt;31.0 GiB&lt;/td&gt;&lt;td&gt;1.20 bit&lt;/td&gt;&lt;td&gt;168s&lt;/td&gt;&lt;td&gt;4800s&lt;/td&gt;&lt;td&gt;29x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;520.omnetpp_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.15e11&lt;/td&gt;&lt;td&gt;13.3 GiB&lt;/td&gt;&lt;td&gt;0.53 bit&lt;/td&gt;&lt;td&gt;135s&lt;/td&gt;&lt;td&gt;7289s&lt;/td&gt;&lt;td&gt;54x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;523.xalancbmk_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;3.27e11&lt;/td&gt;&lt;td&gt;4.45 GiB&lt;/td&gt;&lt;td&gt;0.12 bit&lt;/td&gt;&lt;td&gt;112s&lt;/td&gt;&lt;td&gt;8883s&lt;/td&gt;&lt;td&gt;79x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;pass 1&lt;/td&gt;&lt;td&gt;1.44e10&lt;/td&gt;&lt;td&gt;579 MiB&lt;/td&gt;&lt;td&gt;0.34 bit&lt;/td&gt;&lt;td&gt;14s&lt;/td&gt;&lt;td&gt;348s&lt;/td&gt;&lt;td&gt;25x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;pass 2&lt;/td&gt;&lt;td&gt;4.42e10&lt;/td&gt;&lt;td&gt;2.30 GiB&lt;/td&gt;&lt;td&gt;0.45 bit&lt;/td&gt;&lt;td&gt;39s&lt;/td&gt;&lt;td&gt;1202s&lt;/td&gt;&lt;td&gt;31x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;seek 500&lt;/td&gt;&lt;td&gt;4.78e10&lt;/td&gt;&lt;td&gt;2.77 GiB&lt;/td&gt;&lt;td&gt;0.50 bit&lt;/td&gt;&lt;td&gt;41s&lt;/td&gt;&lt;td&gt;1258s&lt;/td&gt;&lt;td&gt;31x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;1.06e11&lt;/td&gt;&lt;td&gt;5.64 GiB&lt;/td&gt;&lt;td&gt;0.46 bit&lt;/td&gt;&lt;td&gt;94s&lt;/td&gt;&lt;td&gt;2808s&lt;/td&gt;&lt;td&gt;30x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;531.deepsjeng_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.74e11&lt;/td&gt;&lt;td&gt;31.6 GiB&lt;/td&gt;&lt;td&gt;0.99 bit&lt;/td&gt;&lt;td&gt;140s&lt;/td&gt;&lt;td&gt;8093s&lt;/td&gt;&lt;td&gt;58x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;541.leela_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;3.38e11&lt;/td&gt;&lt;td&gt;75.6 GiB&lt;/td&gt;&lt;td&gt;1.92 bit&lt;/td&gt;&lt;td&gt;224s&lt;/td&gt;&lt;td&gt;8894s&lt;/td&gt;&lt;td&gt;40x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;548.exchange2_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;3.01e11&lt;/td&gt;&lt;td&gt;26.3 GiB&lt;/td&gt;&lt;td&gt;0.75 bit&lt;/td&gt;&lt;td&gt;88s&lt;/td&gt;&lt;td&gt;6753s&lt;/td&gt;&lt;td&gt;77x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;cld&lt;/td&gt;&lt;td&gt;5.08e10&lt;/td&gt;&lt;td&gt;9.16 GiB&lt;/td&gt;&lt;td&gt;1.55 bit&lt;/td&gt;&lt;td&gt;60s&lt;/td&gt;&lt;td&gt;1252s&lt;/td&gt;&lt;td&gt;21x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;cpu2006docs&lt;/td&gt;&lt;td&gt;1.84e11&lt;/td&gt;&lt;td&gt;7.80 GiB&lt;/td&gt;&lt;td&gt;0.36 bit&lt;/td&gt;&lt;td&gt;65s&lt;/td&gt;&lt;td&gt;3923s&lt;/td&gt;&lt;td&gt;60x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;input&lt;/td&gt;&lt;td&gt;7.96e10&lt;/td&gt;&lt;td&gt;10.5 GiB&lt;/td&gt;&lt;td&gt;1.14 bit&lt;/td&gt;&lt;td&gt;55s&lt;/td&gt;&lt;td&gt;1842s&lt;/td&gt;&lt;td&gt;33x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;3.14e11&lt;/td&gt;&lt;td&gt;27.5 GiB&lt;/td&gt;&lt;td&gt;0.75 bit&lt;/td&gt;&lt;td&gt;180s&lt;/td&gt;&lt;td&gt;7017s&lt;/td&gt;&lt;td&gt;39x&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.86e12&lt;/td&gt;&lt;td&gt;241 GiB&lt;/td&gt;&lt;td&gt;0.72 bit&lt;/td&gt;&lt;td&gt;1362s&lt;/td&gt;&lt;td&gt;77834s&lt;/td&gt;&lt;td&gt;57x&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;每分支的空间开销和在 i9-14900K 上测得的 MPKI（Mispredictions Per Kilo Instructions）有比较明显的正相关性：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;benchmark&lt;/th&gt;&lt;th&gt;MPKI&lt;/th&gt;&lt;th&gt;每分支空间开销&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;523.xalancbmk_r&lt;/td&gt;&lt;td&gt;0.84&lt;/td&gt;&lt;td&gt;0.12 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;0.95&lt;/td&gt;&lt;td&gt;0.22 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;1.06&lt;/td&gt;&lt;td&gt;0.46 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;548.exchange2_r&lt;/td&gt;&lt;td&gt;2.66&lt;/td&gt;&lt;td&gt;0.75 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;3.16&lt;/td&gt;&lt;td&gt;0.43 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;531.deepsjeng_r&lt;/td&gt;&lt;td&gt;4.35&lt;/td&gt;&lt;td&gt;0.99 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;520.omnetpp_r&lt;/td&gt;&lt;td&gt;4.47&lt;/td&gt;&lt;td&gt;0.53 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;5.35&lt;/td&gt;&lt;td&gt;0.75 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;541.leela_r&lt;/td&gt;&lt;td&gt;12.61&lt;/td&gt;&lt;td&gt;1.92 bit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;505.mcf_r&lt;/td&gt;&lt;td&gt;13.24&lt;/td&gt;&lt;td&gt;1.20 bit&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;由于 LTO 对分支数量的影响较大，额外对比了 &lt;code&gt;-O3&lt;/code&gt; 和 &lt;code&gt;-O3 -flto&lt;/code&gt; 的区别：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;benchmark&lt;/th&gt;&lt;th&gt;子 benchmark&lt;/th&gt;&lt;th&gt;O3 分支执行次数&lt;/th&gt;&lt;th&gt;O3 trace 大小&lt;/th&gt;&lt;th&gt;O3+LTO 分支执行次数&lt;/th&gt;&lt;th&gt;O3+LTO trace 大小&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;checkspam&lt;/td&gt;&lt;td&gt;2.40e11&lt;/td&gt;&lt;td&gt;8.87 GiB&lt;/td&gt;&lt;td&gt;2.32e11&lt;/td&gt;&lt;td&gt;8.77 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;diffmail&lt;/td&gt;&lt;td&gt;1.49e11&lt;/td&gt;&lt;td&gt;2.78 GiB&lt;/td&gt;&lt;td&gt;1.45e11&lt;/td&gt;&lt;td&gt;2.70 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;splitmail&lt;/td&gt;&lt;td&gt;1.33e11&lt;/td&gt;&lt;td&gt;1.49 GiB&lt;/td&gt;&lt;td&gt;1.31e11&lt;/td&gt;&lt;td&gt;1.48 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;5.22e11&lt;/td&gt;&lt;td&gt;13.14 GiB&lt;/td&gt;&lt;td&gt;5.08e11&lt;/td&gt;&lt;td&gt;12.95 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;gcc-pp -O3&lt;/td&gt;&lt;td&gt;4.50e10&lt;/td&gt;&lt;td&gt;3.28 GiB&lt;/td&gt;&lt;td&gt;4.27e10&lt;/td&gt;&lt;td&gt;3.20 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;gcc-pp -O2&lt;/td&gt;&lt;td&gt;5.37e10&lt;/td&gt;&lt;td&gt;3.46 GiB&lt;/td&gt;&lt;td&gt;5.10e10&lt;/td&gt;&lt;td&gt;3.38 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;gcc-smaller&lt;/td&gt;&lt;td&gt;5.51e10&lt;/td&gt;&lt;td&gt;2.84 GiB&lt;/td&gt;&lt;td&gt;5.31e10&lt;/td&gt;&lt;td&gt;2.78 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;ref32 -O5&lt;/td&gt;&lt;td&gt;4.22e10&lt;/td&gt;&lt;td&gt;1.20 GiB&lt;/td&gt;&lt;td&gt;4.05e10&lt;/td&gt;&lt;td&gt;1.17 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;ref32 -O3&lt;/td&gt;&lt;td&gt;4.80e10&lt;/td&gt;&lt;td&gt;1.50 GiB&lt;/td&gt;&lt;td&gt;4.58e10&lt;/td&gt;&lt;td&gt;1.45 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;2.44e11&lt;/td&gt;&lt;td&gt;12.24 GiB&lt;/td&gt;&lt;td&gt;2.33e11&lt;/td&gt;&lt;td&gt;11.98 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;505.mcf_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.21e11&lt;/td&gt;&lt;td&gt;31.0 GiB&lt;/td&gt;&lt;td&gt;1.62e11&lt;/td&gt;&lt;td&gt;26.6 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;520.omnetpp_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.15e11&lt;/td&gt;&lt;td&gt;13.3 GiB&lt;/td&gt;&lt;td&gt;1.97e11&lt;/td&gt;&lt;td&gt;13.2 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;523.xalancbmk_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;3.27e11&lt;/td&gt;&lt;td&gt;4.45 GiB&lt;/td&gt;&lt;td&gt;3.16e11&lt;/td&gt;&lt;td&gt;4.37 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;pass 1&lt;/td&gt;&lt;td&gt;1.44e10&lt;/td&gt;&lt;td&gt;579 MiB&lt;/td&gt;&lt;td&gt;1.43e10&lt;/td&gt;&lt;td&gt;575 MiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;pass 2&lt;/td&gt;&lt;td&gt;4.42e10&lt;/td&gt;&lt;td&gt;2.30 GiB&lt;/td&gt;&lt;td&gt;4.42e10&lt;/td&gt;&lt;td&gt;2.29 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;seek 500&lt;/td&gt;&lt;td&gt;4.78e10&lt;/td&gt;&lt;td&gt;2.77 GiB&lt;/td&gt;&lt;td&gt;4.77e10&lt;/td&gt;&lt;td&gt;2.76 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;1.06e11&lt;/td&gt;&lt;td&gt;5.64 GiB&lt;/td&gt;&lt;td&gt;1.06e11&lt;/td&gt;&lt;td&gt;5.61 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;531.deepsjeng_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.74e11&lt;/td&gt;&lt;td&gt;31.6 GiB&lt;/td&gt;&lt;td&gt;2.13e11&lt;/td&gt;&lt;td&gt;29.1 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;541.leela_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;3.38e11&lt;/td&gt;&lt;td&gt;75.6 GiB&lt;/td&gt;&lt;td&gt;2.61e11&lt;/td&gt;&lt;td&gt;72.3 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;548.exchange2_r&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;3.01e11&lt;/td&gt;&lt;td&gt;26.3 GiB&lt;/td&gt;&lt;td&gt;3.02e11&lt;/td&gt;&lt;td&gt;26.2 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;cld&lt;/td&gt;&lt;td&gt;5.08e10&lt;/td&gt;&lt;td&gt;9.16 GiB&lt;/td&gt;&lt;td&gt;5.07e10&lt;/td&gt;&lt;td&gt;9.12 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;cpu2006docs&lt;/td&gt;&lt;td&gt;1.84e11&lt;/td&gt;&lt;td&gt;7.80 GiB&lt;/td&gt;&lt;td&gt;1.84e11&lt;/td&gt;&lt;td&gt;7.78 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;input&lt;/td&gt;&lt;td&gt;7.96e10&lt;/td&gt;&lt;td&gt;10.5 GiB&lt;/td&gt;&lt;td&gt;7.94e10&lt;/td&gt;&lt;td&gt;10.5 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;3.14e11&lt;/td&gt;&lt;td&gt;27.5 GiB&lt;/td&gt;&lt;td&gt;3.14e11&lt;/td&gt;&lt;td&gt;27.4 GiB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Total&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;2.86e12&lt;/td&gt;&lt;td&gt;241 GiB&lt;/td&gt;&lt;td&gt;2.61e12&lt;/td&gt;&lt;td&gt;230 GiB&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;LTO 去掉了 9% 的分支指令，对整体性能的影响还是蛮大的，MPKI 的数值也有明显的变化。&lt;/p&gt;&lt;h3 id=&#34;时间开销&#34;&gt;时间开销&lt;a class=&#34;headerlink&#34; href=&#34;#时间开销&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;各个步骤需要耗费的时间（单线程）：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;抓取 trace：约 20 小时&lt;/li&gt;&lt;li&gt;运行 SimPoint: 约 4 小时&lt;/li&gt;&lt;li&gt;模拟分支预测：约 1 小时&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;simpoint_1&#34;&gt;SimPoint&lt;a class=&#34;headerlink&#34; href=&#34;#simpoint_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;考虑到（子）benchmark 之间没有依赖关系，可以同时进行多个 trace/simpoint/simulate 操作，不过考虑到内存占用和硬盘 I/O 压力，实际的并行性也没有那么高。&lt;/p&gt;&lt;p&gt;跑出来的 SimPoint 聚类可视化中效果比较好的，图中横轴是按执行顺序的 SimPoint slice，纵轴每一个 y 值对应一个 SimPoint phase，图中的点代表哪个 slice 被归到了哪个 phase 上：&lt;/p&gt;&lt;p&gt;500.perlbench_r diffmail:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../cbp-experiments-simpoint-perlbench-diffmail.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;520.omnetpp_r:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../cbp-experiments-simpoint-omnetpp.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;557.xz_r input:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../cbp-experiments-simpoint-xz-input.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;以 1e8 条指令的粒度切分 SimPoint，把 241 GB 的 trace 缩减到 415 MB 的规模。&lt;/p&gt;&lt;h3 id=&#34;分支预测器模拟&#34;&gt;分支预测器模拟&lt;a class=&#34;headerlink&#34; href=&#34;#分支预测器模拟&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;使用 CBP 2016 的 Andre Seznec TAGE-SC-L 8KB/64KB 的分支预测器在 SimPoint 上模拟 SPEC INT 2017 Rate-1，只需要 9-10 分钟。&lt;/p&gt;&lt;p&gt;使用 CBP 2016 的 Andre Seznec TAGE-SC-L 8KB/64KB 的分支预测器在 SimPoint 上模拟的 CMPKI（只考虑了方向分支），和 Intel i9-14900K 的 MPKI（考虑了所有分支）在 SPEC INT 2017 Rate-1（AMD64，&lt;code&gt;-O3&lt;/code&gt;）的比较：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;benchmark&lt;/th&gt;&lt;th&gt;TAGE-SC-L 8KB&lt;/th&gt;&lt;th&gt;TAGE-SC-L 64KB&lt;/th&gt;&lt;th&gt;i9-14900K&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;500.perlbench_r&lt;/td&gt;&lt;td&gt;1.00&lt;/td&gt;&lt;td&gt;0.72&lt;/td&gt;&lt;td&gt;0.95&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;502.gcc_r&lt;/td&gt;&lt;td&gt;4.69&lt;/td&gt;&lt;td&gt;3.36&lt;/td&gt;&lt;td&gt;3.16&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;505.mcf_r&lt;/td&gt;&lt;td&gt;13.02&lt;/td&gt;&lt;td&gt;12.23&lt;/td&gt;&lt;td&gt;13.24&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;520.omnetpp_r&lt;/td&gt;&lt;td&gt;4.09&lt;/td&gt;&lt;td&gt;3.49&lt;/td&gt;&lt;td&gt;4.47&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;523.xalancbmk_r&lt;/td&gt;&lt;td&gt;0.85&lt;/td&gt;&lt;td&gt;0.68&lt;/td&gt;&lt;td&gt;0.84&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;525.x264_r&lt;/td&gt;&lt;td&gt;0.76&lt;/td&gt;&lt;td&gt;0.59&lt;/td&gt;&lt;td&gt;1.06&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;531.deepsjeng_r&lt;/td&gt;&lt;td&gt;4.59&lt;/td&gt;&lt;td&gt;3.45&lt;/td&gt;&lt;td&gt;4.35&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;541.leela_r&lt;/td&gt;&lt;td&gt;11.79&lt;/td&gt;&lt;td&gt;9.42&lt;/td&gt;&lt;td&gt;12.61&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;548.exchange2_r&lt;/td&gt;&lt;td&gt;2.96&lt;/td&gt;&lt;td&gt;1.25&lt;/td&gt;&lt;td&gt;2.66&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;557.xz_r&lt;/td&gt;&lt;td&gt;4.68&lt;/td&gt;&lt;td&gt;4.06&lt;/td&gt;&lt;td&gt;5.35&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;average&lt;/td&gt;&lt;td&gt;4.84&lt;/td&gt;&lt;td&gt;3.925&lt;/td&gt;&lt;td&gt;4.87&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&#34;不同编译器编译选项和指令集下-spec-int-2017-的指令数和分支指令数规模&#34;&gt;不同编译器、编译选项和指令集下 SPEC INT 2017 的指令数和分支指令数规模&lt;a class=&#34;headerlink&#34; href=&#34;#不同编译器编译选项和指令集下-spec-int-2017-的指令数和分支指令数规模&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;ISA&lt;/th&gt;&lt;th&gt;Flags&lt;/th&gt;&lt;th&gt;Compiler&lt;/th&gt;&lt;th&gt;# Inst&lt;/th&gt;&lt;th&gt;# Branch Inst&lt;/th&gt;&lt;th&gt;% Branch Inst&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;LLVM 17.0.6&lt;/td&gt;&lt;td&gt;2.07e+13&lt;/td&gt;&lt;td&gt;3.27e+12&lt;/td&gt;&lt;td&gt;15.8%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;LLVM 18.1.8&lt;/td&gt;&lt;td&gt;1.99e+13&lt;/td&gt;&lt;td&gt;3.17e+12&lt;/td&gt;&lt;td&gt;14.8%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;LLVM 19.1.4&lt;/td&gt;&lt;td&gt;1.99e+13&lt;/td&gt;&lt;td&gt;3.13e+12&lt;/td&gt;&lt;td&gt;15.7%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;LLVM 20.1.5&lt;/td&gt;&lt;td&gt;2.10e+13&lt;/td&gt;&lt;td&gt;3.11e+12&lt;/td&gt;&lt;td&gt;14.8%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3+WRAPV&lt;/td&gt;&lt;td&gt;LLVM 20.1.5&lt;/td&gt;&lt;td&gt;2.01e+13&lt;/td&gt;&lt;td&gt;3.10e+12&lt;/td&gt;&lt;td&gt;15.4%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 11.3&lt;/td&gt;&lt;td&gt;1.69e+13&lt;/td&gt;&lt;td&gt;2.88e+12&lt;/td&gt;&lt;td&gt;17.0%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 12.2&lt;/td&gt;&lt;td&gt;1.67e+13&lt;/td&gt;&lt;td&gt;2.88e+12&lt;/td&gt;&lt;td&gt;17.2%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 13.3&lt;/td&gt;&lt;td&gt;1.66e+13&lt;/td&gt;&lt;td&gt;2.88e+12&lt;/td&gt;&lt;td&gt;17.3%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 14.2&lt;/td&gt;&lt;td&gt;1.65e+13&lt;/td&gt;&lt;td&gt;2.87e+12&lt;/td&gt;&lt;td&gt;17.4%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 15.1&lt;/td&gt;&lt;td&gt;1.58e+13&lt;/td&gt;&lt;td&gt;2.85e+12&lt;/td&gt;&lt;td&gt;18.0%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3+LTO&lt;/td&gt;&lt;td&gt;GCC 12.2&lt;/td&gt;&lt;td&gt;1.57e+13&lt;/td&gt;&lt;td&gt;2.63e+12&lt;/td&gt;&lt;td&gt;16.8%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AMD64&lt;/td&gt;&lt;td&gt;O3+LTO+JEMALLOC&lt;/td&gt;&lt;td&gt;GCC 12.2&lt;/td&gt;&lt;td&gt;1.57e+13&lt;/td&gt;&lt;td&gt;2.62e+12&lt;/td&gt;&lt;td&gt;16.7%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ARM64&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 12.2&lt;/td&gt;&lt;td&gt;1.62e+13&lt;/td&gt;&lt;td&gt;2.83e+12&lt;/td&gt;&lt;td&gt;17.5%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ARM64&lt;/td&gt;&lt;td&gt;O3+LTO&lt;/td&gt;&lt;td&gt;GCC 12.2&lt;/td&gt;&lt;td&gt;1.53e+13&lt;/td&gt;&lt;td&gt;2.59e+12&lt;/td&gt;&lt;td&gt;16.9%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ARM64&lt;/td&gt;&lt;td&gt;O3+LTO+JEMALLOC&lt;/td&gt;&lt;td&gt;GCC 12.2&lt;/td&gt;&lt;td&gt;1.52e+13&lt;/td&gt;&lt;td&gt;2.57e+12&lt;/td&gt;&lt;td&gt;16.9%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoongArch&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 14.2&lt;/td&gt;&lt;td&gt;1.75e+13&lt;/td&gt;&lt;td&gt;2.86e+12&lt;/td&gt;&lt;td&gt;16.3%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoongArch&lt;/td&gt;&lt;td&gt;O3+LTO&lt;/td&gt;&lt;td&gt;GCC 14.2&lt;/td&gt;&lt;td&gt;1.66e+13&lt;/td&gt;&lt;td&gt;2.61e+12&lt;/td&gt;&lt;td&gt;15.7%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoongArch&lt;/td&gt;&lt;td&gt;O3+LTO+JEMALLOC&lt;/td&gt;&lt;td&gt;GCC 14.2&lt;/td&gt;&lt;td&gt;1.65e+13&lt;/td&gt;&lt;td&gt;2.61e+12&lt;/td&gt;&lt;td&gt;15.8%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoongArch&lt;/td&gt;&lt;td&gt;O3&lt;/td&gt;&lt;td&gt;GCC 15.1&lt;/td&gt;&lt;td&gt;1.64e+13&lt;/td&gt;&lt;td&gt;2.83e+12&lt;/td&gt;&lt;td&gt;17.3%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoongArch&lt;/td&gt;&lt;td&gt;O3+LTO&lt;/td&gt;&lt;td&gt;GCC 15.1&lt;/td&gt;&lt;td&gt;1.55e+13&lt;/td&gt;&lt;td&gt;2.59e+12&lt;/td&gt;&lt;td&gt;16.7%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;ul&gt;&lt;li&gt;O3: &lt;code&gt;-O3&lt;/code&gt;&lt;/li&gt;&lt;li&gt;LTO: &lt;code&gt;-flto&lt;/code&gt;&lt;/li&gt;&lt;li&gt;JEMALLOC: &lt;code&gt;-ljemalloc&lt;/code&gt;&lt;/li&gt;&lt;li&gt;WRAPV: &lt;code&gt;-fwrapv&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;基于-pin-开发-branch-trace-工具&#34;&gt;基于 Pin 开发 branch trace 工具&lt;a class=&#34;headerlink&#34; href=&#34;#基于-pin-开发-branch-trace-工具&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;下面给出如何用 Pin 实现一个 branch trace 工具的过程：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;参考 Pin 的样例代码，Instrument 每一条指令，如果它是分支指令，就记录它的指令地址、目的地址、指令长度、分支类型以及是否跳转的信息：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INS_IsControlFlow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UINT32&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INS_Size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;branch_type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INS_InsertCall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IPOINT_BEFORE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AFUNPTR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RecordBranch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IARG_INST_PTR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IARG_BRANCH_TARGET_ADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IARG_UINT32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IARG_UINT32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IARG_BRANCH_TAKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IARG_END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-10&#34;&gt;&lt;a id=&#34;__codelineno-0-10&#34; name=&#34;__codelineno-0-10&#34; href=&#34;#__codelineno-0-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-11&#34;&gt;&lt;a id=&#34;__codelineno-0-11&#34; name=&#34;__codelineno-0-11&#34; href=&#34;#__codelineno-0-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIN_Init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-12&#34;&gt;&lt;a id=&#34;__codelineno-0-12&#34; name=&#34;__codelineno-0-12&#34; href=&#34;#__codelineno-0-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Usage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-13&#34;&gt;&lt;a id=&#34;__codelineno-0-13&#34; name=&#34;__codelineno-0-13&#34; href=&#34;#__codelineno-0-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-14&#34;&gt;&lt;a id=&#34;__codelineno-0-14&#34; name=&#34;__codelineno-0-14&#34; href=&#34;#__codelineno-0-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INS_AddInstrumentFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-15&#34;&gt;&lt;a id=&#34;__codelineno-0-15&#34; name=&#34;__codelineno-0-15&#34; href=&#34;#__codelineno-0-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIN_StartProgram&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-16&#34;&gt;&lt;a id=&#34;__codelineno-0-16&#34; name=&#34;__codelineno-0-16&#34; href=&#34;#__codelineno-0-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-17&#34;&gt;&lt;a id=&#34;__codelineno-0-17&#34; name=&#34;__codelineno-0-17&#34; href=&#34;#__codelineno-0-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;记录分支的时候，分别维护分支的数组和分支执行事件的数组，然后对于每次执行的分支，记录分支的 id 以及是否跳转的信息，到分支执行事件的数组当中：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;RecordBranch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;targ_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UINT32&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UINT32&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BOOL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;taken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;branch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_addr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;targ_addr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;targ_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_length&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;branch_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;taken&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;taken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-12&#34;&gt;&lt;a id=&#34;__codelineno-1-12&#34; name=&#34;__codelineno-1-12&#34; href=&#34;#__codelineno-1-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// insert branch if not exists&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-13&#34;&gt;&lt;a id=&#34;__codelineno-1-13&#34; name=&#34;__codelineno-1-13&#34; href=&#34;#__codelineno-1-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-14&#34;&gt;&lt;a id=&#34;__codelineno-1-14&#34; name=&#34;__codelineno-1-14&#34; href=&#34;#__codelineno-1-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-15&#34;&gt;&lt;a id=&#34;__codelineno-1-15&#34; name=&#34;__codelineno-1-15&#34; href=&#34;#__codelineno-1-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_brs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_BRS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-16&#34;&gt;&lt;a id=&#34;__codelineno-1-16&#34; name=&#34;__codelineno-1-16&#34; href=&#34;#__codelineno-1-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_brs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-17&#34;&gt;&lt;a id=&#34;__codelineno-1-17&#34; name=&#34;__codelineno-1-17&#34; href=&#34;#__codelineno-1-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_brs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-18&#34;&gt;&lt;a id=&#34;__codelineno-1-18&#34; name=&#34;__codelineno-1-18&#34; href=&#34;#__codelineno-1-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;brs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_brs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-19&#34;&gt;&lt;a id=&#34;__codelineno-1-19&#34; name=&#34;__codelineno-1-19&#34; href=&#34;#__codelineno-1-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-20&#34;&gt;&lt;a id=&#34;__codelineno-1-20&#34; name=&#34;__codelineno-1-20&#34; href=&#34;#__codelineno-1-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-21&#34;&gt;&lt;a id=&#34;__codelineno-1-21&#34; name=&#34;__codelineno-1-21&#34; href=&#34;#__codelineno-1-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-22&#34;&gt;&lt;a id=&#34;__codelineno-1-22&#34; name=&#34;__codelineno-1-22&#34; href=&#34;#__codelineno-1-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-23&#34;&gt;&lt;a id=&#34;__codelineno-1-23&#34; name=&#34;__codelineno-1-23&#34; href=&#34;#__codelineno-1-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffer_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFFER_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-24&#34;&gt;&lt;a id=&#34;__codelineno-1-24&#34; name=&#34;__codelineno-1-24&#34; href=&#34;#__codelineno-1-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-25&#34;&gt;&lt;a id=&#34;__codelineno-1-25&#34; name=&#34;__codelineno-1-25&#34; href=&#34;#__codelineno-1-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-26&#34;&gt;&lt;a id=&#34;__codelineno-1-26&#34; name=&#34;__codelineno-1-26&#34; href=&#34;#__codelineno-1-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffer_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-27&#34;&gt;&lt;a id=&#34;__codelineno-1-27&#34; name=&#34;__codelineno-1-27&#34; href=&#34;#__codelineno-1-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_entries&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-28&#34;&gt;&lt;a id=&#34;__codelineno-1-28&#34; name=&#34;__codelineno-1-28&#34; href=&#34;#__codelineno-1-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;为了减少磁盘空间，当缓冲区满的时候，首先经过 zstd 的流压缩，再把压缩后的内容写入到文件中：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// https://github.com/facebook/zstd/blob/dev/examples/streaming_compression.c&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;ZSTD_EndDirective&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZSTD_e_continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;ZSTD_inBuffer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;finished&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZSTD_outBuffer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zstd_output_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zstd_output_buffer_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remaining&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZSTD_compressStream2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zstd_cctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZSTD_isError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remaining&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwrite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zstd_output_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;trace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;finished&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;finished&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;最后在程序结束时，把分支数组写入到文件并记录元数据：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fini&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT32&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 1. compress the remaining data in write buffer and write to file&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 2. save metadata, including:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 1. number of branch executions&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 2. number of branches&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 3. branches array&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-9&#34;&gt;&lt;a id=&#34;__codelineno-3-9&#34; name=&#34;__codelineno-3-9&#34; href=&#34;#__codelineno-3-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-10&#34;&gt;&lt;a id=&#34;__codelineno-3-10&#34; name=&#34;__codelineno-3-10&#34; href=&#34;#__codelineno-3-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-11&#34;&gt;&lt;a id=&#34;__codelineno-3-11&#34; name=&#34;__codelineno-3-11&#34; href=&#34;#__codelineno-3-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIN_AddFiniFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Fini&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-12&#34;&gt;&lt;a id=&#34;__codelineno-3-12&#34; name=&#34;__codelineno-3-12&#34; href=&#34;#__codelineno-3-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIN_StartProgram&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-13&#34;&gt;&lt;a id=&#34;__codelineno-3-13&#34; name=&#34;__codelineno-3-13&#34; href=&#34;#__codelineno-3-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-14&#34;&gt;&lt;a id=&#34;__codelineno-3-14&#34; name=&#34;__codelineno-3-14&#34; href=&#34;#__codelineno-3-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;针对动态链接，可以利用 Pin 已有的 API &lt;code&gt;IMG_AddInstrumentFunction&lt;/code&gt; 来跟踪，方便后续找到 trace 中各个地址对应的指令&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这样就完成了 Branch Trace 的抓取。&lt;/p&gt;</description><link>https://jia.je/software/2025/04/10/cbp-experiments/</link> <pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/software/2025/04/10/cbp-experiments/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/cbp-experiments.png" type="image/png" length="60302" /> </item> <item> <title>Thread Local Storage (TLS) 实现探究</title> <category>glibc</category> <category>linux</category> <category>software</category> <category>tls</category> <description>&lt;h1 id=&#34;thread-local-storage-tls-实现探究&#34;&gt;Thread Local Storage (TLS) 实现探究&lt;a class=&#34;headerlink&#34; href=&#34;#thread-local-storage-tls-实现探究&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;TLS 是 thread local storage 的缩写，可以很方便地存储一些 per-thread 的数据，但它内部是怎么实现的呢？本文对 glibc 2.31 版本的 TLS 实现进行探究。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;__thread&#34;&gt;__thread&lt;a class=&#34;headerlink&#34; href=&#34;#__thread&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先来看 TLS 在 C 中是怎么使用的：用 &lt;code&gt;__thread&lt;/code&gt; 标记一个全局变量（注：进入 C11/C++11 标准的用法是用 &lt;code&gt;thread_local&lt;/code&gt; 来标记），那么它就会保存在 TLS 当中，每个线程都有一份：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么编译器在生成访问这个 TLS 全局变量时，生成的指令也不同。以下面的代码为例：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;tls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成的 amd64 汇编如下：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.text&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;global:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;movl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%edi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;global_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;tls:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;movl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%edi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tls_data@tpoff&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.section&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;.tbss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;awT&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;@nobits&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;tls_data:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.zero&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.bss&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;global_data:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-16&#34;&gt;&lt;a id=&#34;__codelineno-2-16&#34; name=&#34;__codelineno-2-16&#34; href=&#34;#__codelineno-2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.zero&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问全局变量的时候，采用的是典型的 PC-relative 方式来找到全局变量 &lt;code&gt;global_data&lt;/code&gt; 的地址；访问 thread local 变量的时候，可以看到它采用了一个比较少见的写法：&lt;code&gt;%fs:tls_data@tpoff&lt;/code&gt;，它的意思是由链接器计算出 &lt;code&gt;tls_data&lt;/code&gt; 相对 &lt;code&gt;%fs&lt;/code&gt; 段寄存器的偏移，然后直接写到指令的偏移里。链接以上程序，可以看到最终的二进制是：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;0000000000001140&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;1140:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;89&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%edi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x2ece&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 4014 &amp;lt;global_data&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;1146:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;1147:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;84&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;nopw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;e:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;0000000000001150&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;tls&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;1150:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;89&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;fc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ff&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ff&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%edi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0xfffffffffffffffc&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-9&#34;&gt;&lt;a id=&#34;__codelineno-3-9&#34; name=&#34;__codelineno-3-9&#34; href=&#34;#__codelineno-3-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;1157:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ff&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-10&#34;&gt;&lt;a id=&#34;__codelineno-3-10&#34; name=&#34;__codelineno-3-10&#34; href=&#34;#__codelineno-3-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;1158:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可见最终 &lt;code&gt;global_data&lt;/code&gt; 被放到了相对二进制开头 &lt;code&gt;0x4014&lt;/code&gt; 的地方，而 &lt;code&gt;tls_data&lt;/code&gt; 被放到了 &lt;code&gt;%fs:-0x4&lt;/code&gt; 的位置。那么这个 &lt;code&gt;%fs&lt;/code&gt; 是怎么得到的，&lt;code&gt;-0x4&lt;/code&gt; 的偏移又是怎么计算的呢？下面来进一步研究背后的实现。&lt;/p&gt;&lt;h2 id=&#34;tls-的组织方式&#34;&gt;TLS 的组织方式&lt;a class=&#34;headerlink&#34; href=&#34;#tls-的组织方式&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先 TLS 是 per-thread 的存储，意味着每个新线程，都有一个 buffer 需要保存 TLS 的数据。那么这个数据所在的位置，也需要一些 per-thread 的高效方式来访问，在 amd64 上，它是通过 &lt;code&gt;%fs&lt;/code&gt; 段寄存器来维护的。那么 TLS 可能有哪些来源呢？首先可执行程序自己可能会用一些，它通过 DT_NEEDED 由动态链接器在启动时加载的动态库也有一些（比如 &lt;a href=&#34;../../../03/30/glibc-allocator/&#34;&gt;glibc 的 tcache&lt;/a&gt;），此外运行时 dlopen 了一些动态库也会有 TLS 的需求。为了满足这些需求，需要设计一个 TLS 的结构，既能满足这些在启动时已知的可执行程序和动态库的需求，又能满足运行时动态加载的新动态库的需求。&lt;/p&gt;&lt;p&gt;这里面可执行程序和启动时加载的动态库的需求是明确的，不会变的，因此可以由动态链接器在加载的时候，直接给可执行程序和动态库分配 TLS 空间：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;比如可执行程序本身需要 0x10 字节的 TLS 空间，它启动时加载两个动态库 libc.so.6 和 libstdc++.so.6，期中 libc.so.6 需要 0x20 字节的 TLS 空间，libstdc++.so.6 需要 0x30 字节的 TLS 空间&lt;/li&gt;&lt;li&gt;加起来一共需要 0x60 字节的 TLS 空间，那么在创建线程的时候，创建好 0x60 字节的 TLS 空间，按照顺序进行分配：&lt;ol&gt;&lt;li&gt;0x00-0x10: 属于可执行程序&lt;/li&gt;&lt;li&gt;0x10-0x30: 属于 libc.so.6&lt;/li&gt;&lt;li&gt;0x30-0x60: 属于 libstdc++.so.6&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;分配好这个空间以后，因为 libc.so.6 无法提前预知它会被分配到哪个位置，所以需要一次重定位，把 libc.so.6 里的 TLS 空间的使用重定位到分配后的位置，例如 libc.so.6 的 0x20 的 TLS 空间内的开头 8 字节，现在在整个 TLS 空间内的偏移就是 &lt;code&gt;0x20 + 8 = 0x28&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;但是 dlopen 动态加载进来的动态库怎么办呢？这些动态库的数量可以动态变化，可以加载也可以卸载，再这么线性分配就不合适了，这时候就需要给每个 dlopen 得到的动态库分配独立的 TLS 空间。既然是动态分配的空间，那么这些独立的 TLS 空间的地址，不同线程不同，不能通过一个基地址加固定偏移的方式来计算，就需要提供一个机制来找到各个动态库的 TLS 空间的地址。&lt;/p&gt;&lt;p&gt;glibc 的实现中，它把各个动态库的 TLS 空间的起始地址记录在一个 &lt;code&gt;dtv&lt;/code&gt; 数组中，并且提供一个 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数来查询动态库的 TLS 空间内指定 offset 的实际地址：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dl_tls_index&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-4&#34;&gt;&lt;a id=&#34;__codelineno-4-4&#34; name=&#34;__codelineno-4-4&#34; href=&#34;#__codelineno-4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-5&#34;&gt;&lt;a id=&#34;__codelineno-4-5&#34; name=&#34;__codelineno-4-5&#34; href=&#34;#__codelineno-4-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-6&#34;&gt;&lt;a id=&#34;__codelineno-4-6&#34; name=&#34;__codelineno-4-6&#34; href=&#34;#__codelineno-4-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-7&#34;&gt;&lt;a id=&#34;__codelineno-4-7&#34; name=&#34;__codelineno-4-7&#34; href=&#34;#__codelineno-4-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-8&#34;&gt;&lt;a id=&#34;__codelineno-4-8&#34; name=&#34;__codelineno-4-8&#34; href=&#34;#__codelineno-4-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;__tls_get_addr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-9&#34;&gt;&lt;a id=&#34;__codelineno-4-9&#34; name=&#34;__codelineno-4-9&#34; href=&#34;#__codelineno-4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-10&#34;&gt;&lt;a id=&#34;__codelineno-4-10&#34; name=&#34;__codelineno-4-10&#34; href=&#34;#__codelineno-4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;THREAD_DTV&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-11&#34;&gt;&lt;a id=&#34;__codelineno-4-11&#34; name=&#34;__codelineno-4-11&#34; href=&#34;#__codelineno-4-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-12&#34;&gt;&lt;a id=&#34;__codelineno-4-12&#34; name=&#34;__codelineno-4-12&#34; href=&#34;#__codelineno-4-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-13&#34;&gt;&lt;a id=&#34;__codelineno-4-13&#34; name=&#34;__codelineno-4-13&#34; href=&#34;#__codelineno-4-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-14&#34;&gt;&lt;a id=&#34;__codelineno-4-14&#34; name=&#34;__codelineno-4-14&#34; href=&#34;#__codelineno-4-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-15&#34;&gt;&lt;a id=&#34;__codelineno-4-15&#34; name=&#34;__codelineno-4-15&#34; href=&#34;#__codelineno-4-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-16&#34;&gt;&lt;a id=&#34;__codelineno-4-16&#34; name=&#34;__codelineno-4-16&#34; href=&#34;#__codelineno-4-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-17&#34;&gt;&lt;a id=&#34;__codelineno-4-17&#34; name=&#34;__codelineno-4-17&#34; href=&#34;#__codelineno-4-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-18&#34;&gt;&lt;a id=&#34;__codelineno-4-18&#34; name=&#34;__codelineno-4-18&#34; href=&#34;#__codelineno-4-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-19&#34;&gt;&lt;a id=&#34;__codelineno-4-19&#34; name=&#34;__codelineno-4-19&#34; href=&#34;#__codelineno-4-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;dtv&lt;/code&gt; 数组的指针保存在 &lt;code&gt;struct pthread&lt;/code&gt;（即 Thread Control Block (TCB)）中，而这个 &lt;code&gt;struct pthread&lt;/code&gt; 就保存在 &lt;code&gt;%fs&lt;/code&gt; 段寄存器指向的地址上：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;pthread&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-3&#34;&gt;&lt;a id=&#34;__codelineno-5-3&#34; name=&#34;__codelineno-5-3&#34; href=&#34;#__codelineno-5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcbhead_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-4&#34;&gt;&lt;a id=&#34;__codelineno-5-4&#34; name=&#34;__codelineno-5-4&#34; href=&#34;#__codelineno-5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-5&#34;&gt;&lt;a id=&#34;__codelineno-5-5&#34; name=&#34;__codelineno-5-5&#34; href=&#34;#__codelineno-5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-6&#34;&gt;&lt;a id=&#34;__codelineno-5-6&#34; name=&#34;__codelineno-5-6&#34; href=&#34;#__codelineno-5-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-7&#34;&gt;&lt;a id=&#34;__codelineno-5-7&#34; name=&#34;__codelineno-5-7&#34; href=&#34;#__codelineno-5-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-8&#34;&gt;&lt;a id=&#34;__codelineno-5-8&#34; name=&#34;__codelineno-5-8&#34; href=&#34;#__codelineno-5-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-9&#34;&gt;&lt;a id=&#34;__codelineno-5-9&#34; name=&#34;__codelineno-5-9&#34; href=&#34;#__codelineno-5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-10&#34;&gt;&lt;a id=&#34;__codelineno-5-10&#34; name=&#34;__codelineno-5-10&#34; href=&#34;#__codelineno-5-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-11&#34;&gt;&lt;a id=&#34;__codelineno-5-11&#34; name=&#34;__codelineno-5-11&#34; href=&#34;#__codelineno-5-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-12&#34;&gt;&lt;a id=&#34;__codelineno-5-12&#34; name=&#34;__codelineno-5-12&#34; href=&#34;#__codelineno-5-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack_guard&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-13&#34;&gt;&lt;a id=&#34;__codelineno-5-13&#34; name=&#34;__codelineno-5-13&#34; href=&#34;#__codelineno-5-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-14&#34;&gt;&lt;a id=&#34;__codelineno-5-14&#34; name=&#34;__codelineno-5-14&#34; href=&#34;#__codelineno-5-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcbhead_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-15&#34;&gt;&lt;a id=&#34;__codelineno-5-15&#34; name=&#34;__codelineno-5-15&#34; href=&#34;#__codelineno-5-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-16&#34;&gt;&lt;a id=&#34;__codelineno-5-16&#34; name=&#34;__codelineno-5-16&#34; href=&#34;#__codelineno-5-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;# define THREAD_DTV() \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-17&#34;&gt;&lt;a id=&#34;__codelineno-5-17&#34; name=&#34;__codelineno-5-17&#34; href=&#34;#__codelineno-5-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ({ struct pthread *__pd; \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-18&#34;&gt;&lt;a id=&#34;__codelineno-5-18&#34; name=&#34;__codelineno-5-18&#34; href=&#34;#__codelineno-5-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; THREAD_GETMEM (__pd, header.dtv); })&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;P.S. stack protector 所使用的 canary 的值就保存在 &lt;code&gt;pthread.header.stack_guard&lt;/code&gt; 字段中，也就是在 &lt;code&gt;%fs:40&lt;/code&gt; 位置。&lt;/p&gt;&lt;p&gt;而之前提到的可执行程序本身的 TLS 空间以及程序启动时加载的动态库的 TLS 空间，实际上是保存在 &lt;code&gt;struct thread&lt;/code&gt; 也就是 TCB 前面的部分，从高地址往低地址分配（图片来源：&lt;a href=&#34;https://www.akkadia.org/drepper/tls.pdf&#34;&gt;ELF Handling For Thread-Local Storage&lt;/a&gt;）：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../tls-internals-ds.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;图中 &lt;span class=&#34;arithmatex&#34;&gt;\(tp_t\)&lt;/span&gt; 在 amd64 下就是 &lt;code&gt;%fs&lt;/code&gt; 段寄存器，它直接指向的就是 &lt;code&gt;struct thread&lt;/code&gt; 也就是 TCB；从 &lt;code&gt;%fs&lt;/code&gt; 开始往低地址，先分配可执行程序本身的 TLS 空间（图中 &lt;span class=&#34;arithmatex&#34;&gt;\(tlsoffset_1\)&lt;/span&gt; 到 &lt;span class=&#34;arithmatex&#34;&gt;\(tp_t\)&lt;/span&gt; 的范围），后分配程序启动时加载的动态库的 TLS 空间（图中 &lt;span class=&#34;arithmatex&#34;&gt;\(tlsoffset_1\)&lt;/span&gt; 到 &lt;span class=&#34;arithmatex&#34;&gt;\(tlsoffset_2\)&lt;/span&gt; 以及 &lt;span class=&#34;arithmatex&#34;&gt;\(tlsoffset_3\)&lt;/span&gt; 到 &lt;span class=&#34;arithmatex&#34;&gt;\(tlsoffset_2\)&lt;/span&gt; 的范围）。注意这些偏移对于每个线程都是相同的，只是不同线程的 &lt;code&gt;%fs&lt;/code&gt; 寄存器不同。&lt;/p&gt;&lt;p&gt;而对于 dlopen 动态加载的动态库，则 TLS 空间需要动态分配，然后通过 &lt;code&gt;dtv&lt;/code&gt; 数组来索引（图中 &lt;span class=&#34;arithmatex&#34;&gt;\(dtv_{t,4}\)&lt;/span&gt; 和 &lt;span class=&#34;arithmatex&#34;&gt;\(dtv_{t,5}\)&lt;/span&gt;），因此无法通过重定位修正，而是要在运行时通过 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数获取地址。为了让 &lt;code&gt;__tls_get_addr&lt;/code&gt; 更具有通用性，&lt;code&gt;dtv&lt;/code&gt; 数组也记录了分配在 &lt;code&gt;%fs&lt;/code&gt; 指向的 TCB 更低地址的可执行程序和程序启动时加载的动态库的 TLS 空间，此时 &lt;code&gt;__tls_get_addr&lt;/code&gt; 可以查到所有 TLS 变量的地址。每个动态库在 &lt;code&gt;dtv&lt;/code&gt; 数组中都记录了信息，那么这个动态库在 &lt;code&gt;dtv&lt;/code&gt; 数组中的下标，记为这个动态库的编号（module id），后面会多次出现这个概念。&lt;/p&gt;&lt;p&gt;知道了 TLS 的组织方式后，接下来观察编译器、链接器和动态链接器是如何配合着让代码可以找到正确的 TLS 变量的地址。&lt;/p&gt;&lt;h2 id=&#34;可执行程序&#34;&gt;可执行程序&lt;a class=&#34;headerlink&#34; href=&#34;#可执行程序&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先来看一个简单的场景：可执行程序直接访问自己定义的 TLS 变量。前面提到，可执行程序的 TLS 空间直接保存到 &lt;code&gt;%fs&lt;/code&gt; 往下的地址，因此可执行程序的 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移，是可以提前计算得到的。下面看一个例子：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-4&#34;&gt;&lt;a id=&#34;__codelineno-6-4&#34; name=&#34;__codelineno-6-4&#34; href=&#34;#__codelineno-6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-5&#34;&gt;&lt;a id=&#34;__codelineno-6-5&#34; name=&#34;__codelineno-6-5&#34; href=&#34;#__codelineno-6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-6&#34;&gt;&lt;a id=&#34;__codelineno-6-6&#34; name=&#34;__codelineno-6-6&#34; href=&#34;#__codelineno-6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译得到的汇编：&lt;/p&gt;&lt;div class=&#34;language-s highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-7-1&#34;&gt;&lt;a id=&#34;__codelineno-7-1&#34; name=&#34;__codelineno-7-1&#34; href=&#34;#__codelineno-7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;read_tls_data1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-2&#34;&gt;&lt;a id=&#34;__codelineno-7-2&#34; name=&#34;__codelineno-7-2&#34; href=&#34;#__codelineno-7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%fs:tls_data1@tpoff, %&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-3&#34;&gt;&lt;a id=&#34;__codelineno-7-3&#34; name=&#34;__codelineno-7-3&#34; href=&#34;#__codelineno-7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-4&#34;&gt;&lt;a id=&#34;__codelineno-7-4&#34; name=&#34;__codelineno-7-4&#34; href=&#34;#__codelineno-7-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-5&#34;&gt;&lt;a id=&#34;__codelineno-7-5&#34; name=&#34;__codelineno-7-5&#34; href=&#34;#__codelineno-7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;read_tls_data2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-6&#34;&gt;&lt;a id=&#34;__codelineno-7-6&#34; name=&#34;__codelineno-7-6&#34; href=&#34;#__codelineno-7-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%fs:tls_data2@tpoff, %&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-7&#34;&gt;&lt;a id=&#34;__codelineno-7-7&#34; name=&#34;__codelineno-7-7&#34; href=&#34;#__codelineno-7-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就是在本文一开头就看到的语法：&lt;code&gt;%fs:symbol@tpoff&lt;/code&gt;，它会对应一个 &lt;code&gt;R_X86_64_TPOFF32&lt;/code&gt; 类型的重定位，告诉链接器，这是一个 TLS 变量，并且它的偏移在静态链接的时候就可以计算出来，并且这个偏移会直接写到 &lt;code&gt;mov&lt;/code&gt; 指令的立即数内：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-8-1&#34;&gt;&lt;a id=&#34;__codelineno-8-1&#34; name=&#34;__codelineno-8-1&#34; href=&#34;#__codelineno-8-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-8-2&#34;&gt;&lt;a id=&#34;__codelineno-8-2&#34; name=&#34;__codelineno-8-2&#34; href=&#34;#__codelineno-8-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-8-3&#34;&gt;&lt;a id=&#34;__codelineno-8-3&#34; name=&#34;__codelineno-8-3&#34; href=&#34;#__codelineno-8-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-4&#34;&gt;&lt;a id=&#34;__codelineno-8-4&#34; name=&#34;__codelineno-8-4&#34; href=&#34;#__codelineno-8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-8-5&#34;&gt;&lt;a id=&#34;__codelineno-8-5&#34; name=&#34;__codelineno-8-5&#34; href=&#34;#__codelineno-8-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:0x0,%eax&lt;/span&gt;&lt;span id=&#34;__span-8-6&#34;&gt;&lt;a id=&#34;__codelineno-8-6&#34; name=&#34;__codelineno-8-6&#34; href=&#34;#__codelineno-8-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-7&#34;&gt;&lt;a id=&#34;__codelineno-8-7&#34; name=&#34;__codelineno-8-7&#34; href=&#34;#__codelineno-8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TPOFF32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1&lt;/span&gt;&lt;span id=&#34;__span-8-8&#34;&gt;&lt;a id=&#34;__codelineno-8-8&#34; name=&#34;__codelineno-8-8&#34; href=&#34;#__codelineno-8-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-8-9&#34;&gt;&lt;a id=&#34;__codelineno-8-9&#34; name=&#34;__codelineno-8-9&#34; href=&#34;#__codelineno-8-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-10&#34;&gt;&lt;a id=&#34;__codelineno-8-10&#34; name=&#34;__codelineno-8-10&#34; href=&#34;#__codelineno-8-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-11&#34;&gt;&lt;a id=&#34;__codelineno-8-11&#34; name=&#34;__codelineno-8-11&#34; href=&#34;#__codelineno-8-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000010&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-8-12&#34;&gt;&lt;a id=&#34;__codelineno-8-12&#34; name=&#34;__codelineno-8-12&#34; href=&#34;#__codelineno-8-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:0x0,%eax&lt;/span&gt;&lt;span id=&#34;__span-8-13&#34;&gt;&lt;a id=&#34;__codelineno-8-13&#34; name=&#34;__codelineno-8-13&#34; href=&#34;#__codelineno-8-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-14&#34;&gt;&lt;a id=&#34;__codelineno-8-14&#34; name=&#34;__codelineno-8-14&#34; href=&#34;#__codelineno-8-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TPOFF32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2&lt;/span&gt;&lt;span id=&#34;__span-8-15&#34;&gt;&lt;a id=&#34;__codelineno-8-15&#34; name=&#34;__codelineno-8-15&#34; href=&#34;#__codelineno-8-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-8-16&#34;&gt;&lt;a id=&#34;__codelineno-8-16&#34; name=&#34;__codelineno-8-16&#34; href=&#34;#__codelineno-8-16&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls&lt;/span&gt;&lt;span id=&#34;__span-8-17&#34;&gt;&lt;a id=&#34;__codelineno-8-17&#34; name=&#34;__codelineno-8-17&#34; href=&#34;#__codelineno-8-17&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls&lt;/span&gt;&lt;span id=&#34;__span-8-18&#34;&gt;&lt;a id=&#34;__codelineno-8-18&#34; name=&#34;__codelineno-8-18&#34; href=&#34;#__codelineno-8-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-19&#34;&gt;&lt;a id=&#34;__codelineno-8-19&#34; name=&#34;__codelineno-8-19&#34; href=&#34;#__codelineno-8-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001140&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-8-20&#34;&gt;&lt;a id=&#34;__codelineno-8-20&#34; name=&#34;__codelineno-8-20&#34; href=&#34;#__codelineno-8-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1140&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;fc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:0xfffffffffffffffc,%eax&lt;/span&gt;&lt;span id=&#34;__span-8-21&#34;&gt;&lt;a id=&#34;__codelineno-8-21&#34; name=&#34;__codelineno-8-21&#34; href=&#34;#__codelineno-8-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1147&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;/span&gt;&lt;span id=&#34;__span-8-22&#34;&gt;&lt;a id=&#34;__codelineno-8-22&#34; name=&#34;__codelineno-8-22&#34; href=&#34;#__codelineno-8-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1148&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-8-23&#34;&gt;&lt;a id=&#34;__codelineno-8-23&#34; name=&#34;__codelineno-8-23&#34; href=&#34;#__codelineno-8-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1149&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-24&#34;&gt;&lt;a id=&#34;__codelineno-8-24&#34; name=&#34;__codelineno-8-24&#34; href=&#34;#__codelineno-8-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-25&#34;&gt;&lt;a id=&#34;__codelineno-8-25&#34; name=&#34;__codelineno-8-25&#34; href=&#34;#__codelineno-8-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001150&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-8-26&#34;&gt;&lt;a id=&#34;__codelineno-8-26&#34; name=&#34;__codelineno-8-26&#34; href=&#34;#__codelineno-8-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1150&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;f8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:0xfffffffffffffff8,%eax&lt;/span&gt;&lt;span id=&#34;__span-8-27&#34;&gt;&lt;a id=&#34;__codelineno-8-27&#34; name=&#34;__codelineno-8-27&#34; href=&#34;#__codelineno-8-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1157&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;/span&gt;&lt;span id=&#34;__span-8-28&#34;&gt;&lt;a id=&#34;__codelineno-8-28&#34; name=&#34;__codelineno-8-28&#34; href=&#34;#__codelineno-8-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1158&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-8-29&#34;&gt;&lt;a id=&#34;__codelineno-8-29&#34; name=&#34;__codelineno-8-29&#34; href=&#34;#__codelineno-8-29&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls&lt;/span&gt;&lt;span id=&#34;__span-8-30&#34;&gt;&lt;a id=&#34;__codelineno-8-30&#34; name=&#34;__codelineno-8-30&#34; href=&#34;#__codelineno-8-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-31&#34;&gt;&lt;a id=&#34;__codelineno-8-31&#34; name=&#34;__codelineno-8-31&#34; href=&#34;#__codelineno-8-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;g&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.tbss&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0000000000000004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2&lt;/span&gt;&lt;span id=&#34;__span-8-32&#34;&gt;&lt;a id=&#34;__codelineno-8-32&#34; name=&#34;__codelineno-8-32&#34; href=&#34;#__codelineno-8-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;g&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.tbss&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0000000000000004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据以上输出可以看到，可执行程序自己使用了 8 字节的 TLS 空间，其中低 4 字节对应 &lt;code&gt;tls_data2&lt;/code&gt;，高 4 字节对应 &lt;code&gt;tls_data1&lt;/code&gt;；根据这个信息，链接器就可以推断出 &lt;code&gt;tls_data2&lt;/code&gt; 保存在 &lt;code&gt;%fs-0x8&lt;/code&gt; 的位置，&lt;code&gt;tls_data1&lt;/code&gt; 保存在 &lt;code&gt;%fs-0x4&lt;/code&gt; 的位置，直接把这个偏移编码到 &lt;code&gt;mov&lt;/code&gt; 指令内。这样，运行时开销是最小的。&lt;/p&gt;&lt;p&gt;这一种访问 TLS 的情况，也叫做 local exec TLS model：它只用于可执行程序访问可执行程序自己的 TLS 变量的场景。可执行程序的 TLS 空间总是紧贴着 &lt;code&gt;%fs&lt;/code&gt; 分配，不会受到动态库的影响，因此可以提前计算出它自己的 TLS 变量的偏移。&lt;/p&gt;&lt;h2 id=&#34;动态库&#34;&gt;动态库&lt;a class=&#34;headerlink&#34; href=&#34;#动态库&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;接下来观察另一种情况：动态库使用动态库自己的 TLS 变量。按照前面的分析，有两种情况：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第一种情况是，动态库是在程序启动时被动态链接器加载，那么它会被分配在 &lt;code&gt;%fs&lt;/code&gt; 往低地址的空间。虽然相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移无法在链接阶段就提前得知，但是动态链接器会给它分配连续的 TLS 空间，从而可以计算出它的 TLS 空间相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移，于是动态链接器可以帮助完成剩下的重定位。&lt;/li&gt;&lt;li&gt;第二种情况是，动态库是由 dlopen 被加载，那么它被分配的 TLS 空间的地址就无法从 &lt;code&gt;%fs&lt;/code&gt; 直接计算得出，此时就需要借助 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数的帮助。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;initial-exec-tls-model&#34;&gt;initial exec TLS model&lt;a class=&#34;headerlink&#34; href=&#34;#initial-exec-tls-model&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先来看第一种情况，它也被叫做 initial exec TLS model。还是从例子开始看起：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-9-1&#34;&gt;&lt;a id=&#34;__codelineno-9-1&#34; name=&#34;__codelineno-9-1&#34; href=&#34;#__codelineno-9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-2&#34;&gt;&lt;a id=&#34;__codelineno-9-2&#34; name=&#34;__codelineno-9-2&#34; href=&#34;#__codelineno-9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-3&#34;&gt;&lt;a id=&#34;__codelineno-9-3&#34; name=&#34;__codelineno-9-3&#34; href=&#34;#__codelineno-9-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-4&#34;&gt;&lt;a id=&#34;__codelineno-9-4&#34; name=&#34;__codelineno-9-4&#34; href=&#34;#__codelineno-9-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-5&#34;&gt;&lt;a id=&#34;__codelineno-9-5&#34; name=&#34;__codelineno-9-5&#34; href=&#34;#__codelineno-9-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先观察编译出来的汇编：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-10-1&#34;&gt;&lt;a id=&#34;__codelineno-10-1&#34; name=&#34;__codelineno-10-1&#34; href=&#34;#__codelineno-10-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-ftls-model&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;initial-exec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-fPIC&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.c&lt;/span&gt;&lt;span id=&#34;__span-10-2&#34;&gt;&lt;a id=&#34;__codelineno-10-2&#34; name=&#34;__codelineno-10-2&#34; href=&#34;#__codelineno-10-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;/span&gt;&lt;span id=&#34;__span-10-3&#34;&gt;&lt;a id=&#34;__codelineno-10-3&#34; name=&#34;__codelineno-10-3&#34; href=&#34;#__codelineno-10-3&#34;&gt;&lt;/a&gt;read_tls_data1:&lt;/span&gt;&lt;span id=&#34;__span-10-4&#34;&gt;&lt;a id=&#34;__codelineno-10-4&#34; name=&#34;__codelineno-10-4&#34; href=&#34;#__codelineno-10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@gottpoff&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rax&lt;/span&gt;&lt;span id=&#34;__span-10-5&#34;&gt;&lt;a id=&#34;__codelineno-10-5&#34; name=&#34;__codelineno-10-5&#34; href=&#34;#__codelineno-10-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-10-6&#34;&gt;&lt;a id=&#34;__codelineno-10-6&#34; name=&#34;__codelineno-10-6&#34; href=&#34;#__codelineno-10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-10-7&#34;&gt;&lt;a id=&#34;__codelineno-10-7&#34; name=&#34;__codelineno-10-7&#34; href=&#34;#__codelineno-10-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-8&#34;&gt;&lt;a id=&#34;__codelineno-10-8&#34; name=&#34;__codelineno-10-8&#34; href=&#34;#__codelineno-10-8&#34;&gt;&lt;/a&gt;read_tls_data2:&lt;/span&gt;&lt;span id=&#34;__span-10-9&#34;&gt;&lt;a id=&#34;__codelineno-10-9&#34; name=&#34;__codelineno-10-9&#34; href=&#34;#__codelineno-10-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@gottpoff&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rax&lt;/span&gt;&lt;span id=&#34;__span-10-10&#34;&gt;&lt;a id=&#34;__codelineno-10-10&#34; name=&#34;__codelineno-10-10&#34; href=&#34;#__codelineno-10-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-10-11&#34;&gt;&lt;a id=&#34;__codelineno-10-11&#34; name=&#34;__codelineno-10-11&#34; href=&#34;#__codelineno-10-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，这次生成的汇编不同了：它首先从 &lt;code&gt;symbol@gottpoff(%rip)&lt;/code&gt; 读取一个 offset 到 &lt;code&gt;%rax&lt;/code&gt; 寄存器，再从 &lt;code&gt;%fs:(%rax)&lt;/code&gt; 地址读取 TLS 变量的值。上面提到，在 initial exec TLS model 下，TLS 空间是可以相对 &lt;code&gt;%fs&lt;/code&gt; 寻址的，但是 offset 无法提前得知，需要由动态链接器完成重定位。&lt;/p&gt;&lt;p&gt;回忆之前在&lt;a href=&#34;../../../../2024/04/07/write-a-linker-4/&#34;&gt;《开发一个链接器（4）》&lt;/a&gt;一文中，当动态库想要获得某个只有动态链接器才知道的地址，就会把它预留好位置放到 &lt;code&gt;.got&lt;/code&gt; 表当中，并且输出一个 dynamic relocation，告诉动态链接器如何把地址计算出来并填进去。在这里，原理也是类似的，只不过是在 &lt;code&gt;.got&lt;/code&gt; 表中预留了一个空间来保存 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移。下面观察对象文件内是怎么记录这个信息的：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-11-1&#34;&gt;&lt;a id=&#34;__codelineno-11-1&#34; name=&#34;__codelineno-11-1&#34; href=&#34;#__codelineno-11-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;as&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-11-2&#34;&gt;&lt;a id=&#34;__codelineno-11-2&#34; name=&#34;__codelineno-11-2&#34; href=&#34;#__codelineno-11-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-11-3&#34;&gt;&lt;a id=&#34;__codelineno-11-3&#34; name=&#34;__codelineno-11-3&#34; href=&#34;#__codelineno-11-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-4&#34;&gt;&lt;a id=&#34;__codelineno-11-4&#34; name=&#34;__codelineno-11-4&#34; href=&#34;#__codelineno-11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-11-5&#34;&gt;&lt;a id=&#34;__codelineno-11-5&#34; name=&#34;__codelineno-11-5&#34; href=&#34;#__codelineno-11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rax&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 7 &amp;lt;read_tls_data1+0x7&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-6&#34;&gt;&lt;a id=&#34;__codelineno-11-6&#34; name=&#34;__codelineno-11-6&#34; href=&#34;#__codelineno-11-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_GOTTPOFF&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1-0x4&lt;/span&gt;&lt;span id=&#34;__span-11-7&#34;&gt;&lt;a id=&#34;__codelineno-11-7&#34; name=&#34;__codelineno-11-7&#34; href=&#34;#__codelineno-11-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-11-8&#34;&gt;&lt;a id=&#34;__codelineno-11-8&#34; name=&#34;__codelineno-11-8&#34; href=&#34;#__codelineno-11-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-11-9&#34;&gt;&lt;a id=&#34;__codelineno-11-9&#34; name=&#34;__codelineno-11-9&#34; href=&#34;#__codelineno-11-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-10&#34;&gt;&lt;a id=&#34;__codelineno-11-10&#34; name=&#34;__codelineno-11-10&#34; href=&#34;#__codelineno-11-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-11&#34;&gt;&lt;a id=&#34;__codelineno-11-11&#34; name=&#34;__codelineno-11-11&#34; href=&#34;#__codelineno-11-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000010&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-11-12&#34;&gt;&lt;a id=&#34;__codelineno-11-12&#34; name=&#34;__codelineno-11-12&#34; href=&#34;#__codelineno-11-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rax&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 17 &amp;lt;read_tls_data2+0x7&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-13&#34;&gt;&lt;a id=&#34;__codelineno-11-13&#34; name=&#34;__codelineno-11-13&#34; href=&#34;#__codelineno-11-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_GOTTPOFF&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2-0x4&lt;/span&gt;&lt;span id=&#34;__span-11-14&#34;&gt;&lt;a id=&#34;__codelineno-11-14&#34; name=&#34;__codelineno-11-14&#34; href=&#34;#__codelineno-11-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-11-15&#34;&gt;&lt;a id=&#34;__codelineno-11-15&#34; name=&#34;__codelineno-11-15&#34; href=&#34;#__codelineno-11-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，这时候它在 &lt;code&gt;mov&lt;/code&gt; 指令的立即数位置创建了一个 &lt;code&gt;R_X86_64_GOTTPOFF&lt;/code&gt; 类型的重定位，这是告诉链接器：创建一个 &lt;code&gt;.got&lt;/code&gt; entry，里面由动态链接器填写对应 symbol 在运行时相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移，然后链接器把 &lt;code&gt;.got&lt;/code&gt; entry 相对 &lt;code&gt;mov&lt;/code&gt; 指令的偏移写到 &lt;code&gt;mov&lt;/code&gt; 指令的立即数内。&lt;/p&gt;&lt;p&gt;至于为啥是 &lt;code&gt;symbol-0x4&lt;/code&gt; 而不是 &lt;code&gt;symbol&lt;/code&gt;，原因在之前&lt;a href=&#34;../../../../2024/03/30/write-a-linker-2/&#34;&gt;《开发一个链接器（2）》&lt;/a&gt; 已经出现过：x86 指令的立即数偏移是基于指令结尾的，而 relocation 指向的是立即数的起始地址，也就是指令结尾地址减去 4，那么立即数也要做相应的修正。&lt;/p&gt;&lt;p&gt;最后，观察链接器做的事情：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-12-1&#34;&gt;&lt;a id=&#34;__codelineno-12-1&#34; name=&#34;__codelineno-12-1&#34; href=&#34;#__codelineno-12-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-shared&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libtls.so&lt;/span&gt;&lt;span id=&#34;__span-12-2&#34;&gt;&lt;a id=&#34;__codelineno-12-2&#34; name=&#34;__codelineno-12-2&#34; href=&#34;#__codelineno-12-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-R&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libtls.so&lt;/span&gt;&lt;span id=&#34;__span-12-3&#34;&gt;&lt;a id=&#34;__codelineno-12-3&#34; name=&#34;__codelineno-12-3&#34; href=&#34;#__codelineno-12-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-4&#34;&gt;&lt;a id=&#34;__codelineno-12-4&#34; name=&#34;__codelineno-12-4&#34; href=&#34;#__codelineno-12-4&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.text:&lt;/span&gt;&lt;span id=&#34;__span-12-5&#34;&gt;&lt;a id=&#34;__codelineno-12-5&#34; name=&#34;__codelineno-12-5&#34; href=&#34;#__codelineno-12-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-6&#34;&gt;&lt;a id=&#34;__codelineno-12-6&#34; name=&#34;__codelineno-12-6&#34; href=&#34;#__codelineno-12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-12-7&#34;&gt;&lt;a id=&#34;__codelineno-12-7&#34; name=&#34;__codelineno-12-7&#34; href=&#34;#__codelineno-12-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1100&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;d1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2ed1&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rax&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fd8 &amp;lt;tls_data1+0x3fd4&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-8&#34;&gt;&lt;a id=&#34;__codelineno-12-8&#34; name=&#34;__codelineno-12-8&#34; href=&#34;#__codelineno-12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1107&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-12-9&#34;&gt;&lt;a id=&#34;__codelineno-12-9&#34; name=&#34;__codelineno-12-9&#34; href=&#34;#__codelineno-12-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;110a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-12-10&#34;&gt;&lt;a id=&#34;__codelineno-12-10&#34; name=&#34;__codelineno-12-10&#34; href=&#34;#__codelineno-12-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;110b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-11&#34;&gt;&lt;a id=&#34;__codelineno-12-11&#34; name=&#34;__codelineno-12-11&#34; href=&#34;#__codelineno-12-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-12&#34;&gt;&lt;a id=&#34;__codelineno-12-12&#34; name=&#34;__codelineno-12-12&#34; href=&#34;#__codelineno-12-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001110&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-12-13&#34;&gt;&lt;a id=&#34;__codelineno-12-13&#34; name=&#34;__codelineno-12-13&#34; href=&#34;#__codelineno-12-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1110&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;a9&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2ea9&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rax&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fc0 &amp;lt;tls_data2+0x3fc0&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-14&#34;&gt;&lt;a id=&#34;__codelineno-12-14&#34; name=&#34;__codelineno-12-14&#34; href=&#34;#__codelineno-12-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1117&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-12-15&#34;&gt;&lt;a id=&#34;__codelineno-12-15&#34; name=&#34;__codelineno-12-15&#34; href=&#34;#__codelineno-12-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;111a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-12-16&#34;&gt;&lt;a id=&#34;__codelineno-12-16&#34; name=&#34;__codelineno-12-16&#34; href=&#34;#__codelineno-12-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-17&#34;&gt;&lt;a id=&#34;__codelineno-12-17&#34; name=&#34;__codelineno-12-17&#34; href=&#34;#__codelineno-12-17&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.got:&lt;/span&gt;&lt;span id=&#34;__span-12-18&#34;&gt;&lt;a id=&#34;__codelineno-12-18&#34; name=&#34;__codelineno-12-18&#34; href=&#34;#__codelineno-12-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-19&#34;&gt;&lt;a id=&#34;__codelineno-12-19&#34; name=&#34;__codelineno-12-19&#34; href=&#34;#__codelineno-12-19&#34;&gt;&lt;/a&gt;0000000000003fb8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;.got&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-12-20&#34;&gt;&lt;a id=&#34;__codelineno-12-20&#34; name=&#34;__codelineno-12-20&#34; href=&#34;#__codelineno-12-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;/span&gt;&lt;span id=&#34;__span-12-21&#34;&gt;&lt;a id=&#34;__codelineno-12-21&#34; name=&#34;__codelineno-12-21&#34; href=&#34;#__codelineno-12-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fc0:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TPOFF64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2&lt;/span&gt;&lt;span id=&#34;__span-12-22&#34;&gt;&lt;a id=&#34;__codelineno-12-22&#34; name=&#34;__codelineno-12-22&#34; href=&#34;#__codelineno-12-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fd8:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TPOFF64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;链接器为两个 TLS 变量分别创建了一个 &lt;code&gt;.got&lt;/code&gt; entry，&lt;code&gt;tls_data1&lt;/code&gt; 对应 &lt;code&gt;0x3fd8&lt;/code&gt;，&lt;code&gt;tls_data2&lt;/code&gt; 对应 &lt;code&gt;0x3fc0&lt;/code&gt;&lt;/li&gt;&lt;li&gt;链接器在这两个 &lt;code&gt;.got&lt;/code&gt; entry 处创建了 dynamic relocation &lt;code&gt;R_X86_64_TPOFF64&lt;/code&gt;，告诉动态链接器：给动态库分配空间后，把 &lt;code&gt;tls_data1&lt;/code&gt; 和 &lt;code&gt;tls_data2&lt;/code&gt; 相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移写入到这两个 &lt;code&gt;.got&lt;/code&gt; entry 内&lt;/li&gt;&lt;li&gt;&lt;p&gt;链接器计算出了 &lt;code&gt;mov&lt;/code&gt; 指令和 &lt;code&gt;.got&lt;/code&gt; entry 的相对偏移，直接写到了 &lt;code&gt;mov&lt;/code&gt; 指令的立即数当中：&lt;/p&gt;&lt;p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-13-1&#34;&gt;&lt;a id=&#34;__codelineno-13-1&#34; name=&#34;__codelineno-13-1&#34; href=&#34;#__codelineno-13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-13-2&#34;&gt;&lt;a id=&#34;__codelineno-13-2&#34; name=&#34;__codelineno-13-2&#34; href=&#34;#__codelineno-13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1100&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;d1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2ed1&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rax&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fd8 &amp;lt;tls_data1+0x3fd4&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-3&#34;&gt;&lt;a id=&#34;__codelineno-13-3&#34; name=&#34;__codelineno-13-3&#34; href=&#34;#__codelineno-13-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1107&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-13-4&#34;&gt;&lt;a id=&#34;__codelineno-13-4&#34; name=&#34;__codelineno-13-4&#34; href=&#34;#__codelineno-13-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;110a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-13-5&#34;&gt;&lt;a id=&#34;__codelineno-13-5&#34; name=&#34;__codelineno-13-5&#34; href=&#34;#__codelineno-13-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;110b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-6&#34;&gt;&lt;a id=&#34;__codelineno-13-6&#34; name=&#34;__codelineno-13-6&#34; href=&#34;#__codelineno-13-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-7&#34;&gt;&lt;a id=&#34;__codelineno-13-7&#34; name=&#34;__codelineno-13-7&#34; href=&#34;#__codelineno-13-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001110&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-13-8&#34;&gt;&lt;a id=&#34;__codelineno-13-8&#34; name=&#34;__codelineno-13-8&#34; href=&#34;#__codelineno-13-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1110&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;a9&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2ea9&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rax&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fc0 &amp;lt;tls_data2+0x3fc0&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-9&#34;&gt;&lt;a id=&#34;__codelineno-13-9&#34; name=&#34;__codelineno-13-9&#34; href=&#34;#__codelineno-13-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1117&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%fs:&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-13-10&#34;&gt;&lt;a id=&#34;__codelineno-13-10&#34; name=&#34;__codelineno-13-10&#34; href=&#34;#__codelineno-13-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;111a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;4. 那么在运行时，为了读取 TLS 变量，首先从 &lt;code&gt;.got&lt;/code&gt; 表读取 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移写到 &lt;code&gt;%rax&lt;/code&gt; 寄存器，再通过 &lt;code&gt;%fs:(%rax)&lt;/code&gt; 访问 TLS 变量即可&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;那么这就是 initial exec TLS model 的实现方法了：它利用了动态库会在程序启动时加载的性质，保证 TLS 变量都保存在相对 &lt;code&gt;%fs&lt;/code&gt; 的运行时可知且不变的偏移上，把偏移记录在 &lt;code&gt;.got&lt;/code&gt; 表中，由动态链接器去计算，那么访问的时候就很简单了，直接读取 offset 从 &lt;code&gt;%fs&lt;/code&gt; 访问即可。&lt;/p&gt;&lt;h3 id=&#34;localglobal-dynamic-tls-model&#34;&gt;local/global dynamic TLS model&lt;a class=&#34;headerlink&#34; href=&#34;#localglobal-dynamic-tls-model&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来看动态库的第二种情况：它可能由 dlopen 加载，因此 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的位置可能会变化，此时需要通过 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数来得到 TLS 变量的地址。回顾前面提到的 &lt;code&gt;__tls_get_addr&lt;/code&gt; 的声明：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-14-1&#34;&gt;&lt;a id=&#34;__codelineno-14-1&#34; name=&#34;__codelineno-14-1&#34; href=&#34;#__codelineno-14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dl_tls_index&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-2&#34;&gt;&lt;a id=&#34;__codelineno-14-2&#34; name=&#34;__codelineno-14-2&#34; href=&#34;#__codelineno-14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-3&#34;&gt;&lt;a id=&#34;__codelineno-14-3&#34; name=&#34;__codelineno-14-3&#34; href=&#34;#__codelineno-14-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-4&#34;&gt;&lt;a id=&#34;__codelineno-14-4&#34; name=&#34;__codelineno-14-4&#34; href=&#34;#__codelineno-14-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-5&#34;&gt;&lt;a id=&#34;__codelineno-14-5&#34; name=&#34;__codelineno-14-5&#34; href=&#34;#__codelineno-14-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-6&#34;&gt;&lt;a id=&#34;__codelineno-14-6&#34; name=&#34;__codelineno-14-6&#34; href=&#34;#__codelineno-14-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-7&#34;&gt;&lt;a id=&#34;__codelineno-14-7&#34; name=&#34;__codelineno-14-7&#34; href=&#34;#__codelineno-14-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;__tls_get_addr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即它需要两个信息，一个是 TLS 变量所在的动态库的编号（这个编号是动态生成的一个 id，实际上是这个动态库在 &lt;code&gt;dtv&lt;/code&gt; 数组中的下标），另外是这个 TLS 变量在动态库内的偏移。这时候，又分为两种情况：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第一种情况是，这个 TLS 变量就在这个动态库本身内部定义，此时 TLS 变量在动态库内的偏移在链接期间已知，只是不知道 TLS 空间的起始地址，需要通过 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数获取，这种情景叫做 local dynamic TLS model&lt;/li&gt;&lt;li&gt;第二种情况是，这个 TLS 变量不知道在哪个动态库定义，此时只知道这个 TLS 变量的名字，不知道它属于哪个动态库，也不知道它在动态库内的偏移，这种情况叫做 global dynamic TLS model，是最通用的情况，对 TLS 变量所在的位置没有任何假设&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;local-dynamic-tls-model&#34;&gt;local dynamic TLS model&lt;a class=&#34;headerlink&#34; href=&#34;#local-dynamic-tls-model&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来分析 local dynamic TLS model，它面向的场景是一个可能被 dlopen 加载的动态库，需要访问自己的 TLS 变量，此时需要用 &lt;code&gt;__tls_get_addr&lt;/code&gt; 读取自己的 TLS 空间的起始地址，根据链接时已知的偏移，计算出 TLS 变量在运行时的地址。由于 &lt;code&gt;__tls_get_addr&lt;/code&gt; 需要知道动态库的编号，而这个编号只有动态链接器才知道，因此需要生成一个 dynamic relocation，让动态链接器把这个动态库自己的编号写入到 &lt;code&gt;.got&lt;/code&gt; entry 中，之后才能拿这个 &lt;code&gt;.got&lt;/code&gt; entry 的值调用 &lt;code&gt;__tls_get_addr&lt;/code&gt;，进而得到 TLS 变量的地址。下面来观察这个过程，源码和之前一样：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-15-1&#34;&gt;&lt;a id=&#34;__codelineno-15-1&#34; name=&#34;__codelineno-15-1&#34; href=&#34;#__codelineno-15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-2&#34;&gt;&lt;a id=&#34;__codelineno-15-2&#34; name=&#34;__codelineno-15-2&#34; href=&#34;#__codelineno-15-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-3&#34;&gt;&lt;a id=&#34;__codelineno-15-3&#34; name=&#34;__codelineno-15-3&#34; href=&#34;#__codelineno-15-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-4&#34;&gt;&lt;a id=&#34;__codelineno-15-4&#34; name=&#34;__codelineno-15-4&#34; href=&#34;#__codelineno-15-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-5&#34;&gt;&lt;a id=&#34;__codelineno-15-5&#34; name=&#34;__codelineno-15-5&#34; href=&#34;#__codelineno-15-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先查看生成的汇编：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-16-1&#34;&gt;&lt;a id=&#34;__codelineno-16-1&#34; name=&#34;__codelineno-16-1&#34; href=&#34;#__codelineno-16-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-ftls-model&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;local-dynamic&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-fPIC&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.c&lt;/span&gt;&lt;span id=&#34;__span-16-2&#34;&gt;&lt;a id=&#34;__codelineno-16-2&#34; name=&#34;__codelineno-16-2&#34; href=&#34;#__codelineno-16-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;/span&gt;&lt;span id=&#34;__span-16-3&#34;&gt;&lt;a id=&#34;__codelineno-16-3&#34; name=&#34;__codelineno-16-3&#34; href=&#34;#__codelineno-16-3&#34;&gt;&lt;/a&gt;read_tls_data1:&lt;/span&gt;&lt;span id=&#34;__span-16-4&#34;&gt;&lt;a id=&#34;__codelineno-16-4&#34; name=&#34;__codelineno-16-4&#34; href=&#34;#__codelineno-16-4&#34;&gt;&lt;/a&gt;.LFB0:&lt;/span&gt;&lt;span id=&#34;__span-16-5&#34;&gt;&lt;a id=&#34;__codelineno-16-5&#34; name=&#34;__codelineno-16-5&#34; href=&#34;#__codelineno-16-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;subq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-16-6&#34;&gt;&lt;a id=&#34;__codelineno-16-6&#34; name=&#34;__codelineno-16-6&#34; href=&#34;#__codelineno-16-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;leaq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@tlsld&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rdi&lt;/span&gt;&lt;span id=&#34;__span-16-7&#34;&gt;&lt;a id=&#34;__codelineno-16-7&#34; name=&#34;__codelineno-16-7&#34; href=&#34;#__codelineno-16-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;span id=&#34;__span-16-8&#34;&gt;&lt;a id=&#34;__codelineno-16-8&#34; name=&#34;__codelineno-16-8&#34; href=&#34;#__codelineno-16-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@dtpoff&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-16-9&#34;&gt;&lt;a id=&#34;__codelineno-16-9&#34; name=&#34;__codelineno-16-9&#34; href=&#34;#__codelineno-16-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;addq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-16-10&#34;&gt;&lt;a id=&#34;__codelineno-16-10&#34; name=&#34;__codelineno-16-10&#34; href=&#34;#__codelineno-16-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-16-11&#34;&gt;&lt;a id=&#34;__codelineno-16-11&#34; name=&#34;__codelineno-16-11&#34; href=&#34;#__codelineno-16-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-12&#34;&gt;&lt;a id=&#34;__codelineno-16-12&#34; name=&#34;__codelineno-16-12&#34; href=&#34;#__codelineno-16-12&#34;&gt;&lt;/a&gt;read_tls_data2:&lt;/span&gt;&lt;span id=&#34;__span-16-13&#34;&gt;&lt;a id=&#34;__codelineno-16-13&#34; name=&#34;__codelineno-16-13&#34; href=&#34;#__codelineno-16-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;subq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-16-14&#34;&gt;&lt;a id=&#34;__codelineno-16-14&#34; name=&#34;__codelineno-16-14&#34; href=&#34;#__codelineno-16-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;leaq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@tlsld&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rdi&lt;/span&gt;&lt;span id=&#34;__span-16-15&#34;&gt;&lt;a id=&#34;__codelineno-16-15&#34; name=&#34;__codelineno-16-15&#34; href=&#34;#__codelineno-16-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;span id=&#34;__span-16-16&#34;&gt;&lt;a id=&#34;__codelineno-16-16&#34; name=&#34;__codelineno-16-16&#34; href=&#34;#__codelineno-16-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@dtpoff&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-16-17&#34;&gt;&lt;a id=&#34;__codelineno-16-17&#34; name=&#34;__codelineno-16-17&#34; href=&#34;#__codelineno-16-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;addq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-16-18&#34;&gt;&lt;a id=&#34;__codelineno-16-18&#34; name=&#34;__codelineno-16-18&#34; href=&#34;#__codelineno-16-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先可以看到的是一个新的语法：&lt;code&gt;symbol@tlsld(%rip)&lt;/code&gt;，生成一个 &lt;code&gt;R_X86_64_TLSLD&lt;/code&gt; 类型的 relocation，它的意思是在 &lt;code&gt;.got&lt;/code&gt; 表中生成一个 entry，这个 entry 会保存当前动态库对应的编号，然后在这里通过 &lt;code&gt;lea&lt;/code&gt; 指令把这个 &lt;code&gt;.got&lt;/code&gt; entry 的地址作为 &lt;code&gt;tls_index *&lt;/code&gt; 类型的参数传给 &lt;code&gt;__tls_get_addr&lt;/code&gt;，那么它就会去寻找这个动态库的 TLS 空间的起始地址，把结果写入到 &lt;code&gt;%rax&lt;/code&gt; 寄存器内。&lt;/p&gt;&lt;p&gt;得到 TLS 空间的起始地址后，再利用 &lt;code&gt;symbol@dtpoff(%rax)&lt;/code&gt; 的语法，生成 &lt;code&gt;R_X86_64_DTPOFF32&lt;/code&gt; 类型的 relocation，在链接的时候直接把 &lt;code&gt;symbol&lt;/code&gt; 相对自己的 TLS 空间的起始地址的偏移写到 &lt;code&gt;movl&lt;/code&gt; 指令内，从而实现了 TLS 变量的访问。&lt;/p&gt;&lt;p&gt;下面观察生成的对象文件：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-17-1&#34;&gt;&lt;a id=&#34;__codelineno-17-1&#34; name=&#34;__codelineno-17-1&#34; href=&#34;#__codelineno-17-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;as&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-17-2&#34;&gt;&lt;a id=&#34;__codelineno-17-2&#34; name=&#34;__codelineno-17-2&#34; href=&#34;#__codelineno-17-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-17-3&#34;&gt;&lt;a id=&#34;__codelineno-17-3&#34; name=&#34;__codelineno-17-3&#34; href=&#34;#__codelineno-17-3&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.text:&lt;/span&gt;&lt;span id=&#34;__span-17-4&#34;&gt;&lt;a id=&#34;__codelineno-17-4&#34; name=&#34;__codelineno-17-4&#34; href=&#34;#__codelineno-17-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-5&#34;&gt;&lt;a id=&#34;__codelineno-17-5&#34; name=&#34;__codelineno-17-5&#34; href=&#34;#__codelineno-17-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-17-6&#34;&gt;&lt;a id=&#34;__codelineno-17-6&#34; name=&#34;__codelineno-17-6&#34; href=&#34;#__codelineno-17-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-17-7&#34;&gt;&lt;a id=&#34;__codelineno-17-7&#34; name=&#34;__codelineno-17-7&#34; href=&#34;#__codelineno-17-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# b &amp;lt;read_tls_data1+0xb&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-8&#34;&gt;&lt;a id=&#34;__codelineno-17-8&#34; name=&#34;__codelineno-17-8&#34; href=&#34;#__codelineno-17-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TLSLD&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1-0x4&lt;/span&gt;&lt;span id=&#34;__span-17-9&#34;&gt;&lt;a id=&#34;__codelineno-17-9&#34; name=&#34;__codelineno-17-9&#34; href=&#34;#__codelineno-17-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1+0x10&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-17-10&#34;&gt;&lt;a id=&#34;__codelineno-17-10&#34; name=&#34;__codelineno-17-10&#34; href=&#34;#__codelineno-17-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_PLT32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr-0x4&lt;/span&gt;&lt;span id=&#34;__span-17-11&#34;&gt;&lt;a id=&#34;__codelineno-17-11&#34; name=&#34;__codelineno-17-11&#34; href=&#34;#__codelineno-17-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-17-12&#34;&gt;&lt;a id=&#34;__codelineno-17-12&#34; name=&#34;__codelineno-17-12&#34; href=&#34;#__codelineno-17-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPOFF32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1&lt;/span&gt;&lt;span id=&#34;__span-17-13&#34;&gt;&lt;a id=&#34;__codelineno-17-13&#34; name=&#34;__codelineno-17-13&#34; href=&#34;#__codelineno-17-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-17-14&#34;&gt;&lt;a id=&#34;__codelineno-17-14&#34; name=&#34;__codelineno-17-14&#34; href=&#34;#__codelineno-17-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-17-15&#34;&gt;&lt;a id=&#34;__codelineno-17-15&#34; name=&#34;__codelineno-17-15&#34; href=&#34;#__codelineno-17-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-16&#34;&gt;&lt;a id=&#34;__codelineno-17-16&#34; name=&#34;__codelineno-17-16&#34; href=&#34;#__codelineno-17-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-17&#34;&gt;&lt;a id=&#34;__codelineno-17-17&#34; name=&#34;__codelineno-17-17&#34; href=&#34;#__codelineno-17-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000020&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-17-18&#34;&gt;&lt;a id=&#34;__codelineno-17-18&#34; name=&#34;__codelineno-17-18&#34; href=&#34;#__codelineno-17-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-17-19&#34;&gt;&lt;a id=&#34;__codelineno-17-19&#34; name=&#34;__codelineno-17-19&#34; href=&#34;#__codelineno-17-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 2b &amp;lt;read_tls_data2+0xb&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-20&#34;&gt;&lt;a id=&#34;__codelineno-17-20&#34; name=&#34;__codelineno-17-20&#34; href=&#34;#__codelineno-17-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TLSLD&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2-0x4&lt;/span&gt;&lt;span id=&#34;__span-17-21&#34;&gt;&lt;a id=&#34;__codelineno-17-21&#34; name=&#34;__codelineno-17-21&#34; href=&#34;#__codelineno-17-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2+0x10&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-17-22&#34;&gt;&lt;a id=&#34;__codelineno-17-22&#34; name=&#34;__codelineno-17-22&#34; href=&#34;#__codelineno-17-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2c:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_PLT32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr-0x4&lt;/span&gt;&lt;span id=&#34;__span-17-23&#34;&gt;&lt;a id=&#34;__codelineno-17-23&#34; name=&#34;__codelineno-17-23&#34; href=&#34;#__codelineno-17-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-17-24&#34;&gt;&lt;a id=&#34;__codelineno-17-24&#34; name=&#34;__codelineno-17-24&#34; href=&#34;#__codelineno-17-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPOFF32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2&lt;/span&gt;&lt;span id=&#34;__span-17-25&#34;&gt;&lt;a id=&#34;__codelineno-17-25&#34; name=&#34;__codelineno-17-25&#34; href=&#34;#__codelineno-17-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;36&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-17-26&#34;&gt;&lt;a id=&#34;__codelineno-17-26&#34; name=&#34;__codelineno-17-26&#34; href=&#34;#__codelineno-17-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，由于 &lt;code&gt;__tls_get_addr&lt;/code&gt; 的运行时地址也是不知道的，所以就和调用其他动态库的函数一样，用已有的 PLT 机制去重定位。&lt;/p&gt;&lt;p&gt;接下来看最后的动态库：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-18-1&#34;&gt;&lt;a id=&#34;__codelineno-18-1&#34; name=&#34;__codelineno-18-1&#34; href=&#34;#__codelineno-18-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-shared&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libtls.so&lt;/span&gt;&lt;span id=&#34;__span-18-2&#34;&gt;&lt;a id=&#34;__codelineno-18-2&#34; name=&#34;__codelineno-18-2&#34; href=&#34;#__codelineno-18-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-R&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libtls.so&lt;/span&gt;&lt;span id=&#34;__span-18-3&#34;&gt;&lt;a id=&#34;__codelineno-18-3&#34; name=&#34;__codelineno-18-3&#34; href=&#34;#__codelineno-18-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-4&#34;&gt;&lt;a id=&#34;__codelineno-18-4&#34; name=&#34;__codelineno-18-4&#34; href=&#34;#__codelineno-18-4&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.text:&lt;/span&gt;&lt;span id=&#34;__span-18-5&#34;&gt;&lt;a id=&#34;__codelineno-18-5&#34; name=&#34;__codelineno-18-5&#34; href=&#34;#__codelineno-18-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-6&#34;&gt;&lt;a id=&#34;__codelineno-18-6&#34; name=&#34;__codelineno-18-6&#34; href=&#34;#__codelineno-18-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001110&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-18-7&#34;&gt;&lt;a id=&#34;__codelineno-18-7&#34; name=&#34;__codelineno-18-7&#34; href=&#34;#__codelineno-18-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1110&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-18-8&#34;&gt;&lt;a id=&#34;__codelineno-18-8&#34; name=&#34;__codelineno-18-8&#34; href=&#34;#__codelineno-18-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1114&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;9d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2e9d&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fb8 &amp;lt;_DYNAMIC+0x1c0&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-9&#34;&gt;&lt;a id=&#34;__codelineno-18-9&#34; name=&#34;__codelineno-18-9&#34; href=&#34;#__codelineno-18-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;111b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1030&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;__tls_get_addr@plt&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-18-10&#34;&gt;&lt;a id=&#34;__codelineno-18-10&#34; name=&#34;__codelineno-18-10&#34; href=&#34;#__codelineno-18-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1120&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-18-11&#34;&gt;&lt;a id=&#34;__codelineno-18-11&#34; name=&#34;__codelineno-18-11&#34; href=&#34;#__codelineno-18-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1126&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-18-12&#34;&gt;&lt;a id=&#34;__codelineno-18-12&#34; name=&#34;__codelineno-18-12&#34; href=&#34;#__codelineno-18-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;112a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-18-13&#34;&gt;&lt;a id=&#34;__codelineno-18-13&#34; name=&#34;__codelineno-18-13&#34; href=&#34;#__codelineno-18-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;112b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-14&#34;&gt;&lt;a id=&#34;__codelineno-18-14&#34; name=&#34;__codelineno-18-14&#34; href=&#34;#__codelineno-18-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-15&#34;&gt;&lt;a id=&#34;__codelineno-18-15&#34; name=&#34;__codelineno-18-15&#34; href=&#34;#__codelineno-18-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001130&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-18-16&#34;&gt;&lt;a id=&#34;__codelineno-18-16&#34; name=&#34;__codelineno-18-16&#34; href=&#34;#__codelineno-18-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1130&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-18-17&#34;&gt;&lt;a id=&#34;__codelineno-18-17&#34; name=&#34;__codelineno-18-17&#34; href=&#34;#__codelineno-18-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1134&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;7d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2e7d&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fb8 &amp;lt;_DYNAMIC+0x1c0&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-18&#34;&gt;&lt;a id=&#34;__codelineno-18-18&#34; name=&#34;__codelineno-18-18&#34; href=&#34;#__codelineno-18-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;113b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;f0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;fe&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1030&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;__tls_get_addr@plt&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-18-19&#34;&gt;&lt;a id=&#34;__codelineno-18-19&#34; name=&#34;__codelineno-18-19&#34; href=&#34;#__codelineno-18-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1140&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-18-20&#34;&gt;&lt;a id=&#34;__codelineno-18-20&#34; name=&#34;__codelineno-18-20&#34; href=&#34;#__codelineno-18-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1146&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-18-21&#34;&gt;&lt;a id=&#34;__codelineno-18-21&#34; name=&#34;__codelineno-18-21&#34; href=&#34;#__codelineno-18-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;114a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-18-22&#34;&gt;&lt;a id=&#34;__codelineno-18-22&#34; name=&#34;__codelineno-18-22&#34; href=&#34;#__codelineno-18-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-23&#34;&gt;&lt;a id=&#34;__codelineno-18-23&#34; name=&#34;__codelineno-18-23&#34; href=&#34;#__codelineno-18-23&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.got:&lt;/span&gt;&lt;span id=&#34;__span-18-24&#34;&gt;&lt;a id=&#34;__codelineno-18-24&#34; name=&#34;__codelineno-18-24&#34; href=&#34;#__codelineno-18-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-25&#34;&gt;&lt;a id=&#34;__codelineno-18-25&#34; name=&#34;__codelineno-18-25&#34; href=&#34;#__codelineno-18-25&#34;&gt;&lt;/a&gt;0000000000003fb8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;.got&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-18-26&#34;&gt;&lt;a id=&#34;__codelineno-18-26&#34; name=&#34;__codelineno-18-26&#34; href=&#34;#__codelineno-18-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;/span&gt;&lt;span id=&#34;__span-18-27&#34;&gt;&lt;a id=&#34;__codelineno-18-27&#34; name=&#34;__codelineno-18-27&#34; href=&#34;#__codelineno-18-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fb8:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPMOD64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;*ABS*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，无论是访问 &lt;code&gt;tls_data1&lt;/code&gt; 还是 &lt;code&gt;tls_data2&lt;/code&gt;，在调用 &lt;code&gt;__tls_get_addr&lt;/code&gt; 时，使用的参数都是一样的 &lt;code&gt;0x3fb8&lt;/code&gt;，也就是动态链接器把当前动态库的编号写进去的 &lt;code&gt;.got&lt;/code&gt; entry。返回值就是当前动态库的 TLS 空间的基地址，把返回值加上对应的 offset（&lt;code&gt;tls_data1&lt;/code&gt; 的偏移是 4，&lt;code&gt;tls_data2&lt;/code&gt; 的偏移是 0，这个 offset 直接写到了 &lt;code&gt;movl&lt;/code&gt; 指令的立即数里），就得到了 TLS 变量的地址。&lt;/p&gt;&lt;p&gt;特别地，如果在一个函数里访问多个当前动态库的 TLS 变量，那么 &lt;code&gt;__tls_get_addr&lt;/code&gt; 调用是可以合并的：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-19-1&#34;&gt;&lt;a id=&#34;__codelineno-19-1&#34; name=&#34;__codelineno-19-1&#34; href=&#34;#__codelineno-19-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-2&#34;&gt;&lt;a id=&#34;__codelineno-19-2&#34; name=&#34;__codelineno-19-2&#34; href=&#34;#__codelineno-19-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-3&#34;&gt;&lt;a id=&#34;__codelineno-19-3&#34; name=&#34;__codelineno-19-3&#34; href=&#34;#__codelineno-19-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-4&#34;&gt;&lt;a id=&#34;__codelineno-19-4&#34; name=&#34;__codelineno-19-4&#34; href=&#34;#__codelineno-19-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read_tls_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_data2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;会生成如下的汇编：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-20-1&#34;&gt;&lt;a id=&#34;__codelineno-20-1&#34; name=&#34;__codelineno-20-1&#34; href=&#34;#__codelineno-20-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-ftls-model&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;local-dynamic&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-fPIC&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.c&lt;/span&gt;&lt;span id=&#34;__span-20-2&#34;&gt;&lt;a id=&#34;__codelineno-20-2&#34; name=&#34;__codelineno-20-2&#34; href=&#34;#__codelineno-20-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;/span&gt;&lt;span id=&#34;__span-20-3&#34;&gt;&lt;a id=&#34;__codelineno-20-3&#34; name=&#34;__codelineno-20-3&#34; href=&#34;#__codelineno-20-3&#34;&gt;&lt;/a&gt;read_tls_data:&lt;/span&gt;&lt;span id=&#34;__span-20-4&#34;&gt;&lt;a id=&#34;__codelineno-20-4&#34; name=&#34;__codelineno-20-4&#34; href=&#34;#__codelineno-20-4&#34;&gt;&lt;/a&gt;.LFB0:&lt;/span&gt;&lt;span id=&#34;__span-20-5&#34;&gt;&lt;a id=&#34;__codelineno-20-5&#34; name=&#34;__codelineno-20-5&#34; href=&#34;#__codelineno-20-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;subq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-20-6&#34;&gt;&lt;a id=&#34;__codelineno-20-6&#34; name=&#34;__codelineno-20-6&#34; href=&#34;#__codelineno-20-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;leaq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@tlsld&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rdi&lt;/span&gt;&lt;span id=&#34;__span-20-7&#34;&gt;&lt;a id=&#34;__codelineno-20-7&#34; name=&#34;__codelineno-20-7&#34; href=&#34;#__codelineno-20-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;span id=&#34;__span-20-8&#34;&gt;&lt;a id=&#34;__codelineno-20-8&#34; name=&#34;__codelineno-20-8&#34; href=&#34;#__codelineno-20-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@dtpoff&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%edx&lt;/span&gt;&lt;span id=&#34;__span-20-9&#34;&gt;&lt;a id=&#34;__codelineno-20-9&#34; name=&#34;__codelineno-20-9&#34; href=&#34;#__codelineno-20-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;addl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@dtpoff&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%edx&lt;/span&gt;&lt;span id=&#34;__span-20-10&#34;&gt;&lt;a id=&#34;__codelineno-20-10&#34; name=&#34;__codelineno-20-10&#34; href=&#34;#__codelineno-20-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;addq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-20-11&#34;&gt;&lt;a id=&#34;__codelineno-20-11&#34; name=&#34;__codelineno-20-11&#34; href=&#34;#__codelineno-20-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%edx,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-20-12&#34;&gt;&lt;a id=&#34;__codelineno-20-12&#34; name=&#34;__codelineno-20-12&#34; href=&#34;#__codelineno-20-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就减少了一次 &lt;code&gt;__tls_get_addr&lt;/code&gt; 的调用。&lt;/p&gt;&lt;h3 id=&#34;global-dynamic-tls-model&#34;&gt;global dynamic TLS model&lt;a class=&#34;headerlink&#34; href=&#34;#global-dynamic-tls-model&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;再来介绍最后一种情况：对于一个 dlopen 的动态库，如果它要访问的 TLS 变量，只知道名字，不知道来自哪一个动态库，不知道偏移是多少。这时候，只能把全部工作交给动态链接器去做：让动态链接器根据符号，去查找符号表，找到对应的动态库和偏移，记录下来；由于涉及到动态库的编号和偏移，所以需要两个连续的 &lt;code&gt;.got&lt;/code&gt; entry，正好对应 &lt;code&gt;tls_index&lt;/code&gt; 结构体的两项成员：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-21-1&#34;&gt;&lt;a id=&#34;__codelineno-21-1&#34; name=&#34;__codelineno-21-1&#34; href=&#34;#__codelineno-21-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dl_tls_index&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-2&#34;&gt;&lt;a id=&#34;__codelineno-21-2&#34; name=&#34;__codelineno-21-2&#34; href=&#34;#__codelineno-21-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-3&#34;&gt;&lt;a id=&#34;__codelineno-21-3&#34; name=&#34;__codelineno-21-3&#34; href=&#34;#__codelineno-21-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-4&#34;&gt;&lt;a id=&#34;__codelineno-21-4&#34; name=&#34;__codelineno-21-4&#34; href=&#34;#__codelineno-21-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-5&#34;&gt;&lt;a id=&#34;__codelineno-21-5&#34; name=&#34;__codelineno-21-5&#34; href=&#34;#__codelineno-21-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;继续上面的例子，这次采用 global dynamic TLS model 进行编译：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-22-1&#34;&gt;&lt;a id=&#34;__codelineno-22-1&#34; name=&#34;__codelineno-22-1&#34; href=&#34;#__codelineno-22-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.c&lt;/span&gt;&lt;span id=&#34;__span-22-2&#34;&gt;&lt;a id=&#34;__codelineno-22-2&#34; name=&#34;__codelineno-22-2&#34; href=&#34;#__codelineno-22-2&#34;&gt;&lt;/a&gt;__thread&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;int&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-3&#34;&gt;&lt;a id=&#34;__codelineno-22-3&#34; name=&#34;__codelineno-22-3&#34; href=&#34;#__codelineno-22-3&#34;&gt;&lt;/a&gt;__thread&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;int&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-4&#34;&gt;&lt;a id=&#34;__codelineno-22-4&#34; name=&#34;__codelineno-22-4&#34; href=&#34;#__codelineno-22-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-5&#34;&gt;&lt;a id=&#34;__codelineno-22-5&#34; name=&#34;__codelineno-22-5&#34; href=&#34;#__codelineno-22-5&#34;&gt;&lt;/a&gt;int&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;read_tls_data1&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-6&#34;&gt;&lt;a id=&#34;__codelineno-22-6&#34; name=&#34;__codelineno-22-6&#34; href=&#34;#__codelineno-22-6&#34;&gt;&lt;/a&gt;int&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;read_tls_data2&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-7&#34;&gt;&lt;a id=&#34;__codelineno-22-7&#34; name=&#34;__codelineno-22-7&#34; href=&#34;#__codelineno-22-7&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-ftls-model&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global-dynamic&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-fPIC&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.c&lt;/span&gt;&lt;span id=&#34;__span-22-8&#34;&gt;&lt;a id=&#34;__codelineno-22-8&#34; name=&#34;__codelineno-22-8&#34; href=&#34;#__codelineno-22-8&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;/span&gt;&lt;span id=&#34;__span-22-9&#34;&gt;&lt;a id=&#34;__codelineno-22-9&#34; name=&#34;__codelineno-22-9&#34; href=&#34;#__codelineno-22-9&#34;&gt;&lt;/a&gt;read_tls_data1:&lt;/span&gt;&lt;span id=&#34;__span-22-10&#34;&gt;&lt;a id=&#34;__codelineno-22-10&#34; name=&#34;__codelineno-22-10&#34; href=&#34;#__codelineno-22-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;subq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-22-11&#34;&gt;&lt;a id=&#34;__codelineno-22-11&#34; name=&#34;__codelineno-22-11&#34; href=&#34;#__codelineno-22-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;leaq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@tlsgd&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rdi&lt;/span&gt;&lt;span id=&#34;__span-22-12&#34;&gt;&lt;a id=&#34;__codelineno-22-12&#34; name=&#34;__codelineno-22-12&#34; href=&#34;#__codelineno-22-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.value&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x6666&lt;/span&gt;&lt;span id=&#34;__span-22-13&#34;&gt;&lt;a id=&#34;__codelineno-22-13&#34; name=&#34;__codelineno-22-13&#34; href=&#34;#__codelineno-22-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rex64&lt;/span&gt;&lt;span id=&#34;__span-22-14&#34;&gt;&lt;a id=&#34;__codelineno-22-14&#34; name=&#34;__codelineno-22-14&#34; href=&#34;#__codelineno-22-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;span id=&#34;__span-22-15&#34;&gt;&lt;a id=&#34;__codelineno-22-15&#34; name=&#34;__codelineno-22-15&#34; href=&#34;#__codelineno-22-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-22-16&#34;&gt;&lt;a id=&#34;__codelineno-22-16&#34; name=&#34;__codelineno-22-16&#34; href=&#34;#__codelineno-22-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;addq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-22-17&#34;&gt;&lt;a id=&#34;__codelineno-22-17&#34; name=&#34;__codelineno-22-17&#34; href=&#34;#__codelineno-22-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-22-18&#34;&gt;&lt;a id=&#34;__codelineno-22-18&#34; name=&#34;__codelineno-22-18&#34; href=&#34;#__codelineno-22-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-19&#34;&gt;&lt;a id=&#34;__codelineno-22-19&#34; name=&#34;__codelineno-22-19&#34; href=&#34;#__codelineno-22-19&#34;&gt;&lt;/a&gt;read_tls_data2:&lt;/span&gt;&lt;span id=&#34;__span-22-20&#34;&gt;&lt;a id=&#34;__codelineno-22-20&#34; name=&#34;__codelineno-22-20&#34; href=&#34;#__codelineno-22-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;subq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-22-21&#34;&gt;&lt;a id=&#34;__codelineno-22-21&#34; name=&#34;__codelineno-22-21&#34; href=&#34;#__codelineno-22-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;leaq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@tlsgd&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rdi&lt;/span&gt;&lt;span id=&#34;__span-22-22&#34;&gt;&lt;a id=&#34;__codelineno-22-22&#34; name=&#34;__codelineno-22-22&#34; href=&#34;#__codelineno-22-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.value&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x6666&lt;/span&gt;&lt;span id=&#34;__span-22-23&#34;&gt;&lt;a id=&#34;__codelineno-22-23&#34; name=&#34;__codelineno-22-23&#34; href=&#34;#__codelineno-22-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rex64&lt;/span&gt;&lt;span id=&#34;__span-22-24&#34;&gt;&lt;a id=&#34;__codelineno-22-24&#34; name=&#34;__codelineno-22-24&#34; href=&#34;#__codelineno-22-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;span id=&#34;__span-22-25&#34;&gt;&lt;a id=&#34;__codelineno-22-25&#34; name=&#34;__codelineno-22-25&#34; href=&#34;#__codelineno-22-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;movl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%eax&lt;/span&gt;&lt;span id=&#34;__span-22-26&#34;&gt;&lt;a id=&#34;__codelineno-22-26&#34; name=&#34;__codelineno-22-26&#34; href=&#34;#__codelineno-22-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;addq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%rsp&lt;/span&gt;&lt;span id=&#34;__span-22-27&#34;&gt;&lt;a id=&#34;__codelineno-22-27&#34; name=&#34;__codelineno-22-27&#34; href=&#34;#__codelineno-22-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这次出现了一些不一样的内容：&lt;code&gt;data16&lt;/code&gt;、&lt;code&gt;.value 0x6666&lt;/code&gt; 和 &lt;code&gt;rex64&lt;/code&gt;；实际上，这些是无用的指令前缀，不影响指令的语义，但是保证了这段代码有足够的长度，方便后续链接器进行优化。除了这些奇怪的前缀，核心就是 &lt;code&gt;symbol@tlsgd(%rip)&lt;/code&gt; 语法，它会创建 &lt;code&gt;R_X86_64_TLSGD&lt;/code&gt; relocation，它的意思是：创建一对 &lt;code&gt;.got&lt;/code&gt; entry，第一个 entry 对应 symbol 所在动态库的编号，第二个 entry 对应 symbol 在动态库的 TLS 空间内的偏移，这两个 entry 组成一个 &lt;code&gt;tls_index&lt;/code&gt; 结构体；通过 &lt;code&gt;leaq&lt;/code&gt; 指令得到这个结构体的指针，调用 &lt;code&gt;__tls_get_addr&lt;/code&gt;，就得到了这个 TLS 变量的地址。&lt;/p&gt;&lt;p&gt;接下来看生成的对象文件：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-23-1&#34;&gt;&lt;a id=&#34;__codelineno-23-1&#34; name=&#34;__codelineno-23-1&#34; href=&#34;#__codelineno-23-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;as&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-23-2&#34;&gt;&lt;a id=&#34;__codelineno-23-2&#34; name=&#34;__codelineno-23-2&#34; href=&#34;#__codelineno-23-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;/span&gt;&lt;span id=&#34;__span-23-3&#34;&gt;&lt;a id=&#34;__codelineno-23-3&#34; name=&#34;__codelineno-23-3&#34; href=&#34;#__codelineno-23-3&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.text:&lt;/span&gt;&lt;span id=&#34;__span-23-4&#34;&gt;&lt;a id=&#34;__codelineno-23-4&#34; name=&#34;__codelineno-23-4&#34; href=&#34;#__codelineno-23-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-5&#34;&gt;&lt;a id=&#34;__codelineno-23-5&#34; name=&#34;__codelineno-23-5&#34; href=&#34;#__codelineno-23-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-23-6&#34;&gt;&lt;a id=&#34;__codelineno-23-6&#34; name=&#34;__codelineno-23-6&#34; href=&#34;#__codelineno-23-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-23-7&#34;&gt;&lt;a id=&#34;__codelineno-23-7&#34; name=&#34;__codelineno-23-7&#34; href=&#34;#__codelineno-23-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# c &amp;lt;read_tls_data1+0xc&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-8&#34;&gt;&lt;a id=&#34;__codelineno-23-8&#34; name=&#34;__codelineno-23-8&#34; href=&#34;#__codelineno-23-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-9&#34;&gt;&lt;a id=&#34;__codelineno-23-9&#34; name=&#34;__codelineno-23-9&#34; href=&#34;#__codelineno-23-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TLSGD&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1-0x4&lt;/span&gt;&lt;span id=&#34;__span-23-10&#34;&gt;&lt;a id=&#34;__codelineno-23-10&#34; name=&#34;__codelineno-23-10&#34; href=&#34;#__codelineno-23-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rex.W&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1+0x14&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-23-11&#34;&gt;&lt;a id=&#34;__codelineno-23-11&#34; name=&#34;__codelineno-23-11&#34; href=&#34;#__codelineno-23-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-12&#34;&gt;&lt;a id=&#34;__codelineno-23-12&#34; name=&#34;__codelineno-23-12&#34; href=&#34;#__codelineno-23-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_PLT32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr-0x4&lt;/span&gt;&lt;span id=&#34;__span-23-13&#34;&gt;&lt;a id=&#34;__codelineno-23-13&#34; name=&#34;__codelineno-23-13&#34; href=&#34;#__codelineno-23-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-23-14&#34;&gt;&lt;a id=&#34;__codelineno-23-14&#34; name=&#34;__codelineno-23-14&#34; href=&#34;#__codelineno-23-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-23-15&#34;&gt;&lt;a id=&#34;__codelineno-23-15&#34; name=&#34;__codelineno-23-15&#34; href=&#34;#__codelineno-23-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-23-16&#34;&gt;&lt;a id=&#34;__codelineno-23-16&#34; name=&#34;__codelineno-23-16&#34; href=&#34;#__codelineno-23-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-17&#34;&gt;&lt;a id=&#34;__codelineno-23-17&#34; name=&#34;__codelineno-23-17&#34; href=&#34;#__codelineno-23-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-18&#34;&gt;&lt;a id=&#34;__codelineno-23-18&#34; name=&#34;__codelineno-23-18&#34; href=&#34;#__codelineno-23-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000000020&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-23-19&#34;&gt;&lt;a id=&#34;__codelineno-23-19&#34; name=&#34;__codelineno-23-19&#34; href=&#34;#__codelineno-23-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-23-20&#34;&gt;&lt;a id=&#34;__codelineno-23-20&#34; name=&#34;__codelineno-23-20&#34; href=&#34;#__codelineno-23-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 2c &amp;lt;read_tls_data2+0xc&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-21&#34;&gt;&lt;a id=&#34;__codelineno-23-21&#34; name=&#34;__codelineno-23-21&#34; href=&#34;#__codelineno-23-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-22&#34;&gt;&lt;a id=&#34;__codelineno-23-22&#34; name=&#34;__codelineno-23-22&#34; href=&#34;#__codelineno-23-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_TLSGD&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2-0x4&lt;/span&gt;&lt;span id=&#34;__span-23-23&#34;&gt;&lt;a id=&#34;__codelineno-23-23&#34; name=&#34;__codelineno-23-23&#34; href=&#34;#__codelineno-23-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2c:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rex.W&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2+0x14&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-23-24&#34;&gt;&lt;a id=&#34;__codelineno-23-24&#34; name=&#34;__codelineno-23-24&#34; href=&#34;#__codelineno-23-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;33&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-25&#34;&gt;&lt;a id=&#34;__codelineno-23-25&#34; name=&#34;__codelineno-23-25&#34; href=&#34;#__codelineno-23-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_PLT32&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__tls_get_addr-0x4&lt;/span&gt;&lt;span id=&#34;__span-23-26&#34;&gt;&lt;a id=&#34;__codelineno-23-26&#34; name=&#34;__codelineno-23-26&#34; href=&#34;#__codelineno-23-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-23-27&#34;&gt;&lt;a id=&#34;__codelineno-23-27&#34; name=&#34;__codelineno-23-27&#34; href=&#34;#__codelineno-23-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;36&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-23-28&#34;&gt;&lt;a id=&#34;__codelineno-23-28&#34; name=&#34;__codelineno-23-28&#34; href=&#34;#__codelineno-23-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;基本符合预期，通过 &lt;code&gt;R_X86_64_TLSGD&lt;/code&gt; relocation 来表示意图，通过反汇编也可以看到，多余的那些修饰符是没有用的，语义上就是一条 &lt;code&gt;leaq&lt;/code&gt; 加一条 &lt;code&gt;call&lt;/code&gt; 指令。和之前 local dynamic TLS model 类似，&lt;code&gt;__tls_get_addr&lt;/code&gt; 也是用已有的 PLT 机制来寻址。&lt;/p&gt;&lt;p&gt;最后来看生成的动态库：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-24-1&#34;&gt;&lt;a id=&#34;__codelineno-24-1&#34; name=&#34;__codelineno-24-1&#34; href=&#34;#__codelineno-24-1&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gcc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-shared&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls.o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libtls.so&lt;/span&gt;&lt;span id=&#34;__span-24-2&#34;&gt;&lt;a id=&#34;__codelineno-24-2&#34; name=&#34;__codelineno-24-2&#34; href=&#34;#__codelineno-24-2&#34;&gt;&lt;/a&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;objdump&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-R&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libtls.so&lt;/span&gt;&lt;span id=&#34;__span-24-3&#34;&gt;&lt;a id=&#34;__codelineno-24-3&#34; name=&#34;__codelineno-24-3&#34; href=&#34;#__codelineno-24-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-4&#34;&gt;&lt;a id=&#34;__codelineno-24-4&#34; name=&#34;__codelineno-24-4&#34; href=&#34;#__codelineno-24-4&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.text:&lt;/span&gt;&lt;span id=&#34;__span-24-5&#34;&gt;&lt;a id=&#34;__codelineno-24-5&#34; name=&#34;__codelineno-24-5&#34; href=&#34;#__codelineno-24-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-6&#34;&gt;&lt;a id=&#34;__codelineno-24-6&#34; name=&#34;__codelineno-24-6&#34; href=&#34;#__codelineno-24-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001110&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data1&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-24-7&#34;&gt;&lt;a id=&#34;__codelineno-24-7&#34; name=&#34;__codelineno-24-7&#34; href=&#34;#__codelineno-24-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1110&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-24-8&#34;&gt;&lt;a id=&#34;__codelineno-24-8&#34; name=&#34;__codelineno-24-8&#34; href=&#34;#__codelineno-24-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1114&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;b4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2eb4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fd0 &amp;lt;tls_data1@@Base+0x3fcc&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-9&#34;&gt;&lt;a id=&#34;__codelineno-24-9&#34; name=&#34;__codelineno-24-9&#34; href=&#34;#__codelineno-24-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;111b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-10&#34;&gt;&lt;a id=&#34;__codelineno-24-10&#34; name=&#34;__codelineno-24-10&#34; href=&#34;#__codelineno-24-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;111c:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rex.W&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1030&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;__tls_get_addr@plt&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-24-11&#34;&gt;&lt;a id=&#34;__codelineno-24-11&#34; name=&#34;__codelineno-24-11&#34; href=&#34;#__codelineno-24-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1123&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;/span&gt;&lt;span id=&#34;__span-24-12&#34;&gt;&lt;a id=&#34;__codelineno-24-12&#34; name=&#34;__codelineno-24-12&#34; href=&#34;#__codelineno-24-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1124&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-24-13&#34;&gt;&lt;a id=&#34;__codelineno-24-13&#34; name=&#34;__codelineno-24-13&#34; href=&#34;#__codelineno-24-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1126&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-24-14&#34;&gt;&lt;a id=&#34;__codelineno-24-14&#34; name=&#34;__codelineno-24-14&#34; href=&#34;#__codelineno-24-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;112a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-24-15&#34;&gt;&lt;a id=&#34;__codelineno-24-15&#34; name=&#34;__codelineno-24-15&#34; href=&#34;#__codelineno-24-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;112b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;nopl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x0&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax,%rax,1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-16&#34;&gt;&lt;a id=&#34;__codelineno-24-16&#34; name=&#34;__codelineno-24-16&#34; href=&#34;#__codelineno-24-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-17&#34;&gt;&lt;a id=&#34;__codelineno-24-17&#34; name=&#34;__codelineno-24-17&#34; href=&#34;#__codelineno-24-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;m&#34;&gt;0000000000001130&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;read_tls_data2&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-24-18&#34;&gt;&lt;a id=&#34;__codelineno-24-18&#34; name=&#34;__codelineno-24-18&#34; href=&#34;#__codelineno-24-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1130&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-24-19&#34;&gt;&lt;a id=&#34;__codelineno-24-19&#34; name=&#34;__codelineno-24-19&#34; href=&#34;#__codelineno-24-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1134&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;74&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;2e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;0x2e74&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rip&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%rdi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 3fb0 &amp;lt;tls_data2@@Base+0x3fb0&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-20&#34;&gt;&lt;a id=&#34;__codelineno-24-20&#34; name=&#34;__codelineno-24-20&#34; href=&#34;#__codelineno-24-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;113b:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-21&#34;&gt;&lt;a id=&#34;__codelineno-24-21&#34; name=&#34;__codelineno-24-21&#34; href=&#34;#__codelineno-24-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;113c:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;66&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;fe&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data16&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rex.W&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;call&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1030&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;__tls_get_addr@plt&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-24-22&#34;&gt;&lt;a id=&#34;__codelineno-24-22&#34; name=&#34;__codelineno-24-22&#34; href=&#34;#__codelineno-24-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1143&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ff&lt;/span&gt;&lt;span id=&#34;__span-24-23&#34;&gt;&lt;a id=&#34;__codelineno-24-23&#34; name=&#34;__codelineno-24-23&#34; href=&#34;#__codelineno-24-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1144&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;8b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mov&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;%rax&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,%eax&lt;/span&gt;&lt;span id=&#34;__span-24-24&#34;&gt;&lt;a id=&#34;__codelineno-24-24&#34; name=&#34;__codelineno-24-24&#34; href=&#34;#__codelineno-24-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1146&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;x8,%rsp&lt;/span&gt;&lt;span id=&#34;__span-24-25&#34;&gt;&lt;a id=&#34;__codelineno-24-25&#34; name=&#34;__codelineno-24-25&#34; href=&#34;#__codelineno-24-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;114a:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;c3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ret&lt;/span&gt;&lt;span id=&#34;__span-24-26&#34;&gt;&lt;a id=&#34;__codelineno-24-26&#34; name=&#34;__codelineno-24-26&#34; href=&#34;#__codelineno-24-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-27&#34;&gt;&lt;a id=&#34;__codelineno-24-27&#34; name=&#34;__codelineno-24-27&#34; href=&#34;#__codelineno-24-27&#34;&gt;&lt;/a&gt;Disassembly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;section&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.got:&lt;/span&gt;&lt;span id=&#34;__span-24-28&#34;&gt;&lt;a id=&#34;__codelineno-24-28&#34; name=&#34;__codelineno-24-28&#34; href=&#34;#__codelineno-24-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-29&#34;&gt;&lt;a id=&#34;__codelineno-24-29&#34; name=&#34;__codelineno-24-29&#34; href=&#34;#__codelineno-24-29&#34;&gt;&lt;/a&gt;0000000000003fa8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;.got&amp;gt;:&lt;/span&gt;&lt;span id=&#34;__span-24-30&#34;&gt;&lt;a id=&#34;__codelineno-24-30&#34; name=&#34;__codelineno-24-30&#34; href=&#34;#__codelineno-24-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;/span&gt;&lt;span id=&#34;__span-24-31&#34;&gt;&lt;a id=&#34;__codelineno-24-31&#34; name=&#34;__codelineno-24-31&#34; href=&#34;#__codelineno-24-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fb0:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPMOD64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@@Base&lt;/span&gt;&lt;span id=&#34;__span-24-32&#34;&gt;&lt;a id=&#34;__codelineno-24-32&#34; name=&#34;__codelineno-24-32&#34; href=&#34;#__codelineno-24-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fb8:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPOFF64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data2@@Base&lt;/span&gt;&lt;span id=&#34;__span-24-33&#34;&gt;&lt;a id=&#34;__codelineno-24-33&#34; name=&#34;__codelineno-24-33&#34; href=&#34;#__codelineno-24-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fd0:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPMOD64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@@Base&lt;/span&gt;&lt;span id=&#34;__span-24-34&#34;&gt;&lt;a id=&#34;__codelineno-24-34&#34; name=&#34;__codelineno-24-34&#34; href=&#34;#__codelineno-24-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;3fd8:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;R_X86_64_DTPOFF64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tls_data1@@Base&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;观察 &lt;code&gt;.got&lt;/code&gt;，可以看到对于每个 TLS 变量，都生成了两个 entry：&lt;code&gt;tls_data2&lt;/code&gt; 占用了 &lt;code&gt;0x3fb0&lt;/code&gt; 和 &lt;code&gt;0x3fb8&lt;/code&gt; 两个 entry，第一个对应动态库的下标（MOD 表示 Module），第二个对应偏移（OFF 表示 Offset）；&lt;code&gt;tls_data1&lt;/code&gt; 也是类似的，占用了 &lt;code&gt;0x3fd0&lt;/code&gt; 和 &lt;code&gt;0x3fd8&lt;/code&gt;。当动态链接器在 &lt;code&gt;.got&lt;/code&gt; 表中准备好 &lt;code&gt;tls_index&lt;/code&gt; 结构体后，在访问 TLS 变量时，只需要 &lt;code&gt;lea&lt;/code&gt; + &lt;code&gt;call&lt;/code&gt; 就可以找到 TLS 变量的地址了。&lt;/p&gt;&lt;h2 id=&#34;四种-tls-model-的对比&#34;&gt;四种 TLS model 的对比&lt;a class=&#34;headerlink&#34; href=&#34;#四种-tls-model-的对比&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;接下来进行四种 TLS model 的对比：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;local exec TLS model: 用于可执行程序访问自身的 TLS 变量，由于可执行程序的 TLS 空间总是紧挨着 &lt;code&gt;%fs&lt;/code&gt;，所以自身的 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移在链接时已知，可以直接计算出来，运行时开销最小&lt;/li&gt;&lt;li&gt;initial exec TLS model: 用于在程序启动时由动态链接器自动加载的动态库访问自身的 TLS 变量，由于它的 TLS 空间相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移在加载后就是固定的，所以由动态链接器计算出各个 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移，写到 &lt;code&gt;.got&lt;/code&gt; 表中，运行时只需要读取 &lt;code&gt;.got&lt;/code&gt; 表中记录的 offset，和 &lt;code&gt;%fs&lt;/code&gt; 做加法就得到了变量的地址&lt;/li&gt;&lt;li&gt;local dynamic TLS model: 用于可能被 dlopen 的动态库访问自身的 TLS 变量，由于它的 TLS 空间相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移是不确定的，所以需要用 &lt;code&gt;__tls_get_addr&lt;/code&gt; 调用来获取自身的 TLS 空间的起始地址；为了给 &lt;code&gt;__tls_get_addr&lt;/code&gt; 传递正确的参数，告诉这个函数自己的动态库编号是多少，在 &lt;code&gt;.got&lt;/code&gt; 表中预留了一个 entry 让动态链接器把该动态库的编号写进去；那么运行时只需要读取 &lt;code&gt;.got&lt;/code&gt; 表中记录的动态库编号，调用 &lt;code&gt;__tls_get_addr&lt;/code&gt;，再和链接时已知的 offset 做加法就得到了变量的地址&lt;/li&gt;&lt;li&gt;global dynamic TLS model: 用于通用情况下，不知道 TLS 变量属于哪个动态库，也不知道 TLS 变量在 TLS 空间内的偏移是多少，所以需要动态链接器去查询 TLS 变量属于哪个动态库，放在哪个偏移上，并且动态链接器要把这两个信息写到 &lt;code&gt;.got&lt;/code&gt; 表中；那么运行时就要用 &lt;code&gt;__tls_get_addr&lt;/code&gt; 调用来根据 &lt;code&gt;.got&lt;/code&gt; 表中记录的动态库编号以及偏移来找到变量的地址&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;下面是一个对比表格：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;Instructions&lt;/th&gt;&lt;th&gt;GOT&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;local exec&lt;/td&gt;&lt;td&gt;movq&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;initial exec&lt;/td&gt;&lt;td&gt;movq + addq&lt;/td&gt;&lt;td&gt;offset&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;local dynamic&lt;/td&gt;&lt;td&gt;leaq + call + leaq&lt;/td&gt;&lt;td&gt;self module index&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;global dynamic&lt;/td&gt;&lt;td&gt;leaq + call&lt;/td&gt;&lt;td&gt;module index + offset&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;特别地，local dynamic TLS model 的 &lt;code&gt;leaq + call&lt;/code&gt; 是可以复用的，所以整体来说，还是越通用的 TLS model，运行时的开销越大。&lt;/p&gt;&lt;h2 id=&#34;实际编程中的-tls-model&#34;&gt;实际编程中的 TLS model&lt;a class=&#34;headerlink&#34; href=&#34;#实际编程中的-tls-model&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;看到这里，你可能会疑惑：在编程的时候，大多数时候并没有去管 TLS model 的事情，也就是说在编译的时候并没有指定，那么这个时候会采用什么 TLS model 呢？&lt;/p&gt;&lt;p&gt;答案是取决于编译器和链接器会根据所能了解到的情况，选择一个最优的实现方法。在前面的例子中，都是直接定义了一个全局的 &lt;code&gt;__thread&lt;/code&gt; 变量然后去访问它，但如果它是 &lt;code&gt;static&lt;/code&gt; 的，会发生什么呢？如果编译的时候，没有开 &lt;code&gt;-fPIC&lt;/code&gt;，也就是说生成的代码不会出现在动态库中，又会发生什么呢？&lt;/p&gt;&lt;p&gt;首先来看从编译器到汇编的这一个阶段，会采用什么样的 TLS model：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果在编译源码的时候，没有开 &lt;code&gt;-fPIC&lt;/code&gt;，那么生成的代码只出现在可执行程序中，这个时候编译器会直接使用 local exec TLS model，即生成 &lt;code&gt;movl %fs:symbol@tpoff, %rax&lt;/code&gt; 的指令&lt;/li&gt;&lt;li&gt;如果在编译源码的时候，开了 &lt;code&gt;-fPIC&lt;/code&gt;，那么生成的代码既可能出现在可执行程序中，也可能出现在动态库中，这时会首先默认为 global dynamic TLS model，即生成 &lt;code&gt;data16 leaq symbol@tlsgd(%rip), %rdi; .value 0x6666; rex64; call __tls_get_addr@PLT; movl (%rax), %eax&lt;/code&gt; 指令&lt;/li&gt;&lt;li&gt;但如果 &lt;code&gt;__thread&lt;/code&gt; 变量设置了 &lt;code&gt;static&lt;/code&gt;，即使打开了 &lt;code&gt;-fPIC&lt;/code&gt;，也保证了这个 TLS 变量一定是访问自己 TLS 空间中的，不会访问别人的，那么编译器会自动选择 local dynamic TLS model，即生成 &lt;code&gt;leaq symbol@tlsld(%rip), %rdi; call__tls_get_addr@PLT; movl %symbol@dtpoff(%rax), %eax&lt;/code&gt; 指令&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;接下来观察链接的时候，会发生什么事情：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;如果编译源码的时候，打开了 &lt;code&gt;-fPIC&lt;/code&gt; 且没有用 &lt;code&gt;static&lt;/code&gt;，如前所述，编译器会使用 global dynamic TLS model；但如果这个对象文件最后被链接到了可执行程序当中，那么链接器知道这个时候用 local exec TLS model 是性能更好的，那么它会对指令进行改写，此时之前预留的无用的指令前缀 &lt;code&gt;data 16; .value 0x6666; rex64&lt;/code&gt; 起了作用，保证改写前后的指令序列的长度不变：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-25-1&#34;&gt;&lt;a id=&#34;__codelineno-25-1&#34; name=&#34;__codelineno-25-1&#34; href=&#34;#__codelineno-25-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# before linker optimizations: global dynamic&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-2&#34;&gt;&lt;a id=&#34;__codelineno-25-2&#34; name=&#34;__codelineno-25-2&#34; href=&#34;#__codelineno-25-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;na&#34;&gt;data16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;leaq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@tlsgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-3&#34;&gt;&lt;a id=&#34;__codelineno-25-3&#34; name=&#34;__codelineno-25-3&#34; href=&#34;#__codelineno-25-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;na&#34;&gt;.value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x6666&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-4&#34;&gt;&lt;a id=&#34;__codelineno-25-4&#34; name=&#34;__codelineno-25-4&#34; href=&#34;#__codelineno-25-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;rex64&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-5&#34;&gt;&lt;a id=&#34;__codelineno-25-5&#34; name=&#34;__codelineno-25-5&#34; href=&#34;#__codelineno-25-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-6&#34;&gt;&lt;a id=&#34;__codelineno-25-6&#34; name=&#34;__codelineno-25-6&#34; href=&#34;#__codelineno-25-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-7&#34;&gt;&lt;a id=&#34;__codelineno-25-7&#34; name=&#34;__codelineno-25-7&#34; href=&#34;#__codelineno-25-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# after linker optimizations: local exec&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-8&#34;&gt;&lt;a id=&#34;__codelineno-25-8&#34; name=&#34;__codelineno-25-8&#34; href=&#34;#__codelineno-25-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# the symbol@tpoff(%rax) relocation is resolved by the linker immediately&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-9&#34;&gt;&lt;a id=&#34;__codelineno-25-9&#34; name=&#34;__codelineno-25-9&#34; href=&#34;#__codelineno-25-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-10&#34;&gt;&lt;a id=&#34;__codelineno-25-10&#34; name=&#34;__codelineno-25-10&#34; href=&#34;#__codelineno-25-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;leaq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@tpoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;类似地，如果编译源码的时候，打开了 &lt;code&gt;-fPIC&lt;/code&gt; 且用了 &lt;code&gt;static&lt;/code&gt;，如前所述，编译器会使用 local dynamic TLS model；但如果这个对象文件最后被链接到了可执行程序当中，那么链接器知道这个时候用 local exec TLS model 是性能更好的，那么它会对指令进行改写，为了保证改写前后的指令序列的长度不变，这次是在生成的汇编里加入无用的指令前缀：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-26-1&#34;&gt;&lt;a id=&#34;__codelineno-26-1&#34; name=&#34;__codelineno-26-1&#34; href=&#34;#__codelineno-26-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# before linker optimizations: local dynamic&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-2&#34;&gt;&lt;a id=&#34;__codelineno-26-2&#34; name=&#34;__codelineno-26-2&#34; href=&#34;#__codelineno-26-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;leaq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@tlsld&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-3&#34;&gt;&lt;a id=&#34;__codelineno-26-3&#34; name=&#34;__codelineno-26-3&#34; href=&#34;#__codelineno-26-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-4&#34;&gt;&lt;a id=&#34;__codelineno-26-4&#34; name=&#34;__codelineno-26-4&#34; href=&#34;#__codelineno-26-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@dtpoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%eax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-5&#34;&gt;&lt;a id=&#34;__codelineno-26-5&#34; name=&#34;__codelineno-26-5&#34; href=&#34;#__codelineno-26-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-6&#34;&gt;&lt;a id=&#34;__codelineno-26-6&#34; name=&#34;__codelineno-26-6&#34; href=&#34;#__codelineno-26-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# after linker optimizations: local exec&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-7&#34;&gt;&lt;a id=&#34;__codelineno-26-7&#34; name=&#34;__codelineno-26-7&#34; href=&#34;#__codelineno-26-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# the symbol@tpoff(%rax) relocation is resolved by the linker immediately&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-8&#34;&gt;&lt;a id=&#34;__codelineno-26-8&#34; name=&#34;__codelineno-26-8&#34; href=&#34;#__codelineno-26-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;na&#34;&gt;.word&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x6666&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-9&#34;&gt;&lt;a id=&#34;__codelineno-26-9&#34; name=&#34;__codelineno-26-9&#34; href=&#34;#__codelineno-26-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;na&#34;&gt;.byte&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x66&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-10&#34;&gt;&lt;a id=&#34;__codelineno-26-10&#34; name=&#34;__codelineno-26-10&#34; href=&#34;#__codelineno-26-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-11&#34;&gt;&lt;a id=&#34;__codelineno-26-11&#34; name=&#34;__codelineno-26-11&#34; href=&#34;#__codelineno-26-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@tpoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%eax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果编译源码的时候，打开了 &lt;code&gt;-fPIC&lt;/code&gt; 且用了 &lt;code&gt;extern&lt;/code&gt; 来标记 TLS 变量，由于编译器不知道这个 TLS 变量属于谁，所以编译器会使用 global dynamic TLS model；但如果这个对象文件最后被链接到了可执行程序当中，并且编译器发现这个 TLS 变量属于一个动态库，这意味着这个 TLS 变量在程序启动时会随着动态库加载而变得可用，适用 initial exec TLS model，于是链接器也会进行改写：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-27-1&#34;&gt;&lt;a id=&#34;__codelineno-27-1&#34; name=&#34;__codelineno-27-1&#34; href=&#34;#__codelineno-27-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# before linker optimizations: global dynamic&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-2&#34;&gt;&lt;a id=&#34;__codelineno-27-2&#34; name=&#34;__codelineno-27-2&#34; href=&#34;#__codelineno-27-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;na&#34;&gt;data16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;leaq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@tlsgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-3&#34;&gt;&lt;a id=&#34;__codelineno-27-3&#34; name=&#34;__codelineno-27-3&#34; href=&#34;#__codelineno-27-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;na&#34;&gt;.value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x6666&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-4&#34;&gt;&lt;a id=&#34;__codelineno-27-4&#34; name=&#34;__codelineno-27-4&#34; href=&#34;#__codelineno-27-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;rex64&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-5&#34;&gt;&lt;a id=&#34;__codelineno-27-5&#34; name=&#34;__codelineno-27-5&#34; href=&#34;#__codelineno-27-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr@PLT&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-6&#34;&gt;&lt;a id=&#34;__codelineno-27-6&#34; name=&#34;__codelineno-27-6&#34; href=&#34;#__codelineno-27-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-7&#34;&gt;&lt;a id=&#34;__codelineno-27-7&#34; name=&#34;__codelineno-27-7&#34; href=&#34;#__codelineno-27-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# after linker optimizations: initial exec&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-8&#34;&gt;&lt;a id=&#34;__codelineno-27-8&#34; name=&#34;__codelineno-27-8&#34; href=&#34;#__codelineno-27-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-9&#34;&gt;&lt;a id=&#34;__codelineno-27-9&#34; name=&#34;__codelineno-27-9&#34; href=&#34;#__codelineno-27-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;addq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@gottpoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果编译源码的时候，没有打开 &lt;code&gt;-fPIC&lt;/code&gt; 且用了 &lt;code&gt;extern&lt;/code&gt; 来标记 TLS 变量，那么编译器知道，这个对象文件最后只能出现在可执行程序中，那么这个 TLS 变量要么来自于可执行程序自己，要么来自于程序启动时加载的动态库，所以编译器会使用 initial exec TLS model；但如果这个对象文件最后被链接到了可执行程序当中，并且编译器发现这个 TLS 变量属于可执行程序自己，适用 local exec TLS model，于是链接器也会进行改写：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-28-1&#34;&gt;&lt;a id=&#34;__codelineno-28-1&#34; name=&#34;__codelineno-28-1&#34; href=&#34;#__codelineno-28-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# before linker optimizations: initial exec&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-2&#34;&gt;&lt;a id=&#34;__codelineno-28-2&#34; name=&#34;__codelineno-28-2&#34; href=&#34;#__codelineno-28-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-3&#34;&gt;&lt;a id=&#34;__codelineno-28-3&#34; name=&#34;__codelineno-28-3&#34; href=&#34;#__codelineno-28-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;addq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@gottpoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-4&#34;&gt;&lt;a id=&#34;__codelineno-28-4&#34; name=&#34;__codelineno-28-4&#34; href=&#34;#__codelineno-28-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-5&#34;&gt;&lt;a id=&#34;__codelineno-28-5&#34; name=&#34;__codelineno-28-5&#34; href=&#34;#__codelineno-28-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# after linker optimizations: local exec&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-6&#34;&gt;&lt;a id=&#34;__codelineno-28-6&#34; name=&#34;__codelineno-28-6&#34; href=&#34;#__codelineno-28-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# the symbol@tpoff(%rax) relocation is resolved by the linker immediately&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-7&#34;&gt;&lt;a id=&#34;__codelineno-28-7&#34; name=&#34;__codelineno-28-7&#34; href=&#34;#__codelineno-28-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-8&#34;&gt;&lt;a id=&#34;__codelineno-28-8&#34; name=&#34;__codelineno-28-8&#34; href=&#34;#__codelineno-28-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;leaq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;symbol@tpoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;可见通过两阶段的处理，在编译器和链接器的协同下，尝试优化到一个开销更小的 TLS model，转化的几种情况如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;global dynamic -&amp;gt; initial exec：编译的时候开了 -fPIC 和 &lt;code&gt;extern&lt;/code&gt;，然后链接到可执行程序内，TLS 变量来自动态库&lt;/li&gt;&lt;li&gt;global dynamic -&amp;gt; local exec：编译的时候开了 -fPIC，然后链接到可执行程序内，TLS 变量来自程序自己&lt;/li&gt;&lt;li&gt;local dynamic -&amp;gt; local exec：编译的时候开了 -fPIC 和 &lt;code&gt;-static&lt;/code&gt;，然后链接到可执行程序内，TLS 变量来自程序自己&lt;/li&gt;&lt;li&gt;initial exec -&amp;gt; local exec：编译的时候没开 -fPIC，然后链接到可执行程序内，TLS 变量来自程序自己&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;tlsdesc&#34;&gt;TLSDESC&lt;a class=&#34;headerlink&#34; href=&#34;#tlsdesc&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;前面提到，在 global dynamic 和 local dynamic 两种 TLS model 下，要访问 TLS 变量的时候，需要调用 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数，这是比较慢的。为了优化它，让人想到了 PLT 机制：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;初始情况下，PLT 会生成一个 stub，从 &lt;code&gt;.got&lt;/code&gt; 读取一个函数指针并跳转，这个函数指针初始情况下是执行了 &lt;code&gt;stub&lt;/code&gt; 的下一条指令&lt;/li&gt;&lt;li&gt;对于第一次执行这个 stub，它会把这个函数的编号 push 到栈上，然后调用动态链接器提供的 &lt;code&gt;_dl_runtime_resolve&lt;/code&gt; 函数来寻找这个函数的实际地址；此时 &lt;code&gt;_dl_runtime_resolve&lt;/code&gt; 会把找到的函数地址写回到 &lt;code&gt;.got&lt;/code&gt; 的函数指针&lt;/li&gt;&lt;li&gt;此后再次执行 stub 的时候，就会从 &lt;code&gt;.got&lt;/code&gt; 读取计算好的的函数指针，直接跳转到实际的函数地址&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由此可以类比得到一个针对 TLS 的类似机制，称为 TLSDESC：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;TLSDESC 占用 16 字节空间，前面 8 字节是一个函数指针，后面 8 字节用来保存 offset，保存在 &lt;code&gt;.got&lt;/code&gt; 表中&lt;/li&gt;&lt;li&gt;把原来 local/global dynamic TLS model 对 &lt;code&gt;__tls_get_addr&lt;/code&gt; 的调用，改成调用 TLSDESC 中的函数指针，调用时 &lt;code&gt;%rax&lt;/code&gt; 寄存器指向了 TLSDESC 的地址，它的返回结果是 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移，后续指令根据这个偏移计算出实际的地址&lt;/li&gt;&lt;li&gt;动态链接器在加载的时候，它会去判断目标 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移是否是常量：对于可执行程序以及随着程序启动而自动加载的动态库，它们的 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移是常量&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果目标 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移是常量，则把这个常量写入到 &lt;code&gt;.got&lt;/code&gt; 表中 TLSDESC 变量的 offset 的位置，然后把函数指针改写成 &lt;code&gt;_dl_tlsdesc_return&lt;/code&gt;，它是一个很简单的实现，因为在调用这个函数时，&lt;code&gt;%rax&lt;/code&gt; 寄存器指向了 TLSDESC 的地址，所以直接从 &lt;code&gt;%rax+8&lt;/code&gt; 地址把 offset 读出来然后返回就可以：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-29-1&#34;&gt;&lt;a id=&#34;__codelineno-29-1&#34; name=&#34;__codelineno-29-1&#34; href=&#34;#__codelineno-29-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;_dl_tlsdesc_return:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-29-2&#34;&gt;&lt;a id=&#34;__codelineno-29-2&#34; name=&#34;__codelineno-29-2&#34; href=&#34;#__codelineno-29-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-29-3&#34;&gt;&lt;a id=&#34;__codelineno-29-3&#34; name=&#34;__codelineno-29-3&#34; href=&#34;#__codelineno-29-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果目标 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移不是常量，则把函数指针改写成 &lt;code&gt;_dl_tlsdesc_dynamic&lt;/code&gt; 函数，再走和之前的 &lt;code&gt;__tls_get_addr&lt;/code&gt; 类似的逻辑，完成剩下的查找；由于返回值是 TLS 变量相对 &lt;code&gt;%fs&lt;/code&gt; 的偏移，所以返回之前还要减去 &lt;code&gt;%fs&lt;/code&gt; 的地址：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-30-1&#34;&gt;&lt;a id=&#34;__codelineno-30-1&#34; name=&#34;__codelineno-30-1&#34; href=&#34;#__codelineno-30-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* %rax points to the TLS descriptor, such that 0(%rax) points to&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-2&#34;&gt;&lt;a id=&#34;__codelineno-30-2&#34; name=&#34;__codelineno-30-2&#34; href=&#34;#__codelineno-30-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; _dl_tlsdesc_dynamic itself, and 8(%rax) points to a struct&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-3&#34;&gt;&lt;a id=&#34;__codelineno-30-3&#34; name=&#34;__codelineno-30-3&#34; href=&#34;#__codelineno-30-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; tlsdesc_dynamic_arg object. It must return in %rax the offset&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-4&#34;&gt;&lt;a id=&#34;__codelineno-30-4&#34; name=&#34;__codelineno-30-4&#34; href=&#34;#__codelineno-30-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; between the thread pointer and the object denoted by the&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-5&#34;&gt;&lt;a id=&#34;__codelineno-30-5&#34; name=&#34;__codelineno-30-5&#34; href=&#34;#__codelineno-30-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; argument, without clobbering any registers.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-6&#34;&gt;&lt;a id=&#34;__codelineno-30-6&#34; name=&#34;__codelineno-30-6&#34; href=&#34;#__codelineno-30-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-7&#34;&gt;&lt;a id=&#34;__codelineno-30-7&#34; name=&#34;__codelineno-30-7&#34; href=&#34;#__codelineno-30-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; The assembly code that follows is a rendition of the following&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-8&#34;&gt;&lt;a id=&#34;__codelineno-30-8&#34; name=&#34;__codelineno-30-8&#34; href=&#34;#__codelineno-30-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; C code, hand-optimized a little bit.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-9&#34;&gt;&lt;a id=&#34;__codelineno-30-9&#34; name=&#34;__codelineno-30-9&#34; href=&#34;#__codelineno-30-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-10&#34;&gt;&lt;a id=&#34;__codelineno-30-10&#34; name=&#34;__codelineno-30-10&#34; href=&#34;#__codelineno-30-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;ptrdiff_t&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-11&#34;&gt;&lt;a id=&#34;__codelineno-30-11&#34; name=&#34;__codelineno-30-11&#34; href=&#34;#__codelineno-30-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;_dl_tlsdesc_dynamic (register struct tlsdesc *tdp asm (&amp;quot;%rax&amp;quot;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-12&#34;&gt;&lt;a id=&#34;__codelineno-30-12&#34; name=&#34;__codelineno-30-12&#34; href=&#34;#__codelineno-30-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-13&#34;&gt;&lt;a id=&#34;__codelineno-30-13&#34; name=&#34;__codelineno-30-13&#34; href=&#34;#__codelineno-30-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;struct tlsdesc_dynamic_arg *td = tdp-&amp;gt;arg;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-14&#34;&gt;&lt;a id=&#34;__codelineno-30-14&#34; name=&#34;__codelineno-30-14&#34; href=&#34;#__codelineno-30-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;dtv_t *dtv = *(dtv_t **)((char *)__thread_pointer + DTV_OFFSET);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-15&#34;&gt;&lt;a id=&#34;__codelineno-30-15&#34; name=&#34;__codelineno-30-15&#34; href=&#34;#__codelineno-30-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;if (__builtin_expect (td-&amp;gt;gen_count &amp;lt;= dtv[0].counter&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-16&#34;&gt;&lt;a id=&#34;__codelineno-30-16&#34; name=&#34;__codelineno-30-16&#34; href=&#34;#__codelineno-30-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; &amp;amp;&amp;amp; (dtv[td-&amp;gt;tlsinfo.ti_module].pointer.val&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-17&#34;&gt;&lt;a id=&#34;__codelineno-30-17&#34; name=&#34;__codelineno-30-17&#34; href=&#34;#__codelineno-30-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; != TLS_DTV_UNALLOCATED),&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-18&#34;&gt;&lt;a id=&#34;__codelineno-30-18&#34; name=&#34;__codelineno-30-18&#34; href=&#34;#__codelineno-30-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; 1))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-19&#34;&gt;&lt;a id=&#34;__codelineno-30-19&#34; name=&#34;__codelineno-30-19&#34; href=&#34;#__codelineno-30-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; return dtv[td-&amp;gt;tlsinfo.ti_module].pointer.val + td-&amp;gt;tlsinfo.ti_offset&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-20&#34;&gt;&lt;a id=&#34;__codelineno-30-20&#34; name=&#34;__codelineno-30-20&#34; href=&#34;#__codelineno-30-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; - __thread_pointer;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-21&#34;&gt;&lt;a id=&#34;__codelineno-30-21&#34; name=&#34;__codelineno-30-21&#34; href=&#34;#__codelineno-30-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-22&#34;&gt;&lt;a id=&#34;__codelineno-30-22&#34; name=&#34;__codelineno-30-22&#34; href=&#34;#__codelineno-30-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;return __tls_get_addr_internal (&amp;amp;td-&amp;gt;tlsinfo) - __thread_pointer;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-23&#34;&gt;&lt;a id=&#34;__codelineno-30-23&#34; name=&#34;__codelineno-30-23&#34; href=&#34;#__codelineno-30-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-24&#34;&gt;&lt;a id=&#34;__codelineno-30-24&#34; name=&#34;__codelineno-30-24&#34; href=&#34;#__codelineno-30-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;它利用的也是在内存中保存函数指针，通过运行时替换函数指针的方式，实现 slow path 到 fast path 的动态替换。&lt;/p&gt;&lt;h2 id=&#34;dtv-维护&#34;&gt;dtv 维护&lt;a class=&#34;headerlink&#34; href=&#34;#dtv-维护&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最后再来深入分析一下 dtv 的维护方式。前面提到，dtv 的指针是保存在 &lt;code&gt;struct pthread&lt;/code&gt; 内的，而 &lt;code&gt;struct pthread&lt;/code&gt; 又是保存在 &lt;code&gt;%fs&lt;/code&gt; 寄存器指向的位置：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-31-1&#34;&gt;&lt;a id=&#34;__codelineno-31-1&#34; name=&#34;__codelineno-31-1&#34; href=&#34;#__codelineno-31-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;pthread&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-2&#34;&gt;&lt;a id=&#34;__codelineno-31-2&#34; name=&#34;__codelineno-31-2&#34; href=&#34;#__codelineno-31-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-3&#34;&gt;&lt;a id=&#34;__codelineno-31-3&#34; name=&#34;__codelineno-31-3&#34; href=&#34;#__codelineno-31-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcbhead_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-4&#34;&gt;&lt;a id=&#34;__codelineno-31-4&#34; name=&#34;__codelineno-31-4&#34; href=&#34;#__codelineno-31-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-5&#34;&gt;&lt;a id=&#34;__codelineno-31-5&#34; name=&#34;__codelineno-31-5&#34; href=&#34;#__codelineno-31-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-6&#34;&gt;&lt;a id=&#34;__codelineno-31-6&#34; name=&#34;__codelineno-31-6&#34; href=&#34;#__codelineno-31-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-7&#34;&gt;&lt;a id=&#34;__codelineno-31-7&#34; name=&#34;__codelineno-31-7&#34; href=&#34;#__codelineno-31-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-8&#34;&gt;&lt;a id=&#34;__codelineno-31-8&#34; name=&#34;__codelineno-31-8&#34; href=&#34;#__codelineno-31-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-9&#34;&gt;&lt;a id=&#34;__codelineno-31-9&#34; name=&#34;__codelineno-31-9&#34; href=&#34;#__codelineno-31-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-10&#34;&gt;&lt;a id=&#34;__codelineno-31-10&#34; name=&#34;__codelineno-31-10&#34; href=&#34;#__codelineno-31-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-11&#34;&gt;&lt;a id=&#34;__codelineno-31-11&#34; name=&#34;__codelineno-31-11&#34; href=&#34;#__codelineno-31-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-12&#34;&gt;&lt;a id=&#34;__codelineno-31-12&#34; name=&#34;__codelineno-31-12&#34; href=&#34;#__codelineno-31-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcbhead_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以要访问 dtv 也很简单，直接从 &lt;code&gt;%fs&lt;/code&gt; 加它在 &lt;code&gt;struct pthread&lt;/code&gt; 结构体内的偏移即可。&lt;/p&gt;&lt;p&gt;前面提到，在调用 &lt;code&gt;__tls_get_addr&lt;/code&gt; 时，需要提供一个动态库的 ID 来查询得到这个动态库的 TLS 空间的起始地址，再加上在这个 TLS 空间内的偏移。而这个动态库的 ID，正好就是 dtv 数组的下标，所以 &lt;code&gt;__tls_get_addr&lt;/code&gt; 做的事情大概是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;找到 &lt;code&gt;dtv&lt;/code&gt; 的地址：&lt;code&gt;mov %fs:DTV_OFFSET, %RDX_LP&lt;/code&gt;&lt;/li&gt;&lt;li&gt;从 &lt;code&gt;__tls_get_addr&lt;/code&gt; 函数的参数里读取 &lt;code&gt;ti_module&lt;/code&gt; 字段：&lt;code&gt;mov TI_MODULE_OFFSET(%rdi), %RAX_LP&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;读取 &lt;code&gt;dtv[ti-&amp;gt;ti_module].val&lt;/code&gt;，也就是这个模块的 TLS 空间的起始地址：&lt;code&gt;salq $4, %rax; movq (%rdx, %rax), %rax&lt;/code&gt;，这里左移 4 位是因为 &lt;code&gt;dtv&lt;/code&gt; 数组的每个元素的类型是 &lt;code&gt;dtv_t&lt;/code&gt;，其定义如下：&lt;/p&gt;&lt;p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-32-1&#34;&gt;&lt;a id=&#34;__codelineno-32-1&#34; name=&#34;__codelineno-32-1&#34; href=&#34;#__codelineno-32-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-2&#34;&gt;&lt;a id=&#34;__codelineno-32-2&#34; name=&#34;__codelineno-32-2&#34; href=&#34;#__codelineno-32-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-3&#34;&gt;&lt;a id=&#34;__codelineno-32-3&#34; name=&#34;__codelineno-32-3&#34; href=&#34;#__codelineno-32-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Pointer to data, or TLS_DTV_UNALLOCATED. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-4&#34;&gt;&lt;a id=&#34;__codelineno-32-4&#34; name=&#34;__codelineno-32-4&#34; href=&#34;#__codelineno-32-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Unaligned pointer, for deallocation. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-5&#34;&gt;&lt;a id=&#34;__codelineno-32-5&#34; name=&#34;__codelineno-32-5&#34; href=&#34;#__codelineno-32-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-6&#34;&gt;&lt;a id=&#34;__codelineno-32-6&#34; name=&#34;__codelineno-32-6&#34; href=&#34;#__codelineno-32-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-7&#34;&gt;&lt;a id=&#34;__codelineno-32-7&#34; name=&#34;__codelineno-32-7&#34; href=&#34;#__codelineno-32-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* Type for the dtv. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-8&#34;&gt;&lt;a id=&#34;__codelineno-32-8&#34; name=&#34;__codelineno-32-8&#34; href=&#34;#__codelineno-32-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;union&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-9&#34;&gt;&lt;a id=&#34;__codelineno-32-9&#34; name=&#34;__codelineno-32-9&#34; href=&#34;#__codelineno-32-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-10&#34;&gt;&lt;a id=&#34;__codelineno-32-10&#34; name=&#34;__codelineno-32-10&#34; href=&#34;#__codelineno-32-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-11&#34;&gt;&lt;a id=&#34;__codelineno-32-11&#34; name=&#34;__codelineno-32-11&#34; href=&#34;#__codelineno-32-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-12&#34;&gt;&lt;a id=&#34;__codelineno-32-12&#34; name=&#34;__codelineno-32-12&#34; href=&#34;#__codelineno-32-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;4. 把起始地址加上偏移，然后返回：&lt;code&gt;add TI_OFFSET_OFFSET(%rdi), %RAX_LP; ret&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;但实际情况会比这个更复杂：dlopen 可能会动态引入新的动态库，此时 dtv 数组可能需要扩张；此外，如果一个动态库有 TLS 变量但是从来不用，也可以 lazy 分配它的 TLS 空间，只有在第一次访问的时候，才去分配。&lt;/p&gt;&lt;p&gt;首先来考虑第一个需求，处理 dlopen 导致 dtv 元素个数变化，它的实现方法是这样的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;dtv[0]&lt;/code&gt; 不用来保存 TLS 空间的信息，而是记录一个 counter，这个 counter 记录的是当前 dtv 的版本号（generation），另外在全局变量 &lt;code&gt;dl_tls_generation&lt;/code&gt; 中记录当前最新的版本号；当 dlopen 导致 dtv 结构发生变化时，更新 &lt;code&gt;dl_tls_generation&lt;/code&gt; 版本，然后在 &lt;code&gt;__tls_get_addr&lt;/code&gt; 里检查版本号，不一致则进入 slow path：&lt;/p&gt;&lt;p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-33-1&#34;&gt;&lt;a id=&#34;__codelineno-33-1&#34; name=&#34;__codelineno-33-1&#34; href=&#34;#__codelineno-33-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-2&#34;&gt;&lt;a id=&#34;__codelineno-33-2&#34; name=&#34;__codelineno-33-2&#34; href=&#34;#__codelineno-33-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;DTV_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RDX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-3&#34;&gt;&lt;a id=&#34;__codelineno-33-3&#34; name=&#34;__codelineno-33-3&#34; href=&#34;#__codelineno-33-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-4&#34;&gt;&lt;a id=&#34;__codelineno-33-4&#34; name=&#34;__codelineno-33-4&#34; href=&#34;#__codelineno-33-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;GL_TLS_GENERATION_OFFSET&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_rtld_local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-5&#34;&gt;&lt;a id=&#34;__codelineno-33-5&#34; name=&#34;__codelineno-33-5&#34; href=&#34;#__codelineno-33-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* GL(dl_tls_generation) == dtv[0].counter */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-6&#34;&gt;&lt;a id=&#34;__codelineno-33-6&#34; name=&#34;__codelineno-33-6&#34; href=&#34;#__codelineno-33-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-7&#34;&gt;&lt;a id=&#34;__codelineno-33-7&#34; name=&#34;__codelineno-33-7&#34; href=&#34;#__codelineno-33-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jne&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-8&#34;&gt;&lt;a id=&#34;__codelineno-33-8&#34; name=&#34;__codelineno-33-8&#34; href=&#34;#__codelineno-33-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-9&#34;&gt;&lt;a id=&#34;__codelineno-33-9&#34; name=&#34;__codelineno-33-9&#34; href=&#34;#__codelineno-33-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;TI_MODULE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-10&#34;&gt;&lt;a id=&#34;__codelineno-33-10&#34; name=&#34;__codelineno-33-10&#34; href=&#34;#__codelineno-33-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* dtv[ti-&amp;gt;ti_module] */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-11&#34;&gt;&lt;a id=&#34;__codelineno-33-11&#34; name=&#34;__codelineno-33-11&#34; href=&#34;#__codelineno-33-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;salq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;$4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-12&#34;&gt;&lt;a id=&#34;__codelineno-33-12&#34; name=&#34;__codelineno-33-12&#34; href=&#34;#__codelineno-33-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-13&#34;&gt;&lt;a id=&#34;__codelineno-33-13&#34; name=&#34;__codelineno-33-13&#34; href=&#34;#__codelineno-33-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-14&#34;&gt;&lt;a id=&#34;__codelineno-33-14&#34; name=&#34;__codelineno-33-14&#34; href=&#34;#__codelineno-33-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;TI_OFFSET_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-15&#34;&gt;&lt;a id=&#34;__codelineno-33-15&#34; name=&#34;__codelineno-33-15&#34; href=&#34;#__codelineno-33-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-16&#34;&gt;&lt;a id=&#34;__codelineno-33-16&#34; name=&#34;__codelineno-33-16&#34; href=&#34;#__codelineno-33-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;1:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-17&#34;&gt;&lt;a id=&#34;__codelineno-33-17&#34; name=&#34;__codelineno-33-17&#34; href=&#34;#__codelineno-33-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* slow path, stack alignment omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-18&#34;&gt;&lt;a id=&#34;__codelineno-33-18&#34; name=&#34;__codelineno-33-18&#34; href=&#34;#__codelineno-33-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr_slow&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-19&#34;&gt;&lt;a id=&#34;__codelineno-33-19&#34; name=&#34;__codelineno-33-19&#34; href=&#34;#__codelineno-33-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;2. 在 &lt;code&gt;__tls_get_addr_slow&lt;/code&gt; 中，如果发现当前 dtv 的版本号和最新的版本号 &lt;code&gt;dl_tls_generation&lt;/code&gt; 不一致，就调用 &lt;code&gt;update_get_addr&lt;/code&gt; 来重新分配内存：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-34-1&#34;&gt;&lt;a id=&#34;__codelineno-34-1&#34; name=&#34;__codelineno-34-1&#34; href=&#34;#__codelineno-34-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-2&#34;&gt;&lt;a id=&#34;__codelineno-34-2&#34; name=&#34;__codelineno-34-2&#34; href=&#34;#__codelineno-34-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;__tls_get_addr_slow&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-3&#34;&gt;&lt;a id=&#34;__codelineno-34-3&#34; name=&#34;__codelineno-34-3&#34; href=&#34;#__codelineno-34-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-4&#34;&gt;&lt;a id=&#34;__codelineno-34-4&#34; name=&#34;__codelineno-34-4&#34; href=&#34;#__codelineno-34-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;THREAD_DTV&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-5&#34;&gt;&lt;a id=&#34;__codelineno-34-5&#34; name=&#34;__codelineno-34-5&#34; href=&#34;#__codelineno-34-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-6&#34;&gt;&lt;a id=&#34;__codelineno-34-6&#34; name=&#34;__codelineno-34-6&#34; href=&#34;#__codelineno-34-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dl_tls_generation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-7&#34;&gt;&lt;a id=&#34;__codelineno-34-7&#34; name=&#34;__codelineno-34-7&#34; href=&#34;#__codelineno-34-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update_get_addr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-8&#34;&gt;&lt;a id=&#34;__codelineno-34-8&#34; name=&#34;__codelineno-34-8&#34; href=&#34;#__codelineno-34-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-9&#34;&gt;&lt;a id=&#34;__codelineno-34-9&#34; name=&#34;__codelineno-34-9&#34; href=&#34;#__codelineno-34-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tls_get_addr_tail&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-34-10&#34;&gt;&lt;a id=&#34;__codelineno-34-10&#34; name=&#34;__codelineno-34-10&#34; href=&#34;#__codelineno-34-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;具体的 dtv 更新逻辑比较复杂，有兴趣的读者可以翻阅 glibc 的源码中 &lt;code&gt;update_get_addr&lt;/code&gt; 函数的实现。&lt;/p&gt;&lt;p&gt;接下来考虑第二个需求，也就是 lazy 分配，只有在第一次访问 TLS 空间的时候，才给 dlopen 的动态库分配 TLS 空间。为了区分已分配和未分配的 TLS 空间，未分配的 TLS 空间的 &lt;code&gt;val&lt;/code&gt; 字段的值是 &lt;code&gt;TLS_DTV_UNALLOCATED&lt;/code&gt;，当 &lt;code&gt;__tls_get_addr&lt;/code&gt; 检测到 TLS 空间尚未分配时，也会进入 slow path：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-35-1&#34;&gt;&lt;a id=&#34;__codelineno-35-1&#34; name=&#34;__codelineno-35-1&#34; href=&#34;#__codelineno-35-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-2&#34;&gt;&lt;a id=&#34;__codelineno-35-2&#34; name=&#34;__codelineno-35-2&#34; href=&#34;#__codelineno-35-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;DTV_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RDX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-3&#34;&gt;&lt;a id=&#34;__codelineno-35-3&#34; name=&#34;__codelineno-35-3&#34; href=&#34;#__codelineno-35-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-4&#34;&gt;&lt;a id=&#34;__codelineno-35-4&#34; name=&#34;__codelineno-35-4&#34; href=&#34;#__codelineno-35-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;GL_TLS_GENERATION_OFFSET&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_rtld_local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-5&#34;&gt;&lt;a id=&#34;__codelineno-35-5&#34; name=&#34;__codelineno-35-5&#34; href=&#34;#__codelineno-35-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* GL(dl_tls_generation) == dtv[0].counter */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-6&#34;&gt;&lt;a id=&#34;__codelineno-35-6&#34; name=&#34;__codelineno-35-6&#34; href=&#34;#__codelineno-35-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-7&#34;&gt;&lt;a id=&#34;__codelineno-35-7&#34; name=&#34;__codelineno-35-7&#34; href=&#34;#__codelineno-35-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jne&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-8&#34;&gt;&lt;a id=&#34;__codelineno-35-8&#34; name=&#34;__codelineno-35-8&#34; href=&#34;#__codelineno-35-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-9&#34;&gt;&lt;a id=&#34;__codelineno-35-9&#34; name=&#34;__codelineno-35-9&#34; href=&#34;#__codelineno-35-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;TI_MODULE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-10&#34;&gt;&lt;a id=&#34;__codelineno-35-10&#34; name=&#34;__codelineno-35-10&#34; href=&#34;#__codelineno-35-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* dtv[ti-&amp;gt;ti_module] */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-11&#34;&gt;&lt;a id=&#34;__codelineno-35-11&#34; name=&#34;__codelineno-35-11&#34; href=&#34;#__codelineno-35-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;salq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;$4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-12&#34;&gt;&lt;a id=&#34;__codelineno-35-12&#34; name=&#34;__codelineno-35-12&#34; href=&#34;#__codelineno-35-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;movq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rax&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-13&#34;&gt;&lt;a id=&#34;__codelineno-35-13&#34; name=&#34;__codelineno-35-13&#34; href=&#34;#__codelineno-35-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-14&#34;&gt;&lt;a id=&#34;__codelineno-35-14&#34; name=&#34;__codelineno-35-14&#34; href=&#34;#__codelineno-35-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* branch if val == TLS_DTV_UNALLOCATED */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-15&#34;&gt;&lt;a id=&#34;__codelineno-35-15&#34; name=&#34;__codelineno-35-15&#34; href=&#34;#__codelineno-35-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;$-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-16&#34;&gt;&lt;a id=&#34;__codelineno-35-16&#34; name=&#34;__codelineno-35-16&#34; href=&#34;#__codelineno-35-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;je&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-17&#34;&gt;&lt;a id=&#34;__codelineno-35-17&#34; name=&#34;__codelineno-35-17&#34; href=&#34;#__codelineno-35-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-18&#34;&gt;&lt;a id=&#34;__codelineno-35-18&#34; name=&#34;__codelineno-35-18&#34; href=&#34;#__codelineno-35-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;TI_OFFSET_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%RAX_LP&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-19&#34;&gt;&lt;a id=&#34;__codelineno-35-19&#34; name=&#34;__codelineno-35-19&#34; href=&#34;#__codelineno-35-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-20&#34;&gt;&lt;a id=&#34;__codelineno-35-20&#34; name=&#34;__codelineno-35-20&#34; href=&#34;#__codelineno-35-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;1:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-21&#34;&gt;&lt;a id=&#34;__codelineno-35-21&#34; name=&#34;__codelineno-35-21&#34; href=&#34;#__codelineno-35-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* slow path, stack alignment omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-22&#34;&gt;&lt;a id=&#34;__codelineno-35-22&#34; name=&#34;__codelineno-35-22&#34; href=&#34;#__codelineno-35-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__tls_get_addr_slow&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-35-23&#34;&gt;&lt;a id=&#34;__codelineno-35-23&#34; name=&#34;__codelineno-35-23&#34; href=&#34;#__codelineno-35-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 slow path 中，最终由 &lt;code&gt;allocate_dtv_entry&lt;/code&gt; 函数来分配这片空间，注意到 TLS 空间可能有对齐的要求，所以它实际上记录了两个地址，一个是 malloc 得到的地址（用于后续的 free 调用），一个是经过对齐后的地址：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-36-1&#34;&gt;&lt;a id=&#34;__codelineno-36-1&#34; name=&#34;__codelineno-36-1&#34; href=&#34;#__codelineno-36-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* Allocate one DTV entry. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-2&#34;&gt;&lt;a id=&#34;__codelineno-36-2&#34; name=&#34;__codelineno-36-2&#34; href=&#34;#__codelineno-36-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-3&#34;&gt;&lt;a id=&#34;__codelineno-36-3&#34; name=&#34;__codelineno-36-3&#34; href=&#34;#__codelineno-36-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;allocate_dtv_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alignment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-4&#34;&gt;&lt;a id=&#34;__codelineno-36-4&#34; name=&#34;__codelineno-36-4&#34; href=&#34;#__codelineno-36-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-5&#34;&gt;&lt;a id=&#34;__codelineno-36-5&#34; name=&#34;__codelineno-36-5&#34; href=&#34;#__codelineno-36-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;powerof2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alignment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alignment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;_Alignof&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_align_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-6&#34;&gt;&lt;a id=&#34;__codelineno-36-6&#34; name=&#34;__codelineno-36-6&#34; href=&#34;#__codelineno-36-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-7&#34;&gt;&lt;a id=&#34;__codelineno-36-7&#34; name=&#34;__codelineno-36-7&#34; href=&#34;#__codelineno-36-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* The alignment is supported by malloc. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-8&#34;&gt;&lt;a id=&#34;__codelineno-36-8&#34; name=&#34;__codelineno-36-8&#34; href=&#34;#__codelineno-36-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-9&#34;&gt;&lt;a id=&#34;__codelineno-36-9&#34; name=&#34;__codelineno-36-9&#34; href=&#34;#__codelineno-36-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-10&#34;&gt;&lt;a id=&#34;__codelineno-36-10&#34; name=&#34;__codelineno-36-10&#34; href=&#34;#__codelineno-36-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-11&#34;&gt;&lt;a id=&#34;__codelineno-36-11&#34; name=&#34;__codelineno-36-11&#34; href=&#34;#__codelineno-36-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-12&#34;&gt;&lt;a id=&#34;__codelineno-36-12&#34; name=&#34;__codelineno-36-12&#34; href=&#34;#__codelineno-36-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Emulate memalign to by manually aligning a pointer returned by&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-13&#34;&gt;&lt;a id=&#34;__codelineno-36-13&#34; name=&#34;__codelineno-36-13&#34; href=&#34;#__codelineno-36-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; malloc. First compute the size with an overflow check. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-14&#34;&gt;&lt;a id=&#34;__codelineno-36-14&#34; name=&#34;__codelineno-36-14&#34; href=&#34;#__codelineno-36-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alignment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-15&#34;&gt;&lt;a id=&#34;__codelineno-36-15&#34; name=&#34;__codelineno-36-15&#34; href=&#34;#__codelineno-36-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-16&#34;&gt;&lt;a id=&#34;__codelineno-36-16&#34; name=&#34;__codelineno-36-16&#34; href=&#34;#__codelineno-36-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-17&#34;&gt;&lt;a id=&#34;__codelineno-36-17&#34; name=&#34;__codelineno-36-17&#34; href=&#34;#__codelineno-36-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-18&#34;&gt;&lt;a id=&#34;__codelineno-36-18&#34; name=&#34;__codelineno-36-18&#34; href=&#34;#__codelineno-36-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Perform the allocation. This is the pointer we need to free&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-19&#34;&gt;&lt;a id=&#34;__codelineno-36-19&#34; name=&#34;__codelineno-36-19&#34; href=&#34;#__codelineno-36-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; later. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-20&#34;&gt;&lt;a id=&#34;__codelineno-36-20&#34; name=&#34;__codelineno-36-20&#34; href=&#34;#__codelineno-36-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-21&#34;&gt;&lt;a id=&#34;__codelineno-36-21&#34; name=&#34;__codelineno-36-21&#34; href=&#34;#__codelineno-36-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-22&#34;&gt;&lt;a id=&#34;__codelineno-36-22&#34; name=&#34;__codelineno-36-22&#34; href=&#34;#__codelineno-36-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-23&#34;&gt;&lt;a id=&#34;__codelineno-36-23&#34; name=&#34;__codelineno-36-23&#34; href=&#34;#__codelineno-36-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-24&#34;&gt;&lt;a id=&#34;__codelineno-36-24&#34; name=&#34;__codelineno-36-24&#34; href=&#34;#__codelineno-36-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Find the aligned position within the larger allocation. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-25&#34;&gt;&lt;a id=&#34;__codelineno-36-25&#34; name=&#34;__codelineno-36-25&#34; href=&#34;#__codelineno-36-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aligned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;roundup&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alignment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-26&#34;&gt;&lt;a id=&#34;__codelineno-36-26&#34; name=&#34;__codelineno-36-26&#34; href=&#34;#__codelineno-36-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-27&#34;&gt;&lt;a id=&#34;__codelineno-36-27&#34; name=&#34;__codelineno-36-27&#34; href=&#34;#__codelineno-36-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;dtv_pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aligned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_free&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-36-28&#34;&gt;&lt;a id=&#34;__codelineno-36-28&#34; name=&#34;__codelineno-36-28&#34; href=&#34;#__codelineno-36-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可见这些 lazy 分配的 TLS 空间都是放在堆上的，由 malloc 进行动态分配。而可执行程序和随着程序启动而自动加载的动态库的 TLS 空间，是随着 TCB 也就是 &lt;code&gt;struct pthread&lt;/code&gt; 一起分配的。对于新创建的线程来说，TCB 放置在栈的顶部，而不是在堆上，所以要求大小不能动态变化，只有 dtv 数组的指针保存在 &lt;code&gt;struct pthread&lt;/code&gt; 中，dtv 数组本身是放在堆上的，根据需要进行 malloc/realloc（见 &lt;code&gt;_dl_resize_dtv&lt;/code&gt; 函数）。对于初始线程来说，TCB 是通过 malloc 或者 sbrk 动态分配的。&lt;/p&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;a class=&#34;headerlink&#34; href=&#34;#参考&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://www.akkadia.org/drepper/tls.pdf&#34;&gt;ELF Handling For Thread-Local Storage&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://maskray.me/blog/2021-02-14-all-about-thread-local-storage&#34;&gt;All about thread-local storage&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/8482079/what-system-data-is-stored-on-the-stack&#34;&gt;What system data is stored on the stack&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/software/2025/04/07/tls-internals/</link> <pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/software/2025/04/07/tls-internals/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/tls-internals.png" type="image/png" length="73025" /> </item> <item> <title>glibc 内存分配器实现探究</title> <category>allocator</category> <category>glibc</category> <category>linux</category> <category>malloc</category> <category>software</category> <description>&lt;h1 id=&#34;glibc-内存分配器实现探究&#34;&gt;glibc 内存分配器实现探究&lt;a class=&#34;headerlink&#34; href=&#34;#glibc-内存分配器实现探究&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;malloc 和 free 日常用的很多，但它内部是怎么实现的呢？本文对 glibc 2.31 版本的内存分配器的实现进行探究。&lt;/p&gt;&lt;!-- more --&gt;&lt;p&gt;本文的完整版内容已经整合到&lt;a href=&#34;/kb/software/glibc_allocator.html&#34;&gt;知识库&lt;/a&gt;中。&lt;/p&gt;&lt;h2 id=&#34;malloc&#34;&gt;malloc&lt;a class=&#34;headerlink&#34; href=&#34;#malloc&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;glibc 2.31 是 ubuntu 20.04 所使用的 libc 版本，首先来分析它的实现，源码可以从 &lt;a href=&#34;https://github.com/bminor/glibc/tree/glibc-2.31&#34;&gt;glibc-2.31 tag&lt;/a&gt; 中找到。&lt;/p&gt;&lt;p&gt;首先来看 malloc 函数，它实现在 &lt;code&gt;malloc/malloc.c&lt;/code&gt; 的 &lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3022&#34;&gt;&lt;code&gt;__libc_malloc&lt;/code&gt;&lt;/a&gt; 函数当中，忽略 &lt;code&gt;__malloc_hook&lt;/code&gt; 和一些检查，首先可以看到它有一段代码，使用了一个叫做 tcache 的数据结构：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* int_free also calls request2size, be careful to not pad twice. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;checked_request2size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__set_errno&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENOMEM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csize2tidx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-10&#34;&gt;&lt;a id=&#34;__codelineno-0-10&#34; name=&#34;__codelineno-0-10&#34; href=&#34;#__codelineno-0-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;MAYBE_INIT_TCACHE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-11&#34;&gt;&lt;a id=&#34;__codelineno-0-11&#34; name=&#34;__codelineno-0-11&#34; href=&#34;#__codelineno-0-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-12&#34;&gt;&lt;a id=&#34;__codelineno-0-12&#34; name=&#34;__codelineno-0-12&#34; href=&#34;#__codelineno-0-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DIAG_PUSH_NEEDS_COMMENT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-13&#34;&gt;&lt;a id=&#34;__codelineno-0-13&#34; name=&#34;__codelineno-0-13&#34; href=&#34;#__codelineno-0-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_bins&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-14&#34;&gt;&lt;a id=&#34;__codelineno-0-14&#34; name=&#34;__codelineno-0-14&#34; href=&#34;#__codelineno-0-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-15&#34;&gt;&lt;a id=&#34;__codelineno-0-15&#34; name=&#34;__codelineno-0-15&#34; href=&#34;#__codelineno-0-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-16&#34;&gt;&lt;a id=&#34;__codelineno-0-16&#34; name=&#34;__codelineno-0-16&#34; href=&#34;#__codelineno-0-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-17&#34;&gt;&lt;a id=&#34;__codelineno-0-17&#34; name=&#34;__codelineno-0-17&#34; href=&#34;#__codelineno-0-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_get&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-18&#34;&gt;&lt;a id=&#34;__codelineno-0-18&#34; name=&#34;__codelineno-0-18&#34; href=&#34;#__codelineno-0-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-19&#34;&gt;&lt;a id=&#34;__codelineno-0-19&#34; name=&#34;__codelineno-0-19&#34; href=&#34;#__codelineno-0-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DIAG_POP_NEEDS_COMMENT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tcache-thread-local-cache&#34;&gt;tcache (Thread Local Cache)&lt;a class=&#34;headerlink&#34; href=&#34;#tcache-thread-local-cache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;接下来仔细地研究 tcache 的结构。首先，它是一个 per-thread 的数据结构，意味着每个线程都有自己的一份 tcache，不需要上锁就可以访问：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来看它具体保存了什么：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* We overlay this structure on the user-data portion of a chunk when&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; the chunk is stored in the per-thread cache. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_entry&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* This field exists to detect double frees. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* There is one of these for each thread, which contains the&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; per-thread cache (hence &amp;quot;tcache_perthread_struct&amp;quot;). Keeping&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; overall size low is mildly important. Note that COUNTS and ENTRIES&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; are redundant (we could have just counted the linked list each&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; time), this is for performance reasons. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-16&#34;&gt;&lt;a id=&#34;__codelineno-2-16&#34; name=&#34;__codelineno-2-16&#34; href=&#34;#__codelineno-2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-17&#34;&gt;&lt;a id=&#34;__codelineno-2-17&#34; name=&#34;__codelineno-2-17&#34; href=&#34;#__codelineno-2-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint16_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCACHE_MAX_BINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-18&#34;&gt;&lt;a id=&#34;__codelineno-2-18&#34; name=&#34;__codelineno-2-18&#34; href=&#34;#__codelineno-2-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCACHE_MAX_BINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-19&#34;&gt;&lt;a id=&#34;__codelineno-2-19&#34; name=&#34;__codelineno-2-19&#34; href=&#34;#__codelineno-2-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-20&#34;&gt;&lt;a id=&#34;__codelineno-2-20&#34; name=&#34;__codelineno-2-20&#34; href=&#34;#__codelineno-2-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-21&#34;&gt;&lt;a id=&#34;__codelineno-2-21&#34; name=&#34;__codelineno-2-21&#34; href=&#34;#__codelineno-2-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* Caller must ensure that we know tc_idx is valid and there&amp;#39;s room&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-22&#34;&gt;&lt;a id=&#34;__codelineno-2-22&#34; name=&#34;__codelineno-2-22&#34; href=&#34;#__codelineno-2-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; for more chunks. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-23&#34;&gt;&lt;a id=&#34;__codelineno-2-23&#34; name=&#34;__codelineno-2-23&#34; href=&#34;#__codelineno-2-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__always_inline&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-24&#34;&gt;&lt;a id=&#34;__codelineno-2-24&#34; name=&#34;__codelineno-2-24&#34; href=&#34;#__codelineno-2-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tcache_put&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-25&#34;&gt;&lt;a id=&#34;__codelineno-2-25&#34; name=&#34;__codelineno-2-25&#34; href=&#34;#__codelineno-2-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-26&#34;&gt;&lt;a id=&#34;__codelineno-2-26&#34; name=&#34;__codelineno-2-26&#34; href=&#34;#__codelineno-2-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-27&#34;&gt;&lt;a id=&#34;__codelineno-2-27&#34; name=&#34;__codelineno-2-27&#34; href=&#34;#__codelineno-2-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-28&#34;&gt;&lt;a id=&#34;__codelineno-2-28&#34; name=&#34;__codelineno-2-28&#34; href=&#34;#__codelineno-2-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Mark this chunk as &amp;quot;in the tcache&amp;quot; so the test in _int_free will&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-29&#34;&gt;&lt;a id=&#34;__codelineno-2-29&#34; name=&#34;__codelineno-2-29&#34; href=&#34;#__codelineno-2-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; detect a double free. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-30&#34;&gt;&lt;a id=&#34;__codelineno-2-30&#34; name=&#34;__codelineno-2-30&#34; href=&#34;#__codelineno-2-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-31&#34;&gt;&lt;a id=&#34;__codelineno-2-31&#34; name=&#34;__codelineno-2-31&#34; href=&#34;#__codelineno-2-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-32&#34;&gt;&lt;a id=&#34;__codelineno-2-32&#34; name=&#34;__codelineno-2-32&#34; href=&#34;#__codelineno-2-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-33&#34;&gt;&lt;a id=&#34;__codelineno-2-33&#34; name=&#34;__codelineno-2-33&#34; href=&#34;#__codelineno-2-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-34&#34;&gt;&lt;a id=&#34;__codelineno-2-34&#34; name=&#34;__codelineno-2-34&#34; href=&#34;#__codelineno-2-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-35&#34;&gt;&lt;a id=&#34;__codelineno-2-35&#34; name=&#34;__codelineno-2-35&#34; href=&#34;#__codelineno-2-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-36&#34;&gt;&lt;a id=&#34;__codelineno-2-36&#34; name=&#34;__codelineno-2-36&#34; href=&#34;#__codelineno-2-36&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-37&#34;&gt;&lt;a id=&#34;__codelineno-2-37&#34; name=&#34;__codelineno-2-37&#34; href=&#34;#__codelineno-2-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* Caller must ensure that we know tc_idx is valid and there&amp;#39;s&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-38&#34;&gt;&lt;a id=&#34;__codelineno-2-38&#34; name=&#34;__codelineno-2-38&#34; href=&#34;#__codelineno-2-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; available chunks to remove. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-39&#34;&gt;&lt;a id=&#34;__codelineno-2-39&#34; name=&#34;__codelineno-2-39&#34; href=&#34;#__codelineno-2-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__always_inline&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-40&#34;&gt;&lt;a id=&#34;__codelineno-2-40&#34; name=&#34;__codelineno-2-40&#34; href=&#34;#__codelineno-2-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tcache_get&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-41&#34;&gt;&lt;a id=&#34;__codelineno-2-41&#34; name=&#34;__codelineno-2-41&#34; href=&#34;#__codelineno-2-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-42&#34;&gt;&lt;a id=&#34;__codelineno-2-42&#34; name=&#34;__codelineno-2-42&#34; href=&#34;#__codelineno-2-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-43&#34;&gt;&lt;a id=&#34;__codelineno-2-43&#34; name=&#34;__codelineno-2-43&#34; href=&#34;#__codelineno-2-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-44&#34;&gt;&lt;a id=&#34;__codelineno-2-44&#34; name=&#34;__codelineno-2-44&#34; href=&#34;#__codelineno-2-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-45&#34;&gt;&lt;a id=&#34;__codelineno-2-45&#34; name=&#34;__codelineno-2-45&#34; href=&#34;#__codelineno-2-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-46&#34;&gt;&lt;a id=&#34;__codelineno-2-46&#34; name=&#34;__codelineno-2-46&#34; href=&#34;#__codelineno-2-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-47&#34;&gt;&lt;a id=&#34;__codelineno-2-47&#34; name=&#34;__codelineno-2-47&#34; href=&#34;#__codelineno-2-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到它有两个成员，把 tcache 分为 &lt;code&gt;TCACHE_MAX_BINS&lt;/code&gt; 这么多个 bin，每个 bin 分别有一个：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;counts[bin]&lt;/code&gt;：记录了这个 bin 中空闲块的数量，&lt;code&gt;tcache_put&lt;/code&gt; 的时候加一，&lt;code&gt;tcache_get&lt;/code&gt; 的时候减一&lt;/li&gt;&lt;li&gt;&lt;code&gt;entries[bin]&lt;/code&gt;: 每个 bin 用一个链表保存了空闲块，链表的节点类型是 &lt;code&gt;tcache_entry&lt;/code&gt;，那么 &lt;code&gt;entries[bin]&lt;/code&gt; 保存了链表头的指针&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;bin 是内存分配器的一个常见做法，把要分配的块的大小分 bin，从而保证拿到的空闲块足够大。接下来看 &lt;code&gt;tcache_put&lt;/code&gt; 是如何把空闲块放到 tcache 中的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;把空闲块强制转换为 &lt;code&gt;tcache_entry&lt;/code&gt; 结构体类型&lt;/li&gt;&lt;li&gt;把它的 &lt;code&gt;key&lt;/code&gt; 字段指向 tcache，用来表示这个空闲块当前在 &lt;code&gt;tcache&lt;/code&gt; 当中，后续用它来检测 double free&lt;/li&gt;&lt;li&gt;以新的 &lt;code&gt;tcache_entry&lt;/code&gt; 作为链表头，插入到 tcache 的对应的 bin 当中：&lt;code&gt;entries[tc_idx]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;更新这个 bin 的空闲块个数到 &lt;code&gt;count[tc_idx]&lt;/code&gt; 当中&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;反过来，&lt;code&gt;tcache_get&lt;/code&gt; 则是从 tcache 中拿出一个空闲块：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;从链表头 &lt;code&gt;entries[tc_idx]&lt;/code&gt; 取出一个空闲块，把它从链表中删除：&lt;code&gt;entries[tc_idx] = e-&amp;gt;next&lt;/code&gt;&lt;/li&gt;&lt;li&gt;更新这个 bin 的空闲块个数到 &lt;code&gt;count[tc_idx]&lt;/code&gt; 当中&lt;/li&gt;&lt;li&gt;把它的 &lt;code&gt;key&lt;/code&gt; 字段指向 NULL，用来表示这个空闲块当前不在 &lt;code&gt;tcache&lt;/code&gt; 当中&lt;/li&gt;&lt;li&gt;返回这个空闲块的地址&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;malloc_1&#34;&gt;malloc&lt;a class=&#34;headerlink&#34; href=&#34;#malloc_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来回到 &lt;code&gt;malloc&lt;/code&gt; 的实现，它首先根据用户要分配的空间大小（&lt;code&gt;bytes&lt;/code&gt;），计算出实际需要分配的大小（&lt;code&gt;tbytes&lt;/code&gt;），和对应的 bin（&lt;code&gt;tc_idx&lt;/code&gt;）：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* int_free also calls request2size, be careful to not pad twice. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;checked_request2size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__set_errno&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENOMEM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csize2tidx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;checked_request2size&lt;/code&gt; 实现如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define request2size(req) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (((req) + SIZE_SZ + MALLOC_ALIGN_MASK &amp;lt; MINSIZE) ? \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; MINSIZE : \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-4&#34;&gt;&lt;a id=&#34;__codelineno-4-4&#34; name=&#34;__codelineno-4-4&#34; href=&#34;#__codelineno-4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ((req) + SIZE_SZ + MALLOC_ALIGN_MASK) &amp;amp; ~MALLOC_ALIGN_MASK)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-5&#34;&gt;&lt;a id=&#34;__codelineno-4-5&#34; name=&#34;__codelineno-4-5&#34; href=&#34;#__codelineno-4-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-6&#34;&gt;&lt;a id=&#34;__codelineno-4-6&#34; name=&#34;__codelineno-4-6&#34; href=&#34;#__codelineno-4-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* Check if REQ overflows when padded and aligned and if the resulting value&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-7&#34;&gt;&lt;a id=&#34;__codelineno-4-7&#34; name=&#34;__codelineno-4-7&#34; href=&#34;#__codelineno-4-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; is less than PTRDIFF_T. Returns TRUE and the requested size or MINSIZE in&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-8&#34;&gt;&lt;a id=&#34;__codelineno-4-8&#34; name=&#34;__codelineno-4-8&#34; href=&#34;#__codelineno-4-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; case the value is less than MINSIZE on SZ or false if any of the previous&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-9&#34;&gt;&lt;a id=&#34;__codelineno-4-9&#34; name=&#34;__codelineno-4-9&#34; href=&#34;#__codelineno-4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; check fail. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-10&#34;&gt;&lt;a id=&#34;__codelineno-4-10&#34; name=&#34;__codelineno-4-10&#34; href=&#34;#__codelineno-4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-11&#34;&gt;&lt;a id=&#34;__codelineno-4-11&#34; name=&#34;__codelineno-4-11&#34; href=&#34;#__codelineno-4-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;checked_request2size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__nonnull&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-12&#34;&gt;&lt;a id=&#34;__codelineno-4-12&#34; name=&#34;__codelineno-4-12&#34; href=&#34;#__codelineno-4-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-13&#34;&gt;&lt;a id=&#34;__codelineno-4-13&#34; name=&#34;__codelineno-4-13&#34; href=&#34;#__codelineno-4-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PTRDIFF_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-14&#34;&gt;&lt;a id=&#34;__codelineno-4-14&#34; name=&#34;__codelineno-4-14&#34; href=&#34;#__codelineno-4-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-15&#34;&gt;&lt;a id=&#34;__codelineno-4-15&#34; name=&#34;__codelineno-4-15&#34; href=&#34;#__codelineno-4-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request2size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-16&#34;&gt;&lt;a id=&#34;__codelineno-4-16&#34; name=&#34;__codelineno-4-16&#34; href=&#34;#__codelineno-4-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-17&#34;&gt;&lt;a id=&#34;__codelineno-4-17&#34; name=&#34;__codelineno-4-17&#34; href=&#34;#__codelineno-4-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它实现的实际上是把用户请求的内存大小，加上 &lt;code&gt;SIZE_SZ&lt;/code&gt;（即 &lt;code&gt;sizeof(size_t)&lt;/code&gt;），向上取整到 &lt;code&gt;MALLOC_ALIGN_MASK&lt;/code&gt; 对应的 alignment（&lt;code&gt;MALLOC_ALIGNMENT&lt;/code&gt;，通常是 &lt;code&gt;2 * SIZE_SZ&lt;/code&gt;）的整数倍数，再和 &lt;code&gt;MINSIZE&lt;/code&gt; 取 max。这里要加 &lt;code&gt;SIZE_SZ&lt;/code&gt;，是因为 malloc 会维护被分配的块的一些信息，包括块的大小和一些 flag，后续会详细讨论，简单来说就是分配的实际空间会比用户请求的空间要更大。&lt;/p&gt;&lt;p&gt;接着，看它是如何计算出 tcache index 的：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* When &amp;quot;x&amp;quot; is from chunksize(). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;# define csize2tidx(x) (((x) - MINSIZE + MALLOC_ALIGNMENT - 1) / MALLOC_ALIGNMENT)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，从 MINSIZE 开始，以 MALLOC_ALIGNMENT 为单位，每个 bin 对应一个经过 align 以后的可能的内存块大小。得到 tcache index 后，检查对应的 bin 是否有空闲块，如果有，则直接分配：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_bins&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-4&#34;&gt;&lt;a id=&#34;__codelineno-6-4&#34; name=&#34;__codelineno-6-4&#34; href=&#34;#__codelineno-6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-5&#34;&gt;&lt;a id=&#34;__codelineno-6-5&#34; name=&#34;__codelineno-6-5&#34; href=&#34;#__codelineno-6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_get&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-6&#34;&gt;&lt;a id=&#34;__codelineno-6-6&#34; name=&#34;__codelineno-6-6&#34; href=&#34;#__codelineno-6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，tcache 相当于是一个 per thread 的小缓存，记录了最近释放的内存块，可供 malloc 使用。由于 bin 的数量有限，所以比较大的内存分配不会经过 tcache。&lt;/p&gt;&lt;p&gt;P.S. &lt;code&gt;calloc&lt;/code&gt; 不会使用 tcache，而是用后面提到的 &lt;code&gt;_int_malloc&lt;/code&gt; 进行各种分配。&lt;/p&gt;&lt;h3 id=&#34;free&#34;&gt;free&lt;a class=&#34;headerlink&#34; href=&#34;#free&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;既然 malloc 用到了 tcache，自然 free 就要往里面放空闲块了，相关的代码在 &lt;code&gt;_int_free&lt;/code&gt; 函数当中：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-7-1&#34;&gt;&lt;a id=&#34;__codelineno-7-1&#34; name=&#34;__codelineno-7-1&#34; href=&#34;#__codelineno-7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csize2tidx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-2&#34;&gt;&lt;a id=&#34;__codelineno-7-2&#34; name=&#34;__codelineno-7-2&#34; href=&#34;#__codelineno-7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_bins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-3&#34;&gt;&lt;a id=&#34;__codelineno-7-3&#34; name=&#34;__codelineno-7-3&#34; href=&#34;#__codelineno-7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-4&#34;&gt;&lt;a id=&#34;__codelineno-7-4&#34; name=&#34;__codelineno-7-4&#34; href=&#34;#__codelineno-7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Check to see if it&amp;#39;s already in the tcache. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-5&#34;&gt;&lt;a id=&#34;__codelineno-7-5&#34; name=&#34;__codelineno-7-5&#34; href=&#34;#__codelineno-7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-6&#34;&gt;&lt;a id=&#34;__codelineno-7-6&#34; name=&#34;__codelineno-7-6&#34; href=&#34;#__codelineno-7-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-7&#34;&gt;&lt;a id=&#34;__codelineno-7-7&#34; name=&#34;__codelineno-7-7&#34; href=&#34;#__codelineno-7-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* This test succeeds on double free. However, we don&amp;#39;t 100%&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-8&#34;&gt;&lt;a id=&#34;__codelineno-7-8&#34; name=&#34;__codelineno-7-8&#34; href=&#34;#__codelineno-7-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; trust it (it also matches random payload data at a 1 in&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-9&#34;&gt;&lt;a id=&#34;__codelineno-7-9&#34; name=&#34;__codelineno-7-9&#34; href=&#34;#__codelineno-7-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; 2^&amp;lt;size_t&amp;gt; chance), so verify it&amp;#39;s not an unlikely&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-10&#34;&gt;&lt;a id=&#34;__codelineno-7-10&#34; name=&#34;__codelineno-7-10&#34; href=&#34;#__codelineno-7-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; coincidence before aborting. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-11&#34;&gt;&lt;a id=&#34;__codelineno-7-11&#34; name=&#34;__codelineno-7-11&#34; href=&#34;#__codelineno-7-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-12&#34;&gt;&lt;a id=&#34;__codelineno-7-12&#34; name=&#34;__codelineno-7-12&#34; href=&#34;#__codelineno-7-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-13&#34;&gt;&lt;a id=&#34;__codelineno-7-13&#34; name=&#34;__codelineno-7-13&#34; href=&#34;#__codelineno-7-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-14&#34;&gt;&lt;a id=&#34;__codelineno-7-14&#34; name=&#34;__codelineno-7-14&#34; href=&#34;#__codelineno-7-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LIBC_PROBE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memory_tcache_double_free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-15&#34;&gt;&lt;a id=&#34;__codelineno-7-15&#34; name=&#34;__codelineno-7-15&#34; href=&#34;#__codelineno-7-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-16&#34;&gt;&lt;a id=&#34;__codelineno-7-16&#34; name=&#34;__codelineno-7-16&#34; href=&#34;#__codelineno-7-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-17&#34;&gt;&lt;a id=&#34;__codelineno-7-17&#34; name=&#34;__codelineno-7-17&#34; href=&#34;#__codelineno-7-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-18&#34;&gt;&lt;a id=&#34;__codelineno-7-18&#34; name=&#34;__codelineno-7-18&#34; href=&#34;#__codelineno-7-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-19&#34;&gt;&lt;a id=&#34;__codelineno-7-19&#34; name=&#34;__codelineno-7-19&#34; href=&#34;#__codelineno-7-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;free(): double free detected in tcache 2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-20&#34;&gt;&lt;a id=&#34;__codelineno-7-20&#34; name=&#34;__codelineno-7-20&#34; href=&#34;#__codelineno-7-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* If we get here, it was a coincidence. We&amp;#39;ve wasted a&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-21&#34;&gt;&lt;a id=&#34;__codelineno-7-21&#34; name=&#34;__codelineno-7-21&#34; href=&#34;#__codelineno-7-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; few cycles, but don&amp;#39;t abort. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-22&#34;&gt;&lt;a id=&#34;__codelineno-7-22&#34; name=&#34;__codelineno-7-22&#34; href=&#34;#__codelineno-7-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-23&#34;&gt;&lt;a id=&#34;__codelineno-7-23&#34; name=&#34;__codelineno-7-23&#34; href=&#34;#__codelineno-7-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-24&#34;&gt;&lt;a id=&#34;__codelineno-7-24&#34; name=&#34;__codelineno-7-24&#34; href=&#34;#__codelineno-7-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-25&#34;&gt;&lt;a id=&#34;__codelineno-7-25&#34; name=&#34;__codelineno-7-25&#34; href=&#34;#__codelineno-7-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-26&#34;&gt;&lt;a id=&#34;__codelineno-7-26&#34; name=&#34;__codelineno-7-26&#34; href=&#34;#__codelineno-7-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_put&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-27&#34;&gt;&lt;a id=&#34;__codelineno-7-27&#34; name=&#34;__codelineno-7-27&#34; href=&#34;#__codelineno-7-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-28&#34;&gt;&lt;a id=&#34;__codelineno-7-28&#34; name=&#34;__codelineno-7-28&#34; href=&#34;#__codelineno-7-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-29&#34;&gt;&lt;a id=&#34;__codelineno-7-29&#34; name=&#34;__codelineno-7-29&#34; href=&#34;#__codelineno-7-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它的逻辑也不复杂：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;计算 tcache index，找到对应的 bin&lt;/li&gt;&lt;li&gt;检查它是不是已经被 free 过了，即 double free：free 过的指针，它的 key 字段应当指向 tcache，如果实际检测到是这样，那就去 tcache 里遍历链表，检查是不是真的在里面，如果是，说明 double free 了，报错&lt;/li&gt;&lt;li&gt;如果对应的 bin 的链表长度不是很长（阈值是 &lt;code&gt;mp_.tcache_count&lt;/code&gt;，取值见后），则添加到链表头部，完成 free 的过程&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;那么 tcache 默认情况下有多大呢：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-8-1&#34;&gt;&lt;a id=&#34;__codelineno-8-1&#34; name=&#34;__codelineno-8-1&#34; href=&#34;#__codelineno-8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* We want 64 entries. This is an arbitrary limit, which tunables can reduce. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-2&#34;&gt;&lt;a id=&#34;__codelineno-8-2&#34; name=&#34;__codelineno-8-2&#34; href=&#34;#__codelineno-8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;# define TCACHE_MAX_BINS 64&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-3&#34;&gt;&lt;a id=&#34;__codelineno-8-3&#34; name=&#34;__codelineno-8-3&#34; href=&#34;#__codelineno-8-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* This is another arbitrary limit, which tunables can change. Each&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-4&#34;&gt;&lt;a id=&#34;__codelineno-8-4&#34; name=&#34;__codelineno-8-4&#34; href=&#34;#__codelineno-8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; tcache bin will hold at most this number of chunks. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-5&#34;&gt;&lt;a id=&#34;__codelineno-8-5&#34; name=&#34;__codelineno-8-5&#34; href=&#34;#__codelineno-8-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;# define TCACHE_FILL_COUNT 7&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也就是说，它有 64 个 bin，每个 bin 的链表最多 7 个空闲块。&lt;/p&gt;&lt;p&gt;在 64 位下，这 64 个 bin 对应的块大小是从 32 字节到 1040 字节，每 16 字节一个 bin（&lt;code&gt;(1040 - 32) / 16 + 1 = 64&lt;/code&gt;）。那么，&lt;code&gt;malloc(1032)&lt;/code&gt; 或更小的分配会经过 tcache，而 &lt;code&gt;malloc(1033)&lt;/code&gt; 或更大的分配则不会。&lt;/p&gt;&lt;h3 id=&#34;实验&#34;&gt;实验&lt;a class=&#34;headerlink&#34; href=&#34;#实验&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;下面来写一段程序来观察 tcache 的行为，考虑到从链表头部插入和删除是后进先出（LIFO），相当于是一个栈，所以分配两个大小相同的块，释放后再分配相同大小的块，得到的指针的顺序应该是反过来的：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-9-1&#34;&gt;&lt;a id=&#34;__codelineno-9-1&#34; name=&#34;__codelineno-9-1&#34; href=&#34;#__codelineno-9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-2&#34;&gt;&lt;a id=&#34;__codelineno-9-2&#34; name=&#34;__codelineno-9-2&#34; href=&#34;#__codelineno-9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-3&#34;&gt;&lt;a id=&#34;__codelineno-9-3&#34; name=&#34;__codelineno-9-3&#34; href=&#34;#__codelineno-9-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-4&#34;&gt;&lt;a id=&#34;__codelineno-9-4&#34; name=&#34;__codelineno-9-4&#34; href=&#34;#__codelineno-9-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-5&#34;&gt;&lt;a id=&#34;__codelineno-9-5&#34; name=&#34;__codelineno-9-5&#34; href=&#34;#__codelineno-9-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-6&#34;&gt;&lt;a id=&#34;__codelineno-9-6&#34; name=&#34;__codelineno-9-6&#34; href=&#34;#__codelineno-9-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-7&#34;&gt;&lt;a id=&#34;__codelineno-9-7&#34; name=&#34;__codelineno-9-7&#34; href=&#34;#__codelineno-9-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-8&#34;&gt;&lt;a id=&#34;__codelineno-9-8&#34; name=&#34;__codelineno-9-8&#34; href=&#34;#__codelineno-9-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-9&#34;&gt;&lt;a id=&#34;__codelineno-9-9&#34; name=&#34;__codelineno-9-9&#34; href=&#34;#__codelineno-9-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-10&#34;&gt;&lt;a id=&#34;__codelineno-9-10&#34; name=&#34;__codelineno-9-10&#34; href=&#34;#__codelineno-9-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-11&#34;&gt;&lt;a id=&#34;__codelineno-9-11&#34; name=&#34;__codelineno-9-11&#34; href=&#34;#__codelineno-9-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;p1=%p p2=%p p3=%p p4=%p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-12&#34;&gt;&lt;a id=&#34;__codelineno-9-12&#34; name=&#34;__codelineno-9-12&#34; href=&#34;#__codelineno-9-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-10-1&#34;&gt;&lt;a id=&#34;__codelineno-10-1&#34; name=&#34;__codelineno-10-1&#34; href=&#34;#__codelineno-10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x55fb2f9732a0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x55fb2f9732d0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x55fb2f9732d0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x55fb2f9732a0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结果符合预期，tcache 的内部状态变化过程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;free(p1)&lt;/code&gt;：p1 变成链表的头部&lt;/li&gt;&lt;li&gt;&lt;code&gt;free(p2)&lt;/code&gt;：p2 变成链表的头部，next 指针指向 p1&lt;/li&gt;&lt;li&gt;&lt;code&gt;p3 = malloc(32)&lt;/code&gt;: p2 是链表的头部，所以被分配给 p3，之后 p1 成为链表的头部&lt;/li&gt;&lt;li&gt;&lt;code&gt;p4 = malloc(32)&lt;/code&gt;: p1 是链表的头部，所以被分配给 p4&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果修改分配的大小，让它们被放到不同的 bin，就不会出现顺序颠倒的情况：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-11-1&#34;&gt;&lt;a id=&#34;__codelineno-11-1&#34; name=&#34;__codelineno-11-1&#34; href=&#34;#__codelineno-11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-2&#34;&gt;&lt;a id=&#34;__codelineno-11-2&#34; name=&#34;__codelineno-11-2&#34; href=&#34;#__codelineno-11-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-3&#34;&gt;&lt;a id=&#34;__codelineno-11-3&#34; name=&#34;__codelineno-11-3&#34; href=&#34;#__codelineno-11-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-4&#34;&gt;&lt;a id=&#34;__codelineno-11-4&#34; name=&#34;__codelineno-11-4&#34; href=&#34;#__codelineno-11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-5&#34;&gt;&lt;a id=&#34;__codelineno-11-5&#34; name=&#34;__codelineno-11-5&#34; href=&#34;#__codelineno-11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-6&#34;&gt;&lt;a id=&#34;__codelineno-11-6&#34; name=&#34;__codelineno-11-6&#34; href=&#34;#__codelineno-11-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-7&#34;&gt;&lt;a id=&#34;__codelineno-11-7&#34; name=&#34;__codelineno-11-7&#34; href=&#34;#__codelineno-11-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-8&#34;&gt;&lt;a id=&#34;__codelineno-11-8&#34; name=&#34;__codelineno-11-8&#34; href=&#34;#__codelineno-11-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-9&#34;&gt;&lt;a id=&#34;__codelineno-11-9&#34; name=&#34;__codelineno-11-9&#34; href=&#34;#__codelineno-11-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-10&#34;&gt;&lt;a id=&#34;__codelineno-11-10&#34; name=&#34;__codelineno-11-10&#34; href=&#34;#__codelineno-11-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-11&#34;&gt;&lt;a id=&#34;__codelineno-11-11&#34; name=&#34;__codelineno-11-11&#34; href=&#34;#__codelineno-11-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;p1=%p p2=%p p3=%p p4=%p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-12&#34;&gt;&lt;a id=&#34;__codelineno-11-12&#34; name=&#34;__codelineno-11-12&#34; href=&#34;#__codelineno-11-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-12-1&#34;&gt;&lt;a id=&#34;__codelineno-12-1&#34; name=&#34;__codelineno-12-1&#34; href=&#34;#__codelineno-12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x5638e68db2a0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x5638e68db2d0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x5638e68db2a0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x5638e68db2d0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到 p3 等于 p1，p4 等于 p2。此时 p1 和 p3 属于同一个 bin，而 p2 和 p4 属于另一个 bin。&lt;/p&gt;&lt;p&gt;既然我们知道了 tcache 的内部构造，我们可以写一个程序，首先得到 tcache 的地址，再打印出每次 malloc/free 之后的状态：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-13-1&#34;&gt;&lt;a id=&#34;__codelineno-13-1&#34; name=&#34;__codelineno-13-1&#34; href=&#34;#__codelineno-13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-2&#34;&gt;&lt;a id=&#34;__codelineno-13-2&#34; name=&#34;__codelineno-13-2&#34; href=&#34;#__codelineno-13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-3&#34;&gt;&lt;a id=&#34;__codelineno-13-3&#34; name=&#34;__codelineno-13-3&#34; href=&#34;#__codelineno-13-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-4&#34;&gt;&lt;a id=&#34;__codelineno-13-4&#34; name=&#34;__codelineno-13-4&#34; href=&#34;#__codelineno-13-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-5&#34;&gt;&lt;a id=&#34;__codelineno-13-5&#34; name=&#34;__codelineno-13-5&#34; href=&#34;#__codelineno-13-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define TCACHE_MAX_BINS 64&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-6&#34;&gt;&lt;a id=&#34;__codelineno-13-6&#34; name=&#34;__codelineno-13-6&#34; href=&#34;#__codelineno-13-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-7&#34;&gt;&lt;a id=&#34;__codelineno-13-7&#34; name=&#34;__codelineno-13-7&#34; href=&#34;#__codelineno-13-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-8&#34;&gt;&lt;a id=&#34;__codelineno-13-8&#34; name=&#34;__codelineno-13-8&#34; href=&#34;#__codelineno-13-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-9&#34;&gt;&lt;a id=&#34;__codelineno-13-9&#34; name=&#34;__codelineno-13-9&#34; href=&#34;#__codelineno-13-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-10&#34;&gt;&lt;a id=&#34;__codelineno-13-10&#34; name=&#34;__codelineno-13-10&#34; href=&#34;#__codelineno-13-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-11&#34;&gt;&lt;a id=&#34;__codelineno-13-11&#34; name=&#34;__codelineno-13-11&#34; href=&#34;#__codelineno-13-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-12&#34;&gt;&lt;a id=&#34;__codelineno-13-12&#34; name=&#34;__codelineno-13-12&#34; href=&#34;#__codelineno-13-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-13&#34;&gt;&lt;a id=&#34;__codelineno-13-13&#34; name=&#34;__codelineno-13-13&#34; href=&#34;#__codelineno-13-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint16_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCACHE_MAX_BINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-14&#34;&gt;&lt;a id=&#34;__codelineno-13-14&#34; name=&#34;__codelineno-13-14&#34; href=&#34;#__codelineno-13-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCACHE_MAX_BINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-15&#34;&gt;&lt;a id=&#34;__codelineno-13-15&#34; name=&#34;__codelineno-13-15&#34; href=&#34;#__codelineno-13-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-16&#34;&gt;&lt;a id=&#34;__codelineno-13-16&#34; name=&#34;__codelineno-13-16&#34; href=&#34;#__codelineno-13-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-17&#34;&gt;&lt;a id=&#34;__codelineno-13-17&#34; name=&#34;__codelineno-13-17&#34; href=&#34;#__codelineno-13-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;dump_tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-18&#34;&gt;&lt;a id=&#34;__codelineno-13-18&#34; name=&#34;__codelineno-13-18&#34; href=&#34;#__codelineno-13-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCACHE_MAX_BINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-19&#34;&gt;&lt;a id=&#34;__codelineno-13-19&#34; name=&#34;__codelineno-13-19&#34; href=&#34;#__codelineno-13-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-20&#34;&gt;&lt;a id=&#34;__codelineno-13-20&#34; name=&#34;__codelineno-13-20&#34; href=&#34;#__codelineno-13-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-21&#34;&gt;&lt;a id=&#34;__codelineno-13-21&#34; name=&#34;__codelineno-13-21&#34; href=&#34;#__codelineno-13-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tcache bin #%d: %p&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-22&#34;&gt;&lt;a id=&#34;__codelineno-13-22&#34; name=&#34;__codelineno-13-22&#34; href=&#34;#__codelineno-13-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-23&#34;&gt;&lt;a id=&#34;__codelineno-13-23&#34; name=&#34;__codelineno-13-23&#34; href=&#34;#__codelineno-13-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-24&#34;&gt;&lt;a id=&#34;__codelineno-13-24&#34; name=&#34;__codelineno-13-24&#34; href=&#34;#__codelineno-13-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot; -&amp;gt; %p&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-25&#34;&gt;&lt;a id=&#34;__codelineno-13-25&#34; name=&#34;__codelineno-13-25&#34; href=&#34;#__codelineno-13-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-26&#34;&gt;&lt;a id=&#34;__codelineno-13-26&#34; name=&#34;__codelineno-13-26&#34; href=&#34;#__codelineno-13-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-27&#34;&gt;&lt;a id=&#34;__codelineno-13-27&#34; name=&#34;__codelineno-13-27&#34; href=&#34;#__codelineno-13-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-28&#34;&gt;&lt;a id=&#34;__codelineno-13-28&#34; name=&#34;__codelineno-13-28&#34; href=&#34;#__codelineno-13-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-29&#34;&gt;&lt;a id=&#34;__codelineno-13-29&#34; name=&#34;__codelineno-13-29&#34; href=&#34;#__codelineno-13-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-30&#34;&gt;&lt;a id=&#34;__codelineno-13-30&#34; name=&#34;__codelineno-13-30&#34; href=&#34;#__codelineno-13-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-31&#34;&gt;&lt;a id=&#34;__codelineno-13-31&#34; name=&#34;__codelineno-13-31&#34; href=&#34;#__codelineno-13-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-32&#34;&gt;&lt;a id=&#34;__codelineno-13-32&#34; name=&#34;__codelineno-13-32&#34; href=&#34;#__codelineno-13-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-33&#34;&gt;&lt;a id=&#34;__codelineno-13-33&#34; name=&#34;__codelineno-13-33&#34; href=&#34;#__codelineno-13-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// leak tcache address&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-34&#34;&gt;&lt;a id=&#34;__codelineno-13-34&#34; name=&#34;__codelineno-13-34&#34; href=&#34;#__codelineno-13-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-35&#34;&gt;&lt;a id=&#34;__codelineno-13-35&#34; name=&#34;__codelineno-13-35&#34; href=&#34;#__codelineno-13-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-36&#34;&gt;&lt;a id=&#34;__codelineno-13-36&#34; name=&#34;__codelineno-13-36&#34; href=&#34;#__codelineno-13-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-37&#34;&gt;&lt;a id=&#34;__codelineno-13-37&#34; name=&#34;__codelineno-13-37&#34; href=&#34;#__codelineno-13-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_perthread_struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-38&#34;&gt;&lt;a id=&#34;__codelineno-13-38&#34; name=&#34;__codelineno-13-38&#34; href=&#34;#__codelineno-13-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tcache is at %p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-39&#34;&gt;&lt;a id=&#34;__codelineno-13-39&#34; name=&#34;__codelineno-13-39&#34; href=&#34;#__codelineno-13-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// clear tcache&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-40&#34;&gt;&lt;a id=&#34;__codelineno-13-40&#34; name=&#34;__codelineno-13-40&#34; href=&#34;#__codelineno-13-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-41&#34;&gt;&lt;a id=&#34;__codelineno-13-41&#34; name=&#34;__codelineno-13-41&#34; href=&#34;#__codelineno-13-41&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-42&#34;&gt;&lt;a id=&#34;__codelineno-13-42&#34; name=&#34;__codelineno-13-42&#34; href=&#34;#__codelineno-13-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-43&#34;&gt;&lt;a id=&#34;__codelineno-13-43&#34; name=&#34;__codelineno-13-43&#34; href=&#34;#__codelineno-13-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-44&#34;&gt;&lt;a id=&#34;__codelineno-13-44&#34; name=&#34;__codelineno-13-44&#34; href=&#34;#__codelineno-13-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-45&#34;&gt;&lt;a id=&#34;__codelineno-13-45&#34; name=&#34;__codelineno-13-45&#34; href=&#34;#__codelineno-13-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;after free(p1):&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-46&#34;&gt;&lt;a id=&#34;__codelineno-13-46&#34; name=&#34;__codelineno-13-46&#34; href=&#34;#__codelineno-13-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-47&#34;&gt;&lt;a id=&#34;__codelineno-13-47&#34; name=&#34;__codelineno-13-47&#34; href=&#34;#__codelineno-13-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-48&#34;&gt;&lt;a id=&#34;__codelineno-13-48&#34; name=&#34;__codelineno-13-48&#34; href=&#34;#__codelineno-13-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;after free(p2):&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-49&#34;&gt;&lt;a id=&#34;__codelineno-13-49&#34; name=&#34;__codelineno-13-49&#34; href=&#34;#__codelineno-13-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-50&#34;&gt;&lt;a id=&#34;__codelineno-13-50&#34; name=&#34;__codelineno-13-50&#34; href=&#34;#__codelineno-13-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-51&#34;&gt;&lt;a id=&#34;__codelineno-13-51&#34; name=&#34;__codelineno-13-51&#34; href=&#34;#__codelineno-13-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;after malloc(p3):&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-52&#34;&gt;&lt;a id=&#34;__codelineno-13-52&#34; name=&#34;__codelineno-13-52&#34; href=&#34;#__codelineno-13-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-53&#34;&gt;&lt;a id=&#34;__codelineno-13-53&#34; name=&#34;__codelineno-13-53&#34; href=&#34;#__codelineno-13-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-54&#34;&gt;&lt;a id=&#34;__codelineno-13-54&#34; name=&#34;__codelineno-13-54&#34; href=&#34;#__codelineno-13-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;after malloc(p4):&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-55&#34;&gt;&lt;a id=&#34;__codelineno-13-55&#34; name=&#34;__codelineno-13-55&#34; href=&#34;#__codelineno-13-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-56&#34;&gt;&lt;a id=&#34;__codelineno-13-56&#34; name=&#34;__codelineno-13-56&#34; href=&#34;#__codelineno-13-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;p1=%p p2=%p p3=%p p4=%p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-13-57&#34;&gt;&lt;a id=&#34;__codelineno-13-57&#34; name=&#34;__codelineno-13-57&#34; href=&#34;#__codelineno-13-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行结果如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-14-1&#34;&gt;&lt;a id=&#34;__codelineno-14-1&#34; name=&#34;__codelineno-14-1&#34; href=&#34;#__codelineno-14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310010&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-2&#34;&gt;&lt;a id=&#34;__codelineno-14-2&#34; name=&#34;__codelineno-14-2&#34; href=&#34;#__codelineno-14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-3&#34;&gt;&lt;a id=&#34;__codelineno-14-3&#34; name=&#34;__codelineno-14-3&#34; href=&#34;#__codelineno-14-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310740&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-4&#34;&gt;&lt;a id=&#34;__codelineno-14-4&#34; name=&#34;__codelineno-14-4&#34; href=&#34;#__codelineno-14-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-5&#34;&gt;&lt;a id=&#34;__codelineno-14-5&#34; name=&#34;__codelineno-14-5&#34; href=&#34;#__codelineno-14-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310770&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310740&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-6&#34;&gt;&lt;a id=&#34;__codelineno-14-6&#34; name=&#34;__codelineno-14-6&#34; href=&#34;#__codelineno-14-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-7&#34;&gt;&lt;a id=&#34;__codelineno-14-7&#34; name=&#34;__codelineno-14-7&#34; href=&#34;#__codelineno-14-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310740&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-8&#34;&gt;&lt;a id=&#34;__codelineno-14-8&#34; name=&#34;__codelineno-14-8&#34; href=&#34;#__codelineno-14-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-14-9&#34;&gt;&lt;a id=&#34;__codelineno-14-9&#34; name=&#34;__codelineno-14-9&#34; href=&#34;#__codelineno-14-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310740&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310770&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310770&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x558f39310740&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;打印出来的结果和预期一致。&lt;/p&gt;&lt;p&gt;接下来继续分析 malloc 的后续代码。&lt;/p&gt;&lt;h2 id=&#34;回到-__libc_malloc&#34;&gt;回到 &lt;code&gt;__libc_malloc&lt;/code&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#回到-__libc_malloc&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;如果 malloc 没有命中 tcache，或者 free 没有把空闲块放到 tcache 当中，会发生什么事情呢？接下来往后看，首先是 &lt;code&gt;__libc_malloc&lt;/code&gt; 的后续实现：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-15-1&#34;&gt;&lt;a id=&#34;__codelineno-15-1&#34; name=&#34;__codelineno-15-1&#34; href=&#34;#__codelineno-15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SINGLE_THREAD_P&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-2&#34;&gt;&lt;a id=&#34;__codelineno-15-2&#34; name=&#34;__codelineno-15-2&#34; href=&#34;#__codelineno-15-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-3&#34;&gt;&lt;a id=&#34;__codelineno-15-3&#34; name=&#34;__codelineno-15-3&#34; href=&#34;#__codelineno-15-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_int_malloc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-4&#34;&gt;&lt;a id=&#34;__codelineno-15-4&#34; name=&#34;__codelineno-15-4&#34; href=&#34;#__codelineno-15-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-5&#34;&gt;&lt;a id=&#34;__codelineno-15-5&#34; name=&#34;__codelineno-15-5&#34; href=&#34;#__codelineno-15-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-6&#34;&gt;&lt;a id=&#34;__codelineno-15-6&#34; name=&#34;__codelineno-15-6&#34; href=&#34;#__codelineno-15-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-7&#34;&gt;&lt;a id=&#34;__codelineno-15-7&#34; name=&#34;__codelineno-15-7&#34; href=&#34;#__codelineno-15-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-8&#34;&gt;&lt;a id=&#34;__codelineno-15-8&#34; name=&#34;__codelineno-15-8&#34; href=&#34;#__codelineno-15-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;arena_get&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-9&#34;&gt;&lt;a id=&#34;__codelineno-15-9&#34; name=&#34;__codelineno-15-9&#34; href=&#34;#__codelineno-15-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-10&#34;&gt;&lt;a id=&#34;__codelineno-15-10&#34; name=&#34;__codelineno-15-10&#34; href=&#34;#__codelineno-15-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_int_malloc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里出现了 arena 的概念：多线程情况下，为了提升性能，同时用多个 arena，每个 arena 用一把锁来保证多线程安全，从而使得多个线程可以同时从不同的 arena 中分配内存。这里先不讨论多线程的情况，先假设在单线程程序下，全局只用一个 arena：&lt;code&gt;main_arena&lt;/code&gt;，然后从里面分配内存。接下来看 &lt;code&gt;_int_malloc&lt;/code&gt; 的内部实现，可以看到它根据要分配的块的大小进入了不同的处理：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-16-1&#34;&gt;&lt;a id=&#34;__codelineno-16-1&#34; name=&#34;__codelineno-16-1&#34; href=&#34;#__codelineno-16-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in _int_malloc&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-2&#34;&gt;&lt;a id=&#34;__codelineno-16-2&#34; name=&#34;__codelineno-16-2&#34; href=&#34;#__codelineno-16-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_max_fast&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-3&#34;&gt;&lt;a id=&#34;__codelineno-16-3&#34; name=&#34;__codelineno-16-3&#34; href=&#34;#__codelineno-16-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-4&#34;&gt;&lt;a id=&#34;__codelineno-16-4&#34; name=&#34;__codelineno-16-4&#34; href=&#34;#__codelineno-16-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// fast bin handling&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-5&#34;&gt;&lt;a id=&#34;__codelineno-16-5&#34; name=&#34;__codelineno-16-5&#34; href=&#34;#__codelineno-16-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-6&#34;&gt;&lt;a id=&#34;__codelineno-16-6&#34; name=&#34;__codelineno-16-6&#34; href=&#34;#__codelineno-16-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-7&#34;&gt;&lt;a id=&#34;__codelineno-16-7&#34; name=&#34;__codelineno-16-7&#34; href=&#34;#__codelineno-16-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-8&#34;&gt;&lt;a id=&#34;__codelineno-16-8&#34; name=&#34;__codelineno-16-8&#34; href=&#34;#__codelineno-16-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-9&#34;&gt;&lt;a id=&#34;__codelineno-16-9&#34; name=&#34;__codelineno-16-9&#34; href=&#34;#__codelineno-16-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// small bin handling&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-10&#34;&gt;&lt;a id=&#34;__codelineno-16-10&#34; name=&#34;__codelineno-16-10&#34; href=&#34;#__codelineno-16-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-11&#34;&gt;&lt;a id=&#34;__codelineno-16-11&#34; name=&#34;__codelineno-16-11&#34; href=&#34;#__codelineno-16-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-12&#34;&gt;&lt;a id=&#34;__codelineno-16-12&#34; name=&#34;__codelineno-16-12&#34; href=&#34;#__codelineno-16-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-13&#34;&gt;&lt;a id=&#34;__codelineno-16-13&#34; name=&#34;__codelineno-16-13&#34; href=&#34;#__codelineno-16-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// consolidate fast bins to unsorted bins&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-14&#34;&gt;&lt;a id=&#34;__codelineno-16-14&#34; name=&#34;__codelineno-16-14&#34; href=&#34;#__codelineno-16-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-15&#34;&gt;&lt;a id=&#34;__codelineno-16-15&#34; name=&#34;__codelineno-16-15&#34; href=&#34;#__codelineno-16-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-16&#34;&gt;&lt;a id=&#34;__codelineno-16-16&#34; name=&#34;__codelineno-16-16&#34; href=&#34;#__codelineno-16-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-17&#34;&gt;&lt;a id=&#34;__codelineno-16-17&#34; name=&#34;__codelineno-16-17&#34; href=&#34;#__codelineno-16-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-18&#34;&gt;&lt;a id=&#34;__codelineno-16-18&#34; name=&#34;__codelineno-16-18&#34; href=&#34;#__codelineno-16-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// process unsorted bins&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-19&#34;&gt;&lt;a id=&#34;__codelineno-16-19&#34; name=&#34;__codelineno-16-19&#34; href=&#34;#__codelineno-16-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;malloc 把空闲的块分成四种类型来保存：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;fast bin: 类似前面的 tcache bin，把大小相同的空闲块放到链表中，再维护多个对应不同大小的空闲块的链表头指针，采用单向链表维护&lt;/li&gt;&lt;li&gt;small bin：small bin 也会把相同的空闲块放在链表中，但相邻的空闲块会被合并为更大的空闲块，采用双向链表维护&lt;/li&gt;&lt;li&gt;large bin：large bin 可能保存不同大小的空闲块，采用双向链表维护&lt;/li&gt;&lt;li&gt;unsorted bin：近期被 free 的空闲块，如果没有保存到 tcache，会被放到 unsorted bin 当中，留待后续的处理&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在讨论这些 bin 的维护方式之前，首先要知道 glibc 是怎么维护块的：空闲的时候是什么布局，被分配的时候又是什么布局？&lt;/p&gt;&lt;h2 id=&#34;块布局&#34;&gt;块布局&lt;a class=&#34;headerlink&#34; href=&#34;#块布局&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;glibc 每个空闲块（chunk）对应了下面的结构体 &lt;code&gt;malloc_chunk&lt;/code&gt;：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-17-1&#34;&gt;&lt;a id=&#34;__codelineno-17-1&#34; name=&#34;__codelineno-17-1&#34; href=&#34;#__codelineno-17-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-2&#34;&gt;&lt;a id=&#34;__codelineno-17-2&#34; name=&#34;__codelineno-17-2&#34; href=&#34;#__codelineno-17-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTERNAL_SIZE_T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunk_prev_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Size of previous chunk (if free). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-3&#34;&gt;&lt;a id=&#34;__codelineno-17-3&#34; name=&#34;__codelineno-17-3&#34; href=&#34;#__codelineno-17-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTERNAL_SIZE_T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunk_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Size in bytes, including overhead. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-4&#34;&gt;&lt;a id=&#34;__codelineno-17-4&#34; name=&#34;__codelineno-17-4&#34; href=&#34;#__codelineno-17-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-5&#34;&gt;&lt;a id=&#34;__codelineno-17-5&#34; name=&#34;__codelineno-17-5&#34; href=&#34;#__codelineno-17-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* double links -- used only if free. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-6&#34;&gt;&lt;a id=&#34;__codelineno-17-6&#34; name=&#34;__codelineno-17-6&#34; href=&#34;#__codelineno-17-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-7&#34;&gt;&lt;a id=&#34;__codelineno-17-7&#34; name=&#34;__codelineno-17-7&#34; href=&#34;#__codelineno-17-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-8&#34;&gt;&lt;a id=&#34;__codelineno-17-8&#34; name=&#34;__codelineno-17-8&#34; href=&#34;#__codelineno-17-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Only used for large blocks: pointer to next larger size. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-9&#34;&gt;&lt;a id=&#34;__codelineno-17-9&#34; name=&#34;__codelineno-17-9&#34; href=&#34;#__codelineno-17-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* double links -- used only if free. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-10&#34;&gt;&lt;a id=&#34;__codelineno-17-10&#34; name=&#34;__codelineno-17-10&#34; href=&#34;#__codelineno-17-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-11&#34;&gt;&lt;a id=&#34;__codelineno-17-11&#34; name=&#34;__codelineno-17-11&#34; href=&#34;#__codelineno-17-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它的字段如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;相邻的前一个空闲块的大小 &lt;code&gt;mchunk_prev_size&lt;/code&gt;，记录它是为了方便找到前一个空闲块的开头，这样合并相邻的空闲块就很简单&lt;/li&gt;&lt;li&gt;当前空闲块的大小 &lt;code&gt;mchunk_size&lt;/code&gt;，由于块的大小是对齐的，所以它的低位被用来记录 flag&lt;/li&gt;&lt;li&gt;&lt;code&gt;fd&lt;/code&gt; 和 &lt;code&gt;bk&lt;/code&gt;：small bin 和 large bin 需要用双向链表维护空闲块，指针就保存在这里&lt;/li&gt;&lt;li&gt;&lt;code&gt;fd_nextsize&lt;/code&gt; 和 &lt;code&gt;bk_next_size&lt;/code&gt;：large bin 需要用双向链表维护不同大小的空闲块，方便找到合适大小的空闲块&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这是空闲块的内存布局，那么被分配的内存呢？被分配的内存，相当于是如下的结构：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-18-1&#34;&gt;&lt;a id=&#34;__codelineno-18-1&#34; name=&#34;__codelineno-18-1&#34; href=&#34;#__codelineno-18-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-2&#34;&gt;&lt;a id=&#34;__codelineno-18-2&#34; name=&#34;__codelineno-18-2&#34; href=&#34;#__codelineno-18-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTERNAL_SIZE_T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunk_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Size in bytes, including overhead. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-3&#34;&gt;&lt;a id=&#34;__codelineno-18-3&#34; name=&#34;__codelineno-18-3&#34; href=&#34;#__codelineno-18-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc() returns pointer to payload */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-4&#34;&gt;&lt;a id=&#34;__codelineno-18-4&#34; name=&#34;__codelineno-18-4&#34; href=&#34;#__codelineno-18-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也就是说，&lt;code&gt;malloc()&lt;/code&gt; 返回的地址，等于空闲块里 &lt;code&gt;fd&lt;/code&gt; 所在的位置。被分配的块，除了用户请求的空间以外，只有前面的 &lt;code&gt;sizeof(size_t)&lt;/code&gt; 大小的空间是内存分配器带来的空间开销。块被释放以后，它被重新解释成 &lt;code&gt;malloc_chunk&lt;/code&gt; 结构体（注意它们的起始地址不同，&lt;code&gt;malloc_chunk&lt;/code&gt; 的地址是 malloc 返回的 &lt;code&gt;payload&lt;/code&gt; 地址减去 &lt;code&gt;2 * sizeof(size_t)&lt;/code&gt;，对应 &lt;code&gt;mchunk_prev_size&lt;/code&gt; 和 &lt;code&gt;mchunk_size&lt;/code&gt; 两个字段）。事实上，&lt;code&gt;mchunk_prev_size&lt;/code&gt; 保存在用户请求的空间的最后几个字节。内存布局如下：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-19-1&#34;&gt;&lt;a id=&#34;__codelineno-19-1&#34; name=&#34;__codelineno-19-1&#34; href=&#34;#__codelineno-19-1&#34;&gt;&lt;/a&gt; in-use chunk free chunk&lt;/span&gt;&lt;span id=&#34;__span-19-2&#34;&gt;&lt;a id=&#34;__codelineno-19-2&#34; name=&#34;__codelineno-19-2&#34; href=&#34;#__codelineno-19-2&#34;&gt;&lt;/a&gt;+-------------+ +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-3&#34;&gt;&lt;a id=&#34;__codelineno-19-3&#34; name=&#34;__codelineno-19-3&#34; href=&#34;#__codelineno-19-3&#34;&gt;&lt;/a&gt;| mchunk_size | | mchunk_size |&lt;/span&gt;&lt;span id=&#34;__span-19-4&#34;&gt;&lt;a id=&#34;__codelineno-19-4&#34; name=&#34;__codelineno-19-4&#34; href=&#34;#__codelineno-19-4&#34;&gt;&lt;/a&gt;+-------------+ +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-5&#34;&gt;&lt;a id=&#34;__codelineno-19-5&#34; name=&#34;__codelineno-19-5&#34; href=&#34;#__codelineno-19-5&#34;&gt;&lt;/a&gt;| payload | | fd |&lt;/span&gt;&lt;span id=&#34;__span-19-6&#34;&gt;&lt;a id=&#34;__codelineno-19-6&#34; name=&#34;__codelineno-19-6&#34; href=&#34;#__codelineno-19-6&#34;&gt;&lt;/a&gt;| | +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-7&#34;&gt;&lt;a id=&#34;__codelineno-19-7&#34; name=&#34;__codelineno-19-7&#34; href=&#34;#__codelineno-19-7&#34;&gt;&lt;/a&gt;| | | bk |&lt;/span&gt;&lt;span id=&#34;__span-19-8&#34;&gt;&lt;a id=&#34;__codelineno-19-8&#34; name=&#34;__codelineno-19-8&#34; href=&#34;#__codelineno-19-8&#34;&gt;&lt;/a&gt;| | +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-9&#34;&gt;&lt;a id=&#34;__codelineno-19-9&#34; name=&#34;__codelineno-19-9&#34; href=&#34;#__codelineno-19-9&#34;&gt;&lt;/a&gt;| | | fd_nextsize |&lt;/span&gt;&lt;span id=&#34;__span-19-10&#34;&gt;&lt;a id=&#34;__codelineno-19-10&#34; name=&#34;__codelineno-19-10&#34; href=&#34;#__codelineno-19-10&#34;&gt;&lt;/a&gt;| | ---&amp;gt; +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-11&#34;&gt;&lt;a id=&#34;__codelineno-19-11&#34; name=&#34;__codelineno-19-11&#34; href=&#34;#__codelineno-19-11&#34;&gt;&lt;/a&gt;| | | bk_nextsize |&lt;/span&gt;&lt;span id=&#34;__span-19-12&#34;&gt;&lt;a id=&#34;__codelineno-19-12&#34; name=&#34;__codelineno-19-12&#34; href=&#34;#__codelineno-19-12&#34;&gt;&lt;/a&gt;| | +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-13&#34;&gt;&lt;a id=&#34;__codelineno-19-13&#34; name=&#34;__codelineno-19-13&#34; href=&#34;#__codelineno-19-13&#34;&gt;&lt;/a&gt;| | | unused |&lt;/span&gt;&lt;span id=&#34;__span-19-14&#34;&gt;&lt;a id=&#34;__codelineno-19-14&#34; name=&#34;__codelineno-19-14&#34; href=&#34;#__codelineno-19-14&#34;&gt;&lt;/a&gt;| | | |&lt;/span&gt;&lt;span id=&#34;__span-19-15&#34;&gt;&lt;a id=&#34;__codelineno-19-15&#34; name=&#34;__codelineno-19-15&#34; href=&#34;#__codelineno-19-15&#34;&gt;&lt;/a&gt;| | | |&lt;/span&gt;&lt;span id=&#34;__span-19-16&#34;&gt;&lt;a id=&#34;__codelineno-19-16&#34; name=&#34;__codelineno-19-16&#34; href=&#34;#__codelineno-19-16&#34;&gt;&lt;/a&gt;| | | |&lt;/span&gt;&lt;span id=&#34;__span-19-17&#34;&gt;&lt;a id=&#34;__codelineno-19-17&#34; name=&#34;__codelineno-19-17&#34; href=&#34;#__codelineno-19-17&#34;&gt;&lt;/a&gt;| | +------------------+&lt;/span&gt;&lt;span id=&#34;__span-19-18&#34;&gt;&lt;a id=&#34;__codelineno-19-18&#34; name=&#34;__codelineno-19-18&#34; href=&#34;#__codelineno-19-18&#34;&gt;&lt;/a&gt;| | | mchunk_prev_size |&lt;/span&gt;&lt;span id=&#34;__span-19-19&#34;&gt;&lt;a id=&#34;__codelineno-19-19&#34; name=&#34;__codelineno-19-19&#34; href=&#34;#__codelineno-19-19&#34;&gt;&lt;/a&gt;+-------------+ +------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因此为了在 payload 和 &lt;code&gt;malloc_chunk&lt;/code&gt; 指针之间转换，代码中设计了两个宏来简化指针运算：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-20-1&#34;&gt;&lt;a id=&#34;__codelineno-20-1&#34; name=&#34;__codelineno-20-1&#34; href=&#34;#__codelineno-20-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* conversion from malloc headers to user pointers, and back */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-20-2&#34;&gt;&lt;a id=&#34;__codelineno-20-2&#34; name=&#34;__codelineno-20-2&#34; href=&#34;#__codelineno-20-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-20-3&#34;&gt;&lt;a id=&#34;__codelineno-20-3&#34; name=&#34;__codelineno-20-3&#34; href=&#34;#__codelineno-20-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define chunk2mem(p) ((void*)((char*)(p) + 2*SIZE_SZ))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-20-4&#34;&gt;&lt;a id=&#34;__codelineno-20-4&#34; name=&#34;__codelineno-20-4&#34; href=&#34;#__codelineno-20-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define mem2chunk(mem) ((mchunkptr)((char*)(mem) - 2*SIZE_SZ))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;知道了空闲块的维护方式，由于各个 bin 维护的就是这些空闲块，所以接下来分别看这几种 bin 的维护方式。&lt;/p&gt;&lt;h2 id=&#34;fast-bin&#34;&gt;fast bin&lt;a class=&#34;headerlink&#34; href=&#34;#fast-bin&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;fast bin 的维护方式和 tcache 类似，它把不同大小的空闲块按照大小分成多个 bin，每个 bin 记录在一个单向链表当中，然后用一个数组记录各种 bin 大小的链表头，这里直接用的就是 &lt;code&gt;malloc_chunk&lt;/code&gt; 指针数组：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-21-1&#34;&gt;&lt;a id=&#34;__codelineno-21-1&#34; name=&#34;__codelineno-21-1&#34; href=&#34;#__codelineno-21-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mfastbinptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-2&#34;&gt;&lt;a id=&#34;__codelineno-21-2&#34; name=&#34;__codelineno-21-2&#34; href=&#34;#__codelineno-21-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-3&#34;&gt;&lt;a id=&#34;__codelineno-21-3&#34; name=&#34;__codelineno-21-3&#34; href=&#34;#__codelineno-21-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-4&#34;&gt;&lt;a id=&#34;__codelineno-21-4&#34; name=&#34;__codelineno-21-4&#34; href=&#34;#__codelineno-21-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* other fields are omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-5&#34;&gt;&lt;a id=&#34;__codelineno-21-5&#34; name=&#34;__codelineno-21-5&#34; href=&#34;#__codelineno-21-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Fastbins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-6&#34;&gt;&lt;a id=&#34;__codelineno-21-6&#34; name=&#34;__codelineno-21-6&#34; href=&#34;#__codelineno-21-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mfastbinptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbinsY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NFASTBINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-21-7&#34;&gt;&lt;a id=&#34;__codelineno-21-7&#34; name=&#34;__codelineno-21-7&#34; href=&#34;#__codelineno-21-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 64 位下，默认 &lt;code&gt;NFASTBINS&lt;/code&gt; 等于 10，计算方式如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;最大的由 fast bin 管理的块大小等于 &lt;code&gt;80 * sizeof(size_t) / 4 + sizeof(size_t)&lt;/code&gt; 向上取整到 16 的倍数，在 64 位机器上等于 176 字节&lt;/li&gt;&lt;li&gt;分配粒度从最小的 32 字节到最大的 176 字节，每 16 字节一个 bin，一共有 10 个 bin（&lt;code&gt;(176 - 32) / 16 + 1 = 10&lt;/code&gt;）&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;不过默认情况下，fast bin 管理的块大小通过 &lt;code&gt;set_max_fast(DEFAULT_MXFAST)&lt;/code&gt; 被限制在 &lt;code&gt;DEFAULT_MXFAST&lt;/code&gt; 附近，这个值等于 &lt;code&gt;64 * sizeof(size_t) / 4&lt;/code&gt;，加上 &lt;code&gt;sizeof(size_t)&lt;/code&gt; 再向下取整到 16 的倍数，就是 128 字节。此时，只有前 7 个 bin 可以被用到（32 字节到 128 字节，每 16 字节一个 bin，&lt;code&gt;(128 - 32) / 16 + 1 = 7&lt;/code&gt;），即 &lt;code&gt;malloc(120)&lt;/code&gt; 或更小的分配会保存到 fast bin 中，&lt;code&gt;malloc(121)&lt;/code&gt; 或更大的分配则不会。&lt;/p&gt;&lt;h3 id=&#34;malloc_2&#34;&gt;malloc&lt;a class=&#34;headerlink&#34; href=&#34;#malloc_2&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;分配的时候，和 tcache 类似，也是计算出 fastbin 的 index，然后去找对应的链表，如果链表非空，则从链表头取出空闲块用于分配：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-22-1&#34;&gt;&lt;a id=&#34;__codelineno-22-1&#34; name=&#34;__codelineno-22-1&#34; href=&#34;#__codelineno-22-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define fastbin(ar_ptr, idx) ((ar_ptr)-&amp;gt;fastbinsY[idx])&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-2&#34;&gt;&lt;a id=&#34;__codelineno-22-2&#34; name=&#34;__codelineno-22-2&#34; href=&#34;#__codelineno-22-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-3&#34;&gt;&lt;a id=&#34;__codelineno-22-3&#34; name=&#34;__codelineno-22-3&#34; href=&#34;#__codelineno-22-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* offset 2 to use otherwise unindexable first 2 bins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-4&#34;&gt;&lt;a id=&#34;__codelineno-22-4&#34; name=&#34;__codelineno-22-4&#34; href=&#34;#__codelineno-22-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define fastbin_index(sz) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-5&#34;&gt;&lt;a id=&#34;__codelineno-22-5&#34; name=&#34;__codelineno-22-5&#34; href=&#34;#__codelineno-22-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ((((unsigned int) (sz)) &amp;gt;&amp;gt; (SIZE_SZ == 8 ? 4 : 3)) - 2)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-6&#34;&gt;&lt;a id=&#34;__codelineno-22-6&#34; name=&#34;__codelineno-22-6&#34; href=&#34;#__codelineno-22-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-7&#34;&gt;&lt;a id=&#34;__codelineno-22-7&#34; name=&#34;__codelineno-22-7&#34; href=&#34;#__codelineno-22-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in _int_malloc, allocate using fastbin&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-8&#34;&gt;&lt;a id=&#34;__codelineno-22-8&#34; name=&#34;__codelineno-22-8&#34; href=&#34;#__codelineno-22-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-9&#34;&gt;&lt;a id=&#34;__codelineno-22-9&#34; name=&#34;__codelineno-22-9&#34; href=&#34;#__codelineno-22-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;mfastbinptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-10&#34;&gt;&lt;a id=&#34;__codelineno-22-10&#34; name=&#34;__codelineno-22-10&#34; href=&#34;#__codelineno-22-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-11&#34;&gt;&lt;a id=&#34;__codelineno-22-11&#34; name=&#34;__codelineno-22-11&#34; href=&#34;#__codelineno-22-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-12&#34;&gt;&lt;a id=&#34;__codelineno-22-12&#34; name=&#34;__codelineno-22-12&#34; href=&#34;#__codelineno-22-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-13&#34;&gt;&lt;a id=&#34;__codelineno-22-13&#34; name=&#34;__codelineno-22-13&#34; href=&#34;#__codelineno-22-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-14&#34;&gt;&lt;a id=&#34;__codelineno-22-14&#34; name=&#34;__codelineno-22-14&#34; href=&#34;#__codelineno-22-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-15&#34;&gt;&lt;a id=&#34;__codelineno-22-15&#34; name=&#34;__codelineno-22-15&#34; href=&#34;#__codelineno-22-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SINGLE_THREAD_P&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-16&#34;&gt;&lt;a id=&#34;__codelineno-22-16&#34; name=&#34;__codelineno-22-16&#34; href=&#34;#__codelineno-22-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-17&#34;&gt;&lt;a id=&#34;__codelineno-22-17&#34; name=&#34;__codelineno-22-17&#34; href=&#34;#__codelineno-22-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-18&#34;&gt;&lt;a id=&#34;__codelineno-22-18&#34; name=&#34;__codelineno-22-18&#34; href=&#34;#__codelineno-22-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;REMOVE_FB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-19&#34;&gt;&lt;a id=&#34;__codelineno-22-19&#34; name=&#34;__codelineno-22-19&#34; href=&#34;#__codelineno-22-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_likely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-20&#34;&gt;&lt;a id=&#34;__codelineno-22-20&#34; name=&#34;__codelineno-22-20&#34; href=&#34;#__codelineno-22-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-21&#34;&gt;&lt;a id=&#34;__codelineno-22-21&#34; name=&#34;__codelineno-22-21&#34; href=&#34;#__codelineno-22-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-22&#34;&gt;&lt;a id=&#34;__codelineno-22-22&#34; name=&#34;__codelineno-22-22&#34; href=&#34;#__codelineno-22-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__builtin_expect&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-23&#34;&gt;&lt;a id=&#34;__codelineno-22-23&#34; name=&#34;__codelineno-22-23&#34; href=&#34;#__codelineno-22-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;malloc(): memory corruption (fast)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-24&#34;&gt;&lt;a id=&#34;__codelineno-22-24&#34; name=&#34;__codelineno-22-24&#34; href=&#34;#__codelineno-22-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_remalloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-25&#34;&gt;&lt;a id=&#34;__codelineno-22-25&#34; name=&#34;__codelineno-22-25&#34; href=&#34;#__codelineno-22-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* While we&amp;#39;re here, if we see other chunks of the same size,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-26&#34;&gt;&lt;a id=&#34;__codelineno-22-26&#34; name=&#34;__codelineno-22-26&#34; href=&#34;#__codelineno-22-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; stash them in the tcache. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-27&#34;&gt;&lt;a id=&#34;__codelineno-22-27&#34; name=&#34;__codelineno-22-27&#34; href=&#34;#__codelineno-22-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csize2tidx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-28&#34;&gt;&lt;a id=&#34;__codelineno-22-28&#34; name=&#34;__codelineno-22-28&#34; href=&#34;#__codelineno-22-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_bins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-29&#34;&gt;&lt;a id=&#34;__codelineno-22-29&#34; name=&#34;__codelineno-22-29&#34; href=&#34;#__codelineno-22-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-30&#34;&gt;&lt;a id=&#34;__codelineno-22-30&#34; name=&#34;__codelineno-22-30&#34; href=&#34;#__codelineno-22-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-31&#34;&gt;&lt;a id=&#34;__codelineno-22-31&#34; name=&#34;__codelineno-22-31&#34; href=&#34;#__codelineno-22-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-32&#34;&gt;&lt;a id=&#34;__codelineno-22-32&#34; name=&#34;__codelineno-22-32&#34; href=&#34;#__codelineno-22-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* While bin not empty and tcache not full, copy chunks. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-33&#34;&gt;&lt;a id=&#34;__codelineno-22-33&#34; name=&#34;__codelineno-22-33&#34; href=&#34;#__codelineno-22-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_count&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-34&#34;&gt;&lt;a id=&#34;__codelineno-22-34&#34; name=&#34;__codelineno-22-34&#34; href=&#34;#__codelineno-22-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-35&#34;&gt;&lt;a id=&#34;__codelineno-22-35&#34; name=&#34;__codelineno-22-35&#34; href=&#34;#__codelineno-22-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-36&#34;&gt;&lt;a id=&#34;__codelineno-22-36&#34; name=&#34;__codelineno-22-36&#34; href=&#34;#__codelineno-22-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SINGLE_THREAD_P&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-37&#34;&gt;&lt;a id=&#34;__codelineno-22-37&#34; name=&#34;__codelineno-22-37&#34; href=&#34;#__codelineno-22-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-38&#34;&gt;&lt;a id=&#34;__codelineno-22-38&#34; name=&#34;__codelineno-22-38&#34; href=&#34;#__codelineno-22-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-39&#34;&gt;&lt;a id=&#34;__codelineno-22-39&#34; name=&#34;__codelineno-22-39&#34; href=&#34;#__codelineno-22-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-40&#34;&gt;&lt;a id=&#34;__codelineno-22-40&#34; name=&#34;__codelineno-22-40&#34; href=&#34;#__codelineno-22-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;REMOVE_FB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-41&#34;&gt;&lt;a id=&#34;__codelineno-22-41&#34; name=&#34;__codelineno-22-41&#34; href=&#34;#__codelineno-22-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-42&#34;&gt;&lt;a id=&#34;__codelineno-22-42&#34; name=&#34;__codelineno-22-42&#34; href=&#34;#__codelineno-22-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-43&#34;&gt;&lt;a id=&#34;__codelineno-22-43&#34; name=&#34;__codelineno-22-43&#34; href=&#34;#__codelineno-22-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-44&#34;&gt;&lt;a id=&#34;__codelineno-22-44&#34; name=&#34;__codelineno-22-44&#34; href=&#34;#__codelineno-22-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_put&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-45&#34;&gt;&lt;a id=&#34;__codelineno-22-45&#34; name=&#34;__codelineno-22-45&#34; href=&#34;#__codelineno-22-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-46&#34;&gt;&lt;a id=&#34;__codelineno-22-46&#34; name=&#34;__codelineno-22-46&#34; href=&#34;#__codelineno-22-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-47&#34;&gt;&lt;a id=&#34;__codelineno-22-47&#34; name=&#34;__codelineno-22-47&#34; href=&#34;#__codelineno-22-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-48&#34;&gt;&lt;a id=&#34;__codelineno-22-48&#34; name=&#34;__codelineno-22-48&#34; href=&#34;#__codelineno-22-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-49&#34;&gt;&lt;a id=&#34;__codelineno-22-49&#34; name=&#34;__codelineno-22-49&#34; href=&#34;#__codelineno-22-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-50&#34;&gt;&lt;a id=&#34;__codelineno-22-50&#34; name=&#34;__codelineno-22-50&#34; href=&#34;#__codelineno-22-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-22-51&#34;&gt;&lt;a id=&#34;__codelineno-22-51&#34; name=&#34;__codelineno-22-51&#34; href=&#34;#__codelineno-22-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它的过程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使用 &lt;code&gt;fastbin_index (nb)&lt;/code&gt; 根据块的大小计算出 fast bin 的 index，然后 &lt;code&gt;fastbin (av, idx)&lt;/code&gt; 对应 fast bin 的链表头指针&lt;/li&gt;&lt;li&gt;如果链表非空，说明可以从 fast bin 分配空闲块，此时就把链表头的结点弹出：&lt;code&gt;*fb = victim-&amp;gt;fd&lt;/code&gt;（单线程）或 &lt;code&gt;REMOVE_FB (fb, pp, victim)&lt;/code&gt;（多线程）；只用到了单向链表的 &lt;code&gt;fd&lt;/code&gt; 指针，其余的字段没有用到&lt;/li&gt;&lt;li&gt;进行一系列的安全检查：&lt;code&gt;__builtin_expect&lt;/code&gt; 和 &lt;code&gt;check_remalloced_chunk&lt;/code&gt;&lt;/li&gt;&lt;li&gt;检查 tcache 对应的 bin，如果它还没有满，就把 fast bin 链表中的元素挪到 tcache 当中&lt;/li&gt;&lt;li&gt;把 payload 地址通过 &lt;code&gt;chunk2mem&lt;/code&gt; 计算出来，返回给 malloc 调用者&lt;/li&gt;&lt;li&gt;调用 &lt;code&gt;alloc_perturb&lt;/code&gt; 往新分配的空间内写入垃圾数据（可选），避免泄露之前的数据&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;可以看到，这个过程比较简单，和 tcache 类似，只不过它从 thread local 的 tcache 改成了支持多线程的版本，同时为了支持多线程访问，使用 CAS 原子指令来更新链表头部：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-23-1&#34;&gt;&lt;a id=&#34;__codelineno-23-1&#34; name=&#34;__codelineno-23-1&#34; href=&#34;#__codelineno-23-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define REMOVE_FB(fb, victim, pp) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-2&#34;&gt;&lt;a id=&#34;__codelineno-23-2&#34; name=&#34;__codelineno-23-2&#34; href=&#34;#__codelineno-23-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; do \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-3&#34;&gt;&lt;a id=&#34;__codelineno-23-3&#34; name=&#34;__codelineno-23-3&#34; href=&#34;#__codelineno-23-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; { \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-4&#34;&gt;&lt;a id=&#34;__codelineno-23-4&#34; name=&#34;__codelineno-23-4&#34; href=&#34;#__codelineno-23-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; victim = pp; \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-5&#34;&gt;&lt;a id=&#34;__codelineno-23-5&#34; name=&#34;__codelineno-23-5&#34; href=&#34;#__codelineno-23-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; if (victim == NULL) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-6&#34;&gt;&lt;a id=&#34;__codelineno-23-6&#34; name=&#34;__codelineno-23-6&#34; href=&#34;#__codelineno-23-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; break; \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-7&#34;&gt;&lt;a id=&#34;__codelineno-23-7&#34; name=&#34;__codelineno-23-7&#34; href=&#34;#__codelineno-23-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; } \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-23-8&#34;&gt;&lt;a id=&#34;__codelineno-23-8&#34; name=&#34;__codelineno-23-8&#34; href=&#34;#__codelineno-23-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; while ((pp = catomic_compare_and_exchange_val_acq (fb, victim-&amp;gt;fd, victim)) != victim);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;正因如此，这个分配过程才能做到比较快，所以这样的分配方法叫做 fast bin。&lt;/p&gt;&lt;h3 id=&#34;free_1&#34;&gt;free&lt;a class=&#34;headerlink&#34; href=&#34;#free_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来分析一下 free 的时候，空闲块是如何进入 fast bin 的：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-24-1&#34;&gt;&lt;a id=&#34;__codelineno-24-1&#34; name=&#34;__codelineno-24-1&#34; href=&#34;#__codelineno-24-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in _int_free, after tcache handling&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-2&#34;&gt;&lt;a id=&#34;__codelineno-24-2&#34; name=&#34;__codelineno-24-2&#34; href=&#34;#__codelineno-24-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_max_fast&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-3&#34;&gt;&lt;a id=&#34;__codelineno-24-3&#34; name=&#34;__codelineno-24-3&#34; href=&#34;#__codelineno-24-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-4&#34;&gt;&lt;a id=&#34;__codelineno-24-4&#34; name=&#34;__codelineno-24-4&#34; href=&#34;#__codelineno-24-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-5&#34;&gt;&lt;a id=&#34;__codelineno-24-5&#34; name=&#34;__codelineno-24-5&#34; href=&#34;#__codelineno-24-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SIZE_SZ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-6&#34;&gt;&lt;a id=&#34;__codelineno-24-6&#34; name=&#34;__codelineno-24-6&#34; href=&#34;#__codelineno-24-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-7&#34;&gt;&lt;a id=&#34;__codelineno-24-7&#34; name=&#34;__codelineno-24-7&#34; href=&#34;#__codelineno-24-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;atomic_store_relaxed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;have_fastchunks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-8&#34;&gt;&lt;a id=&#34;__codelineno-24-8&#34; name=&#34;__codelineno-24-8&#34; href=&#34;#__codelineno-24-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-9&#34;&gt;&lt;a id=&#34;__codelineno-24-9&#34; name=&#34;__codelineno-24-9&#34; href=&#34;#__codelineno-24-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-10&#34;&gt;&lt;a id=&#34;__codelineno-24-10&#34; name=&#34;__codelineno-24-10&#34; href=&#34;#__codelineno-24-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-11&#34;&gt;&lt;a id=&#34;__codelineno-24-11&#34; name=&#34;__codelineno-24-11&#34; href=&#34;#__codelineno-24-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Atomically link P to its fastbin: P-&amp;gt;FD = *FB; *FB = P; */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-12&#34;&gt;&lt;a id=&#34;__codelineno-24-12&#34; name=&#34;__codelineno-24-12&#34; href=&#34;#__codelineno-24-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-13&#34;&gt;&lt;a id=&#34;__codelineno-24-13&#34; name=&#34;__codelineno-24-13&#34; href=&#34;#__codelineno-24-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-14&#34;&gt;&lt;a id=&#34;__codelineno-24-14&#34; name=&#34;__codelineno-24-14&#34; href=&#34;#__codelineno-24-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SINGLE_THREAD_P&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-15&#34;&gt;&lt;a id=&#34;__codelineno-24-15&#34; name=&#34;__codelineno-24-15&#34; href=&#34;#__codelineno-24-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-16&#34;&gt;&lt;a id=&#34;__codelineno-24-16&#34; name=&#34;__codelineno-24-16&#34; href=&#34;#__codelineno-24-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Check that the top of the bin is not the record we are going to&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-17&#34;&gt;&lt;a id=&#34;__codelineno-24-17&#34; name=&#34;__codelineno-24-17&#34; href=&#34;#__codelineno-24-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; add (i.e., double free). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-18&#34;&gt;&lt;a id=&#34;__codelineno-24-18&#34; name=&#34;__codelineno-24-18&#34; href=&#34;#__codelineno-24-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__builtin_expect&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-19&#34;&gt;&lt;a id=&#34;__codelineno-24-19&#34; name=&#34;__codelineno-24-19&#34; href=&#34;#__codelineno-24-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;double free or corruption (fasttop)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-20&#34;&gt;&lt;a id=&#34;__codelineno-24-20&#34; name=&#34;__codelineno-24-20&#34; href=&#34;#__codelineno-24-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-21&#34;&gt;&lt;a id=&#34;__codelineno-24-21&#34; name=&#34;__codelineno-24-21&#34; href=&#34;#__codelineno-24-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-22&#34;&gt;&lt;a id=&#34;__codelineno-24-22&#34; name=&#34;__codelineno-24-22&#34; href=&#34;#__codelineno-24-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-23&#34;&gt;&lt;a id=&#34;__codelineno-24-23&#34; name=&#34;__codelineno-24-23&#34; href=&#34;#__codelineno-24-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-24&#34;&gt;&lt;a id=&#34;__codelineno-24-24&#34; name=&#34;__codelineno-24-24&#34; href=&#34;#__codelineno-24-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-25&#34;&gt;&lt;a id=&#34;__codelineno-24-25&#34; name=&#34;__codelineno-24-25&#34; href=&#34;#__codelineno-24-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-26&#34;&gt;&lt;a id=&#34;__codelineno-24-26&#34; name=&#34;__codelineno-24-26&#34; href=&#34;#__codelineno-24-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Check that the top of the bin is not the record we are going to&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-27&#34;&gt;&lt;a id=&#34;__codelineno-24-27&#34; name=&#34;__codelineno-24-27&#34; href=&#34;#__codelineno-24-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; add (i.e., double free). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-28&#34;&gt;&lt;a id=&#34;__codelineno-24-28&#34; name=&#34;__codelineno-24-28&#34; href=&#34;#__codelineno-24-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__builtin_expect&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-29&#34;&gt;&lt;a id=&#34;__codelineno-24-29&#34; name=&#34;__codelineno-24-29&#34; href=&#34;#__codelineno-24-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;double free or corruption (fasttop)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-30&#34;&gt;&lt;a id=&#34;__codelineno-24-30&#34; name=&#34;__codelineno-24-30&#34; href=&#34;#__codelineno-24-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-31&#34;&gt;&lt;a id=&#34;__codelineno-24-31&#34; name=&#34;__codelineno-24-31&#34; href=&#34;#__codelineno-24-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-32&#34;&gt;&lt;a id=&#34;__codelineno-24-32&#34; name=&#34;__codelineno-24-32&#34; href=&#34;#__codelineno-24-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;catomic_compare_and_exchange_val_rel&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-33&#34;&gt;&lt;a id=&#34;__codelineno-24-33&#34; name=&#34;__codelineno-24-33&#34; href=&#34;#__codelineno-24-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-34&#34;&gt;&lt;a id=&#34;__codelineno-24-34&#34; name=&#34;__codelineno-24-34&#34; href=&#34;#__codelineno-24-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-35&#34;&gt;&lt;a id=&#34;__codelineno-24-35&#34; name=&#34;__codelineno-24-35&#34; href=&#34;#__codelineno-24-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-24-36&#34;&gt;&lt;a id=&#34;__codelineno-24-36&#34; name=&#34;__codelineno-24-36&#34; href=&#34;#__codelineno-24-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，它的逻辑很简单：如果大小合适，就直接添加到 fast bin 的链表头里，没有 tcache 那样的长度限制，多线程场景下依然是用 CAS 来实现原子的链表插入。&lt;/p&gt;&lt;p&gt;相比 tcache，fast bin 的 double free 检查更加简陋：它只能防护连续两次 free 同一个块，只判断了要插入链表的块是否在链表头，而不会检查是否在链表中间。&lt;/p&gt;&lt;h3 id=&#34;实验_1&#34;&gt;实验&lt;a class=&#34;headerlink&#34; href=&#34;#实验_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来写一段代码来观察 fast bin 的更新过程：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;由于 fastbin 保存在 &lt;code&gt;main_arena&lt;/code&gt; 中，所以我们需要找到 &lt;code&gt;main_arena&lt;/code&gt; 的运行时地址&lt;/li&gt;&lt;li&gt;&lt;code&gt;main_arena&lt;/code&gt; 不在 libc 符号表中，不能直接找到它的地址，此时可以通过 libc 的调试符号，找到它相对 image base 的 offset 是 &lt;code&gt;0x1ecb80&lt;/code&gt;&lt;/li&gt;&lt;li&gt;再找一个在符号表中的符号 &lt;code&gt;_IO_2_1_stdout_&lt;/code&gt;，它相对 image base 的 offset 是 &lt;code&gt;0x1ed6a0&lt;/code&gt;&lt;/li&gt;&lt;li&gt;根据以上信息，就可以在运行时找到 libc 的 image base 地址，从而推断 &lt;code&gt;main_arena&lt;/code&gt; 的地址，进而找到所有的 fast bin&lt;/li&gt;&lt;li&gt;下面写一段代码，观察空闲块进入 fast bin 的过程&lt;/li&gt;&lt;/ol&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-25-1&#34;&gt;&lt;a id=&#34;__codelineno-25-1&#34; name=&#34;__codelineno-25-1&#34; href=&#34;#__codelineno-25-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stddef.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-2&#34;&gt;&lt;a id=&#34;__codelineno-25-2&#34; name=&#34;__codelineno-25-2&#34; href=&#34;#__codelineno-25-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-3&#34;&gt;&lt;a id=&#34;__codelineno-25-3&#34; name=&#34;__codelineno-25-3&#34; href=&#34;#__codelineno-25-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-4&#34;&gt;&lt;a id=&#34;__codelineno-25-4&#34; name=&#34;__codelineno-25-4&#34; href=&#34;#__codelineno-25-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-5&#34;&gt;&lt;a id=&#34;__codelineno-25-5&#34; name=&#34;__codelineno-25-5&#34; href=&#34;#__codelineno-25-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-6&#34;&gt;&lt;a id=&#34;__codelineno-25-6&#34; name=&#34;__codelineno-25-6&#34; href=&#34;#__codelineno-25-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-7&#34;&gt;&lt;a id=&#34;__codelineno-25-7&#34; name=&#34;__codelineno-25-7&#34; href=&#34;#__codelineno-25-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunk_prev_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Size of previous chunk (if free). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-8&#34;&gt;&lt;a id=&#34;__codelineno-25-8&#34; name=&#34;__codelineno-25-8&#34; href=&#34;#__codelineno-25-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunk_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Size in bytes, including overhead. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-9&#34;&gt;&lt;a id=&#34;__codelineno-25-9&#34; name=&#34;__codelineno-25-9&#34; href=&#34;#__codelineno-25-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-10&#34;&gt;&lt;a id=&#34;__codelineno-25-10&#34; name=&#34;__codelineno-25-10&#34; href=&#34;#__codelineno-25-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* double links -- used only if free. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-11&#34;&gt;&lt;a id=&#34;__codelineno-25-11&#34; name=&#34;__codelineno-25-11&#34; href=&#34;#__codelineno-25-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-12&#34;&gt;&lt;a id=&#34;__codelineno-25-12&#34; name=&#34;__codelineno-25-12&#34; href=&#34;#__codelineno-25-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-13&#34;&gt;&lt;a id=&#34;__codelineno-25-13&#34; name=&#34;__codelineno-25-13&#34; href=&#34;#__codelineno-25-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Only used for large blocks: pointer to next larger size. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-14&#34;&gt;&lt;a id=&#34;__codelineno-25-14&#34; name=&#34;__codelineno-25-14&#34; href=&#34;#__codelineno-25-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* double links -- used only if free. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-15&#34;&gt;&lt;a id=&#34;__codelineno-25-15&#34; name=&#34;__codelineno-25-15&#34; href=&#34;#__codelineno-25-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-16&#34;&gt;&lt;a id=&#34;__codelineno-25-16&#34; name=&#34;__codelineno-25-16&#34; href=&#34;#__codelineno-25-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-17&#34;&gt;&lt;a id=&#34;__codelineno-25-17&#34; name=&#34;__codelineno-25-17&#34; href=&#34;#__codelineno-25-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-18&#34;&gt;&lt;a id=&#34;__codelineno-25-18&#34; name=&#34;__codelineno-25-18&#34; href=&#34;#__codelineno-25-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* offset 2 to use otherwise unindexable first 2 bins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-19&#34;&gt;&lt;a id=&#34;__codelineno-25-19&#34; name=&#34;__codelineno-25-19&#34; href=&#34;#__codelineno-25-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define fastbin_index(sz) ((((unsigned int)(sz)) &amp;gt;&amp;gt; (SIZE_SZ == 8 ? 4 : 3)) - 2)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-20&#34;&gt;&lt;a id=&#34;__codelineno-25-20&#34; name=&#34;__codelineno-25-20&#34; href=&#34;#__codelineno-25-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-21&#34;&gt;&lt;a id=&#34;__codelineno-25-21&#34; name=&#34;__codelineno-25-21&#34; href=&#34;#__codelineno-25-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define INTERNAL_SIZE_T size_t&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-22&#34;&gt;&lt;a id=&#34;__codelineno-25-22&#34; name=&#34;__codelineno-25-22&#34; href=&#34;#__codelineno-25-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-23&#34;&gt;&lt;a id=&#34;__codelineno-25-23&#34; name=&#34;__codelineno-25-23&#34; href=&#34;#__codelineno-25-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* MALLOC_ALIGNMENT equals to 16 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-24&#34;&gt;&lt;a id=&#34;__codelineno-25-24&#34; name=&#34;__codelineno-25-24&#34; href=&#34;#__codelineno-25-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MALLOC_ALIGNMENT \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-25&#34;&gt;&lt;a id=&#34;__codelineno-25-25&#34; name=&#34;__codelineno-25-25&#34; href=&#34;#__codelineno-25-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (2 * SIZE_SZ &amp;lt; __alignof__(long double) ? __alignof__(long double) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-26&#34;&gt;&lt;a id=&#34;__codelineno-25-26&#34; name=&#34;__codelineno-25-26&#34; href=&#34;#__codelineno-25-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : 2 * SIZE_SZ)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-27&#34;&gt;&lt;a id=&#34;__codelineno-25-27&#34; name=&#34;__codelineno-25-27&#34; href=&#34;#__codelineno-25-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-28&#34;&gt;&lt;a id=&#34;__codelineno-25-28&#34; name=&#34;__codelineno-25-28&#34; href=&#34;#__codelineno-25-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* The corresponding word size. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-29&#34;&gt;&lt;a id=&#34;__codelineno-25-29&#34; name=&#34;__codelineno-25-29&#34; href=&#34;#__codelineno-25-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* SIZE_SZ equals to 8 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-30&#34;&gt;&lt;a id=&#34;__codelineno-25-30&#34; name=&#34;__codelineno-25-30&#34; href=&#34;#__codelineno-25-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define SIZE_SZ (sizeof(INTERNAL_SIZE_T))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-31&#34;&gt;&lt;a id=&#34;__codelineno-25-31&#34; name=&#34;__codelineno-25-31&#34; href=&#34;#__codelineno-25-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-32&#34;&gt;&lt;a id=&#34;__codelineno-25-32&#34; name=&#34;__codelineno-25-32&#34; href=&#34;#__codelineno-25-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* The corresponding bit mask value. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-33&#34;&gt;&lt;a id=&#34;__codelineno-25-33&#34; name=&#34;__codelineno-25-33&#34; href=&#34;#__codelineno-25-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* MALLOC_ALIGN_MASK equals to 15 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-34&#34;&gt;&lt;a id=&#34;__codelineno-25-34&#34; name=&#34;__codelineno-25-34&#34; href=&#34;#__codelineno-25-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MALLOC_ALIGN_MASK (MALLOC_ALIGNMENT - 1)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-35&#34;&gt;&lt;a id=&#34;__codelineno-25-35&#34; name=&#34;__codelineno-25-35&#34; href=&#34;#__codelineno-25-35&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-36&#34;&gt;&lt;a id=&#34;__codelineno-25-36&#34; name=&#34;__codelineno-25-36&#34; href=&#34;#__codelineno-25-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* The smallest possible chunk */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-37&#34;&gt;&lt;a id=&#34;__codelineno-25-37&#34; name=&#34;__codelineno-25-37&#34; href=&#34;#__codelineno-25-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* MIN_CHUNK_SIZE equals to 32 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-38&#34;&gt;&lt;a id=&#34;__codelineno-25-38&#34; name=&#34;__codelineno-25-38&#34; href=&#34;#__codelineno-25-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MIN_CHUNK_SIZE (offsetof(struct malloc_chunk, fd_nextsize))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-39&#34;&gt;&lt;a id=&#34;__codelineno-25-39&#34; name=&#34;__codelineno-25-39&#34; href=&#34;#__codelineno-25-39&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-40&#34;&gt;&lt;a id=&#34;__codelineno-25-40&#34; name=&#34;__codelineno-25-40&#34; href=&#34;#__codelineno-25-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* The smallest size we can malloc is an aligned minimal chunk */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-41&#34;&gt;&lt;a id=&#34;__codelineno-25-41&#34; name=&#34;__codelineno-25-41&#34; href=&#34;#__codelineno-25-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* MINSIZE equals to 32 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-42&#34;&gt;&lt;a id=&#34;__codelineno-25-42&#34; name=&#34;__codelineno-25-42&#34; href=&#34;#__codelineno-25-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MINSIZE \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-43&#34;&gt;&lt;a id=&#34;__codelineno-25-43&#34; name=&#34;__codelineno-25-43&#34; href=&#34;#__codelineno-25-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (unsigned long)(((MIN_CHUNK_SIZE + MALLOC_ALIGN_MASK) &amp;amp; ~MALLOC_ALIGN_MASK))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-44&#34;&gt;&lt;a id=&#34;__codelineno-25-44&#34; name=&#34;__codelineno-25-44&#34; href=&#34;#__codelineno-25-44&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-45&#34;&gt;&lt;a id=&#34;__codelineno-25-45&#34; name=&#34;__codelineno-25-45&#34; href=&#34;#__codelineno-25-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* equivalent to max(alignUp(req + SIZE_SZ, MALLOC_ALIGNMENT), MINSIZE) */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-46&#34;&gt;&lt;a id=&#34;__codelineno-25-46&#34; name=&#34;__codelineno-25-46&#34; href=&#34;#__codelineno-25-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define request2size(req) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-47&#34;&gt;&lt;a id=&#34;__codelineno-25-47&#34; name=&#34;__codelineno-25-47&#34; href=&#34;#__codelineno-25-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (((req) + SIZE_SZ + MALLOC_ALIGN_MASK &amp;lt; MINSIZE) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-48&#34;&gt;&lt;a id=&#34;__codelineno-25-48&#34; name=&#34;__codelineno-25-48&#34; href=&#34;#__codelineno-25-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ? MINSIZE \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-49&#34;&gt;&lt;a id=&#34;__codelineno-25-49&#34; name=&#34;__codelineno-25-49&#34; href=&#34;#__codelineno-25-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : ((req) + SIZE_SZ + MALLOC_ALIGN_MASK) &amp;amp; ~MALLOC_ALIGN_MASK)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-50&#34;&gt;&lt;a id=&#34;__codelineno-25-50&#34; name=&#34;__codelineno-25-50&#34; href=&#34;#__codelineno-25-50&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-51&#34;&gt;&lt;a id=&#34;__codelineno-25-51&#34; name=&#34;__codelineno-25-51&#34; href=&#34;#__codelineno-25-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* MAX_FAST_SIZE equals to 160 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-52&#34;&gt;&lt;a id=&#34;__codelineno-25-52&#34; name=&#34;__codelineno-25-52&#34; href=&#34;#__codelineno-25-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MAX_FAST_SIZE (80 * SIZE_SZ / 4)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-53&#34;&gt;&lt;a id=&#34;__codelineno-25-53&#34; name=&#34;__codelineno-25-53&#34; href=&#34;#__codelineno-25-53&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-54&#34;&gt;&lt;a id=&#34;__codelineno-25-54&#34; name=&#34;__codelineno-25-54&#34; href=&#34;#__codelineno-25-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* NFASTBINS equals to 10 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-55&#34;&gt;&lt;a id=&#34;__codelineno-25-55&#34; name=&#34;__codelineno-25-55&#34; href=&#34;#__codelineno-25-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define NFASTBINS (fastbin_index(request2size(MAX_FAST_SIZE)) + 1)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-56&#34;&gt;&lt;a id=&#34;__codelineno-25-56&#34; name=&#34;__codelineno-25-56&#34; href=&#34;#__codelineno-25-56&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-57&#34;&gt;&lt;a id=&#34;__codelineno-25-57&#34; name=&#34;__codelineno-25-57&#34; href=&#34;#__codelineno-25-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-58&#34;&gt;&lt;a id=&#34;__codelineno-25-58&#34; name=&#34;__codelineno-25-58&#34; href=&#34;#__codelineno-25-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Serialize access. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-59&#34;&gt;&lt;a id=&#34;__codelineno-25-59&#34; name=&#34;__codelineno-25-59&#34; href=&#34;#__codelineno-25-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mutex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-60&#34;&gt;&lt;a id=&#34;__codelineno-25-60&#34; name=&#34;__codelineno-25-60&#34; href=&#34;#__codelineno-25-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Flags (formerly in max_fast). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-61&#34;&gt;&lt;a id=&#34;__codelineno-25-61&#34; name=&#34;__codelineno-25-61&#34; href=&#34;#__codelineno-25-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-62&#34;&gt;&lt;a id=&#34;__codelineno-25-62&#34; name=&#34;__codelineno-25-62&#34; href=&#34;#__codelineno-25-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Set if the fastbin chunks contain recently inserted free blocks. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-63&#34;&gt;&lt;a id=&#34;__codelineno-25-63&#34; name=&#34;__codelineno-25-63&#34; href=&#34;#__codelineno-25-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Note this is a bool but not all targets support atomics on booleans. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-64&#34;&gt;&lt;a id=&#34;__codelineno-25-64&#34; name=&#34;__codelineno-25-64&#34; href=&#34;#__codelineno-25-64&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;have_fastchunks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-65&#34;&gt;&lt;a id=&#34;__codelineno-25-65&#34; name=&#34;__codelineno-25-65&#34; href=&#34;#__codelineno-25-65&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Fastbins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-66&#34;&gt;&lt;a id=&#34;__codelineno-25-66&#34; name=&#34;__codelineno-25-66&#34; href=&#34;#__codelineno-25-66&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbinsY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NFASTBINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-67&#34;&gt;&lt;a id=&#34;__codelineno-25-67&#34; name=&#34;__codelineno-25-67&#34; href=&#34;#__codelineno-25-67&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-68&#34;&gt;&lt;a id=&#34;__codelineno-25-68&#34; name=&#34;__codelineno-25-68&#34; href=&#34;#__codelineno-25-68&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-69&#34;&gt;&lt;a id=&#34;__codelineno-25-69&#34; name=&#34;__codelineno-25-69&#34; href=&#34;#__codelineno-25-69&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;dump_fastbin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-70&#34;&gt;&lt;a id=&#34;__codelineno-25-70&#34; name=&#34;__codelineno-25-70&#34; href=&#34;#__codelineno-25-70&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1ed6a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// offset of _IO_2_1_stdout_&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-71&#34;&gt;&lt;a id=&#34;__codelineno-25-71&#34; name=&#34;__codelineno-25-71&#34; href=&#34;#__codelineno-25-71&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-72&#34;&gt;&lt;a id=&#34;__codelineno-25-72&#34; name=&#34;__codelineno-25-72&#34; href=&#34;#__codelineno-25-72&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-73&#34;&gt;&lt;a id=&#34;__codelineno-25-73&#34; name=&#34;__codelineno-25-73&#34; href=&#34;#__codelineno-25-73&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1ecb80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// offset of main_arena&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-74&#34;&gt;&lt;a id=&#34;__codelineno-25-74&#34; name=&#34;__codelineno-25-74&#34; href=&#34;#__codelineno-25-74&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NFASTBINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-75&#34;&gt;&lt;a id=&#34;__codelineno-25-75&#34; name=&#34;__codelineno-25-75&#34; href=&#34;#__codelineno-25-75&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbinsY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-76&#34;&gt;&lt;a id=&#34;__codelineno-25-76&#34; name=&#34;__codelineno-25-76&#34; href=&#34;#__codelineno-25-76&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbinsY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-77&#34;&gt;&lt;a id=&#34;__codelineno-25-77&#34; name=&#34;__codelineno-25-77&#34; href=&#34;#__codelineno-25-77&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fastbin #%d: %p&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-78&#34;&gt;&lt;a id=&#34;__codelineno-25-78&#34; name=&#34;__codelineno-25-78&#34; href=&#34;#__codelineno-25-78&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-79&#34;&gt;&lt;a id=&#34;__codelineno-25-79&#34; name=&#34;__codelineno-25-79&#34; href=&#34;#__codelineno-25-79&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-80&#34;&gt;&lt;a id=&#34;__codelineno-25-80&#34; name=&#34;__codelineno-25-80&#34; href=&#34;#__codelineno-25-80&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot; -&amp;gt; %p&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-81&#34;&gt;&lt;a id=&#34;__codelineno-25-81&#34; name=&#34;__codelineno-25-81&#34; href=&#34;#__codelineno-25-81&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-82&#34;&gt;&lt;a id=&#34;__codelineno-25-82&#34; name=&#34;__codelineno-25-82&#34; href=&#34;#__codelineno-25-82&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-83&#34;&gt;&lt;a id=&#34;__codelineno-25-83&#34; name=&#34;__codelineno-25-83&#34; href=&#34;#__codelineno-25-83&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-84&#34;&gt;&lt;a id=&#34;__codelineno-25-84&#34; name=&#34;__codelineno-25-84&#34; href=&#34;#__codelineno-25-84&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-85&#34;&gt;&lt;a id=&#34;__codelineno-25-85&#34; name=&#34;__codelineno-25-85&#34; href=&#34;#__codelineno-25-85&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-86&#34;&gt;&lt;a id=&#34;__codelineno-25-86&#34; name=&#34;__codelineno-25-86&#34; href=&#34;#__codelineno-25-86&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-87&#34;&gt;&lt;a id=&#34;__codelineno-25-87&#34; name=&#34;__codelineno-25-87&#34; href=&#34;#__codelineno-25-87&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-88&#34;&gt;&lt;a id=&#34;__codelineno-25-88&#34; name=&#34;__codelineno-25-88&#34; href=&#34;#__codelineno-25-88&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-89&#34;&gt;&lt;a id=&#34;__codelineno-25-89&#34; name=&#34;__codelineno-25-89&#34; href=&#34;#__codelineno-25-89&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// use 10 malloc + free, the first 7 blocks will be saved in tcache, the rest&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-90&#34;&gt;&lt;a id=&#34;__codelineno-25-90&#34; name=&#34;__codelineno-25-90&#34; href=&#34;#__codelineno-25-90&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ones will go to fastbin&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-91&#34;&gt;&lt;a id=&#34;__codelineno-25-91&#34; name=&#34;__codelineno-25-91&#34; href=&#34;#__codelineno-25-91&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-92&#34;&gt;&lt;a id=&#34;__codelineno-25-92&#34; name=&#34;__codelineno-25-92&#34; href=&#34;#__codelineno-25-92&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;allocate 10 pointers:&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-93&#34;&gt;&lt;a id=&#34;__codelineno-25-93&#34; name=&#34;__codelineno-25-93&#34; href=&#34;#__codelineno-25-93&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-94&#34;&gt;&lt;a id=&#34;__codelineno-25-94&#34; name=&#34;__codelineno-25-94&#34; href=&#34;#__codelineno-25-94&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-95&#34;&gt;&lt;a id=&#34;__codelineno-25-95&#34; name=&#34;__codelineno-25-95&#34; href=&#34;#__codelineno-25-95&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot; %p&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-96&#34;&gt;&lt;a id=&#34;__codelineno-25-96&#34; name=&#34;__codelineno-25-96&#34; href=&#34;#__codelineno-25-96&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-97&#34;&gt;&lt;a id=&#34;__codelineno-25-97&#34; name=&#34;__codelineno-25-97&#34; href=&#34;#__codelineno-25-97&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-98&#34;&gt;&lt;a id=&#34;__codelineno-25-98&#34; name=&#34;__codelineno-25-98&#34; href=&#34;#__codelineno-25-98&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-99&#34;&gt;&lt;a id=&#34;__codelineno-25-99&#34; name=&#34;__codelineno-25-99&#34; href=&#34;#__codelineno-25-99&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// now one ptr goes to fastbin&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-100&#34;&gt;&lt;a id=&#34;__codelineno-25-100&#34; name=&#34;__codelineno-25-100&#34; href=&#34;#__codelineno-25-100&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-101&#34;&gt;&lt;a id=&#34;__codelineno-25-101&#34; name=&#34;__codelineno-25-101&#34; href=&#34;#__codelineno-25-101&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-102&#34;&gt;&lt;a id=&#34;__codelineno-25-102&#34; name=&#34;__codelineno-25-102&#34; href=&#34;#__codelineno-25-102&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-103&#34;&gt;&lt;a id=&#34;__codelineno-25-103&#34; name=&#34;__codelineno-25-103&#34; href=&#34;#__codelineno-25-103&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-104&#34;&gt;&lt;a id=&#34;__codelineno-25-104&#34; name=&#34;__codelineno-25-104&#34; href=&#34;#__codelineno-25-104&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fastbins after 8 pointers freed:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-105&#34;&gt;&lt;a id=&#34;__codelineno-25-105&#34; name=&#34;__codelineno-25-105&#34; href=&#34;#__codelineno-25-105&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_fastbin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-106&#34;&gt;&lt;a id=&#34;__codelineno-25-106&#34; name=&#34;__codelineno-25-106&#34; href=&#34;#__codelineno-25-106&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-107&#34;&gt;&lt;a id=&#34;__codelineno-25-107&#34; name=&#34;__codelineno-25-107&#34; href=&#34;#__codelineno-25-107&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// free the 9th one&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-108&#34;&gt;&lt;a id=&#34;__codelineno-25-108&#34; name=&#34;__codelineno-25-108&#34; href=&#34;#__codelineno-25-108&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-109&#34;&gt;&lt;a id=&#34;__codelineno-25-109&#34; name=&#34;__codelineno-25-109&#34; href=&#34;#__codelineno-25-109&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-110&#34;&gt;&lt;a id=&#34;__codelineno-25-110&#34; name=&#34;__codelineno-25-110&#34; href=&#34;#__codelineno-25-110&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// two pointers in the fastbin&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-111&#34;&gt;&lt;a id=&#34;__codelineno-25-111&#34; name=&#34;__codelineno-25-111&#34; href=&#34;#__codelineno-25-111&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fastbins after 9 pointers freed:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-112&#34;&gt;&lt;a id=&#34;__codelineno-25-112&#34; name=&#34;__codelineno-25-112&#34; href=&#34;#__codelineno-25-112&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_fastbin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-113&#34;&gt;&lt;a id=&#34;__codelineno-25-113&#34; name=&#34;__codelineno-25-113&#34; href=&#34;#__codelineno-25-113&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-114&#34;&gt;&lt;a id=&#34;__codelineno-25-114&#34; name=&#34;__codelineno-25-114&#34; href=&#34;#__codelineno-25-114&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// free the 10th one&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-115&#34;&gt;&lt;a id=&#34;__codelineno-25-115&#34; name=&#34;__codelineno-25-115&#34; href=&#34;#__codelineno-25-115&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-116&#34;&gt;&lt;a id=&#34;__codelineno-25-116&#34; name=&#34;__codelineno-25-116&#34; href=&#34;#__codelineno-25-116&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-117&#34;&gt;&lt;a id=&#34;__codelineno-25-117&#34; name=&#34;__codelineno-25-117&#34; href=&#34;#__codelineno-25-117&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// three pointers in the fastbin&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-118&#34;&gt;&lt;a id=&#34;__codelineno-25-118&#34; name=&#34;__codelineno-25-118&#34; href=&#34;#__codelineno-25-118&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fastbins after 10 pointers freed:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-119&#34;&gt;&lt;a id=&#34;__codelineno-25-119&#34; name=&#34;__codelineno-25-119&#34; href=&#34;#__codelineno-25-119&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump_fastbin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-120&#34;&gt;&lt;a id=&#34;__codelineno-25-120&#34; name=&#34;__codelineno-25-120&#34; href=&#34;#__codelineno-25-120&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-25-121&#34;&gt;&lt;a id=&#34;__codelineno-25-121&#34; name=&#34;__codelineno-25-121&#34; href=&#34;#__codelineno-25-121&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-26-1&#34;&gt;&lt;a id=&#34;__codelineno-26-1&#34; name=&#34;__codelineno-26-1&#34; href=&#34;#__codelineno-26-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;allocate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d6b0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d6e0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d710&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d740&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d770&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d7a0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d7d0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d800&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d830&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d860&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-2&#34;&gt;&lt;a id=&#34;__codelineno-26-2&#34; name=&#34;__codelineno-26-2&#34; href=&#34;#__codelineno-26-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fastbins&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;freed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-3&#34;&gt;&lt;a id=&#34;__codelineno-26-3&#34; name=&#34;__codelineno-26-3&#34; href=&#34;#__codelineno-26-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d7f0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-4&#34;&gt;&lt;a id=&#34;__codelineno-26-4&#34; name=&#34;__codelineno-26-4&#34; href=&#34;#__codelineno-26-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fastbins&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;freed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-5&#34;&gt;&lt;a id=&#34;__codelineno-26-5&#34; name=&#34;__codelineno-26-5&#34; href=&#34;#__codelineno-26-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d820&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d7f0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-6&#34;&gt;&lt;a id=&#34;__codelineno-26-6&#34; name=&#34;__codelineno-26-6&#34; href=&#34;#__codelineno-26-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fastbins&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pointers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;freed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-26-7&#34;&gt;&lt;a id=&#34;__codelineno-26-7&#34; name=&#34;__codelineno-26-7&#34; href=&#34;#__codelineno-26-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d850&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d820&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x563bd918d7f0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，代码先分配了十个块，再按顺序释放，那么前七个块会进入 tcache，剩下的三个块则进入了同一个 fast bin，并且后释放的会在链表的开头。注意 fast bin 链表里的地址打印的是 chunk 地址，而用 &lt;code&gt;malloc&lt;/code&gt; 分配的地址指向的是 payload 部分，二者差了 16 字节，最终 fast bin 就是把十个块里最后三个块用链表串起来。由于总是往链表的头部插入空闲块，所以后释放的块出现在靠前的位置。&lt;/p&gt;&lt;h2 id=&#34;small-bin&#34;&gt;small bin&lt;a class=&#34;headerlink&#34; href=&#34;#small-bin&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;分析完 fast bin，接下来来看 small bin。small bin 每个 bin 内空闲块的大小是相同的，并且也是以链表的方式组织，只不过用的是双向链表。&lt;/p&gt;&lt;h3 id=&#34;malloc_3&#34;&gt;malloc&lt;a class=&#34;headerlink&#34; href=&#34;#malloc_3&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来观察 &lt;code&gt;_int_malloc&lt;/code&gt; 是怎么使用 small bin 的。前面提到，&lt;code&gt;_int_malloc&lt;/code&gt; 首先会尝试在 fast bin 中分配，如果分配失败，或者大小超出了 fast bin 的范围，接下来会尝试在 small bin 中分配：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-27-1&#34;&gt;&lt;a id=&#34;__codelineno-27-1&#34; name=&#34;__codelineno-27-1&#34; href=&#34;#__codelineno-27-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// in _int_malloc&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-2&#34;&gt;&lt;a id=&#34;__codelineno-27-2&#34; name=&#34;__codelineno-27-2&#34; href=&#34;#__codelineno-27-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-3&#34;&gt;&lt;a id=&#34;__codelineno-27-3&#34; name=&#34;__codelineno-27-3&#34; href=&#34;#__codelineno-27-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-4&#34;&gt;&lt;a id=&#34;__codelineno-27-4&#34; name=&#34;__codelineno-27-4&#34; href=&#34;#__codelineno-27-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;smallbin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-5&#34;&gt;&lt;a id=&#34;__codelineno-27-5&#34; name=&#34;__codelineno-27-5&#34; href=&#34;#__codelineno-27-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-6&#34;&gt;&lt;a id=&#34;__codelineno-27-6&#34; name=&#34;__codelineno-27-6&#34; href=&#34;#__codelineno-27-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-7&#34;&gt;&lt;a id=&#34;__codelineno-27-7&#34; name=&#34;__codelineno-27-7&#34; href=&#34;#__codelineno-27-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-8&#34;&gt;&lt;a id=&#34;__codelineno-27-8&#34; name=&#34;__codelineno-27-8&#34; href=&#34;#__codelineno-27-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-9&#34;&gt;&lt;a id=&#34;__codelineno-27-9&#34; name=&#34;__codelineno-27-9&#34; href=&#34;#__codelineno-27-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-10&#34;&gt;&lt;a id=&#34;__codelineno-27-10&#34; name=&#34;__codelineno-27-10&#34; href=&#34;#__codelineno-27-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-11&#34;&gt;&lt;a id=&#34;__codelineno-27-11&#34; name=&#34;__codelineno-27-11&#34; href=&#34;#__codelineno-27-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;malloc(): smallbin double linked list corrupted&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-12&#34;&gt;&lt;a id=&#34;__codelineno-27-12&#34; name=&#34;__codelineno-27-12&#34; href=&#34;#__codelineno-27-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-13&#34;&gt;&lt;a id=&#34;__codelineno-27-13&#34; name=&#34;__codelineno-27-13&#34; href=&#34;#__codelineno-27-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-14&#34;&gt;&lt;a id=&#34;__codelineno-27-14&#34; name=&#34;__codelineno-27-14&#34; href=&#34;#__codelineno-27-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-15&#34;&gt;&lt;a id=&#34;__codelineno-27-15&#34; name=&#34;__codelineno-27-15&#34; href=&#34;#__codelineno-27-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-16&#34;&gt;&lt;a id=&#34;__codelineno-27-16&#34; name=&#34;__codelineno-27-16&#34; href=&#34;#__codelineno-27-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-17&#34;&gt;&lt;a id=&#34;__codelineno-27-17&#34; name=&#34;__codelineno-27-17&#34; href=&#34;#__codelineno-27-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_non_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-18&#34;&gt;&lt;a id=&#34;__codelineno-27-18&#34; name=&#34;__codelineno-27-18&#34; href=&#34;#__codelineno-27-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_malloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-19&#34;&gt;&lt;a id=&#34;__codelineno-27-19&#34; name=&#34;__codelineno-27-19&#34; href=&#34;#__codelineno-27-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* While we&amp;#39;re here, if we see other chunks of the same size,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-20&#34;&gt;&lt;a id=&#34;__codelineno-27-20&#34; name=&#34;__codelineno-27-20&#34; href=&#34;#__codelineno-27-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; stash them in the tcache. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-21&#34;&gt;&lt;a id=&#34;__codelineno-27-21&#34; name=&#34;__codelineno-27-21&#34; href=&#34;#__codelineno-27-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csize2tidx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-22&#34;&gt;&lt;a id=&#34;__codelineno-27-22&#34; name=&#34;__codelineno-27-22&#34; href=&#34;#__codelineno-27-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_bins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-23&#34;&gt;&lt;a id=&#34;__codelineno-27-23&#34; name=&#34;__codelineno-27-23&#34; href=&#34;#__codelineno-27-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-24&#34;&gt;&lt;a id=&#34;__codelineno-27-24&#34; name=&#34;__codelineno-27-24&#34; href=&#34;#__codelineno-27-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-25&#34;&gt;&lt;a id=&#34;__codelineno-27-25&#34; name=&#34;__codelineno-27-25&#34; href=&#34;#__codelineno-27-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-26&#34;&gt;&lt;a id=&#34;__codelineno-27-26&#34; name=&#34;__codelineno-27-26&#34; href=&#34;#__codelineno-27-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* While bin not empty and tcache not full, copy chunks over. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-27&#34;&gt;&lt;a id=&#34;__codelineno-27-27&#34; name=&#34;__codelineno-27-27&#34; href=&#34;#__codelineno-27-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_count&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-28&#34;&gt;&lt;a id=&#34;__codelineno-27-28&#34; name=&#34;__codelineno-27-28&#34; href=&#34;#__codelineno-27-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-29&#34;&gt;&lt;a id=&#34;__codelineno-27-29&#34; name=&#34;__codelineno-27-29&#34; href=&#34;#__codelineno-27-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-30&#34;&gt;&lt;a id=&#34;__codelineno-27-30&#34; name=&#34;__codelineno-27-30&#34; href=&#34;#__codelineno-27-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-31&#34;&gt;&lt;a id=&#34;__codelineno-27-31&#34; name=&#34;__codelineno-27-31&#34; href=&#34;#__codelineno-27-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-32&#34;&gt;&lt;a id=&#34;__codelineno-27-32&#34; name=&#34;__codelineno-27-32&#34; href=&#34;#__codelineno-27-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-33&#34;&gt;&lt;a id=&#34;__codelineno-27-33&#34; name=&#34;__codelineno-27-33&#34; href=&#34;#__codelineno-27-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-34&#34;&gt;&lt;a id=&#34;__codelineno-27-34&#34; name=&#34;__codelineno-27-34&#34; href=&#34;#__codelineno-27-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-35&#34;&gt;&lt;a id=&#34;__codelineno-27-35&#34; name=&#34;__codelineno-27-35&#34; href=&#34;#__codelineno-27-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_non_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-36&#34;&gt;&lt;a id=&#34;__codelineno-27-36&#34; name=&#34;__codelineno-27-36&#34; href=&#34;#__codelineno-27-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-37&#34;&gt;&lt;a id=&#34;__codelineno-27-37&#34; name=&#34;__codelineno-27-37&#34; href=&#34;#__codelineno-27-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-38&#34;&gt;&lt;a id=&#34;__codelineno-27-38&#34; name=&#34;__codelineno-27-38&#34; href=&#34;#__codelineno-27-38&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-39&#34;&gt;&lt;a id=&#34;__codelineno-27-39&#34; name=&#34;__codelineno-27-39&#34; href=&#34;#__codelineno-27-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_put&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-40&#34;&gt;&lt;a id=&#34;__codelineno-27-40&#34; name=&#34;__codelineno-27-40&#34; href=&#34;#__codelineno-27-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-41&#34;&gt;&lt;a id=&#34;__codelineno-27-41&#34; name=&#34;__codelineno-27-41&#34; href=&#34;#__codelineno-27-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-42&#34;&gt;&lt;a id=&#34;__codelineno-27-42&#34; name=&#34;__codelineno-27-42&#34; href=&#34;#__codelineno-27-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-43&#34;&gt;&lt;a id=&#34;__codelineno-27-43&#34; name=&#34;__codelineno-27-43&#34; href=&#34;#__codelineno-27-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-44&#34;&gt;&lt;a id=&#34;__codelineno-27-44&#34; name=&#34;__codelineno-27-44&#34; href=&#34;#__codelineno-27-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-45&#34;&gt;&lt;a id=&#34;__codelineno-27-45&#34; name=&#34;__codelineno-27-45&#34; href=&#34;#__codelineno-27-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-46&#34;&gt;&lt;a id=&#34;__codelineno-27-46&#34; name=&#34;__codelineno-27-46&#34; href=&#34;#__codelineno-27-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-27-47&#34;&gt;&lt;a id=&#34;__codelineno-27-47&#34; name=&#34;__codelineno-27-47&#34; href=&#34;#__codelineno-27-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它的过程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使用 &lt;code&gt;in_smallbin_range (nb)&lt;/code&gt; 检查块的大小是否应该放到 small bin 当中&lt;/li&gt;&lt;li&gt;使用 &lt;code&gt;smallbin_index (nb)&lt;/code&gt; 根据块的大小计算出 small bin 的 index，然后 &lt;code&gt;bin_at (av, idx)&lt;/code&gt; 对应 small bin 的链表尾部的哨兵，这个双向链表有且只有一个哨兵，这个哨兵就放在 small bin 数组当中&lt;/li&gt;&lt;li&gt;找到哨兵结点的前驱结点 &lt;code&gt;last (bin)&lt;/code&gt;，如果链表为空，那么哨兵的前驱结点就是它自己；如果链表非空，那么哨兵的前驱结点就是链表里的最后一个结点，把它赋值给 &lt;code&gt;victim&lt;/code&gt;&lt;/li&gt;&lt;li&gt;把这个空闲块标记为正在使用：&lt;code&gt;set_inuse_bit_at_offset (victim, nb)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;把 &lt;code&gt;victim&lt;/code&gt; 从链表里删除：&lt;code&gt;bck = victim-&amp;gt;bk; bin-&amp;gt;bk = bck; bck-&amp;gt;fd = bin;&lt;/code&gt;，典型的双向链表的结点删除过程，维护 &lt;code&gt;victim&lt;/code&gt; 前驱结点的后继指针，维护哨兵 &lt;code&gt;bin&lt;/code&gt; 的前驱指针&lt;/li&gt;&lt;li&gt;进行一系列的安全检查：&lt;code&gt;check_malloced_chunk&lt;/code&gt;&lt;/li&gt;&lt;li&gt;检查 tcache 对应的 bin，如果它还没有满，就把 small bin 链表中的元素挪到 tcache 当中&lt;/li&gt;&lt;li&gt;把 payload 地址通过 &lt;code&gt;chunk2mem&lt;/code&gt; 计算出来，返回给 malloc 调用者&lt;/li&gt;&lt;li&gt;调用 &lt;code&gt;alloc_perturb&lt;/code&gt; 往新分配的空间内写入垃圾数据（可选），避免泄露之前的数据&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;其实现过程和 fast bin 很类似，只不过把单向链表改成了双向，并且引入了哨兵结点，这个哨兵结点保存在 &lt;code&gt;malloc_state&lt;/code&gt; 结构的 bins 数组当中：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-28-1&#34;&gt;&lt;a id=&#34;__codelineno-28-1&#34; name=&#34;__codelineno-28-1&#34; href=&#34;#__codelineno-28-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define NSMALLBINS 64&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-2&#34;&gt;&lt;a id=&#34;__codelineno-28-2&#34; name=&#34;__codelineno-28-2&#34; href=&#34;#__codelineno-28-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* SMALLBIN_WIDTH equals to 16 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-3&#34;&gt;&lt;a id=&#34;__codelineno-28-3&#34; name=&#34;__codelineno-28-3&#34; href=&#34;#__codelineno-28-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define SMALLBIN_WIDTH MALLOC_ALIGNMENT&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-4&#34;&gt;&lt;a id=&#34;__codelineno-28-4&#34; name=&#34;__codelineno-28-4&#34; href=&#34;#__codelineno-28-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* SMALLBIN_CORRECTION equals to 0 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-5&#34;&gt;&lt;a id=&#34;__codelineno-28-5&#34; name=&#34;__codelineno-28-5&#34; href=&#34;#__codelineno-28-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define SMALLBIN_CORRECTION (MALLOC_ALIGNMENT &amp;gt; 2 * SIZE_SZ)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-6&#34;&gt;&lt;a id=&#34;__codelineno-28-6&#34; name=&#34;__codelineno-28-6&#34; href=&#34;#__codelineno-28-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-7&#34;&gt;&lt;a id=&#34;__codelineno-28-7&#34; name=&#34;__codelineno-28-7&#34; href=&#34;#__codelineno-28-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* MIN_LARGE_SIZE equals to 1024 on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-8&#34;&gt;&lt;a id=&#34;__codelineno-28-8&#34; name=&#34;__codelineno-28-8&#34; href=&#34;#__codelineno-28-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MIN_LARGE_SIZE ((NSMALLBINS - SMALLBIN_CORRECTION) * SMALLBIN_WIDTH)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-9&#34;&gt;&lt;a id=&#34;__codelineno-28-9&#34; name=&#34;__codelineno-28-9&#34; href=&#34;#__codelineno-28-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-10&#34;&gt;&lt;a id=&#34;__codelineno-28-10&#34; name=&#34;__codelineno-28-10&#34; href=&#34;#__codelineno-28-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* equivalent to (sz &amp;lt; 1024) on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-11&#34;&gt;&lt;a id=&#34;__codelineno-28-11&#34; name=&#34;__codelineno-28-11&#34; href=&#34;#__codelineno-28-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define in_smallbin_range(sz) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-12&#34;&gt;&lt;a id=&#34;__codelineno-28-12&#34; name=&#34;__codelineno-28-12&#34; href=&#34;#__codelineno-28-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ((unsigned long) (sz) &amp;lt; (unsigned long) MIN_LARGE_SIZE)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-13&#34;&gt;&lt;a id=&#34;__codelineno-28-13&#34; name=&#34;__codelineno-28-13&#34; href=&#34;#__codelineno-28-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-14&#34;&gt;&lt;a id=&#34;__codelineno-28-14&#34; name=&#34;__codelineno-28-14&#34; href=&#34;#__codelineno-28-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* equivalent to (sz &amp;gt;&amp;gt; 4) on 64-bit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-15&#34;&gt;&lt;a id=&#34;__codelineno-28-15&#34; name=&#34;__codelineno-28-15&#34; href=&#34;#__codelineno-28-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define smallbin_index(sz) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-16&#34;&gt;&lt;a id=&#34;__codelineno-28-16&#34; name=&#34;__codelineno-28-16&#34; href=&#34;#__codelineno-28-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ((SMALLBIN_WIDTH == 16 ? (((unsigned) (sz)) &amp;gt;&amp;gt; 4) : (((unsigned) (sz)) &amp;gt;&amp;gt; 3))\&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-17&#34;&gt;&lt;a id=&#34;__codelineno-28-17&#34; name=&#34;__codelineno-28-17&#34; href=&#34;#__codelineno-28-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; + SMALLBIN_CORRECTION)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-18&#34;&gt;&lt;a id=&#34;__codelineno-28-18&#34; name=&#34;__codelineno-28-18&#34; href=&#34;#__codelineno-28-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-19&#34;&gt;&lt;a id=&#34;__codelineno-28-19&#34; name=&#34;__codelineno-28-19&#34; href=&#34;#__codelineno-28-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_chunk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-20&#34;&gt;&lt;a id=&#34;__codelineno-28-20&#34; name=&#34;__codelineno-28-20&#34; href=&#34;#__codelineno-28-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-21&#34;&gt;&lt;a id=&#34;__codelineno-28-21&#34; name=&#34;__codelineno-28-21&#34; href=&#34;#__codelineno-28-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* addressing -- note that bin_at(0) does not exist */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-22&#34;&gt;&lt;a id=&#34;__codelineno-28-22&#34; name=&#34;__codelineno-28-22&#34; href=&#34;#__codelineno-28-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define bin_at(m, i) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-23&#34;&gt;&lt;a id=&#34;__codelineno-28-23&#34; name=&#34;__codelineno-28-23&#34; href=&#34;#__codelineno-28-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (mbinptr) (((char *) &amp;amp;((m)-&amp;gt;bins[((i) - 1) * 2])) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-24&#34;&gt;&lt;a id=&#34;__codelineno-28-24&#34; name=&#34;__codelineno-28-24&#34; href=&#34;#__codelineno-28-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; - offsetof (struct malloc_chunk, fd))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-25&#34;&gt;&lt;a id=&#34;__codelineno-28-25&#34; name=&#34;__codelineno-28-25&#34; href=&#34;#__codelineno-28-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-26&#34;&gt;&lt;a id=&#34;__codelineno-28-26&#34; name=&#34;__codelineno-28-26&#34; href=&#34;#__codelineno-28-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define NBINS 128&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-27&#34;&gt;&lt;a id=&#34;__codelineno-28-27&#34; name=&#34;__codelineno-28-27&#34; href=&#34;#__codelineno-28-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-28&#34;&gt;&lt;a id=&#34;__codelineno-28-28&#34; name=&#34;__codelineno-28-28&#34; href=&#34;#__codelineno-28-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-29&#34;&gt;&lt;a id=&#34;__codelineno-28-29&#34; name=&#34;__codelineno-28-29&#34; href=&#34;#__codelineno-28-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-30&#34;&gt;&lt;a id=&#34;__codelineno-28-30&#34; name=&#34;__codelineno-28-30&#34; href=&#34;#__codelineno-28-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Normal bins packed as described above */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-31&#34;&gt;&lt;a id=&#34;__codelineno-28-31&#34; name=&#34;__codelineno-28-31&#34; href=&#34;#__codelineno-28-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NBINS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-28-32&#34;&gt;&lt;a id=&#34;__codelineno-28-32&#34; name=&#34;__codelineno-28-32&#34; href=&#34;#__codelineno-28-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;乍一看会觉得很奇怪，这里 &lt;code&gt;NBINS * 2 - 2&lt;/code&gt; 是什么意思？&lt;code&gt;mchunkptr&lt;/code&gt; 是个指针类型，那它指向的数据存在哪？其实这里用了一个小的 trick：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;不去看 bins 元素的类型，只考虑它的元素的大小，每个元素大小是 &lt;code&gt;sizeof(size_t)&lt;/code&gt;，一共有 &lt;code&gt;NBINS * 2 - 2&lt;/code&gt; 个元素&lt;/li&gt;&lt;li&gt;而每个 bin 对应一个链表的哨兵结点，由于是双向链表，哨兵结点也没有数据，只需要保存前驱和后继两个指针，即每个 bin 只需要存两个指针的空间，也就是 &lt;code&gt;2 * sizeof(size_t)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;正好 &lt;code&gt;bins&lt;/code&gt; 数组给每个 bin 留出了 &lt;code&gt;2 * sizeof(size_t)&lt;/code&gt; 的空间（bin 0 除外，这个 bin 不存在），所以实际上这些哨兵结点的前驱和后继指针就保存在 &lt;code&gt;bins&lt;/code&gt; 数组里，按顺序保存，首先是 bin 1 的前驱，然后是 bin 1 的后继，接着是 bin 2 的前驱，依此类推&lt;/li&gt;&lt;li&gt;虽然空间对上了，但是为了方便使用，代码里用 &lt;code&gt;bin_at&lt;/code&gt; 宏来计算出一个 &lt;code&gt;malloc_chunk&lt;/code&gt; 结构体的指针，而已知 bins 数组只保存了 &lt;code&gt;fd&lt;/code&gt; 和 &lt;code&gt;bk&lt;/code&gt; 两个指针，并且 bin 的下标从 1 开始，所以 bin i 的 &lt;code&gt;fd&lt;/code&gt; 指针地址就是 &lt;code&gt;(char *) &amp;amp;((m)-&amp;gt;bins[((i) - 1) * 2])&lt;/code&gt;，再减去 &lt;code&gt;malloc_chunk&lt;/code&gt; 结构体中 &lt;code&gt;fd&lt;/code&gt; 成员的偏移，就得到了一个 &lt;code&gt;malloc_chunk&lt;/code&gt; 结构体的指针，当然了，这个结构体只有 &lt;code&gt;fd&lt;/code&gt; 和 &lt;code&gt;bk&lt;/code&gt; 两个字段是合法的，其他字段如果访问了，就会访问到其他 bin 那里去&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;抛开这些 trick，其实就等价于用一个数组保存了每个 bin 的 &lt;code&gt;fd&lt;/code&gt; 和 &lt;code&gt;bk&lt;/code&gt; 指针，至于为什么要强行转换成 &lt;code&gt;malloc_chunk&lt;/code&gt; 类型的指针，可能是为了方便代码的编写，不需要区分空闲块的结点和哨兵结点。&lt;/p&gt;&lt;p&gt;此外，small bin 的处理里还多了一次 &lt;code&gt;set_inuse_bit_at_offset (victim, nb)&lt;/code&gt;，它的定义如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-29-1&#34;&gt;&lt;a id=&#34;__codelineno-29-1&#34; name=&#34;__codelineno-29-1&#34; href=&#34;#__codelineno-29-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define set_inuse_bit_at_offset(p, s) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-29-2&#34;&gt;&lt;a id=&#34;__codelineno-29-2&#34; name=&#34;__codelineno-29-2&#34; href=&#34;#__codelineno-29-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (((mchunkptr) (((char *) (p)) + (s)))-&amp;gt;mchunk_size |= PREV_INUSE)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;乍一看会觉得很奇怪，这个访问不是越界了吗？其实这个就是跨过当前的 chunk，访问相邻的下一个 chunk，在它的 &lt;code&gt;mchunk_size&lt;/code&gt; 字段上打标记，表示它的前一个 chunk 已经被占用。前面提到过，&lt;code&gt;mchunk_size&lt;/code&gt; 同时保存了 chunk 的大小和一些 flag，由于 chunk 的大小至少是 8 字节对齐的（32 位系统上），所以最低的 3 位就被拿来保存如下的 flag：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;PREV_INUSE(0x1)&lt;/code&gt;: 前一个 chunk 已经被分配&lt;/li&gt;&lt;li&gt;&lt;code&gt;IS_MAPPED(0x2)&lt;/code&gt;：当前 chunk 的内存来自于 mmap&lt;/li&gt;&lt;li&gt;&lt;code&gt;NON_MAIN_ARENA(0x4)&lt;/code&gt;：当前 chunk 来自于 main arena 以外的其他 arena&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在这里，就是设置了 &lt;code&gt;PREV_INUSE&lt;/code&gt; flag，方便后续的相邻块的合并。&lt;/p&gt;&lt;p&gt;可以注意到，small bin 的分配范围是 &lt;code&gt;nb &amp;lt; MIN_LARGE_SIZE&lt;/code&gt;，因此在 64 位上，&lt;code&gt;malloc(1000)&lt;/code&gt; 或更小的分配会被 small bin 分配，而 &lt;code&gt;malloc(1001)&lt;/code&gt; 或更大的分配则不可以。&lt;/p&gt;&lt;h3 id=&#34;free_2&#34;&gt;free&lt;a class=&#34;headerlink&#34; href=&#34;#free_2&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在讲述 small bin 在 free 中的实现之前，先讨论 &lt;code&gt;_int_malloc&lt;/code&gt; 的后续逻辑，最后再回过头来看 free 的部分。&lt;/p&gt;&lt;h2 id=&#34;consolidate&#34;&gt;consolidate&lt;a class=&#34;headerlink&#34; href=&#34;#consolidate&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;当要分配的块经过 fast bin 和 small bin 两段逻辑都没能分配成功，并且要分配的块比较大的时候（&lt;code&gt;!in_small_range (nb)&lt;/code&gt;），会进行一次 &lt;code&gt;malloc_consolidate&lt;/code&gt; 调用，这个函数会尝试对 fast bin 中的空闲块进行合并，然后把新的块插入到 unsorted bin 当中。它的实现如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-30-1&#34;&gt;&lt;a id=&#34;__codelineno-30-1&#34; name=&#34;__codelineno-30-1&#34; href=&#34;#__codelineno-30-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;unsorted_bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-2&#34;&gt;&lt;a id=&#34;__codelineno-30-2&#34; name=&#34;__codelineno-30-2&#34; href=&#34;#__codelineno-30-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;maxfb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NFASTBINS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-3&#34;&gt;&lt;a id=&#34;__codelineno-30-3&#34; name=&#34;__codelineno-30-3&#34; href=&#34;#__codelineno-30-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-4&#34;&gt;&lt;a id=&#34;__codelineno-30-4&#34; name=&#34;__codelineno-30-4&#34; href=&#34;#__codelineno-30-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-5&#34;&gt;&lt;a id=&#34;__codelineno-30-5&#34; name=&#34;__codelineno-30-5&#34; href=&#34;#__codelineno-30-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;atomic_exchange_acq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-6&#34;&gt;&lt;a id=&#34;__codelineno-30-6&#34; name=&#34;__codelineno-30-6&#34; href=&#34;#__codelineno-30-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-7&#34;&gt;&lt;a id=&#34;__codelineno-30-7&#34; name=&#34;__codelineno-30-7&#34; href=&#34;#__codelineno-30-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-8&#34;&gt;&lt;a id=&#34;__codelineno-30-8&#34; name=&#34;__codelineno-30-8&#34; href=&#34;#__codelineno-30-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-9&#34;&gt;&lt;a id=&#34;__codelineno-30-9&#34; name=&#34;__codelineno-30-9&#34; href=&#34;#__codelineno-30-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-10&#34;&gt;&lt;a id=&#34;__codelineno-30-10&#34; name=&#34;__codelineno-30-10&#34; href=&#34;#__codelineno-30-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_inuse_chunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-11&#34;&gt;&lt;a id=&#34;__codelineno-30-11&#34; name=&#34;__codelineno-30-11&#34; href=&#34;#__codelineno-30-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-12&#34;&gt;&lt;a id=&#34;__codelineno-30-12&#34; name=&#34;__codelineno-30-12&#34; href=&#34;#__codelineno-30-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-13&#34;&gt;&lt;a id=&#34;__codelineno-30-13&#34; name=&#34;__codelineno-30-13&#34; href=&#34;#__codelineno-30-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Slightly streamlined version of consolidation code in free() */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-14&#34;&gt;&lt;a id=&#34;__codelineno-30-14&#34; name=&#34;__codelineno-30-14&#34; href=&#34;#__codelineno-30-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-15&#34;&gt;&lt;a id=&#34;__codelineno-30-15&#34; name=&#34;__codelineno-30-15&#34; href=&#34;#__codelineno-30-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextchunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-16&#34;&gt;&lt;a id=&#34;__codelineno-30-16&#34; name=&#34;__codelineno-30-16&#34; href=&#34;#__codelineno-30-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextchunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-17&#34;&gt;&lt;a id=&#34;__codelineno-30-17&#34; name=&#34;__codelineno-30-17&#34; href=&#34;#__codelineno-30-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-18&#34;&gt;&lt;a id=&#34;__codelineno-30-18&#34; name=&#34;__codelineno-30-18&#34; href=&#34;#__codelineno-30-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prev_inuse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-19&#34;&gt;&lt;a id=&#34;__codelineno-30-19&#34; name=&#34;__codelineno-30-19&#34; href=&#34;#__codelineno-30-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prevsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prev_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-20&#34;&gt;&lt;a id=&#34;__codelineno-30-20&#34; name=&#34;__codelineno-30-20&#34; href=&#34;#__codelineno-30-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prevsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-21&#34;&gt;&lt;a id=&#34;__codelineno-30-21&#34; name=&#34;__codelineno-30-21&#34; href=&#34;#__codelineno-30-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prevsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-22&#34;&gt;&lt;a id=&#34;__codelineno-30-22&#34; name=&#34;__codelineno-30-22&#34; href=&#34;#__codelineno-30-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-23&#34;&gt;&lt;a id=&#34;__codelineno-30-23&#34; name=&#34;__codelineno-30-23&#34; href=&#34;#__codelineno-30-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unlink_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-24&#34;&gt;&lt;a id=&#34;__codelineno-30-24&#34; name=&#34;__codelineno-30-24&#34; href=&#34;#__codelineno-30-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-25&#34;&gt;&lt;a id=&#34;__codelineno-30-25&#34; name=&#34;__codelineno-30-25&#34; href=&#34;#__codelineno-30-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-26&#34;&gt;&lt;a id=&#34;__codelineno-30-26&#34; name=&#34;__codelineno-30-26&#34; href=&#34;#__codelineno-30-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextchunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-27&#34;&gt;&lt;a id=&#34;__codelineno-30-27&#34; name=&#34;__codelineno-30-27&#34; href=&#34;#__codelineno-30-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextinuse&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextchunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-28&#34;&gt;&lt;a id=&#34;__codelineno-30-28&#34; name=&#34;__codelineno-30-28&#34; href=&#34;#__codelineno-30-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-29&#34;&gt;&lt;a id=&#34;__codelineno-30-29&#34; name=&#34;__codelineno-30-29&#34; href=&#34;#__codelineno-30-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextinuse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-30&#34;&gt;&lt;a id=&#34;__codelineno-30-30&#34; name=&#34;__codelineno-30-30&#34; href=&#34;#__codelineno-30-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-31&#34;&gt;&lt;a id=&#34;__codelineno-30-31&#34; name=&#34;__codelineno-30-31&#34; href=&#34;#__codelineno-30-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unlink_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextchunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-32&#34;&gt;&lt;a id=&#34;__codelineno-30-32&#34; name=&#34;__codelineno-30-32&#34; href=&#34;#__codelineno-30-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-33&#34;&gt;&lt;a id=&#34;__codelineno-30-33&#34; name=&#34;__codelineno-30-33&#34; href=&#34;#__codelineno-30-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear_inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextchunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-34&#34;&gt;&lt;a id=&#34;__codelineno-30-34&#34; name=&#34;__codelineno-30-34&#34; href=&#34;#__codelineno-30-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-35&#34;&gt;&lt;a id=&#34;__codelineno-30-35&#34; name=&#34;__codelineno-30-35&#34; href=&#34;#__codelineno-30-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first_unsorted&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-36&#34;&gt;&lt;a id=&#34;__codelineno-30-36&#34; name=&#34;__codelineno-30-36&#34; href=&#34;#__codelineno-30-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-37&#34;&gt;&lt;a id=&#34;__codelineno-30-37&#34; name=&#34;__codelineno-30-37&#34; href=&#34;#__codelineno-30-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first_unsorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-38&#34;&gt;&lt;a id=&#34;__codelineno-30-38&#34; name=&#34;__codelineno-30-38&#34; href=&#34;#__codelineno-30-38&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-39&#34;&gt;&lt;a id=&#34;__codelineno-30-39&#34; name=&#34;__codelineno-30-39&#34; href=&#34;#__codelineno-30-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-40&#34;&gt;&lt;a id=&#34;__codelineno-30-40&#34; name=&#34;__codelineno-30-40&#34; href=&#34;#__codelineno-30-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-41&#34;&gt;&lt;a id=&#34;__codelineno-30-41&#34; name=&#34;__codelineno-30-41&#34; href=&#34;#__codelineno-30-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-42&#34;&gt;&lt;a id=&#34;__codelineno-30-42&#34; name=&#34;__codelineno-30-42&#34; href=&#34;#__codelineno-30-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-43&#34;&gt;&lt;a id=&#34;__codelineno-30-43&#34; name=&#34;__codelineno-30-43&#34; href=&#34;#__codelineno-30-43&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-44&#34;&gt;&lt;a id=&#34;__codelineno-30-44&#34; name=&#34;__codelineno-30-44&#34; href=&#34;#__codelineno-30-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-45&#34;&gt;&lt;a id=&#34;__codelineno-30-45&#34; name=&#34;__codelineno-30-45&#34; href=&#34;#__codelineno-30-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-46&#34;&gt;&lt;a id=&#34;__codelineno-30-46&#34; name=&#34;__codelineno-30-46&#34; href=&#34;#__codelineno-30-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first_unsorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-47&#34;&gt;&lt;a id=&#34;__codelineno-30-47&#34; name=&#34;__codelineno-30-47&#34; href=&#34;#__codelineno-30-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_foot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-48&#34;&gt;&lt;a id=&#34;__codelineno-30-48&#34; name=&#34;__codelineno-30-48&#34; href=&#34;#__codelineno-30-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-49&#34;&gt;&lt;a id=&#34;__codelineno-30-49&#34; name=&#34;__codelineno-30-49&#34; href=&#34;#__codelineno-30-49&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-50&#34;&gt;&lt;a id=&#34;__codelineno-30-50&#34; name=&#34;__codelineno-30-50&#34; href=&#34;#__codelineno-30-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-51&#34;&gt;&lt;a id=&#34;__codelineno-30-51&#34; name=&#34;__codelineno-30-51&#34; href=&#34;#__codelineno-30-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-52&#34;&gt;&lt;a id=&#34;__codelineno-30-52&#34; name=&#34;__codelineno-30-52&#34; href=&#34;#__codelineno-30-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-53&#34;&gt;&lt;a id=&#34;__codelineno-30-53&#34; name=&#34;__codelineno-30-53&#34; href=&#34;#__codelineno-30-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-54&#34;&gt;&lt;a id=&#34;__codelineno-30-54&#34; name=&#34;__codelineno-30-54&#34; href=&#34;#__codelineno-30-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-55&#34;&gt;&lt;a id=&#34;__codelineno-30-55&#34; name=&#34;__codelineno-30-55&#34; href=&#34;#__codelineno-30-55&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-56&#34;&gt;&lt;a id=&#34;__codelineno-30-56&#34; name=&#34;__codelineno-30-56&#34; href=&#34;#__codelineno-30-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-57&#34;&gt;&lt;a id=&#34;__codelineno-30-57&#34; name=&#34;__codelineno-30-57&#34; href=&#34;#__codelineno-30-57&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-58&#34;&gt;&lt;a id=&#34;__codelineno-30-58&#34; name=&#34;__codelineno-30-58&#34; href=&#34;#__codelineno-30-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-30-59&#34;&gt;&lt;a id=&#34;__codelineno-30-59&#34; name=&#34;__codelineno-30-59&#34; href=&#34;#__codelineno-30-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxfb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;第一层循环，遍历每个非空的 fast bin，进行下列操作&lt;/li&gt;&lt;li&gt;第二层循环，每个非空的 fast bin 有一个单向链表，沿着链表进行迭代，遍历链表上的每个空闲块，进行下列操作&lt;/li&gt;&lt;li&gt;循环内部，检查当前空闲块能否和前后的空闲块合并&lt;/li&gt;&lt;li&gt;首先检查在它前面（地址更低的）相邻的块是否空闲：如果 &lt;code&gt;PREV_INUSE&lt;/code&gt; 没有被设置，可以通过 &lt;code&gt;mchunk_prev_size&lt;/code&gt; 找到前面相邻的块的开头，然后把两个块合并起来；如果前面相邻的块已经在某个双向链表当中（例如 small bin），把它从双向链表中删除：&lt;code&gt;unlink_chunk (av, p);&lt;/code&gt;；为什么前面要用双向链表，也是为了在这里可以直接从链表中间删除一个结点&lt;/li&gt;&lt;li&gt;接着检查在它后面（地址更高的）相邻的块是否空闲：根据自己的 size，计算出下一个块的地址，得到下一个块的大小，再读取下一个块的下一个块，根据它的 &lt;code&gt;PREV_INUSE&lt;/code&gt;，判断下一个块是否空闲；如果空闲，那就把下一个块也合并进来，同理也要把它从双向链表中删除：&lt;code&gt;unlink_chunk (av, nextchunk);&lt;/code&gt;；代码中还有对 top chunk 的特殊处理，这里先略过&lt;/li&gt;&lt;li&gt;合并完成以后，把当前的空闲块放到 unsorted bin 当中，也是一个简单的双向链表向链表头的插入算法：&lt;code&gt;first_unsorted = unsorted_bin-&amp;gt;fd; unsorted_bin-&amp;gt;fd = p; first_unsorted-&amp;gt;bk = p; p-&amp;gt;bk = unsorted_bin; p-&amp;gt;fd = first_unsorted;&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;unlink_chunk&lt;/code&gt; 的实现就是经典的双向链表删除结点的算法：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-31-1&#34;&gt;&lt;a id=&#34;__codelineno-31-1&#34; name=&#34;__codelineno-31-1&#34; href=&#34;#__codelineno-31-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* Take a chunk off a bin list. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-2&#34;&gt;&lt;a id=&#34;__codelineno-31-2&#34; name=&#34;__codelineno-31-2&#34; href=&#34;#__codelineno-31-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-3&#34;&gt;&lt;a id=&#34;__codelineno-31-3&#34; name=&#34;__codelineno-31-3&#34; href=&#34;#__codelineno-31-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;unlink_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-4&#34;&gt;&lt;a id=&#34;__codelineno-31-4&#34; name=&#34;__codelineno-31-4&#34; href=&#34;#__codelineno-31-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-5&#34;&gt;&lt;a id=&#34;__codelineno-31-5&#34; name=&#34;__codelineno-31-5&#34; href=&#34;#__codelineno-31-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-6&#34;&gt;&lt;a id=&#34;__codelineno-31-6&#34; name=&#34;__codelineno-31-6&#34; href=&#34;#__codelineno-31-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-7&#34;&gt;&lt;a id=&#34;__codelineno-31-7&#34; name=&#34;__codelineno-31-7&#34; href=&#34;#__codelineno-31-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-8&#34;&gt;&lt;a id=&#34;__codelineno-31-8&#34; name=&#34;__codelineno-31-8&#34; href=&#34;#__codelineno-31-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-9&#34;&gt;&lt;a id=&#34;__codelineno-31-9&#34; name=&#34;__codelineno-31-9&#34; href=&#34;#__codelineno-31-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-10&#34;&gt;&lt;a id=&#34;__codelineno-31-10&#34; name=&#34;__codelineno-31-10&#34; href=&#34;#__codelineno-31-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-11&#34;&gt;&lt;a id=&#34;__codelineno-31-11&#34; name=&#34;__codelineno-31-11&#34; href=&#34;#__codelineno-31-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-12&#34;&gt;&lt;a id=&#34;__codelineno-31-12&#34; name=&#34;__codelineno-31-12&#34; href=&#34;#__codelineno-31-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-13&#34;&gt;&lt;a id=&#34;__codelineno-31-13&#34; name=&#34;__codelineno-31-13&#34; href=&#34;#__codelineno-31-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-14&#34;&gt;&lt;a id=&#34;__codelineno-31-14&#34; name=&#34;__codelineno-31-14&#34; href=&#34;#__codelineno-31-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-15&#34;&gt;&lt;a id=&#34;__codelineno-31-15&#34; name=&#34;__codelineno-31-15&#34; href=&#34;#__codelineno-31-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-16&#34;&gt;&lt;a id=&#34;__codelineno-31-16&#34; name=&#34;__codelineno-31-16&#34; href=&#34;#__codelineno-31-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc check omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-17&#34;&gt;&lt;a id=&#34;__codelineno-31-17&#34; name=&#34;__codelineno-31-17&#34; href=&#34;#__codelineno-31-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-18&#34;&gt;&lt;a id=&#34;__codelineno-31-18&#34; name=&#34;__codelineno-31-18&#34; href=&#34;#__codelineno-31-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-19&#34;&gt;&lt;a id=&#34;__codelineno-31-19&#34; name=&#34;__codelineno-31-19&#34; href=&#34;#__codelineno-31-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-20&#34;&gt;&lt;a id=&#34;__codelineno-31-20&#34; name=&#34;__codelineno-31-20&#34; href=&#34;#__codelineno-31-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-21&#34;&gt;&lt;a id=&#34;__codelineno-31-21&#34; name=&#34;__codelineno-31-21&#34; href=&#34;#__codelineno-31-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-22&#34;&gt;&lt;a id=&#34;__codelineno-31-22&#34; name=&#34;__codelineno-31-22&#34; href=&#34;#__codelineno-31-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-23&#34;&gt;&lt;a id=&#34;__codelineno-31-23&#34; name=&#34;__codelineno-31-23&#34; href=&#34;#__codelineno-31-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-24&#34;&gt;&lt;a id=&#34;__codelineno-31-24&#34; name=&#34;__codelineno-31-24&#34; href=&#34;#__codelineno-31-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-25&#34;&gt;&lt;a id=&#34;__codelineno-31-25&#34; name=&#34;__codelineno-31-25&#34; href=&#34;#__codelineno-31-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-26&#34;&gt;&lt;a id=&#34;__codelineno-31-26&#34; name=&#34;__codelineno-31-26&#34; href=&#34;#__codelineno-31-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-27&#34;&gt;&lt;a id=&#34;__codelineno-31-27&#34; name=&#34;__codelineno-31-27&#34; href=&#34;#__codelineno-31-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-28&#34;&gt;&lt;a id=&#34;__codelineno-31-28&#34; name=&#34;__codelineno-31-28&#34; href=&#34;#__codelineno-31-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-29&#34;&gt;&lt;a id=&#34;__codelineno-31-29&#34; name=&#34;__codelineno-31-29&#34; href=&#34;#__codelineno-31-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-30&#34;&gt;&lt;a id=&#34;__codelineno-31-30&#34; name=&#34;__codelineno-31-30&#34; href=&#34;#__codelineno-31-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-31&#34;&gt;&lt;a id=&#34;__codelineno-31-31&#34; name=&#34;__codelineno-31-31&#34; href=&#34;#__codelineno-31-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-32&#34;&gt;&lt;a id=&#34;__codelineno-31-32&#34; name=&#34;__codelineno-31-32&#34; href=&#34;#__codelineno-31-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-33&#34;&gt;&lt;a id=&#34;__codelineno-31-33&#34; name=&#34;__codelineno-31-33&#34; href=&#34;#__codelineno-31-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-34&#34;&gt;&lt;a id=&#34;__codelineno-31-34&#34; name=&#34;__codelineno-31-34&#34; href=&#34;#__codelineno-31-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-35&#34;&gt;&lt;a id=&#34;__codelineno-31-35&#34; name=&#34;__codelineno-31-35&#34; href=&#34;#__codelineno-31-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-31-36&#34;&gt;&lt;a id=&#34;__codelineno-31-36&#34; name=&#34;__codelineno-31-36&#34; href=&#34;#__codelineno-31-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的 &lt;code&gt;fd_nextsize&lt;/code&gt; 和 &lt;code&gt;bk_nextsize&lt;/code&gt; 字段适用于 large bin，后面会讨论这个双向链表的细节。&lt;/p&gt;&lt;p&gt;因此 unsorted bin 保存了一些从 fast bin 合并而来的一些块，由于 unsorted bin 只有一个，所以它里面会保存各种大小的空闲块。实际上，unsorted bin 占用的就是 &lt;code&gt;malloc_state&lt;/code&gt; 结构中的 bin 1，因为我们已经知道，块的大小至少是 32，而大小为 32 的块，对应的 small bin index 是 2，说明 1 没有被用到，其实就是留给 unsorted bin 用的。在 64 位系统下，&lt;code&gt;malloc_state&lt;/code&gt; 的 127 个 bin 分配如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;bin 1 是 unsorted bin&lt;/li&gt;&lt;li&gt;bin 2 到 bin 63 是 small bin&lt;/li&gt;&lt;li&gt;bin 64 到 bin 126 是 large bin&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;bin 127 没有用到。&lt;/p&gt;&lt;p&gt;经过这次合并之后，接下来 &lt;code&gt;_int_malloc&lt;/code&gt; 尝试从 unsorted bin 和 large bin 中分配空闲块。&lt;/p&gt;&lt;h2 id=&#34;再次回到-__libc_malloc&#34;&gt;再次回到 &lt;code&gt;__libc_malloc&lt;/code&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#再次回到-__libc_malloc&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;接下来，&lt;code&gt;_int_malloc&lt;/code&gt; 有一大段代码来进行后续的内存分配，大概步骤包括：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;把 unsorted bin 中的空闲块的处理，放到 small bin 或者 large bin 中，同时如果有合适的块，就分配给 malloc 的调用者&lt;/li&gt;&lt;li&gt;如果还是没有找到合适大小的块，就在 large bin 里寻找空闲块来分配；如果找不到合适大小的块，进行 consolidate，尝试更多的合并，得到更大的块；重复这个过程多次&lt;/li&gt;&lt;li&gt;如果还是找不到合适的块，就从堆顶分配新的块，如果堆已经满了，还需要去扩大堆，或者直接用 mmap 分配一片内存&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;现在分步骤观察这个过程，首先观察 unsorted bin 的处理。&lt;/p&gt;&lt;h2 id=&#34;unsorted-bin&#34;&gt;unsorted bin&lt;a class=&#34;headerlink&#34; href=&#34;#unsorted-bin&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先是 unsorted bin 的空闲块的处理：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-32-1&#34;&gt;&lt;a id=&#34;__codelineno-32-1&#34; name=&#34;__codelineno-32-1&#34; href=&#34;#__codelineno-32-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iters&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-2&#34;&gt;&lt;a id=&#34;__codelineno-32-2&#34; name=&#34;__codelineno-32-2&#34; href=&#34;#__codelineno-32-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-3&#34;&gt;&lt;a id=&#34;__codelineno-32-3&#34; name=&#34;__codelineno-32-3&#34; href=&#34;#__codelineno-32-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-4&#34;&gt;&lt;a id=&#34;__codelineno-32-4&#34; name=&#34;__codelineno-32-4&#34; href=&#34;#__codelineno-32-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-5&#34;&gt;&lt;a id=&#34;__codelineno-32-5&#34; name=&#34;__codelineno-32-5&#34; href=&#34;#__codelineno-32-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-6&#34;&gt;&lt;a id=&#34;__codelineno-32-6&#34; name=&#34;__codelineno-32-6&#34; href=&#34;#__codelineno-32-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-7&#34;&gt;&lt;a id=&#34;__codelineno-32-7&#34; name=&#34;__codelineno-32-7&#34; href=&#34;#__codelineno-32-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-8&#34;&gt;&lt;a id=&#34;__codelineno-32-8&#34; name=&#34;__codelineno-32-8&#34; href=&#34;#__codelineno-32-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc checks omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-9&#34;&gt;&lt;a id=&#34;__codelineno-32-9&#34; name=&#34;__codelineno-32-9&#34; href=&#34;#__codelineno-32-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-10&#34;&gt;&lt;a id=&#34;__codelineno-32-10&#34; name=&#34;__codelineno-32-10&#34; href=&#34;#__codelineno-32-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-11&#34;&gt;&lt;a id=&#34;__codelineno-32-11&#34; name=&#34;__codelineno-32-11&#34; href=&#34;#__codelineno-32-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; If a small request, try to use last remainder if it is the&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-12&#34;&gt;&lt;a id=&#34;__codelineno-32-12&#34; name=&#34;__codelineno-32-12&#34; href=&#34;#__codelineno-32-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; only chunk in unsorted bin. This helps promote locality for&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-13&#34;&gt;&lt;a id=&#34;__codelineno-32-13&#34; name=&#34;__codelineno-32-13&#34; href=&#34;#__codelineno-32-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; runs of consecutive small requests. This is the only&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-14&#34;&gt;&lt;a id=&#34;__codelineno-32-14&#34; name=&#34;__codelineno-32-14&#34; href=&#34;#__codelineno-32-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; exception to best-fit, and applies only when there is&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-15&#34;&gt;&lt;a id=&#34;__codelineno-32-15&#34; name=&#34;__codelineno-32-15&#34; href=&#34;#__codelineno-32-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; no exact fit for a small chunk.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-16&#34;&gt;&lt;a id=&#34;__codelineno-32-16&#34; name=&#34;__codelineno-32-16&#34; href=&#34;#__codelineno-32-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-17&#34;&gt;&lt;a id=&#34;__codelineno-32-17&#34; name=&#34;__codelineno-32-17&#34; href=&#34;#__codelineno-32-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-18&#34;&gt;&lt;a id=&#34;__codelineno-32-18&#34; name=&#34;__codelineno-32-18&#34; href=&#34;#__codelineno-32-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-19&#34;&gt;&lt;a id=&#34;__codelineno-32-19&#34; name=&#34;__codelineno-32-19&#34; href=&#34;#__codelineno-32-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-20&#34;&gt;&lt;a id=&#34;__codelineno-32-20&#34; name=&#34;__codelineno-32-20&#34; href=&#34;#__codelineno-32-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-21&#34;&gt;&lt;a id=&#34;__codelineno-32-21&#34; name=&#34;__codelineno-32-21&#34; href=&#34;#__codelineno-32-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MINSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-22&#34;&gt;&lt;a id=&#34;__codelineno-32-22&#34; name=&#34;__codelineno-32-22&#34; href=&#34;#__codelineno-32-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-23&#34;&gt;&lt;a id=&#34;__codelineno-32-23&#34; name=&#34;__codelineno-32-23&#34; href=&#34;#__codelineno-32-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* split and reattach remainder */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-24&#34;&gt;&lt;a id=&#34;__codelineno-32-24&#34; name=&#34;__codelineno-32-24&#34; href=&#34;#__codelineno-32-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-25&#34;&gt;&lt;a id=&#34;__codelineno-32-25&#34; name=&#34;__codelineno-32-25&#34; href=&#34;#__codelineno-32-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-26&#34;&gt;&lt;a id=&#34;__codelineno-32-26&#34; name=&#34;__codelineno-32-26&#34; href=&#34;#__codelineno-32-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-27&#34;&gt;&lt;a id=&#34;__codelineno-32-27&#34; name=&#34;__codelineno-32-27&#34; href=&#34;#__codelineno-32-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-28&#34;&gt;&lt;a id=&#34;__codelineno-32-28&#34; name=&#34;__codelineno-32-28&#34; href=&#34;#__codelineno-32-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-29&#34;&gt;&lt;a id=&#34;__codelineno-32-29&#34; name=&#34;__codelineno-32-29&#34; href=&#34;#__codelineno-32-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-30&#34;&gt;&lt;a id=&#34;__codelineno-32-30&#34; name=&#34;__codelineno-32-30&#34; href=&#34;#__codelineno-32-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-31&#34;&gt;&lt;a id=&#34;__codelineno-32-31&#34; name=&#34;__codelineno-32-31&#34; href=&#34;#__codelineno-32-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-32&#34;&gt;&lt;a id=&#34;__codelineno-32-32&#34; name=&#34;__codelineno-32-32&#34; href=&#34;#__codelineno-32-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-33&#34;&gt;&lt;a id=&#34;__codelineno-32-33&#34; name=&#34;__codelineno-32-33&#34; href=&#34;#__codelineno-32-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-34&#34;&gt;&lt;a id=&#34;__codelineno-32-34&#34; name=&#34;__codelineno-32-34&#34; href=&#34;#__codelineno-32-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-35&#34;&gt;&lt;a id=&#34;__codelineno-32-35&#34; name=&#34;__codelineno-32-35&#34; href=&#34;#__codelineno-32-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-36&#34;&gt;&lt;a id=&#34;__codelineno-32-36&#34; name=&#34;__codelineno-32-36&#34; href=&#34;#__codelineno-32-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NON_MAIN_ARENA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-37&#34;&gt;&lt;a id=&#34;__codelineno-32-37&#34; name=&#34;__codelineno-32-37&#34; href=&#34;#__codelineno-32-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-38&#34;&gt;&lt;a id=&#34;__codelineno-32-38&#34; name=&#34;__codelineno-32-38&#34; href=&#34;#__codelineno-32-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_foot&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-39&#34;&gt;&lt;a id=&#34;__codelineno-32-39&#34; name=&#34;__codelineno-32-39&#34; href=&#34;#__codelineno-32-39&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-40&#34;&gt;&lt;a id=&#34;__codelineno-32-40&#34; name=&#34;__codelineno-32-40&#34; href=&#34;#__codelineno-32-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_malloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-41&#34;&gt;&lt;a id=&#34;__codelineno-32-41&#34; name=&#34;__codelineno-32-41&#34; href=&#34;#__codelineno-32-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-42&#34;&gt;&lt;a id=&#34;__codelineno-32-42&#34; name=&#34;__codelineno-32-42&#34; href=&#34;#__codelineno-32-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-43&#34;&gt;&lt;a id=&#34;__codelineno-32-43&#34; name=&#34;__codelineno-32-43&#34; href=&#34;#__codelineno-32-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-44&#34;&gt;&lt;a id=&#34;__codelineno-32-44&#34; name=&#34;__codelineno-32-44&#34; href=&#34;#__codelineno-32-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-45&#34;&gt;&lt;a id=&#34;__codelineno-32-45&#34; name=&#34;__codelineno-32-45&#34; href=&#34;#__codelineno-32-45&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-46&#34;&gt;&lt;a id=&#34;__codelineno-32-46&#34; name=&#34;__codelineno-32-46&#34; href=&#34;#__codelineno-32-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* remove from unsorted list */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-47&#34;&gt;&lt;a id=&#34;__codelineno-32-47&#34; name=&#34;__codelineno-32-47&#34; href=&#34;#__codelineno-32-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc checks omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-48&#34;&gt;&lt;a id=&#34;__codelineno-32-48&#34; name=&#34;__codelineno-32-48&#34; href=&#34;#__codelineno-32-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-49&#34;&gt;&lt;a id=&#34;__codelineno-32-49&#34; name=&#34;__codelineno-32-49&#34; href=&#34;#__codelineno-32-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-50&#34;&gt;&lt;a id=&#34;__codelineno-32-50&#34; name=&#34;__codelineno-32-50&#34; href=&#34;#__codelineno-32-50&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-51&#34;&gt;&lt;a id=&#34;__codelineno-32-51&#34; name=&#34;__codelineno-32-51&#34; href=&#34;#__codelineno-32-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Take now instead of binning if exact fit */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-52&#34;&gt;&lt;a id=&#34;__codelineno-32-52&#34; name=&#34;__codelineno-32-52&#34; href=&#34;#__codelineno-32-52&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-53&#34;&gt;&lt;a id=&#34;__codelineno-32-53&#34; name=&#34;__codelineno-32-53&#34; href=&#34;#__codelineno-32-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-54&#34;&gt;&lt;a id=&#34;__codelineno-32-54&#34; name=&#34;__codelineno-32-54&#34; href=&#34;#__codelineno-32-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-55&#34;&gt;&lt;a id=&#34;__codelineno-32-55&#34; name=&#34;__codelineno-32-55&#34; href=&#34;#__codelineno-32-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-56&#34;&gt;&lt;a id=&#34;__codelineno-32-56&#34; name=&#34;__codelineno-32-56&#34; href=&#34;#__codelineno-32-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-57&#34;&gt;&lt;a id=&#34;__codelineno-32-57&#34; name=&#34;__codelineno-32-57&#34; href=&#34;#__codelineno-32-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_non_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-58&#34;&gt;&lt;a id=&#34;__codelineno-32-58&#34; name=&#34;__codelineno-32-58&#34; href=&#34;#__codelineno-32-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Fill cache first, return to user only if cache fills.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-59&#34;&gt;&lt;a id=&#34;__codelineno-32-59&#34; name=&#34;__codelineno-32-59&#34; href=&#34;#__codelineno-32-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; We may return one of these chunks later. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-60&#34;&gt;&lt;a id=&#34;__codelineno-32-60&#34; name=&#34;__codelineno-32-60&#34; href=&#34;#__codelineno-32-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_nb&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-61&#34;&gt;&lt;a id=&#34;__codelineno-32-61&#34; name=&#34;__codelineno-32-61&#34; href=&#34;#__codelineno-32-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-62&#34;&gt;&lt;a id=&#34;__codelineno-32-62&#34; name=&#34;__codelineno-32-62&#34; href=&#34;#__codelineno-32-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-63&#34;&gt;&lt;a id=&#34;__codelineno-32-63&#34; name=&#34;__codelineno-32-63&#34; href=&#34;#__codelineno-32-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_put&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-64&#34;&gt;&lt;a id=&#34;__codelineno-32-64&#34; name=&#34;__codelineno-32-64&#34; href=&#34;#__codelineno-32-64&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;return_cached&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-65&#34;&gt;&lt;a id=&#34;__codelineno-32-65&#34; name=&#34;__codelineno-32-65&#34; href=&#34;#__codelineno-32-65&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-66&#34;&gt;&lt;a id=&#34;__codelineno-32-66&#34; name=&#34;__codelineno-32-66&#34; href=&#34;#__codelineno-32-66&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-67&#34;&gt;&lt;a id=&#34;__codelineno-32-67&#34; name=&#34;__codelineno-32-67&#34; href=&#34;#__codelineno-32-67&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-68&#34;&gt;&lt;a id=&#34;__codelineno-32-68&#34; name=&#34;__codelineno-32-68&#34; href=&#34;#__codelineno-32-68&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-69&#34;&gt;&lt;a id=&#34;__codelineno-32-69&#34; name=&#34;__codelineno-32-69&#34; href=&#34;#__codelineno-32-69&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_malloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-70&#34;&gt;&lt;a id=&#34;__codelineno-32-70&#34; name=&#34;__codelineno-32-70&#34; href=&#34;#__codelineno-32-70&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-71&#34;&gt;&lt;a id=&#34;__codelineno-32-71&#34; name=&#34;__codelineno-32-71&#34; href=&#34;#__codelineno-32-71&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-72&#34;&gt;&lt;a id=&#34;__codelineno-32-72&#34; name=&#34;__codelineno-32-72&#34; href=&#34;#__codelineno-32-72&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-73&#34;&gt;&lt;a id=&#34;__codelineno-32-73&#34; name=&#34;__codelineno-32-73&#34; href=&#34;#__codelineno-32-73&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-74&#34;&gt;&lt;a id=&#34;__codelineno-32-74&#34; name=&#34;__codelineno-32-74&#34; href=&#34;#__codelineno-32-74&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-75&#34;&gt;&lt;a id=&#34;__codelineno-32-75&#34; name=&#34;__codelineno-32-75&#34; href=&#34;#__codelineno-32-75&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-76&#34;&gt;&lt;a id=&#34;__codelineno-32-76&#34; name=&#34;__codelineno-32-76&#34; href=&#34;#__codelineno-32-76&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* place chunk in bin */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-77&#34;&gt;&lt;a id=&#34;__codelineno-32-77&#34; name=&#34;__codelineno-32-77&#34; href=&#34;#__codelineno-32-77&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-78&#34;&gt;&lt;a id=&#34;__codelineno-32-78&#34; name=&#34;__codelineno-32-78&#34; href=&#34;#__codelineno-32-78&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-79&#34;&gt;&lt;a id=&#34;__codelineno-32-79&#34; name=&#34;__codelineno-32-79&#34; href=&#34;#__codelineno-32-79&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-80&#34;&gt;&lt;a id=&#34;__codelineno-32-80&#34; name=&#34;__codelineno-32-80&#34; href=&#34;#__codelineno-32-80&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;smallbin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-81&#34;&gt;&lt;a id=&#34;__codelineno-32-81&#34; name=&#34;__codelineno-32-81&#34; href=&#34;#__codelineno-32-81&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-82&#34;&gt;&lt;a id=&#34;__codelineno-32-82&#34; name=&#34;__codelineno-32-82&#34; href=&#34;#__codelineno-32-82&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-83&#34;&gt;&lt;a id=&#34;__codelineno-32-83&#34; name=&#34;__codelineno-32-83&#34; href=&#34;#__codelineno-32-83&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-84&#34;&gt;&lt;a id=&#34;__codelineno-32-84&#34; name=&#34;__codelineno-32-84&#34; href=&#34;#__codelineno-32-84&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-85&#34;&gt;&lt;a id=&#34;__codelineno-32-85&#34; name=&#34;__codelineno-32-85&#34; href=&#34;#__codelineno-32-85&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-86&#34;&gt;&lt;a id=&#34;__codelineno-32-86&#34; name=&#34;__codelineno-32-86&#34; href=&#34;#__codelineno-32-86&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;largebin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-87&#34;&gt;&lt;a id=&#34;__codelineno-32-87&#34; name=&#34;__codelineno-32-87&#34; href=&#34;#__codelineno-32-87&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-88&#34;&gt;&lt;a id=&#34;__codelineno-32-88&#34; name=&#34;__codelineno-32-88&#34; href=&#34;#__codelineno-32-88&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-89&#34;&gt;&lt;a id=&#34;__codelineno-32-89&#34; name=&#34;__codelineno-32-89&#34; href=&#34;#__codelineno-32-89&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-90&#34;&gt;&lt;a id=&#34;__codelineno-32-90&#34; name=&#34;__codelineno-32-90&#34; href=&#34;#__codelineno-32-90&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* maintain large bins in sorted order */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-91&#34;&gt;&lt;a id=&#34;__codelineno-32-91&#34; name=&#34;__codelineno-32-91&#34; href=&#34;#__codelineno-32-91&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-92&#34;&gt;&lt;a id=&#34;__codelineno-32-92&#34; name=&#34;__codelineno-32-92&#34; href=&#34;#__codelineno-32-92&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-93&#34;&gt;&lt;a id=&#34;__codelineno-32-93&#34; name=&#34;__codelineno-32-93&#34; href=&#34;#__codelineno-32-93&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Or with inuse bit to speed comparisons */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-94&#34;&gt;&lt;a id=&#34;__codelineno-32-94&#34; name=&#34;__codelineno-32-94&#34; href=&#34;#__codelineno-32-94&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-95&#34;&gt;&lt;a id=&#34;__codelineno-32-95&#34; name=&#34;__codelineno-32-95&#34; href=&#34;#__codelineno-32-95&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* if smaller than smallest, bypass loop below */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-96&#34;&gt;&lt;a id=&#34;__codelineno-32-96&#34; name=&#34;__codelineno-32-96&#34; href=&#34;#__codelineno-32-96&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-97&#34;&gt;&lt;a id=&#34;__codelineno-32-97&#34; name=&#34;__codelineno-32-97&#34; href=&#34;#__codelineno-32-97&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-98&#34;&gt;&lt;a id=&#34;__codelineno-32-98&#34; name=&#34;__codelineno-32-98&#34; href=&#34;#__codelineno-32-98&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-99&#34;&gt;&lt;a id=&#34;__codelineno-32-99&#34; name=&#34;__codelineno-32-99&#34; href=&#34;#__codelineno-32-99&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-100&#34;&gt;&lt;a id=&#34;__codelineno-32-100&#34; name=&#34;__codelineno-32-100&#34; href=&#34;#__codelineno-32-100&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-101&#34;&gt;&lt;a id=&#34;__codelineno-32-101&#34; name=&#34;__codelineno-32-101&#34; href=&#34;#__codelineno-32-101&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-102&#34;&gt;&lt;a id=&#34;__codelineno-32-102&#34; name=&#34;__codelineno-32-102&#34; href=&#34;#__codelineno-32-102&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-103&#34;&gt;&lt;a id=&#34;__codelineno-32-103&#34; name=&#34;__codelineno-32-103&#34; href=&#34;#__codelineno-32-103&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-104&#34;&gt;&lt;a id=&#34;__codelineno-32-104&#34; name=&#34;__codelineno-32-104&#34; href=&#34;#__codelineno-32-104&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-105&#34;&gt;&lt;a id=&#34;__codelineno-32-105&#34; name=&#34;__codelineno-32-105&#34; href=&#34;#__codelineno-32-105&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-106&#34;&gt;&lt;a id=&#34;__codelineno-32-106&#34; name=&#34;__codelineno-32-106&#34; href=&#34;#__codelineno-32-106&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-107&#34;&gt;&lt;a id=&#34;__codelineno-32-107&#34; name=&#34;__codelineno-32-107&#34; href=&#34;#__codelineno-32-107&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-108&#34;&gt;&lt;a id=&#34;__codelineno-32-108&#34; name=&#34;__codelineno-32-108&#34; href=&#34;#__codelineno-32-108&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-109&#34;&gt;&lt;a id=&#34;__codelineno-32-109&#34; name=&#34;__codelineno-32-109&#34; href=&#34;#__codelineno-32-109&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-110&#34;&gt;&lt;a id=&#34;__codelineno-32-110&#34; name=&#34;__codelineno-32-110&#34; href=&#34;#__codelineno-32-110&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-111&#34;&gt;&lt;a id=&#34;__codelineno-32-111&#34; name=&#34;__codelineno-32-111&#34; href=&#34;#__codelineno-32-111&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-112&#34;&gt;&lt;a id=&#34;__codelineno-32-112&#34; name=&#34;__codelineno-32-112&#34; href=&#34;#__codelineno-32-112&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-113&#34;&gt;&lt;a id=&#34;__codelineno-32-113&#34; name=&#34;__codelineno-32-113&#34; href=&#34;#__codelineno-32-113&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-114&#34;&gt;&lt;a id=&#34;__codelineno-32-114&#34; name=&#34;__codelineno-32-114&#34; href=&#34;#__codelineno-32-114&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-115&#34;&gt;&lt;a id=&#34;__codelineno-32-115&#34; name=&#34;__codelineno-32-115&#34; href=&#34;#__codelineno-32-115&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-116&#34;&gt;&lt;a id=&#34;__codelineno-32-116&#34; name=&#34;__codelineno-32-116&#34; href=&#34;#__codelineno-32-116&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-117&#34;&gt;&lt;a id=&#34;__codelineno-32-117&#34; name=&#34;__codelineno-32-117&#34; href=&#34;#__codelineno-32-117&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-118&#34;&gt;&lt;a id=&#34;__codelineno-32-118&#34; name=&#34;__codelineno-32-118&#34; href=&#34;#__codelineno-32-118&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Always insert in the second position. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-119&#34;&gt;&lt;a id=&#34;__codelineno-32-119&#34; name=&#34;__codelineno-32-119&#34; href=&#34;#__codelineno-32-119&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-120&#34;&gt;&lt;a id=&#34;__codelineno-32-120&#34; name=&#34;__codelineno-32-120&#34; href=&#34;#__codelineno-32-120&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-121&#34;&gt;&lt;a id=&#34;__codelineno-32-121&#34; name=&#34;__codelineno-32-121&#34; href=&#34;#__codelineno-32-121&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-122&#34;&gt;&lt;a id=&#34;__codelineno-32-122&#34; name=&#34;__codelineno-32-122&#34; href=&#34;#__codelineno-32-122&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-123&#34;&gt;&lt;a id=&#34;__codelineno-32-123&#34; name=&#34;__codelineno-32-123&#34; href=&#34;#__codelineno-32-123&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-124&#34;&gt;&lt;a id=&#34;__codelineno-32-124&#34; name=&#34;__codelineno-32-124&#34; href=&#34;#__codelineno-32-124&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc checks omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-125&#34;&gt;&lt;a id=&#34;__codelineno-32-125&#34; name=&#34;__codelineno-32-125&#34; href=&#34;#__codelineno-32-125&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-126&#34;&gt;&lt;a id=&#34;__codelineno-32-126&#34; name=&#34;__codelineno-32-126&#34; href=&#34;#__codelineno-32-126&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-127&#34;&gt;&lt;a id=&#34;__codelineno-32-127&#34; name=&#34;__codelineno-32-127&#34; href=&#34;#__codelineno-32-127&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-128&#34;&gt;&lt;a id=&#34;__codelineno-32-128&#34; name=&#34;__codelineno-32-128&#34; href=&#34;#__codelineno-32-128&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-129&#34;&gt;&lt;a id=&#34;__codelineno-32-129&#34; name=&#34;__codelineno-32-129&#34; href=&#34;#__codelineno-32-129&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* malloc checks omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-130&#34;&gt;&lt;a id=&#34;__codelineno-32-130&#34; name=&#34;__codelineno-32-130&#34; href=&#34;#__codelineno-32-130&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-131&#34;&gt;&lt;a id=&#34;__codelineno-32-131&#34; name=&#34;__codelineno-32-131&#34; href=&#34;#__codelineno-32-131&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-132&#34;&gt;&lt;a id=&#34;__codelineno-32-132&#34; name=&#34;__codelineno-32-132&#34; href=&#34;#__codelineno-32-132&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-133&#34;&gt;&lt;a id=&#34;__codelineno-32-133&#34; name=&#34;__codelineno-32-133&#34; href=&#34;#__codelineno-32-133&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-134&#34;&gt;&lt;a id=&#34;__codelineno-32-134&#34; name=&#34;__codelineno-32-134&#34; href=&#34;#__codelineno-32-134&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-135&#34;&gt;&lt;a id=&#34;__codelineno-32-135&#34; name=&#34;__codelineno-32-135&#34; href=&#34;#__codelineno-32-135&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-136&#34;&gt;&lt;a id=&#34;__codelineno-32-136&#34; name=&#34;__codelineno-32-136&#34; href=&#34;#__codelineno-32-136&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mark_bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-137&#34;&gt;&lt;a id=&#34;__codelineno-32-137&#34; name=&#34;__codelineno-32-137&#34; href=&#34;#__codelineno-32-137&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-138&#34;&gt;&lt;a id=&#34;__codelineno-32-138&#34; name=&#34;__codelineno-32-138&#34; href=&#34;#__codelineno-32-138&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-139&#34;&gt;&lt;a id=&#34;__codelineno-32-139&#34; name=&#34;__codelineno-32-139&#34; href=&#34;#__codelineno-32-139&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-140&#34;&gt;&lt;a id=&#34;__codelineno-32-140&#34; name=&#34;__codelineno-32-140&#34; href=&#34;#__codelineno-32-140&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-141&#34;&gt;&lt;a id=&#34;__codelineno-32-141&#34; name=&#34;__codelineno-32-141&#34; href=&#34;#__codelineno-32-141&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-142&#34;&gt;&lt;a id=&#34;__codelineno-32-142&#34; name=&#34;__codelineno-32-142&#34; href=&#34;#__codelineno-32-142&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* If we&amp;#39;ve processed as many chunks as we&amp;#39;re allowed while&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-143&#34;&gt;&lt;a id=&#34;__codelineno-32-143&#34; name=&#34;__codelineno-32-143&#34; href=&#34;#__codelineno-32-143&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; filling the cache, return one of the cached ones. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-144&#34;&gt;&lt;a id=&#34;__codelineno-32-144&#34; name=&#34;__codelineno-32-144&#34; href=&#34;#__codelineno-32-144&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_unsorted_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-145&#34;&gt;&lt;a id=&#34;__codelineno-32-145&#34; name=&#34;__codelineno-32-145&#34; href=&#34;#__codelineno-32-145&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;return_cached&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-146&#34;&gt;&lt;a id=&#34;__codelineno-32-146&#34; name=&#34;__codelineno-32-146&#34; href=&#34;#__codelineno-32-146&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_unsorted_limit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-147&#34;&gt;&lt;a id=&#34;__codelineno-32-147&#34; name=&#34;__codelineno-32-147&#34; href=&#34;#__codelineno-32-147&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_unsorted_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_unsorted_limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-148&#34;&gt;&lt;a id=&#34;__codelineno-32-148&#34; name=&#34;__codelineno-32-148&#34; href=&#34;#__codelineno-32-148&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-149&#34;&gt;&lt;a id=&#34;__codelineno-32-149&#34; name=&#34;__codelineno-32-149&#34; href=&#34;#__codelineno-32-149&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tcache_get&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tc_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-150&#34;&gt;&lt;a id=&#34;__codelineno-32-150&#34; name=&#34;__codelineno-32-150&#34; href=&#34;#__codelineno-32-150&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-151&#34;&gt;&lt;a id=&#34;__codelineno-32-151&#34; name=&#34;__codelineno-32-151&#34; href=&#34;#__codelineno-32-151&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-152&#34;&gt;&lt;a id=&#34;__codelineno-32-152&#34; name=&#34;__codelineno-32-152&#34; href=&#34;#__codelineno-32-152&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define MAX_ITERS 10000&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-153&#34;&gt;&lt;a id=&#34;__codelineno-32-153&#34; name=&#34;__codelineno-32-153&#34; href=&#34;#__codelineno-32-153&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iters&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_ITERS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-154&#34;&gt;&lt;a id=&#34;__codelineno-32-154&#34; name=&#34;__codelineno-32-154&#34; href=&#34;#__codelineno-32-154&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-32-155&#34;&gt;&lt;a id=&#34;__codelineno-32-155&#34; name=&#34;__codelineno-32-155&#34; href=&#34;#__codelineno-32-155&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它的流程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;遍历 unsorted bin 双向链表，从哨兵结点开始，从后往前遍历空闲块&lt;/li&gt;&lt;li&gt;fast path 逻辑：如果要申请的块比当前空闲块小，并且当前空闲块可以拆分，那就拆分当前的空闲块，然后直接分配拆分后的空闲块&lt;/li&gt;&lt;li&gt;如果要申请的块的大小和当前空闲块的大小相同，把空闲块放到 tcache，或者直接分配这个空闲块&lt;/li&gt;&lt;li&gt;把当前空闲块根据大小，分发到 small bin 或者 large bin&lt;/li&gt;&lt;li&gt;如果 tcache 中有合适的空闲块，就分配它&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由此可见，unsorted bin 中的空闲块在 malloc 的时候会被分派到对应的 small bin 或者 large bin 当中。small bin 的处理比较简单，因为每个 bin 的块大小都相同，直接加入到双向链表即可。large bin 的处理则比较复杂，下面主要来分析 large bin 的结构。&lt;/p&gt;&lt;h2 id=&#34;large-bin&#34;&gt;large bin&lt;a class=&#34;headerlink&#34; href=&#34;#large-bin&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;large bin 和其他 bin 的不同的地方在于，它每个 bin 的大小不是一个固定的值，而是一个范围。在 64 位下，bin 64 到 bin 127 对应的块大小范围：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;bin 64 到 bin 96: 从 1024 字节开始，每个 bin 覆盖 64 字节的长度范围，例如 bin 64 对应 1024-1087 字节范围，bin 96 对应 3072-3135 字节范围&lt;/li&gt;&lt;li&gt;bin 97 到 bin 111: 从 3136 字节开始，每个 bin 覆盖 512 字节的长度范围，例如 bin 97 对应 3136-3583 字节范围（没有涵盖 512 字节是因为对齐问题，其他的都是涵盖 512 字节），bin 111 对应 10240-10751 字节范围&lt;/li&gt;&lt;li&gt;bin 112 到 bin 119: 从 10752 字节开始，每个 bin 覆盖 4096 字节的长度范围，例如 bin 112 对应 10752-12287 字节范围（没有涵盖 4096 字节是因为对齐问题，其他的都是涵盖 4096 字节），bin 119 对应 36864-40959 字节范围&lt;/li&gt;&lt;li&gt;bin 120 到 bin 123: 从 40960 字节开始，每个 bin 覆盖 32768 字节的长度范围，例如 bin 120 对应 40960-65535 字节范围（没有涵盖 32768 字节是因为对齐问题，其他的都是涵盖 32768 字节），bin 123 对应 131072-163839 字节范围&lt;/li&gt;&lt;li&gt;bin 124: 163840-262143 共 98304 个字节的范围&lt;/li&gt;&lt;li&gt;bin 125: 262144-524287 共 262144 个字节的范围&lt;/li&gt;&lt;li&gt;bin 126: 524288 或更长&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;可以看到，比较短的长度范围给的 bin 也比较多，后面则更加稀疏。上述各个 bin 的大小范围可以通过以下代码打印：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-33-1&#34;&gt;&lt;a id=&#34;__codelineno-33-1&#34; name=&#34;__codelineno-33-1&#34; href=&#34;#__codelineno-33-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-2&#34;&gt;&lt;a id=&#34;__codelineno-33-2&#34; name=&#34;__codelineno-33-2&#34; href=&#34;#__codelineno-33-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define largebin_index_64(sz) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-3&#34;&gt;&lt;a id=&#34;__codelineno-33-3&#34; name=&#34;__codelineno-33-3&#34; href=&#34;#__codelineno-33-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; (((((unsigned long)(sz)) &amp;gt;&amp;gt; 6) &amp;lt;= 48) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-4&#34;&gt;&lt;a id=&#34;__codelineno-33-4&#34; name=&#34;__codelineno-33-4&#34; href=&#34;#__codelineno-33-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ? 48 + (((unsigned long)(sz)) &amp;gt;&amp;gt; 6) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-5&#34;&gt;&lt;a id=&#34;__codelineno-33-5&#34; name=&#34;__codelineno-33-5&#34; href=&#34;#__codelineno-33-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : ((((unsigned long)(sz)) &amp;gt;&amp;gt; 9) &amp;lt;= 20) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-6&#34;&gt;&lt;a id=&#34;__codelineno-33-6&#34; name=&#34;__codelineno-33-6&#34; href=&#34;#__codelineno-33-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ? 91 + (((unsigned long)(sz)) &amp;gt;&amp;gt; 9) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-7&#34;&gt;&lt;a id=&#34;__codelineno-33-7&#34; name=&#34;__codelineno-33-7&#34; href=&#34;#__codelineno-33-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : ((((unsigned long)(sz)) &amp;gt;&amp;gt; 12) &amp;lt;= 10) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-8&#34;&gt;&lt;a id=&#34;__codelineno-33-8&#34; name=&#34;__codelineno-33-8&#34; href=&#34;#__codelineno-33-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ? 110 + (((unsigned long)(sz)) &amp;gt;&amp;gt; 12) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-9&#34;&gt;&lt;a id=&#34;__codelineno-33-9&#34; name=&#34;__codelineno-33-9&#34; href=&#34;#__codelineno-33-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : ((((unsigned long)(sz)) &amp;gt;&amp;gt; 15) &amp;lt;= 4) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-10&#34;&gt;&lt;a id=&#34;__codelineno-33-10&#34; name=&#34;__codelineno-33-10&#34; href=&#34;#__codelineno-33-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ? 119 + (((unsigned long)(sz)) &amp;gt;&amp;gt; 15) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-11&#34;&gt;&lt;a id=&#34;__codelineno-33-11&#34; name=&#34;__codelineno-33-11&#34; href=&#34;#__codelineno-33-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : ((((unsigned long)(sz)) &amp;gt;&amp;gt; 18) &amp;lt;= 2) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-12&#34;&gt;&lt;a id=&#34;__codelineno-33-12&#34; name=&#34;__codelineno-33-12&#34; href=&#34;#__codelineno-33-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ? 124 + (((unsigned long)(sz)) &amp;gt;&amp;gt; 18) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-13&#34;&gt;&lt;a id=&#34;__codelineno-33-13&#34; name=&#34;__codelineno-33-13&#34; href=&#34;#__codelineno-33-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; : 126)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-14&#34;&gt;&lt;a id=&#34;__codelineno-33-14&#34; name=&#34;__codelineno-33-14&#34; href=&#34;#__codelineno-33-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-15&#34;&gt;&lt;a id=&#34;__codelineno-33-15&#34; name=&#34;__codelineno-33-15&#34; href=&#34;#__codelineno-33-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-16&#34;&gt;&lt;a id=&#34;__codelineno-33-16&#34; name=&#34;__codelineno-33-16&#34; href=&#34;#__codelineno-33-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;largebin_index_64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-17&#34;&gt;&lt;a id=&#34;__codelineno-33-17&#34; name=&#34;__codelineno-33-17&#34; href=&#34;#__codelineno-33-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-18&#34;&gt;&lt;a id=&#34;__codelineno-33-18&#34; name=&#34;__codelineno-33-18&#34; href=&#34;#__codelineno-33-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-19&#34;&gt;&lt;a id=&#34;__codelineno-33-19&#34; name=&#34;__codelineno-33-19&#34; href=&#34;#__codelineno-33-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;largebin_index_64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-20&#34;&gt;&lt;a id=&#34;__codelineno-33-20&#34; name=&#34;__codelineno-33-20&#34; href=&#34;#__codelineno-33-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;%d-%d: %d, length %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-21&#34;&gt;&lt;a id=&#34;__codelineno-33-21&#34; name=&#34;__codelineno-33-21&#34; href=&#34;#__codelineno-33-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-22&#34;&gt;&lt;a id=&#34;__codelineno-33-22&#34; name=&#34;__codelineno-33-22&#34; href=&#34;#__codelineno-33-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;largebin_index_64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-23&#34;&gt;&lt;a id=&#34;__codelineno-33-23&#34; name=&#34;__codelineno-33-23&#34; href=&#34;#__codelineno-33-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-24&#34;&gt;&lt;a id=&#34;__codelineno-33-24&#34; name=&#34;__codelineno-33-24&#34; href=&#34;#__codelineno-33-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-25&#34;&gt;&lt;a id=&#34;__codelineno-33-25&#34; name=&#34;__codelineno-33-25&#34; href=&#34;#__codelineno-33-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;%d-inf: %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-26&#34;&gt;&lt;a id=&#34;__codelineno-33-26&#34; name=&#34;__codelineno-33-26&#34; href=&#34;#__codelineno-33-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-33-27&#34;&gt;&lt;a id=&#34;__codelineno-33-27&#34; name=&#34;__codelineno-33-27&#34; href=&#34;#__codelineno-33-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因此 large bin 里面会有不同 chunk 大小的空闲块。为了快速地寻找想要的大小的空闲块，large bin 中空闲块按照从大到小的顺序组成链表，同时通过 &lt;code&gt;fd_nextsize&lt;/code&gt; 和 &lt;code&gt;bk_nextsize&lt;/code&gt; 把每种大小出现的第一个块组成双向链表。大致的连接方式如下，参考了 &lt;a href=&#34;https://sourceware.org/glibc/wiki/MallocInternals&#34;&gt;Malloc Internals&lt;/a&gt; 给的示例：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-34-1&#34;&gt;&lt;a id=&#34;__codelineno-34-1&#34; name=&#34;__codelineno-34-1&#34; href=&#34;#__codelineno-34-1&#34;&gt;&lt;/a&gt; bins[id] chunk A chunk B chunk C&lt;/span&gt;&lt;span id=&#34;__span-34-2&#34;&gt;&lt;a id=&#34;__codelineno-34-2&#34; name=&#34;__codelineno-34-2&#34; href=&#34;#__codelineno-34-2&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-34-3&#34;&gt;&lt;a id=&#34;__codelineno-34-3&#34; name=&#34;__codelineno-34-3&#34; href=&#34;#__codelineno-34-3&#34;&gt;&lt;/a&gt;| fd = A | | size = 1072 | | size = 1072 | | size = 1040 |&lt;/span&gt;&lt;span id=&#34;__span-34-4&#34;&gt;&lt;a id=&#34;__codelineno-34-4&#34; name=&#34;__codelineno-34-4&#34; href=&#34;#__codelineno-34-4&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-34-5&#34;&gt;&lt;a id=&#34;__codelineno-34-5&#34; name=&#34;__codelineno-34-5&#34; href=&#34;#__codelineno-34-5&#34;&gt;&lt;/a&gt;| bk = C | | fd = B | | fd = C | | fd = bins[id] |&lt;/span&gt;&lt;span id=&#34;__span-34-6&#34;&gt;&lt;a id=&#34;__codelineno-34-6&#34; name=&#34;__codelineno-34-6&#34; href=&#34;#__codelineno-34-6&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-34-7&#34;&gt;&lt;a id=&#34;__codelineno-34-7&#34; name=&#34;__codelineno-34-7&#34; href=&#34;#__codelineno-34-7&#34;&gt;&lt;/a&gt; | bk = bins[id] | | bk = A | | bk = B |&lt;/span&gt;&lt;span id=&#34;__span-34-8&#34;&gt;&lt;a id=&#34;__codelineno-34-8&#34; name=&#34;__codelineno-34-8&#34; href=&#34;#__codelineno-34-8&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-34-9&#34;&gt;&lt;a id=&#34;__codelineno-34-9&#34; name=&#34;__codelineno-34-9&#34; href=&#34;#__codelineno-34-9&#34;&gt;&lt;/a&gt; | fd_nextsize = C | | fd_nextsize = A |&lt;/span&gt;&lt;span id=&#34;__span-34-10&#34;&gt;&lt;a id=&#34;__codelineno-34-10&#34; name=&#34;__codelineno-34-10&#34; href=&#34;#__codelineno-34-10&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-34-11&#34;&gt;&lt;a id=&#34;__codelineno-34-11&#34; name=&#34;__codelineno-34-11&#34; href=&#34;#__codelineno-34-11&#34;&gt;&lt;/a&gt; | bk_nextsize = C | | bk_nextsize = A |&lt;/span&gt;&lt;span id=&#34;__span-34-12&#34;&gt;&lt;a id=&#34;__codelineno-34-12&#34; name=&#34;__codelineno-34-12&#34; href=&#34;#__codelineno-34-12&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即所有的空闲块加哨兵组成一个双向链表，从大到小按照 &lt;code&gt;A -&amp;gt; B -&amp;gt; C&lt;/code&gt; 的顺序连接；然后每种大小的第一个块 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 单独在一个 nextsize 链表当中。&lt;/p&gt;&lt;p&gt;因此在插入 large bin 的时候，分如下几种情况：&lt;/p&gt;&lt;p&gt;第一种情况，如果新插入的空闲块的大小比目前已有空闲块都小，则直接插入到空闲块和 nextsize 链表的尾部。例如要插入一个 &lt;code&gt;size = 1024&lt;/code&gt; 的空闲块 D，插入后状态为：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-35-1&#34;&gt;&lt;a id=&#34;__codelineno-35-1&#34; name=&#34;__codelineno-35-1&#34; href=&#34;#__codelineno-35-1&#34;&gt;&lt;/a&gt; bins[id] chunk A chunk B chunk C chunk D &lt;/span&gt;&lt;span id=&#34;__span-35-2&#34;&gt;&lt;a id=&#34;__codelineno-35-2&#34; name=&#34;__codelineno-35-2&#34; href=&#34;#__codelineno-35-2&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-35-3&#34;&gt;&lt;a id=&#34;__codelineno-35-3&#34; name=&#34;__codelineno-35-3&#34; href=&#34;#__codelineno-35-3&#34;&gt;&lt;/a&gt;| fd = A | | size = 1072 | | size = 1072 | | size = 1040 | | size = 1024 |&lt;/span&gt;&lt;span id=&#34;__span-35-4&#34;&gt;&lt;a id=&#34;__codelineno-35-4&#34; name=&#34;__codelineno-35-4&#34; href=&#34;#__codelineno-35-4&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-35-5&#34;&gt;&lt;a id=&#34;__codelineno-35-5&#34; name=&#34;__codelineno-35-5&#34; href=&#34;#__codelineno-35-5&#34;&gt;&lt;/a&gt;| bk = D | | fd = B | | fd = C | | fd = D | | fd = bins[id] |&lt;/span&gt;&lt;span id=&#34;__span-35-6&#34;&gt;&lt;a id=&#34;__codelineno-35-6&#34; name=&#34;__codelineno-35-6&#34; href=&#34;#__codelineno-35-6&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-35-7&#34;&gt;&lt;a id=&#34;__codelineno-35-7&#34; name=&#34;__codelineno-35-7&#34; href=&#34;#__codelineno-35-7&#34;&gt;&lt;/a&gt; | bk = bins[id] | | bk = A | | bk = B | | bk = C |&lt;/span&gt;&lt;span id=&#34;__span-35-8&#34;&gt;&lt;a id=&#34;__codelineno-35-8&#34; name=&#34;__codelineno-35-8&#34; href=&#34;#__codelineno-35-8&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-35-9&#34;&gt;&lt;a id=&#34;__codelineno-35-9&#34; name=&#34;__codelineno-35-9&#34; href=&#34;#__codelineno-35-9&#34;&gt;&lt;/a&gt; | fd_nextsize = C | | fd_nextsize = D | | fd_nextsize = A |&lt;/span&gt;&lt;span id=&#34;__span-35-10&#34;&gt;&lt;a id=&#34;__codelineno-35-10&#34; name=&#34;__codelineno-35-10&#34; href=&#34;#__codelineno-35-10&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-35-11&#34;&gt;&lt;a id=&#34;__codelineno-35-11&#34; name=&#34;__codelineno-35-11&#34; href=&#34;#__codelineno-35-11&#34;&gt;&lt;/a&gt; | bk_nextsize = D | | bk_nextsize = A | | bk_nextsize = C |&lt;/span&gt;&lt;span id=&#34;__span-35-12&#34;&gt;&lt;a id=&#34;__codelineno-35-12&#34; name=&#34;__codelineno-35-12&#34; href=&#34;#__codelineno-35-12&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二种情况，在遍历 nextsize 链表过程中，发现已经有大小相同的块，那就把新的块插入到它的后面。例如要插入一个 &lt;code&gt;size = 1072&lt;/code&gt; 的空闲块 D，通过遍历 nextsize 链表找到了 A，插入之后的状态为：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-36-1&#34;&gt;&lt;a id=&#34;__codelineno-36-1&#34; name=&#34;__codelineno-36-1&#34; href=&#34;#__codelineno-36-1&#34;&gt;&lt;/a&gt; bins[id] chunk A chunk D chunk B chunk C &lt;/span&gt;&lt;span id=&#34;__span-36-2&#34;&gt;&lt;a id=&#34;__codelineno-36-2&#34; name=&#34;__codelineno-36-2&#34; href=&#34;#__codelineno-36-2&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-36-3&#34;&gt;&lt;a id=&#34;__codelineno-36-3&#34; name=&#34;__codelineno-36-3&#34; href=&#34;#__codelineno-36-3&#34;&gt;&lt;/a&gt;| fd = A | | size = 1072 | | size = 1072 | | size = 1072 | | size = 1040 |&lt;/span&gt;&lt;span id=&#34;__span-36-4&#34;&gt;&lt;a id=&#34;__codelineno-36-4&#34; name=&#34;__codelineno-36-4&#34; href=&#34;#__codelineno-36-4&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-36-5&#34;&gt;&lt;a id=&#34;__codelineno-36-5&#34; name=&#34;__codelineno-36-5&#34; href=&#34;#__codelineno-36-5&#34;&gt;&lt;/a&gt;| bk = C | | fd = D | | fd = B | | fd = C | | fd = bins[id] |&lt;/span&gt;&lt;span id=&#34;__span-36-6&#34;&gt;&lt;a id=&#34;__codelineno-36-6&#34; name=&#34;__codelineno-36-6&#34; href=&#34;#__codelineno-36-6&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-36-7&#34;&gt;&lt;a id=&#34;__codelineno-36-7&#34; name=&#34;__codelineno-36-7&#34; href=&#34;#__codelineno-36-7&#34;&gt;&lt;/a&gt; | bk = bins[id] | | bk = A | | bk = D | | bk = C |&lt;/span&gt;&lt;span id=&#34;__span-36-8&#34;&gt;&lt;a id=&#34;__codelineno-36-8&#34; name=&#34;__codelineno-36-8&#34; href=&#34;#__codelineno-36-8&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-36-9&#34;&gt;&lt;a id=&#34;__codelineno-36-9&#34; name=&#34;__codelineno-36-9&#34; href=&#34;#__codelineno-36-9&#34;&gt;&lt;/a&gt; | fd_nextsize = C | | fd_nextsize = A |&lt;/span&gt;&lt;span id=&#34;__span-36-10&#34;&gt;&lt;a id=&#34;__codelineno-36-10&#34; name=&#34;__codelineno-36-10&#34; href=&#34;#__codelineno-36-10&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-36-11&#34;&gt;&lt;a id=&#34;__codelineno-36-11&#34; name=&#34;__codelineno-36-11&#34; href=&#34;#__codelineno-36-11&#34;&gt;&lt;/a&gt; | bk_nextsize = C | | bk_nextsize = A |&lt;/span&gt;&lt;span id=&#34;__span-36-12&#34;&gt;&lt;a id=&#34;__codelineno-36-12&#34; name=&#34;__codelineno-36-12&#34; href=&#34;#__codelineno-36-12&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第三种情况，在遍历 nextsize 链表过程中，没有大小相同的块，那就按照从大到小的顺序插入到合适的位置。例如要插入一个 &lt;code&gt;size = 1056&lt;/code&gt; 的空闲块 D，通过遍历 nextsize 链表找到了 A 和 C，插入之后的状态为：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-37-1&#34;&gt;&lt;a id=&#34;__codelineno-37-1&#34; name=&#34;__codelineno-37-1&#34; href=&#34;#__codelineno-37-1&#34;&gt;&lt;/a&gt; bins[id] chunk A chunk B chunk D chunk C &lt;/span&gt;&lt;span id=&#34;__span-37-2&#34;&gt;&lt;a id=&#34;__codelineno-37-2&#34; name=&#34;__codelineno-37-2&#34; href=&#34;#__codelineno-37-2&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-37-3&#34;&gt;&lt;a id=&#34;__codelineno-37-3&#34; name=&#34;__codelineno-37-3&#34; href=&#34;#__codelineno-37-3&#34;&gt;&lt;/a&gt;| fd = A | | size = 1072 | | size = 1072 | | size = 1056 | | size = 1040 |&lt;/span&gt;&lt;span id=&#34;__span-37-4&#34;&gt;&lt;a id=&#34;__codelineno-37-4&#34; name=&#34;__codelineno-37-4&#34; href=&#34;#__codelineno-37-4&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-37-5&#34;&gt;&lt;a id=&#34;__codelineno-37-5&#34; name=&#34;__codelineno-37-5&#34; href=&#34;#__codelineno-37-5&#34;&gt;&lt;/a&gt;| bk = D | | fd = B | | fd = D | | fd = C | | fd = bins[id] |&lt;/span&gt;&lt;span id=&#34;__span-37-6&#34;&gt;&lt;a id=&#34;__codelineno-37-6&#34; name=&#34;__codelineno-37-6&#34; href=&#34;#__codelineno-37-6&#34;&gt;&lt;/a&gt;+----------+ +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-37-7&#34;&gt;&lt;a id=&#34;__codelineno-37-7&#34; name=&#34;__codelineno-37-7&#34; href=&#34;#__codelineno-37-7&#34;&gt;&lt;/a&gt; | bk = bins[id] | | bk = A | | bk = B | | bk = D |&lt;/span&gt;&lt;span id=&#34;__span-37-8&#34;&gt;&lt;a id=&#34;__codelineno-37-8&#34; name=&#34;__codelineno-37-8&#34; href=&#34;#__codelineno-37-8&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-37-9&#34;&gt;&lt;a id=&#34;__codelineno-37-9&#34; name=&#34;__codelineno-37-9&#34; href=&#34;#__codelineno-37-9&#34;&gt;&lt;/a&gt; | fd_nextsize = D | | fd_nextsize = C | | fd_nextsize = A |&lt;/span&gt;&lt;span id=&#34;__span-37-10&#34;&gt;&lt;a id=&#34;__codelineno-37-10&#34; name=&#34;__codelineno-37-10&#34; href=&#34;#__codelineno-37-10&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;span id=&#34;__span-37-11&#34;&gt;&lt;a id=&#34;__codelineno-37-11&#34; name=&#34;__codelineno-37-11&#34; href=&#34;#__codelineno-37-11&#34;&gt;&lt;/a&gt; | bk_nextsize = C | | bk_nextsize = A | | bk_nextsize = D |&lt;/span&gt;&lt;span id=&#34;__span-37-12&#34;&gt;&lt;a id=&#34;__codelineno-37-12&#34; name=&#34;__codelineno-37-12&#34; href=&#34;#__codelineno-37-12&#34;&gt;&lt;/a&gt; +-----------------+ +-----------------+ +-----------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就保证了插入以后的 large bin，依然满足从大到小排序，并且每种大小的第一个块组成 nextsize 链表的性质。&lt;/p&gt;&lt;h3 id=&#34;malloc_4&#34;&gt;malloc&lt;a class=&#34;headerlink&#34; href=&#34;#malloc_4&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接着回到 &lt;code&gt;_libc_malloc&lt;/code&gt;。前面提到，unsorted bin 中空闲块已经被挪到了 small bin 或者 large bin，并在这个过程中把合适大小的空闲块直接分配。如果还是没有分配成功，接下来就要在 large bin 里寻找一个块来分配：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-38-1&#34;&gt;&lt;a id=&#34;__codelineno-38-1&#34; name=&#34;__codelineno-38-1&#34; href=&#34;#__codelineno-38-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-2&#34;&gt;&lt;a id=&#34;__codelineno-38-2&#34; name=&#34;__codelineno-38-2&#34; href=&#34;#__codelineno-38-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-3&#34;&gt;&lt;a id=&#34;__codelineno-38-3&#34; name=&#34;__codelineno-38-3&#34; href=&#34;#__codelineno-38-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-4&#34;&gt;&lt;a id=&#34;__codelineno-38-4&#34; name=&#34;__codelineno-38-4&#34; href=&#34;#__codelineno-38-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-5&#34;&gt;&lt;a id=&#34;__codelineno-38-5&#34; name=&#34;__codelineno-38-5&#34; href=&#34;#__codelineno-38-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* skip scan if empty or largest chunk is too small */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-6&#34;&gt;&lt;a id=&#34;__codelineno-38-6&#34; name=&#34;__codelineno-38-6&#34; href=&#34;#__codelineno-38-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-7&#34;&gt;&lt;a id=&#34;__codelineno-38-7&#34; name=&#34;__codelineno-38-7&#34; href=&#34;#__codelineno-38-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-8&#34;&gt;&lt;a id=&#34;__codelineno-38-8&#34; name=&#34;__codelineno-38-8&#34; href=&#34;#__codelineno-38-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-9&#34;&gt;&lt;a id=&#34;__codelineno-38-9&#34; name=&#34;__codelineno-38-9&#34; href=&#34;#__codelineno-38-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-10&#34;&gt;&lt;a id=&#34;__codelineno-38-10&#34; name=&#34;__codelineno-38-10&#34; href=&#34;#__codelineno-38-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-11&#34;&gt;&lt;a id=&#34;__codelineno-38-11&#34; name=&#34;__codelineno-38-11&#34; href=&#34;#__codelineno-38-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-12&#34;&gt;&lt;a id=&#34;__codelineno-38-12&#34; name=&#34;__codelineno-38-12&#34; href=&#34;#__codelineno-38-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-13&#34;&gt;&lt;a id=&#34;__codelineno-38-13&#34; name=&#34;__codelineno-38-13&#34; href=&#34;#__codelineno-38-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-14&#34;&gt;&lt;a id=&#34;__codelineno-38-14&#34; name=&#34;__codelineno-38-14&#34; href=&#34;#__codelineno-38-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-15&#34;&gt;&lt;a id=&#34;__codelineno-38-15&#34; name=&#34;__codelineno-38-15&#34; href=&#34;#__codelineno-38-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Avoid removing the first entry for a size so that the skip&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-16&#34;&gt;&lt;a id=&#34;__codelineno-38-16&#34; name=&#34;__codelineno-38-16&#34; href=&#34;#__codelineno-38-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; list does not have to be rerouted. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-17&#34;&gt;&lt;a id=&#34;__codelineno-38-17&#34; name=&#34;__codelineno-38-17&#34; href=&#34;#__codelineno-38-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-18&#34;&gt;&lt;a id=&#34;__codelineno-38-18&#34; name=&#34;__codelineno-38-18&#34; href=&#34;#__codelineno-38-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-19&#34;&gt;&lt;a id=&#34;__codelineno-38-19&#34; name=&#34;__codelineno-38-19&#34; href=&#34;#__codelineno-38-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize_nomask&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-20&#34;&gt;&lt;a id=&#34;__codelineno-38-20&#34; name=&#34;__codelineno-38-20&#34; href=&#34;#__codelineno-38-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-21&#34;&gt;&lt;a id=&#34;__codelineno-38-21&#34; name=&#34;__codelineno-38-21&#34; href=&#34;#__codelineno-38-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-22&#34;&gt;&lt;a id=&#34;__codelineno-38-22&#34; name=&#34;__codelineno-38-22&#34; href=&#34;#__codelineno-38-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-23&#34;&gt;&lt;a id=&#34;__codelineno-38-23&#34; name=&#34;__codelineno-38-23&#34; href=&#34;#__codelineno-38-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unlink_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-24&#34;&gt;&lt;a id=&#34;__codelineno-38-24&#34; name=&#34;__codelineno-38-24&#34; href=&#34;#__codelineno-38-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-25&#34;&gt;&lt;a id=&#34;__codelineno-38-25&#34; name=&#34;__codelineno-38-25&#34; href=&#34;#__codelineno-38-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Exhaust */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-26&#34;&gt;&lt;a id=&#34;__codelineno-38-26&#34; name=&#34;__codelineno-38-26&#34; href=&#34;#__codelineno-38-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MINSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-27&#34;&gt;&lt;a id=&#34;__codelineno-38-27&#34; name=&#34;__codelineno-38-27&#34; href=&#34;#__codelineno-38-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-28&#34;&gt;&lt;a id=&#34;__codelineno-38-28&#34; name=&#34;__codelineno-38-28&#34; href=&#34;#__codelineno-38-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-29&#34;&gt;&lt;a id=&#34;__codelineno-38-29&#34; name=&#34;__codelineno-38-29&#34; href=&#34;#__codelineno-38-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-30&#34;&gt;&lt;a id=&#34;__codelineno-38-30&#34; name=&#34;__codelineno-38-30&#34; href=&#34;#__codelineno-38-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_non_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-31&#34;&gt;&lt;a id=&#34;__codelineno-38-31&#34; name=&#34;__codelineno-38-31&#34; href=&#34;#__codelineno-38-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-32&#34;&gt;&lt;a id=&#34;__codelineno-38-32&#34; name=&#34;__codelineno-38-32&#34; href=&#34;#__codelineno-38-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Split */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-33&#34;&gt;&lt;a id=&#34;__codelineno-38-33&#34; name=&#34;__codelineno-38-33&#34; href=&#34;#__codelineno-38-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-34&#34;&gt;&lt;a id=&#34;__codelineno-38-34&#34; name=&#34;__codelineno-38-34&#34; href=&#34;#__codelineno-38-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-35&#34;&gt;&lt;a id=&#34;__codelineno-38-35&#34; name=&#34;__codelineno-38-35&#34; href=&#34;#__codelineno-38-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-36&#34;&gt;&lt;a id=&#34;__codelineno-38-36&#34; name=&#34;__codelineno-38-36&#34; href=&#34;#__codelineno-38-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* We cannot assume the unsorted list is empty and therefore&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-37&#34;&gt;&lt;a id=&#34;__codelineno-38-37&#34; name=&#34;__codelineno-38-37&#34; href=&#34;#__codelineno-38-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; have to perform a complete insert here. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-38&#34;&gt;&lt;a id=&#34;__codelineno-38-38&#34; name=&#34;__codelineno-38-38&#34; href=&#34;#__codelineno-38-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-39&#34;&gt;&lt;a id=&#34;__codelineno-38-39&#34; name=&#34;__codelineno-38-39&#34; href=&#34;#__codelineno-38-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-40&#34;&gt;&lt;a id=&#34;__codelineno-38-40&#34; name=&#34;__codelineno-38-40&#34; href=&#34;#__codelineno-38-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-41&#34;&gt;&lt;a id=&#34;__codelineno-38-41&#34; name=&#34;__codelineno-38-41&#34; href=&#34;#__codelineno-38-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;malloc(): corrupted unsorted chunks&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-42&#34;&gt;&lt;a id=&#34;__codelineno-38-42&#34; name=&#34;__codelineno-38-42&#34; href=&#34;#__codelineno-38-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-43&#34;&gt;&lt;a id=&#34;__codelineno-38-43&#34; name=&#34;__codelineno-38-43&#34; href=&#34;#__codelineno-38-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-44&#34;&gt;&lt;a id=&#34;__codelineno-38-44&#34; name=&#34;__codelineno-38-44&#34; href=&#34;#__codelineno-38-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-45&#34;&gt;&lt;a id=&#34;__codelineno-38-45&#34; name=&#34;__codelineno-38-45&#34; href=&#34;#__codelineno-38-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-46&#34;&gt;&lt;a id=&#34;__codelineno-38-46&#34; name=&#34;__codelineno-38-46&#34; href=&#34;#__codelineno-38-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-47&#34;&gt;&lt;a id=&#34;__codelineno-38-47&#34; name=&#34;__codelineno-38-47&#34; href=&#34;#__codelineno-38-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-48&#34;&gt;&lt;a id=&#34;__codelineno-38-48&#34; name=&#34;__codelineno-38-48&#34; href=&#34;#__codelineno-38-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-49&#34;&gt;&lt;a id=&#34;__codelineno-38-49&#34; name=&#34;__codelineno-38-49&#34; href=&#34;#__codelineno-38-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-50&#34;&gt;&lt;a id=&#34;__codelineno-38-50&#34; name=&#34;__codelineno-38-50&#34; href=&#34;#__codelineno-38-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-51&#34;&gt;&lt;a id=&#34;__codelineno-38-51&#34; name=&#34;__codelineno-38-51&#34; href=&#34;#__codelineno-38-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-52&#34;&gt;&lt;a id=&#34;__codelineno-38-52&#34; name=&#34;__codelineno-38-52&#34; href=&#34;#__codelineno-38-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NON_MAIN_ARENA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-53&#34;&gt;&lt;a id=&#34;__codelineno-38-53&#34; name=&#34;__codelineno-38-53&#34; href=&#34;#__codelineno-38-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-54&#34;&gt;&lt;a id=&#34;__codelineno-38-54&#34; name=&#34;__codelineno-38-54&#34; href=&#34;#__codelineno-38-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_foot&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-55&#34;&gt;&lt;a id=&#34;__codelineno-38-55&#34; name=&#34;__codelineno-38-55&#34; href=&#34;#__codelineno-38-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-56&#34;&gt;&lt;a id=&#34;__codelineno-38-56&#34; name=&#34;__codelineno-38-56&#34; href=&#34;#__codelineno-38-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_malloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-57&#34;&gt;&lt;a id=&#34;__codelineno-38-57&#34; name=&#34;__codelineno-38-57&#34; href=&#34;#__codelineno-38-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-58&#34;&gt;&lt;a id=&#34;__codelineno-38-58&#34; name=&#34;__codelineno-38-58&#34; href=&#34;#__codelineno-38-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-59&#34;&gt;&lt;a id=&#34;__codelineno-38-59&#34; name=&#34;__codelineno-38-59&#34; href=&#34;#__codelineno-38-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-60&#34;&gt;&lt;a id=&#34;__codelineno-38-60&#34; name=&#34;__codelineno-38-60&#34; href=&#34;#__codelineno-38-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-38-61&#34;&gt;&lt;a id=&#34;__codelineno-38-61&#34; name=&#34;__codelineno-38-61&#34; href=&#34;#__codelineno-38-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从 large bin 分配空闲块的过程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;根据大小找到对应的 large bin&lt;/li&gt;&lt;li&gt;如果 large bin 中最大的空闲块足够大，遍历 nextsize 链表，找到一个比要分配的大小更大的最小的空闲块&lt;/li&gt;&lt;li&gt;为了避免更新 nextsize 链表，如果当前块大小对应了不止一个空闲块，那就取第二个空闲块，这样就不用更新 nextsize 链表&lt;/li&gt;&lt;li&gt;计算空闲块大小和要分配的大小的差值，如果差值太小，多余的部分就直接浪费；如果差的空间还能放下一个 chunk，就进行拆分，把拆出来的剩下的部分放到 unsorted bin 中&lt;/li&gt;&lt;li&gt;计算 payload 地址，进行可选的 perturb，完成分配&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;寻找更大的-bin&#34;&gt;寻找更大的 bin&lt;a class=&#34;headerlink&#34; href=&#34;#寻找更大的-bin&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;如果在当前 bin 内还是找不到空闲块，那就只能从更大的 bin 里寻找空闲块了：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-39-1&#34;&gt;&lt;a id=&#34;__codelineno-39-1&#34; name=&#34;__codelineno-39-1&#34; href=&#34;#__codelineno-39-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-2&#34;&gt;&lt;a id=&#34;__codelineno-39-2&#34; name=&#34;__codelineno-39-2&#34; href=&#34;#__codelineno-39-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-3&#34;&gt;&lt;a id=&#34;__codelineno-39-3&#34; name=&#34;__codelineno-39-3&#34; href=&#34;#__codelineno-39-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx2block&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-4&#34;&gt;&lt;a id=&#34;__codelineno-39-4&#34; name=&#34;__codelineno-39-4&#34; href=&#34;#__codelineno-39-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-5&#34;&gt;&lt;a id=&#34;__codelineno-39-5&#34; name=&#34;__codelineno-39-5&#34; href=&#34;#__codelineno-39-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx2bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-6&#34;&gt;&lt;a id=&#34;__codelineno-39-6&#34; name=&#34;__codelineno-39-6&#34; href=&#34;#__codelineno-39-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-7&#34;&gt;&lt;a id=&#34;__codelineno-39-7&#34; name=&#34;__codelineno-39-7&#34; href=&#34;#__codelineno-39-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-8&#34;&gt;&lt;a id=&#34;__codelineno-39-8&#34; name=&#34;__codelineno-39-8&#34; href=&#34;#__codelineno-39-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-9&#34;&gt;&lt;a id=&#34;__codelineno-39-9&#34; name=&#34;__codelineno-39-9&#34; href=&#34;#__codelineno-39-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Skip rest of block if there are no more set bits in this block. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-10&#34;&gt;&lt;a id=&#34;__codelineno-39-10&#34; name=&#34;__codelineno-39-10&#34; href=&#34;#__codelineno-39-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-11&#34;&gt;&lt;a id=&#34;__codelineno-39-11&#34; name=&#34;__codelineno-39-11&#34; href=&#34;#__codelineno-39-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-12&#34;&gt;&lt;a id=&#34;__codelineno-39-12&#34; name=&#34;__codelineno-39-12&#34; href=&#34;#__codelineno-39-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-13&#34;&gt;&lt;a id=&#34;__codelineno-39-13&#34; name=&#34;__codelineno-39-13&#34; href=&#34;#__codelineno-39-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-14&#34;&gt;&lt;a id=&#34;__codelineno-39-14&#34; name=&#34;__codelineno-39-14&#34; href=&#34;#__codelineno-39-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BINMAPSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* out of bins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-15&#34;&gt;&lt;a id=&#34;__codelineno-39-15&#34; name=&#34;__codelineno-39-15&#34; href=&#34;#__codelineno-39-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use_top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-16&#34;&gt;&lt;a id=&#34;__codelineno-39-16&#34; name=&#34;__codelineno-39-16&#34; href=&#34;#__codelineno-39-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-17&#34;&gt;&lt;a id=&#34;__codelineno-39-17&#34; name=&#34;__codelineno-39-17&#34; href=&#34;#__codelineno-39-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-18&#34;&gt;&lt;a id=&#34;__codelineno-39-18&#34; name=&#34;__codelineno-39-18&#34; href=&#34;#__codelineno-39-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-19&#34;&gt;&lt;a id=&#34;__codelineno-39-19&#34; name=&#34;__codelineno-39-19&#34; href=&#34;#__codelineno-39-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BINMAPSHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-20&#34;&gt;&lt;a id=&#34;__codelineno-39-20&#34; name=&#34;__codelineno-39-20&#34; href=&#34;#__codelineno-39-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-21&#34;&gt;&lt;a id=&#34;__codelineno-39-21&#34; name=&#34;__codelineno-39-21&#34; href=&#34;#__codelineno-39-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-22&#34;&gt;&lt;a id=&#34;__codelineno-39-22&#34; name=&#34;__codelineno-39-22&#34; href=&#34;#__codelineno-39-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-23&#34;&gt;&lt;a id=&#34;__codelineno-39-23&#34; name=&#34;__codelineno-39-23&#34; href=&#34;#__codelineno-39-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Advance to bin with set bit. There must be one. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-24&#34;&gt;&lt;a id=&#34;__codelineno-39-24&#34; name=&#34;__codelineno-39-24&#34; href=&#34;#__codelineno-39-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-25&#34;&gt;&lt;a id=&#34;__codelineno-39-25&#34; name=&#34;__codelineno-39-25&#34; href=&#34;#__codelineno-39-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-26&#34;&gt;&lt;a id=&#34;__codelineno-39-26&#34; name=&#34;__codelineno-39-26&#34; href=&#34;#__codelineno-39-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-27&#34;&gt;&lt;a id=&#34;__codelineno-39-27&#34; name=&#34;__codelineno-39-27&#34; href=&#34;#__codelineno-39-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-28&#34;&gt;&lt;a id=&#34;__codelineno-39-28&#34; name=&#34;__codelineno-39-28&#34; href=&#34;#__codelineno-39-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-29&#34;&gt;&lt;a id=&#34;__codelineno-39-29&#34; name=&#34;__codelineno-39-29&#34; href=&#34;#__codelineno-39-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-30&#34;&gt;&lt;a id=&#34;__codelineno-39-30&#34; name=&#34;__codelineno-39-30&#34; href=&#34;#__codelineno-39-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-31&#34;&gt;&lt;a id=&#34;__codelineno-39-31&#34; name=&#34;__codelineno-39-31&#34; href=&#34;#__codelineno-39-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Inspect the bin. It is likely to be non-empty */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-32&#34;&gt;&lt;a id=&#34;__codelineno-39-32&#34; name=&#34;__codelineno-39-32&#34; href=&#34;#__codelineno-39-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-33&#34;&gt;&lt;a id=&#34;__codelineno-39-33&#34; name=&#34;__codelineno-39-33&#34; href=&#34;#__codelineno-39-33&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-34&#34;&gt;&lt;a id=&#34;__codelineno-39-34&#34; name=&#34;__codelineno-39-34&#34; href=&#34;#__codelineno-39-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* If a false alarm (empty bin), clear the bit. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-35&#34;&gt;&lt;a id=&#34;__codelineno-39-35&#34; name=&#34;__codelineno-39-35&#34; href=&#34;#__codelineno-39-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-36&#34;&gt;&lt;a id=&#34;__codelineno-39-36&#34; name=&#34;__codelineno-39-36&#34; href=&#34;#__codelineno-39-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-37&#34;&gt;&lt;a id=&#34;__codelineno-39-37&#34; name=&#34;__codelineno-39-37&#34; href=&#34;#__codelineno-39-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Write through */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-38&#34;&gt;&lt;a id=&#34;__codelineno-39-38&#34; name=&#34;__codelineno-39-38&#34; href=&#34;#__codelineno-39-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-39&#34;&gt;&lt;a id=&#34;__codelineno-39-39&#34; name=&#34;__codelineno-39-39&#34; href=&#34;#__codelineno-39-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-40&#34;&gt;&lt;a id=&#34;__codelineno-39-40&#34; name=&#34;__codelineno-39-40&#34; href=&#34;#__codelineno-39-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-41&#34;&gt;&lt;a id=&#34;__codelineno-39-41&#34; name=&#34;__codelineno-39-41&#34; href=&#34;#__codelineno-39-41&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-42&#34;&gt;&lt;a id=&#34;__codelineno-39-42&#34; name=&#34;__codelineno-39-42&#34; href=&#34;#__codelineno-39-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-43&#34;&gt;&lt;a id=&#34;__codelineno-39-43&#34; name=&#34;__codelineno-39-43&#34; href=&#34;#__codelineno-39-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-44&#34;&gt;&lt;a id=&#34;__codelineno-39-44&#34; name=&#34;__codelineno-39-44&#34; href=&#34;#__codelineno-39-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-45&#34;&gt;&lt;a id=&#34;__codelineno-39-45&#34; name=&#34;__codelineno-39-45&#34; href=&#34;#__codelineno-39-45&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-46&#34;&gt;&lt;a id=&#34;__codelineno-39-46&#34; name=&#34;__codelineno-39-46&#34; href=&#34;#__codelineno-39-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* We know the first chunk in this bin is big enough to use. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-47&#34;&gt;&lt;a id=&#34;__codelineno-39-47&#34; name=&#34;__codelineno-39-47&#34; href=&#34;#__codelineno-39-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-48&#34;&gt;&lt;a id=&#34;__codelineno-39-48&#34; name=&#34;__codelineno-39-48&#34; href=&#34;#__codelineno-39-48&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-49&#34;&gt;&lt;a id=&#34;__codelineno-39-49&#34; name=&#34;__codelineno-39-49&#34; href=&#34;#__codelineno-39-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-50&#34;&gt;&lt;a id=&#34;__codelineno-39-50&#34; name=&#34;__codelineno-39-50&#34; href=&#34;#__codelineno-39-50&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-51&#34;&gt;&lt;a id=&#34;__codelineno-39-51&#34; name=&#34;__codelineno-39-51&#34; href=&#34;#__codelineno-39-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* unlink */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-52&#34;&gt;&lt;a id=&#34;__codelineno-39-52&#34; name=&#34;__codelineno-39-52&#34; href=&#34;#__codelineno-39-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unlink_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-53&#34;&gt;&lt;a id=&#34;__codelineno-39-53&#34; name=&#34;__codelineno-39-53&#34; href=&#34;#__codelineno-39-53&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-54&#34;&gt;&lt;a id=&#34;__codelineno-39-54&#34; name=&#34;__codelineno-39-54&#34; href=&#34;#__codelineno-39-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Exhaust */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-55&#34;&gt;&lt;a id=&#34;__codelineno-39-55&#34; name=&#34;__codelineno-39-55&#34; href=&#34;#__codelineno-39-55&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MINSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-56&#34;&gt;&lt;a id=&#34;__codelineno-39-56&#34; name=&#34;__codelineno-39-56&#34; href=&#34;#__codelineno-39-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-57&#34;&gt;&lt;a id=&#34;__codelineno-39-57&#34; name=&#34;__codelineno-39-57&#34; href=&#34;#__codelineno-39-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_inuse_bit_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-58&#34;&gt;&lt;a id=&#34;__codelineno-39-58&#34; name=&#34;__codelineno-39-58&#34; href=&#34;#__codelineno-39-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-59&#34;&gt;&lt;a id=&#34;__codelineno-39-59&#34; name=&#34;__codelineno-39-59&#34; href=&#34;#__codelineno-39-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_non_main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-60&#34;&gt;&lt;a id=&#34;__codelineno-39-60&#34; name=&#34;__codelineno-39-60&#34; href=&#34;#__codelineno-39-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-61&#34;&gt;&lt;a id=&#34;__codelineno-39-61&#34; name=&#34;__codelineno-39-61&#34; href=&#34;#__codelineno-39-61&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-62&#34;&gt;&lt;a id=&#34;__codelineno-39-62&#34; name=&#34;__codelineno-39-62&#34; href=&#34;#__codelineno-39-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Split */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-63&#34;&gt;&lt;a id=&#34;__codelineno-39-63&#34; name=&#34;__codelineno-39-63&#34; href=&#34;#__codelineno-39-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-64&#34;&gt;&lt;a id=&#34;__codelineno-39-64&#34; name=&#34;__codelineno-39-64&#34; href=&#34;#__codelineno-39-64&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-65&#34;&gt;&lt;a id=&#34;__codelineno-39-65&#34; name=&#34;__codelineno-39-65&#34; href=&#34;#__codelineno-39-65&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-66&#34;&gt;&lt;a id=&#34;__codelineno-39-66&#34; name=&#34;__codelineno-39-66&#34; href=&#34;#__codelineno-39-66&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-67&#34;&gt;&lt;a id=&#34;__codelineno-39-67&#34; name=&#34;__codelineno-39-67&#34; href=&#34;#__codelineno-39-67&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* We cannot assume the unsorted list is empty and therefore&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-68&#34;&gt;&lt;a id=&#34;__codelineno-39-68&#34; name=&#34;__codelineno-39-68&#34; href=&#34;#__codelineno-39-68&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; have to perform a complete insert here. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-69&#34;&gt;&lt;a id=&#34;__codelineno-39-69&#34; name=&#34;__codelineno-39-69&#34; href=&#34;#__codelineno-39-69&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsorted_chunks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-70&#34;&gt;&lt;a id=&#34;__codelineno-39-70&#34; name=&#34;__codelineno-39-70&#34; href=&#34;#__codelineno-39-70&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-71&#34;&gt;&lt;a id=&#34;__codelineno-39-71&#34; name=&#34;__codelineno-39-71&#34; href=&#34;#__codelineno-39-71&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-72&#34;&gt;&lt;a id=&#34;__codelineno-39-72&#34; name=&#34;__codelineno-39-72&#34; href=&#34;#__codelineno-39-72&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;malloc(): corrupted unsorted chunks 2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-73&#34;&gt;&lt;a id=&#34;__codelineno-39-73&#34; name=&#34;__codelineno-39-73&#34; href=&#34;#__codelineno-39-73&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-74&#34;&gt;&lt;a id=&#34;__codelineno-39-74&#34; name=&#34;__codelineno-39-74&#34; href=&#34;#__codelineno-39-74&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-75&#34;&gt;&lt;a id=&#34;__codelineno-39-75&#34; name=&#34;__codelineno-39-75&#34; href=&#34;#__codelineno-39-75&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-76&#34;&gt;&lt;a id=&#34;__codelineno-39-76&#34; name=&#34;__codelineno-39-76&#34; href=&#34;#__codelineno-39-76&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-77&#34;&gt;&lt;a id=&#34;__codelineno-39-77&#34; name=&#34;__codelineno-39-77&#34; href=&#34;#__codelineno-39-77&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-78&#34;&gt;&lt;a id=&#34;__codelineno-39-78&#34; name=&#34;__codelineno-39-78&#34; href=&#34;#__codelineno-39-78&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* advertise as last remainder */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-79&#34;&gt;&lt;a id=&#34;__codelineno-39-79&#34; name=&#34;__codelineno-39-79&#34; href=&#34;#__codelineno-39-79&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-80&#34;&gt;&lt;a id=&#34;__codelineno-39-80&#34; name=&#34;__codelineno-39-80&#34; href=&#34;#__codelineno-39-80&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-81&#34;&gt;&lt;a id=&#34;__codelineno-39-81&#34; name=&#34;__codelineno-39-81&#34; href=&#34;#__codelineno-39-81&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-82&#34;&gt;&lt;a id=&#34;__codelineno-39-82&#34; name=&#34;__codelineno-39-82&#34; href=&#34;#__codelineno-39-82&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-83&#34;&gt;&lt;a id=&#34;__codelineno-39-83&#34; name=&#34;__codelineno-39-83&#34; href=&#34;#__codelineno-39-83&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-84&#34;&gt;&lt;a id=&#34;__codelineno-39-84&#34; name=&#34;__codelineno-39-84&#34; href=&#34;#__codelineno-39-84&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bk_nextsize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-85&#34;&gt;&lt;a id=&#34;__codelineno-39-85&#34; name=&#34;__codelineno-39-85&#34; href=&#34;#__codelineno-39-85&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-86&#34;&gt;&lt;a id=&#34;__codelineno-39-86&#34; name=&#34;__codelineno-39-86&#34; href=&#34;#__codelineno-39-86&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-87&#34;&gt;&lt;a id=&#34;__codelineno-39-87&#34; name=&#34;__codelineno-39-87&#34; href=&#34;#__codelineno-39-87&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NON_MAIN_ARENA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-88&#34;&gt;&lt;a id=&#34;__codelineno-39-88&#34; name=&#34;__codelineno-39-88&#34; href=&#34;#__codelineno-39-88&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-89&#34;&gt;&lt;a id=&#34;__codelineno-39-89&#34; name=&#34;__codelineno-39-89&#34; href=&#34;#__codelineno-39-89&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_foot&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-90&#34;&gt;&lt;a id=&#34;__codelineno-39-90&#34; name=&#34;__codelineno-39-90&#34; href=&#34;#__codelineno-39-90&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-91&#34;&gt;&lt;a id=&#34;__codelineno-39-91&#34; name=&#34;__codelineno-39-91&#34; href=&#34;#__codelineno-39-91&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_malloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-92&#34;&gt;&lt;a id=&#34;__codelineno-39-92&#34; name=&#34;__codelineno-39-92&#34; href=&#34;#__codelineno-39-92&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-93&#34;&gt;&lt;a id=&#34;__codelineno-39-93&#34; name=&#34;__codelineno-39-93&#34; href=&#34;#__codelineno-39-93&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-94&#34;&gt;&lt;a id=&#34;__codelineno-39-94&#34; name=&#34;__codelineno-39-94&#34; href=&#34;#__codelineno-39-94&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-95&#34;&gt;&lt;a id=&#34;__codelineno-39-95&#34; name=&#34;__codelineno-39-95&#34; href=&#34;#__codelineno-39-95&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-39-96&#34;&gt;&lt;a id=&#34;__codelineno-39-96&#34; name=&#34;__codelineno-39-96&#34; href=&#34;#__codelineno-39-96&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了跳过空的 bin，维护了一个 bitmap，记录哪些 bin 会有内容。找到一个非空的 bin 以后，它的大小肯定是足够分配的，接下来就和之前一样，要么舍弃多余的空间，要么把多余的空间做成一个 chunk，插入到 unsorted bin 当中。&lt;/p&gt;&lt;p&gt;如果所有 bin 都空了，说明没有可以分配的可能了，就跳转到 &lt;code&gt;use_top&lt;/code&gt; 逻辑。&lt;/p&gt;&lt;h2 id=&#34;top-chunk-分配&#34;&gt;top chunk 分配&lt;a class=&#34;headerlink&#34; href=&#34;#top-chunk-分配&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;如果已有的 bin 都无法分配了，就尝试拆分 top chunk 来进行分配。top chunk 指的是当前堆里地址最高的那个 chunk，也可以理解为未分配的部分。分配的逻辑如下：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-40-1&#34;&gt;&lt;a id=&#34;__codelineno-40-1&#34; name=&#34;__codelineno-40-1&#34; href=&#34;#__codelineno-40-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;use_top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-2&#34;&gt;&lt;a id=&#34;__codelineno-40-2&#34; name=&#34;__codelineno-40-2&#34; href=&#34;#__codelineno-40-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-3&#34;&gt;&lt;a id=&#34;__codelineno-40-3&#34; name=&#34;__codelineno-40-3&#34; href=&#34;#__codelineno-40-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-4&#34;&gt;&lt;a id=&#34;__codelineno-40-4&#34; name=&#34;__codelineno-40-4&#34; href=&#34;#__codelineno-40-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-5&#34;&gt;&lt;a id=&#34;__codelineno-40-5&#34; name=&#34;__codelineno-40-5&#34; href=&#34;#__codelineno-40-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__glibc_unlikely&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system_mem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-6&#34;&gt;&lt;a id=&#34;__codelineno-40-6&#34; name=&#34;__codelineno-40-6&#34; href=&#34;#__codelineno-40-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_printerr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;malloc(): corrupted top size&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-7&#34;&gt;&lt;a id=&#34;__codelineno-40-7&#34; name=&#34;__codelineno-40-7&#34; href=&#34;#__codelineno-40-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-8&#34;&gt;&lt;a id=&#34;__codelineno-40-8&#34; name=&#34;__codelineno-40-8&#34; href=&#34;#__codelineno-40-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MINSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-9&#34;&gt;&lt;a id=&#34;__codelineno-40-9&#34; name=&#34;__codelineno-40-9&#34; href=&#34;#__codelineno-40-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-10&#34;&gt;&lt;a id=&#34;__codelineno-40-10&#34; name=&#34;__codelineno-40-10&#34; href=&#34;#__codelineno-40-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-11&#34;&gt;&lt;a id=&#34;__codelineno-40-11&#34; name=&#34;__codelineno-40-11&#34; href=&#34;#__codelineno-40-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_at_offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-12&#34;&gt;&lt;a id=&#34;__codelineno-40-12&#34; name=&#34;__codelineno-40-12&#34; href=&#34;#__codelineno-40-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-13&#34;&gt;&lt;a id=&#34;__codelineno-40-13&#34; name=&#34;__codelineno-40-13&#34; href=&#34;#__codelineno-40-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-14&#34;&gt;&lt;a id=&#34;__codelineno-40-14&#34; name=&#34;__codelineno-40-14&#34; href=&#34;#__codelineno-40-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_arena&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NON_MAIN_ARENA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-15&#34;&gt;&lt;a id=&#34;__codelineno-40-15&#34; name=&#34;__codelineno-40-15&#34; href=&#34;#__codelineno-40-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_head&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remainder_size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PREV_INUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-16&#34;&gt;&lt;a id=&#34;__codelineno-40-16&#34; name=&#34;__codelineno-40-16&#34; href=&#34;#__codelineno-40-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-17&#34;&gt;&lt;a id=&#34;__codelineno-40-17&#34; name=&#34;__codelineno-40-17&#34; href=&#34;#__codelineno-40-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_malloced_chunk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-18&#34;&gt;&lt;a id=&#34;__codelineno-40-18&#34; name=&#34;__codelineno-40-18&#34; href=&#34;#__codelineno-40-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk2mem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-19&#34;&gt;&lt;a id=&#34;__codelineno-40-19&#34; name=&#34;__codelineno-40-19&#34; href=&#34;#__codelineno-40-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-20&#34;&gt;&lt;a id=&#34;__codelineno-40-20&#34; name=&#34;__codelineno-40-20&#34; href=&#34;#__codelineno-40-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-21&#34;&gt;&lt;a id=&#34;__codelineno-40-21&#34; name=&#34;__codelineno-40-21&#34; href=&#34;#__codelineno-40-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-22&#34;&gt;&lt;a id=&#34;__codelineno-40-22&#34; name=&#34;__codelineno-40-22&#34; href=&#34;#__codelineno-40-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-23&#34;&gt;&lt;a id=&#34;__codelineno-40-23&#34; name=&#34;__codelineno-40-23&#34; href=&#34;#__codelineno-40-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/* When we are using atomic ops to free fast chunks we can get&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-24&#34;&gt;&lt;a id=&#34;__codelineno-40-24&#34; name=&#34;__codelineno-40-24&#34; href=&#34;#__codelineno-40-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; here for all block sizes. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-25&#34;&gt;&lt;a id=&#34;__codelineno-40-25&#34; name=&#34;__codelineno-40-25&#34; href=&#34;#__codelineno-40-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;atomic_load_relaxed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;have_fastchunks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-26&#34;&gt;&lt;a id=&#34;__codelineno-40-26&#34; name=&#34;__codelineno-40-26&#34; href=&#34;#__codelineno-40-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-27&#34;&gt;&lt;a id=&#34;__codelineno-40-27&#34; name=&#34;__codelineno-40-27&#34; href=&#34;#__codelineno-40-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;malloc_consolidate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-28&#34;&gt;&lt;a id=&#34;__codelineno-40-28&#34; name=&#34;__codelineno-40-28&#34; href=&#34;#__codelineno-40-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* restore original bin index */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-29&#34;&gt;&lt;a id=&#34;__codelineno-40-29&#34; name=&#34;__codelineno-40-29&#34; href=&#34;#__codelineno-40-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_smallbin_range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-30&#34;&gt;&lt;a id=&#34;__codelineno-40-30&#34; name=&#34;__codelineno-40-30&#34; href=&#34;#__codelineno-40-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;smallbin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-31&#34;&gt;&lt;a id=&#34;__codelineno-40-31&#34; name=&#34;__codelineno-40-31&#34; href=&#34;#__codelineno-40-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-32&#34;&gt;&lt;a id=&#34;__codelineno-40-32&#34; name=&#34;__codelineno-40-32&#34; href=&#34;#__codelineno-40-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;largebin_index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-33&#34;&gt;&lt;a id=&#34;__codelineno-40-33&#34; name=&#34;__codelineno-40-33&#34; href=&#34;#__codelineno-40-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-34&#34;&gt;&lt;a id=&#34;__codelineno-40-34&#34; name=&#34;__codelineno-40-34&#34; href=&#34;#__codelineno-40-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-35&#34;&gt;&lt;a id=&#34;__codelineno-40-35&#34; name=&#34;__codelineno-40-35&#34; href=&#34;#__codelineno-40-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-36&#34;&gt;&lt;a id=&#34;__codelineno-40-36&#34; name=&#34;__codelineno-40-36&#34; href=&#34;#__codelineno-40-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; Otherwise, relay to handle system-dependent cases&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-37&#34;&gt;&lt;a id=&#34;__codelineno-40-37&#34; name=&#34;__codelineno-40-37&#34; href=&#34;#__codelineno-40-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-38&#34;&gt;&lt;a id=&#34;__codelineno-40-38&#34; name=&#34;__codelineno-40-38&#34; href=&#34;#__codelineno-40-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-39&#34;&gt;&lt;a id=&#34;__codelineno-40-39&#34; name=&#34;__codelineno-40-39&#34; href=&#34;#__codelineno-40-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-40&#34;&gt;&lt;a id=&#34;__codelineno-40-40&#34; name=&#34;__codelineno-40-40&#34; href=&#34;#__codelineno-40-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sysmalloc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-41&#34;&gt;&lt;a id=&#34;__codelineno-40-41&#34; name=&#34;__codelineno-40-41&#34; href=&#34;#__codelineno-40-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-42&#34;&gt;&lt;a id=&#34;__codelineno-40-42&#34; name=&#34;__codelineno-40-42&#34; href=&#34;#__codelineno-40-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloc_perturb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-43&#34;&gt;&lt;a id=&#34;__codelineno-40-43&#34; name=&#34;__codelineno-40-43&#34; href=&#34;#__codelineno-40-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-40-44&#34;&gt;&lt;a id=&#34;__codelineno-40-44&#34; name=&#34;__codelineno-40-44&#34; href=&#34;#__codelineno-40-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 top chunk 的空间够大，那就对 top chunk 进行拆分，低地址的部分分配出去，剩下的部分成为新的 top chunk。如果 top chunk 不够大，并且 fast bin 还有空间，那就再挣扎一下，consolidate 一下，重新分配一次。如果这些方法都失败了，那就调用 sysmalloc，通过 mmap 或者 sbrk 等方式来分配新的空间。&lt;/p&gt;&lt;p&gt;前面在讨论 consolidate 的时候，跳过了对 top chunk 的特殊处理。其实，top chunk 的特殊处理也很简单，如果当前空闲块的下一个块就是 top chunk，那就把当前空闲块合并到 top chunk 即可。&lt;/p&gt;&lt;h2 id=&#34;free_3&#34;&gt;free&lt;a class=&#34;headerlink&#34; href=&#34;#free_3&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;前面把 malloc 的流程基本分析完了，接下来分析一下 free 的逻辑，它做的事情包括：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;前面已经分析过，如果 tcache 对应的 bin 存在且非满，则把空闲块插入到 tcache 的链表头&lt;/li&gt;&lt;li&gt;如果存在对应的 fast bin，则插入空闲块到 fast bin 对应链表的头部&lt;/li&gt;&lt;li&gt;尝试和它前后的空闲块进行合并，实现和前面 consolidate 类似，合并后进入 unsorted bin&lt;/li&gt;&lt;li&gt;如果释放的内存比较多，检查 top chunk 大小，如果剩余的空间比较多，则归还一部分内存给操作系统&lt;/li&gt;&lt;li&gt;对于 mmap 分配的内存，用 munmap 释放掉&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由于 free 的实现相对简单，在这里就不详细解析了，比较详细的实现分析见后。&lt;/p&gt;&lt;h2 id=&#34;realloc&#34;&gt;realloc&lt;a class=&#34;headerlink&#34; href=&#34;#realloc&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;realloc 的实现在 &lt;code&gt;__libc_realloc&lt;/code&gt; 当中，它的实现比较简单：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果重新分配的大小是 0，realloc 等价为 free，就调用 free&lt;/li&gt;&lt;li&gt;如果旧指针是 NULL，realloc 等价为 malloc，就调用 malloc&lt;/li&gt;&lt;li&gt;如果直接是 mmap 出来的块，利用 mremap 来扩展空间&lt;/li&gt;&lt;li&gt;如果是要申请更少的内存，把多出来的部分拆成一个单独的块，然后 free 掉它&lt;/li&gt;&lt;li&gt;如果是要申请更多的内存，尝试从内存更高地址的相邻块获取空间，如果有的话，合并两个块，然后把多余的空间拆成一个单独的块，然后 free 掉它；如果内存更高地址的相邻块已经被占用，就重新 malloc 一个块，用 memcpy 把数据拷贝过去，再 free 掉旧的内存&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;calloc&#34;&gt;calloc&lt;a class=&#34;headerlink&#34; href=&#34;#calloc&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;calloc 的实现在 &lt;code&gt;__libc_calloc&lt;/code&gt; 当中，它的语义相比 malloc 多了一个清零，所以它的实现也不复杂：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果 top chunk 还有空间，并且 top chunk 的数据已经被清零，则优先从 top chunk 分配空间，避免了 memset 的开销&lt;/li&gt;&lt;li&gt;fallback 到 &lt;code&gt;_int_malloc&lt;/code&gt; 进行内存分配，分配成功后，再 memset 清零&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;arena-和-heap&#34;&gt;arena 和 heap&lt;a class=&#34;headerlink&#34; href=&#34;#arena-和-heap&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;前面讨论了各种 chunk 在内存分配器内部流转的情况，但并没有讨论这些空间是怎么从操作系统分配而来的，又是怎么维护的。glibc 内存分配器实际上设计了两个层次：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;arena 层次：对应锁的粒度，一个 arena 可以对应多个 heap，有一个特殊的 arena 是 main_arena；arena 的数量有限制，在 64 位系统下默认的数量限制是处理器核心数的 8 倍，避免出现太多的内存碎片&lt;/li&gt;&lt;li&gt;heap 层次：每个 heap 大小有上限：&lt;code&gt;1024 * 1024&lt;/code&gt; 字节，也就是 1MB；当 arena 需要更多空间的时候，可以分配新的 heap；arena 自身就保存在 arena 的第一个 heap 内部的空间，同一个 arena 的多个 heap 之间通单向链表连接起来；arena 的 top chunk 指向最后一个创建的 heap 的顶部的空闲块&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;arena 的结构就是前面看到的 &lt;code&gt;malloc_state&lt;/code&gt;，包括如下字段：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-41-1&#34;&gt;&lt;a id=&#34;__codelineno-41-1&#34; name=&#34;__codelineno-41-1&#34; href=&#34;#__codelineno-41-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-2&#34;&gt;&lt;a id=&#34;__codelineno-41-2&#34; name=&#34;__codelineno-41-2&#34; href=&#34;#__codelineno-41-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-3&#34;&gt;&lt;a id=&#34;__codelineno-41-3&#34; name=&#34;__codelineno-41-3&#34; href=&#34;#__codelineno-41-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Serialize access. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-4&#34;&gt;&lt;a id=&#34;__codelineno-41-4&#34; name=&#34;__codelineno-41-4&#34; href=&#34;#__codelineno-41-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__libc_lock_define&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mutex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-5&#34;&gt;&lt;a id=&#34;__codelineno-41-5&#34; name=&#34;__codelineno-41-5&#34; href=&#34;#__codelineno-41-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-6&#34;&gt;&lt;a id=&#34;__codelineno-41-6&#34; name=&#34;__codelineno-41-6&#34; href=&#34;#__codelineno-41-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Flags (formerly in max_fast). */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-7&#34;&gt;&lt;a id=&#34;__codelineno-41-7&#34; name=&#34;__codelineno-41-7&#34; href=&#34;#__codelineno-41-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-8&#34;&gt;&lt;a id=&#34;__codelineno-41-8&#34; name=&#34;__codelineno-41-8&#34; href=&#34;#__codelineno-41-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-9&#34;&gt;&lt;a id=&#34;__codelineno-41-9&#34; name=&#34;__codelineno-41-9&#34; href=&#34;#__codelineno-41-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Set if the fastbin chunks contain recently inserted free blocks. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-10&#34;&gt;&lt;a id=&#34;__codelineno-41-10&#34; name=&#34;__codelineno-41-10&#34; href=&#34;#__codelineno-41-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Note this is a bool but not all targets support atomics on booleans. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-11&#34;&gt;&lt;a id=&#34;__codelineno-41-11&#34; name=&#34;__codelineno-41-11&#34; href=&#34;#__codelineno-41-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;have_fastchunks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-12&#34;&gt;&lt;a id=&#34;__codelineno-41-12&#34; name=&#34;__codelineno-41-12&#34; href=&#34;#__codelineno-41-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-13&#34;&gt;&lt;a id=&#34;__codelineno-41-13&#34; name=&#34;__codelineno-41-13&#34; href=&#34;#__codelineno-41-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Fastbins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-14&#34;&gt;&lt;a id=&#34;__codelineno-41-14&#34; name=&#34;__codelineno-41-14&#34; href=&#34;#__codelineno-41-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mfastbinptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fastbinsY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NFASTBINS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-15&#34;&gt;&lt;a id=&#34;__codelineno-41-15&#34; name=&#34;__codelineno-41-15&#34; href=&#34;#__codelineno-41-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-16&#34;&gt;&lt;a id=&#34;__codelineno-41-16&#34; name=&#34;__codelineno-41-16&#34; href=&#34;#__codelineno-41-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Base of the topmost chunk -- not otherwise kept in a bin */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-17&#34;&gt;&lt;a id=&#34;__codelineno-41-17&#34; name=&#34;__codelineno-41-17&#34; href=&#34;#__codelineno-41-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-18&#34;&gt;&lt;a id=&#34;__codelineno-41-18&#34; name=&#34;__codelineno-41-18&#34; href=&#34;#__codelineno-41-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-19&#34;&gt;&lt;a id=&#34;__codelineno-41-19&#34; name=&#34;__codelineno-41-19&#34; href=&#34;#__codelineno-41-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* The remainder from the most recent split of a small request */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-20&#34;&gt;&lt;a id=&#34;__codelineno-41-20&#34; name=&#34;__codelineno-41-20&#34; href=&#34;#__codelineno-41-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_remainder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-21&#34;&gt;&lt;a id=&#34;__codelineno-41-21&#34; name=&#34;__codelineno-41-21&#34; href=&#34;#__codelineno-41-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-22&#34;&gt;&lt;a id=&#34;__codelineno-41-22&#34; name=&#34;__codelineno-41-22&#34; href=&#34;#__codelineno-41-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Normal bins packed as described above */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-23&#34;&gt;&lt;a id=&#34;__codelineno-41-23&#34; name=&#34;__codelineno-41-23&#34; href=&#34;#__codelineno-41-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mchunkptr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NBINS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-24&#34;&gt;&lt;a id=&#34;__codelineno-41-24&#34; name=&#34;__codelineno-41-24&#34; href=&#34;#__codelineno-41-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-25&#34;&gt;&lt;a id=&#34;__codelineno-41-25&#34; name=&#34;__codelineno-41-25&#34; href=&#34;#__codelineno-41-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Bitmap of bins */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-26&#34;&gt;&lt;a id=&#34;__codelineno-41-26&#34; name=&#34;__codelineno-41-26&#34; href=&#34;#__codelineno-41-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BINMAPSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-27&#34;&gt;&lt;a id=&#34;__codelineno-41-27&#34; name=&#34;__codelineno-41-27&#34; href=&#34;#__codelineno-41-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-28&#34;&gt;&lt;a id=&#34;__codelineno-41-28&#34; name=&#34;__codelineno-41-28&#34; href=&#34;#__codelineno-41-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Linked list */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-29&#34;&gt;&lt;a id=&#34;__codelineno-41-29&#34; name=&#34;__codelineno-41-29&#34; href=&#34;#__codelineno-41-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-30&#34;&gt;&lt;a id=&#34;__codelineno-41-30&#34; name=&#34;__codelineno-41-30&#34; href=&#34;#__codelineno-41-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-31&#34;&gt;&lt;a id=&#34;__codelineno-41-31&#34; name=&#34;__codelineno-41-31&#34; href=&#34;#__codelineno-41-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Linked list for free arenas. Access to this field is serialized&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-32&#34;&gt;&lt;a id=&#34;__codelineno-41-32&#34; name=&#34;__codelineno-41-32&#34; href=&#34;#__codelineno-41-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; by free_list_lock in arena.c. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-33&#34;&gt;&lt;a id=&#34;__codelineno-41-33&#34; name=&#34;__codelineno-41-33&#34; href=&#34;#__codelineno-41-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;malloc_state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-34&#34;&gt;&lt;a id=&#34;__codelineno-41-34&#34; name=&#34;__codelineno-41-34&#34; href=&#34;#__codelineno-41-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-35&#34;&gt;&lt;a id=&#34;__codelineno-41-35&#34; name=&#34;__codelineno-41-35&#34; href=&#34;#__codelineno-41-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Number of threads attached to this arena. 0 if the arena is on&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-36&#34;&gt;&lt;a id=&#34;__codelineno-41-36&#34; name=&#34;__codelineno-41-36&#34; href=&#34;#__codelineno-41-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; the free list. Access to this field is serialized by&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-37&#34;&gt;&lt;a id=&#34;__codelineno-41-37&#34; name=&#34;__codelineno-41-37&#34; href=&#34;#__codelineno-41-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; free_list_lock in arena.c. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-38&#34;&gt;&lt;a id=&#34;__codelineno-41-38&#34; name=&#34;__codelineno-41-38&#34; href=&#34;#__codelineno-41-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTERNAL_SIZE_T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attached_threads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-39&#34;&gt;&lt;a id=&#34;__codelineno-41-39&#34; name=&#34;__codelineno-41-39&#34; href=&#34;#__codelineno-41-39&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-40&#34;&gt;&lt;a id=&#34;__codelineno-41-40&#34; name=&#34;__codelineno-41-40&#34; href=&#34;#__codelineno-41-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Memory allocated from the system in this arena. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-41&#34;&gt;&lt;a id=&#34;__codelineno-41-41&#34; name=&#34;__codelineno-41-41&#34; href=&#34;#__codelineno-41-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTERNAL_SIZE_T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system_mem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-42&#34;&gt;&lt;a id=&#34;__codelineno-41-42&#34; name=&#34;__codelineno-41-42&#34; href=&#34;#__codelineno-41-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTERNAL_SIZE_T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_system_mem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-41-43&#34;&gt;&lt;a id=&#34;__codelineno-41-43&#34; name=&#34;__codelineno-41-43&#34; href=&#34;#__codelineno-41-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里很多字段在之前已经见过了，比如：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;mutex&lt;/code&gt;：arena 的互斥锁&lt;/li&gt;&lt;li&gt;&lt;code&gt;have_fastchunks&lt;/code&gt;：记录 fast bin 中是否还有空闲块，用于判断是否需要 consolidate&lt;/li&gt;&lt;li&gt;&lt;code&gt;fastbinsY&lt;/code&gt;：保存 fast bin 每个 bin 的头指针的数组&lt;/li&gt;&lt;li&gt;&lt;code&gt;top&lt;/code&gt;：指向 top chunk&lt;/li&gt;&lt;li&gt;&lt;code&gt;last_remainder&lt;/code&gt;：指向最近一次 split 出来的空闲块，用于访存局部性优化&lt;/li&gt;&lt;li&gt;&lt;code&gt;bins&lt;/code&gt;：保存 unsorted bin，small bin 和 large bin 各个双向链表的哨兵结点的 &lt;code&gt;fd&lt;/code&gt; 和 &lt;code&gt;bk&lt;/code&gt; 指针&lt;/li&gt;&lt;li&gt;&lt;code&gt;binmap&lt;/code&gt;：记录哪些 small 或 large bin 里面有空闲块，用于加速寻找下一个有空闲块的 bin&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;之前没有涉及到的字段包括：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;flags&lt;/code&gt;: 维护 &lt;code&gt;NONCONTIGUOUS_BIT&lt;/code&gt; 标记，即 arena 所使用的内存是否是连续的，例如用 sbrk 分配出来的内存是连续的，用 mmap 则不是&lt;/li&gt;&lt;li&gt;&lt;code&gt;next&lt;/code&gt;: 维护所有 arena 的单向链表，链表头就是 &lt;code&gt;main_arena&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;next_free&lt;/code&gt;: 维护所有空闲的 arena 的单向链表 free list，链表头保存在 &lt;code&gt;static mstate free_list&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;attached_threads&lt;/code&gt;: 记录有多少个线程会使用这个 arena，类似于一种引用计数，当它减到零的时候，意味着 arena 可以被释放到 free list 了&lt;/li&gt;&lt;li&gt;&lt;code&gt;system_mem&lt;/code&gt;: 记录它从操作系统分配了多少的内存的大小&lt;/li&gt;&lt;li&gt;&lt;code&gt;max_system_mem&lt;/code&gt;：记录它历史上从操作系统分配最多的内存的大小&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;可见 arena 的结构还是比较简单的，接下来分析 heap 的结构：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-42-1&#34;&gt;&lt;a id=&#34;__codelineno-42-1&#34; name=&#34;__codelineno-42-1&#34; href=&#34;#__codelineno-42-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;_heap_info&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-2&#34;&gt;&lt;a id=&#34;__codelineno-42-2&#34; name=&#34;__codelineno-42-2&#34; href=&#34;#__codelineno-42-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-3&#34;&gt;&lt;a id=&#34;__codelineno-42-3&#34; name=&#34;__codelineno-42-3&#34; href=&#34;#__codelineno-42-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Arena for this heap. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-4&#34;&gt;&lt;a id=&#34;__codelineno-42-4&#34; name=&#34;__codelineno-42-4&#34; href=&#34;#__codelineno-42-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;_heap_info&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Previous heap. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-5&#34;&gt;&lt;a id=&#34;__codelineno-42-5&#34; name=&#34;__codelineno-42-5&#34; href=&#34;#__codelineno-42-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Current size in bytes. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-6&#34;&gt;&lt;a id=&#34;__codelineno-42-6&#34; name=&#34;__codelineno-42-6&#34; href=&#34;#__codelineno-42-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mprotect_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Size in bytes that has been mprotected&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-7&#34;&gt;&lt;a id=&#34;__codelineno-42-7&#34; name=&#34;__codelineno-42-7&#34; href=&#34;#__codelineno-42-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; PROT_READ|PROT_WRITE. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-8&#34;&gt;&lt;a id=&#34;__codelineno-42-8&#34; name=&#34;__codelineno-42-8&#34; href=&#34;#__codelineno-42-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Make sure the following data is properly aligned, particularly&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-9&#34;&gt;&lt;a id=&#34;__codelineno-42-9&#34; name=&#34;__codelineno-42-9&#34; href=&#34;#__codelineno-42-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; that sizeof (heap_info) + 2 * SIZE_SZ is a multiple of&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-10&#34;&gt;&lt;a id=&#34;__codelineno-42-10&#34; name=&#34;__codelineno-42-10&#34; href=&#34;#__codelineno-42-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt; MALLOC_ALIGNMENT. */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-11&#34;&gt;&lt;a id=&#34;__codelineno-42-11&#34; name=&#34;__codelineno-42-11&#34; href=&#34;#__codelineno-42-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;-6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SIZE_SZ&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MALLOC_ALIGN_MASK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-42-12&#34;&gt;&lt;a id=&#34;__codelineno-42-12&#34; name=&#34;__codelineno-42-12&#34; href=&#34;#__codelineno-42-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;字段如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;ar_ptr&lt;/code&gt;：指向 heap 所属的 arena&lt;/li&gt;&lt;li&gt;&lt;code&gt;prev&lt;/code&gt;：指向前一个 heap，组成一个 heap 的单向链表，新添加的 heap 放到链表的尾部&lt;/li&gt;&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: heap 的大小&lt;/li&gt;&lt;li&gt;&lt;code&gt;mprotect_size&lt;/code&gt;: heap 被设置为可读写的部分的内存大小，也就是 heap 的活跃部分大小，对齐到页的边界；默认情况下，heap 的未分配空间被映射为不可读不可写不可执行的属性&lt;/li&gt;&lt;li&gt;&lt;code&gt;pad&lt;/code&gt;: 添加 padding，保证它的大小是 &lt;code&gt;MALLOC_ALIGNMENT&lt;/code&gt; 的倍数&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;前面提到过，arena 的空间会复用它的第一个 heap 的空间，紧接着放在 &lt;code&gt;heap_info&lt;/code&gt; 结构体的后面。这个 &lt;code&gt;heap_info&lt;/code&gt; 结构体就放在 heap 所用空间的开头。&lt;/p&gt;&lt;p&gt;heap 有一个特性，就是它的起始地址，一定是对齐到 &lt;code&gt;HEAP_MAX_SIZE&lt;/code&gt;（默认是 64MB）的整数倍数，并且它的大小也不会超过 &lt;code&gt;HEAP_MAX_SIZE&lt;/code&gt;，所以如果要知道某个 chunk 属于哪个 heap，只需要向下取整到 &lt;code&gt;HEAP_MAX_SIZE&lt;/code&gt; 的倍数即可。如果要知道某个 chunk 属于哪个 arena，就先找到 heap，再从 heap_info 获取 ar_ptr 就可以了。&lt;/p&gt;&lt;p&gt;比较有意思的一个点是，heap 保存了 arena 的指针，但是反过来，arena 并没有保存 heap 的指针，那么怎么从 arena 找到属于这个 arena 的所有 heap 呢？这会用到一个性质：arena 的 top 永远指向最新的一个 heap 的地址最高的空闲块，而这个最新的 heap 正好处于 heap 链表的尾部，所以如果要遍历 arena 里的 heap，只需要：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;获取 arena 的 top 指针&lt;/li&gt;&lt;li&gt;把 top 指针向下取整到 &lt;code&gt;HEAP_MAX_SIZE&lt;/code&gt; 的整倍数，得到 top 所在 heap 的 heap_info 指针&lt;/li&gt;&lt;li&gt;沿着 heap_info 的 prev 指针向前走，一直遍历，直到 prev 指针为 NULL 为止&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;所以 top 指针也充当了 heap 链表的尾指针的作用。&lt;/p&gt;&lt;p&gt;接下来观察 arena 和 heap 是怎么初始化的。&lt;/p&gt;&lt;p&gt;main arena 是特殊的，因为它直接保存在 glibc 的 data 段当中，所以不需要动态分配，并且 main arena 的数据是通过 sbrk 从系统分配的，它的维护逻辑在 &lt;code&gt;sysmalloc&lt;/code&gt; 函数中实现：当 malloc 尝试各种办法都找不到空间分配时，就会调用 &lt;code&gt;sysmalloc&lt;/code&gt; 来扩展 top chunk 并从 top chunk 中分配新的块。当 &lt;code&gt;sysmalloc&lt;/code&gt; 遇到 main arena 的时候，就会尝试用 sbrk 扩展堆的大小，从而扩大 top chunk。当然了，sbrk 可能会失败，这个时候 main arena 也会通过 mmap 来分配更多的内存。&lt;/p&gt;&lt;p&gt;其他的 arena 则是通过 &lt;code&gt;_int_new_arena&lt;/code&gt; 分配的，它的流程是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;调用 &lt;code&gt;new_heap&lt;/code&gt; 创建一个堆，至少能够放 &lt;code&gt;heap_info&lt;/code&gt; 和 &lt;code&gt;malloc_state&lt;/code&gt; 的空间&lt;/li&gt;&lt;li&gt;这段空间的开头就是 &lt;code&gt;heap_info&lt;/code&gt;，紧随其后就是 arena 自己的 &lt;code&gt;malloc_state&lt;/code&gt;，然后把 top chunk 指向 &lt;code&gt;malloc_state&lt;/code&gt; 后面的空闲空间&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;new_heap&lt;/code&gt; 则是会通过 &lt;code&gt;mmap&lt;/code&gt; 向操作系统申请内存。因此除了 main_arena 以外，所有的 arena 的 heap 都会放在 mmap 出来的空间里。&lt;/p&gt;&lt;p&gt;于是 &lt;code&gt;sysmalloc&lt;/code&gt; 要做的事情也比较清晰了，它要做的就是，在 top chunk 不够大的时候，分配更多空间给 top chunk：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果要分配的块特别大，超出了阈值 &lt;code&gt;mmap_threshold&lt;/code&gt;，就直接用 mmap 申请内存&lt;/li&gt;&lt;li&gt;如果不是 main arena，就尝试扩大 top 所在的 heap：heap 在初始化的时候，虽然会 mmap 一个 &lt;code&gt;HEAP_MAX_SIZE&lt;/code&gt; 大小的内存，但大部分空间都被映射为不可读不可写不可执行；所以扩大 heap，实际上就是把要用的部分通过 mprotect 添加可读和可写的权限；如果 heap 达到了大小的上限，那就新建一个 heap，把 top chunk 放到新的 heap 上去&lt;/li&gt;&lt;li&gt;如果是 main arena，就用 sbrk 扩大 top chunk；如果扩大失败，那就用 mmap 来分配内存&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;小结&#34;&gt;小结&lt;a class=&#34;headerlink&#34; href=&#34;#小结&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;结构&#34;&gt;结构&lt;a class=&#34;headerlink&#34; href=&#34;#结构&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;到这里就基本把 glibc 的内存分配器分析得差不多了。glibc 把空闲块放在如下四种 bin 内：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;fast bin: 每个 bin 对应固定大小的空闲块，用单向链表维护，链表头指针保存在 &lt;code&gt;malloc_state&lt;/code&gt; 的 &lt;code&gt;fastbinsY&lt;/code&gt; 成员&lt;/li&gt;&lt;li&gt;unsorted bin: 一个双向链表，维护一些刚被 free 的空闲块，无大小要求，链表的哨兵结点保存在 &lt;code&gt;malloc_state&lt;/code&gt; 的 &lt;code&gt;bins&lt;/code&gt; 成员刚开头&lt;/li&gt;&lt;li&gt;small bin: 每个 bin 对应固定大小的空闲块，用双向链表维护，链表的哨兵结点保存在 &lt;code&gt;malloc_state&lt;/code&gt; 的 &lt;code&gt;bins&lt;/code&gt; 成员，紧接在 unsorted bin 后面&lt;/li&gt;&lt;li&gt;large bin: 每个 bin 对应一段大小范围的空闲块，用双向链表维护，按照块大小从大到小排序，每个大小的第一个空闲块在 nextsize 双向链表当中，链表的哨兵结点保存在 &lt;code&gt;malloc_state&lt;/code&gt; 的 &lt;code&gt;bins&lt;/code&gt; 成员中，紧接在 small bin 后面&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;除了这四种 bin 以外，还有一个 per thread 的 tcache 机制，结构和 fast bin 类似，每个 bin 对应固定大小的空闲块，用单向链表维护，链表头指针保存在 &lt;code&gt;tcache&lt;/code&gt; 的 &lt;code&gt;entries&lt;/code&gt; 成员。&lt;/p&gt;&lt;p&gt;内存在分配器中流转的过程大致如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;一开始从 top chunk 当中被分配出来&lt;/li&gt;&lt;li&gt;被 free 了以后，进入 tcache，或者 fast bin，或者合并后放到 unsorted bin，或者合并到 top chunk&lt;/li&gt;&lt;li&gt;在 malloc 的时候，从 tcache 或者 fast bin 分配，又或者从 unsorted bin 中取出，放到 small bin 或 large bin，中途可能被分配、拆分或者合并&lt;/li&gt;&lt;/ol&gt;&lt;pre class=&#34;mermaid&#34;&gt;&lt;code&gt;flowchart TD top_chunk[top chunk] user[user allocated] tcache fast_bin[fast bin] small_bin[small bin] large_bin[large bin] unsorted_bin[unsorted bin] top_chunk --&amp;gt;|malloc| user tcache --&amp;gt;|malloc| user fast_bin --&amp;gt;|malloc| user fast_bin --&amp;gt;|malloc| tcache fast_bin --&amp;gt;|consolidate| unsorted_bin fast_bin --&amp;gt;|consolidate| top_chunk small_bin --&amp;gt;|malloc| user small_bin --&amp;gt;|malloc| tcache large_bin --&amp;gt;|malloc| user large_bin --&amp;gt;|malloc| unsorted_bin unsorted_bin --&amp;gt;|malloc| user unsorted_bin --&amp;gt;|malloc| tcache unsorted_bin --&amp;gt;|malloc| small_bin unsorted_bin --&amp;gt;|malloc| large_bin user --&amp;gt;|free| tcache user --&amp;gt;|free| fast_bin user --&amp;gt;|free| unsorted_bin user --&amp;gt;|free| top_chunk small_bin --&amp;gt;|free| unsorted_bin large_bin --&amp;gt;|free| unsorted_bin&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;malloc_5&#34;&gt;malloc&lt;a class=&#34;headerlink&#34; href=&#34;#malloc_5&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;malloc 的完整流程图如下：&lt;/p&gt;&lt;pre class=&#34;mermaid&#34;&gt;&lt;code&gt;---config: theme: base themeVariables: fontSize: &#34;30px&#34;---flowchart TD malloc[malloc 入口（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3022&#34;&amp;gt;malloc.c:3022&amp;lt;/a&amp;gt;）] tcache[尝试从 tcache 中分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3047&#34;&amp;gt;malloc.c:3047&amp;lt;/a&amp;gt;）] fastbin[尝试从 fast bin 中分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3577&#34;&amp;gt;malloc.c:3577&amp;lt;/a&amp;gt;）] fastbin_migrate[如果 fast bin 还有空闲块且 tcache 没有满，则把空闲块从 fast bin 挪到 tcache（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3596&#34;&amp;gt;malloc.c:3596&amp;lt;/a&amp;gt;）] smallbin[尝试从 small bin 中分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3635&#34;&amp;gt;malloc.c:3635&amp;lt;/a&amp;gt;）] smallbin_migrate[如果 small bin 还有空闲块且 tcache 没有满，则把空闲块从 small bin 挪到 tcache（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3652&#34;&amp;gt;malloc.c:3652&amp;lt;/a&amp;gt;）] malloc_ret[malloc 结束] consolidate[consolidate：遍历 fast bin，把空闲块和相邻的空闲块合并，插入到 unsorted bin（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L4440&#34;&amp;gt;malloc.c:4440&amp;lt;/a&amp;gt;）] consolidate_2[consolidate：遍历 fast bin，把空闲块和相邻的空闲块合并，插入到 unsorted bin（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L4440&#34;&amp;gt;malloc.c:4440&amp;lt;/a&amp;gt;）] check_large[块大小是否对应 large bin（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3695&#34;&amp;gt;malloc.c:3695&amp;lt;/a&amp;gt;）] loop[开始循环（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3725&#34;&amp;gt;malloc.c:3725&amp;lt;/a&amp;gt;）] unsorted_bin[遍历 unsorted bin（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3728&#34;&amp;gt;malloc.c:3728&amp;lt;/a&amp;gt;）] remainder[内存局部性优化：最近一次 split 出来的 chunk 是否有足够的空间分配（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3756&#34;&amp;gt;malloc.c:3756&amp;lt;/a&amp;gt;）] remainder_success[拆分这个 chunk 以完成分配（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3761&#34;&amp;gt;malloc.c:3761&amp;lt;/a&amp;gt;）] remove_unsorted_bin[把当前 chunk 从 unsorted bin 中删除（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3784&#34;&amp;gt;malloc.c:3784&amp;lt;/a&amp;gt;）] check_same_size[当前空闲块大小和要分配的大小是否相同（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3792&#34;&amp;gt;malloc.c:3792&amp;lt;/a&amp;gt;）] check_tcache_full[tcache bin 是否已满（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3800&#34;&amp;gt;malloc.c:3800&amp;lt;/a&amp;gt;）] alloc_now[分配当前空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3807&#34;&amp;gt;malloc.c:3807&amp;lt;/a&amp;gt;）] move_to_tcache[把当前空闲块挪到 tcache（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3803&#34;&amp;gt;malloc.c:3803&amp;lt;/a&amp;gt;）] move_to_bin[根据当前空闲块的大小，挪到 small bin 或 large bin（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3821&#34;&amp;gt;malloc.c:3821&amp;lt;/a&amp;gt;）] check_tcache[检查 tcache 是否有空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3891&#34;&amp;gt;malloc.c:3891&amp;lt;/a&amp;gt;）] alloc_tcache[从 tcache 分配空闲块] unsorted_bin_exit[检查 tcache 是否有空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3906&#34;&amp;gt;malloc.c:3906&amp;lt;/a&amp;gt;）] check_large_alloc[块大小是否对应 large bin（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3917&#34;&amp;gt;malloc.c:3917&amp;lt;/a&amp;gt;）] alloc_large[尝试从 large bin 中分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3922&#34;&amp;gt;malloc.c:3922&amp;lt;/a&amp;gt;）] alloc_larger[遍历更大的 bin，尝试分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L3990&#34;&amp;gt;malloc.c:3990&amp;lt;/a&amp;gt;）] alloc_top[尝试从 top chunk 分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L4087&#34;&amp;gt;malloc.c:4087&amp;lt;/a&amp;gt;）] alloc_system[从系统请求更多内存来分配空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L4139&#34;&amp;gt;malloc.c:4139&amp;lt;/a&amp;gt;）] check_fast[fast bin 是否有空闲块（&amp;lt;a href=&#34;https://github.com/bminor/glibc/blob/glibc-2.31/malloc/malloc.c#L4126&#34;&amp;gt;malloc.c:4126&amp;lt;/a&amp;gt;）] malloc --&amp;gt; tcache tcache --&amp;gt;|分配成功| malloc_ret tcache --&amp;gt;|分配失败| fastbin fastbin --&amp;gt;|分配失败| smallbin fastbin --&amp;gt;|分配成功| fastbin_migrate fastbin_migrate --&amp;gt; malloc_ret smallbin --&amp;gt;|分配成功| smallbin_migrate smallbin_migrate --&amp;gt; malloc_ret smallbin --&amp;gt;|分配失败| check_large check_large --&amp;gt;|是| consolidate check_large --&amp;gt;|否| loop consolidate --&amp;gt; loop loop --&amp;gt; unsorted_bin unsorted_bin --&amp;gt;|unsorted bin 非空，或者循环次数不足 10000 次| remainder remainder --&amp;gt;|是| remainder_success remainder_success --&amp;gt; malloc_ret remainder --&amp;gt;|否| remove_unsorted_bin remove_unsorted_bin --&amp;gt; check_same_size check_same_size --&amp;gt;|是| check_tcache_full check_tcache_full --&amp;gt;|否| move_to_tcache check_tcache_full --&amp;gt; |是| alloc_now alloc_now --&amp;gt; malloc_ret move_to_tcache --&amp;gt; unsorted_bin check_same_size --&amp;gt;|否| move_to_bin move_to_bin --&amp;gt; check_tcache check_tcache --&amp;gt;|是| alloc_tcache alloc_tcache --&amp;gt; malloc_ret check_tcache --&amp;gt;|否| unsorted_bin unsorted_bin --&amp;gt;|unsorted bin 已空，或者循环次数超过 10000 次| unsorted_bin_exit unsorted_bin_exit --&amp;gt;|是| alloc_tcache unsorted_bin_exit --&amp;gt;|否| check_large_alloc check_large_alloc --&amp;gt;|是| alloc_large alloc_large --&amp;gt;|分配成功| malloc_ret alloc_large --&amp;gt;|分配失败| alloc_larger check_large_alloc --&amp;gt;|否| alloc_larger alloc_larger --&amp;gt;|分配成功| malloc_ret alloc_larger --&amp;gt;|分配失败| alloc_top alloc_top --&amp;gt;|分配成功| malloc_ret alloc_top --&amp;gt;|分配失败| check_fast check_fast --&amp;gt;|是| consolidate_2 consolidate_2 --&amp;gt; loop check_fast --&amp;gt;|否| alloc_system alloc_system --&amp;gt; malloc_ret&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;前面分段整理了 malloc 的实现，在这里列出完整的 malloc 流程：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;malloc 的入口是 &lt;code&gt;__libc_malloc (size_t bytes)&lt;/code&gt; 函数&lt;/li&gt;&lt;li&gt;如果配置了 malloc hook，则调用 malloc hook，直接返回结果&lt;/li&gt;&lt;li&gt;根据用户传入的 malloc 的字节数（&lt;code&gt;bytes&lt;/code&gt;），用 &lt;code&gt;checked_request2size&lt;/code&gt; 计算出实际的 chunk 大小，算法是先加上 &lt;code&gt;sizeof(size_t)&lt;/code&gt;（给 &lt;code&gt;mchunk_size&lt;/code&gt; 预留空间），然后向上对齐到 &lt;code&gt;MALLOC_ALIGNMENT&lt;/code&gt;（通常是 &lt;code&gt;2 * sizeof(size_t)&lt;/code&gt;）的倍数，再和 &lt;code&gt;MINSIZE&lt;/code&gt; 取 max，其中 &lt;code&gt;MINSIZE&lt;/code&gt; 通常是 &lt;code&gt;4 * sizeof(size_t)&lt;/code&gt;，因为空闲块至少要保存两个 size 加上双向链表的 &lt;code&gt;fd&lt;/code&gt; 和 &lt;code&gt;bk&lt;/code&gt; 指针&lt;/li&gt;&lt;li&gt;如果 tcache 还没初始化，就初始化 tcache&lt;/li&gt;&lt;li&gt;根据 chunk 大小，计算 tcache index，检查对应的 bin 是否有空闲块；如果有，直接分配空闲块并返回&lt;/li&gt;&lt;li&gt;接着获取一个 arena，如有必要，获取 arena 的锁；在单线程情况下，只有一个 main_arena；多线程情况下，每个线程有一个默认的 arena 指针（&lt;code&gt;static __thread mstate thread_arena&lt;/code&gt;），在遇到 lock contention 的时候可以动态切换&lt;/li&gt;&lt;li&gt;进入 &lt;code&gt;_int_malloc&lt;/code&gt; 从 arena 中分配一个 chunk，分配完成后释放 arena 的锁&lt;/li&gt;&lt;li&gt;接着分析 &lt;code&gt;_int_malloc&lt;/code&gt; 的实现，除 tcache 以外的大部分逻辑都在 &lt;code&gt;_int_malloc&lt;/code&gt; 函数中&lt;/li&gt;&lt;li&gt;判断 chunk size 大小，如果对应 fast bin 的块大小，在对应的 fast bin 的单向链表中寻找空闲块；如果链表非空，则取出链表头的空闲块，作为分配给 malloc 调用者的块，接着把 fast bin 链表上剩余的空闲块挪到 tcache 当中，直到 fast bin 链表空或者 tcache 满为止，然后函数结束&lt;/li&gt;&lt;li&gt;判断 chunk size 大小，如果对应 small bin 的块大小，在对应的 small bin 的双向链表中寻找空闲块；如果链表非空，则取出链表尾的空闲块，作为分配给 malloc 调用者的块，接着把 small bin 链表上剩余的空闲块挪到 tcache 当中，直到 small bin 链表空或者 tcache 满为止，然后函数结束&lt;/li&gt;&lt;li&gt;判断 chunk size 大小，如果对应 large bin 的块大小，则进行一次 malloc_consolidate：遍历 fast bin 每一个 bin 的每一个空闲块，尝试把它和内存上相邻的前后空闲块合并，合并后的空闲块放入 unsorted bin；特别地，如果空闲块和 top chunk 相邻，就会直接合并到 top chunk，这样就不需要把空闲块放入 unsorted bin&lt;/li&gt;&lt;li&gt;开始一个大的无限循环 &lt;code&gt;for (;;)&lt;/code&gt;，如果后续尝试各种方式都分配不成功，但是 fast bin 还有空闲块，在 malloc_consolidate 后会从这里开始再尝试一次分配&lt;/li&gt;&lt;li&gt;遍历 unsorted bin，最多处理 10000 个空闲块：&lt;ol&gt;&lt;li&gt;如果空闲块的大小对应 small bin，并且它是最近刚 split 出来的空闲块，并且可以放得下要分配的块，就原地把这个空闲块进行拆分，前面的部分是分配给 malloc 调用者的块，后面的部分则放回到 unsorted bin，然后函数结束&lt;/li&gt;&lt;li&gt;把空闲块从 unsorted bin 链表中删除&lt;/li&gt;&lt;li&gt;如果空闲块的大小正好是要分配的块的大小，判断 tcache 是否还有空间；如果 tcache 已经满了，直接把这个空闲块作为分配给 malloc 调用者的块，然后函数结束；如果 tcache 还没满，则先把空闲块挪到 tcache 当中，继续处理 unsorted bin 的其他空闲块，这样做的目的是尽量把 tcache 填满&lt;/li&gt;&lt;li&gt;根据空闲块的大小，插入到对应的 small bin 或者 large bin 当中&lt;/li&gt;&lt;li&gt;记录插入到 small bin 或者 large bin 的空闲块个数，如果超过了阈值，并且之前已经找到一个空闲块的大小正好是要分配的块的大小，同时挪到了 tcache 当中，则立即把这个空闲块从 tcache 中取出并分配给 malloc 调用者，然后函数结束；这样做的目的是避免处理太多无关的 unsorted bin 中的空闲块，导致 malloc 调用时间过长&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;如果在遍历 unsorted bin 过程中找到了和要分配的块一样大的空闲块，那么这个空闲块已经在 tcache 当中了，则立即把这个空闲块从 tcache 中取出并分配给 malloc 调用者，然后函数结束&lt;/li&gt;&lt;li&gt;判断 chunk size 大小，如果属于 large bin 的块大小，则找到对应的 large bin，从小到大通过 nextsize 链表遍历 large bin 中的空闲块，找到一个足够大的空闲块，对它进行拆分，前面的部分是分配给 malloc 调用者的块，后面的部分则放回到 unsorted bin，然后函数结束&lt;/li&gt;&lt;li&gt;根据 chunk size 大小，找到对应的 small bin 或者 large bin，然后从小到大遍历各个 bin（可能从 small bin 一路遍历到 large bin），通过 bitmap 跳过那些空的 bin，找到第一个非空的 bin 的空闲块，对它进行拆分，前面的部分是分配给 malloc 调用者的块，后面的部分则放回到 unsorted bin，然后函数结束&lt;/li&gt;&lt;li&gt;如果 top chunk 足够大，则对它进行拆分，前面的部分是分配给 malloc 调用者的块，后面的部分成为新的 top chunk，然后函数结束&lt;/li&gt;&lt;li&gt;如果此时 fast bin 有空闲块，调用 malloc_consolidate，然后回到无限循环的开头再尝试一次分配&lt;/li&gt;&lt;li&gt;最后的兜底分配方法：调用 &lt;code&gt;sysmalloc&lt;/code&gt;，通过 mmap 或 sbrk 向操作系统申请更多的内存&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;free_4&#34;&gt;free&lt;a class=&#34;headerlink&#34; href=&#34;#free_4&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在这里列出完整的 free 流程：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;free 的入口是 &lt;code&gt;__libc_free (void *mem)&lt;/code&gt; 函数&lt;/li&gt;&lt;li&gt;如果配置了 free hook，则调用 free hook，直接返回&lt;/li&gt;&lt;li&gt;如果是调用 &lt;code&gt;free(NULL)&lt;/code&gt;，直接返回&lt;/li&gt;&lt;li&gt;检查 &lt;code&gt;mchunk_size&lt;/code&gt; 的 &lt;code&gt;IS_MAPPED&lt;/code&gt; 字段，如果它之前是通过 mmap 分配的，那么对它进行 munmap，然后返回&lt;/li&gt;&lt;li&gt;如果 tcache 还没初始化，就初始化 tcache&lt;/li&gt;&lt;li&gt;找到这个 chunk 从哪个 arena 分配的：检查 &lt;code&gt;mchunk_size&lt;/code&gt; 的 &lt;code&gt;NON_MAIN_ARENA&lt;/code&gt; 字段，如果它不是从 main arena 分配的，则根据 chunk 的地址，找到 heap 的地址（heap 的大小是有上限的，并且 heap 的起始地址是对齐到 &lt;code&gt;HEAP_MAX_SIZE&lt;/code&gt; 的整倍数边界的），再根据 heap 开头的 heap_info 找到 arena 的地址&lt;/li&gt;&lt;li&gt;进入 &lt;code&gt;_int_free&lt;/code&gt;，接着分析 &lt;code&gt;_int_free&lt;/code&gt; 的实现&lt;/li&gt;&lt;li&gt;根据 chunk size 找到对应的 tcache bin，如果它还没有满，则把空闲块放到 tcache 当中，然后返回&lt;/li&gt;&lt;li&gt;判断 chunk size 大小，如果对应 fast bin 的块大小，把空闲块放到对应的 fast bin 的单向链表中，然后返回；注意此时没有获取 arena 的锁，所以 fast bin 的操作会用到原子指令，同理 malloc 中对 fast bin 的操作也要用到原子指令，即使 malloc 持有了 arena 的锁&lt;/li&gt;&lt;li&gt;获取 arena 的锁，尝试把空闲块和在内存中相邻的前后空闲块进行合并，合并后的空闲块放入 unsorted bin；合并时，如果被合并的空闲块已经在 small bin 或者 large bin 当中，利用双向链表的特性，把它从双向链表中删除；如果和 top chunk 相邻，则可以直接合并到 top chunk 上，然后返回&lt;/li&gt;&lt;li&gt;如果释放的块比较大，超过了阈值，则触发一次 malloc_consolidate&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;各种常量的默认值&#34;&gt;各种常量的默认值&lt;a class=&#34;headerlink&#34; href=&#34;#各种常量的默认值&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;下面给出 glibc 内存分配器各常量在 64 位下的默认值：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;MALLOC_ALIGNMENT = max(2 * SIZE_SZ, __alignof__ (long double))&lt;/code&gt; 等于 16&lt;/li&gt;&lt;li&gt;&lt;code&gt;MIN_CHUNK_SIZE = offsetof(struct malloc_chunk, fd_nextsize)&lt;/code&gt; 等于 32&lt;/li&gt;&lt;li&gt;&lt;code&gt;MINSIZE = alignUp(MIN_CHUNK_SIZE, MALLOC_ALIGNMENT)&lt;/code&gt; 等于 32&lt;/li&gt;&lt;li&gt;&lt;code&gt;MAX_FAST_SIZE = 80 * SIZE_SZ / 4&lt;/code&gt; 等于 160&lt;/li&gt;&lt;li&gt;&lt;code&gt;NSMALLBINS = 64&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;MIN_LARGE_SIZE = (NSMALLBINS - SMALLBIN_CORRECTION) * SMALLBIN_WIDTH&lt;/code&gt; 等于 1024&lt;/li&gt;&lt;li&gt;&lt;code&gt;DEFAULT_MMAP_THRESHOLD_MIN = 128 * 1024&lt;/code&gt; 即 128KB&lt;/li&gt;&lt;li&gt;&lt;code&gt;DEFAULT_MMAP_THRESHOLD_MAX = 4 * 1024 * 1024 * sizeof(long)&lt;/code&gt; 即 32MB&lt;/li&gt;&lt;li&gt;&lt;code&gt;HEAP_MIN_SIZE = 32 * 1024&lt;/code&gt; 即 32KB&lt;/li&gt;&lt;li&gt;&lt;code&gt;HEAP_MAX_SIZE = 2 * DEFAULT_MMAP_THRESHOLD_MAX&lt;/code&gt; 即 64MB&lt;/li&gt;&lt;li&gt;&lt;code&gt;TCACHE_MAX_BINS = 64&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;TCACHE_FILL_COUNT = 7&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;NFASTBINS = fastbin_index(request2size(MAX_FAST_SIZE)) + 1&lt;/code&gt; 即 10&lt;/li&gt;&lt;li&gt;&lt;code&gt;NBINS = 128&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;DEFAULT_MXFAST = 64 * sizeof(size_t) / 4&lt;/code&gt; 即 128&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;默认情况下各个 bin 负责的块大小范围：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;tcache: 块大小不超过 1040 字节，对应 &lt;code&gt;malloc(1032)&lt;/code&gt; 或更小&lt;/li&gt;&lt;li&gt;fast bin: 块大小不超过 128 字节，对应 &lt;code&gt;malloc(120)&lt;/code&gt; 或更小&lt;/li&gt;&lt;li&gt;small bin: 块大小不超过 1008 字节，对应 &lt;code&gt;malloc(1000)&lt;/code&gt; 或更小&lt;/li&gt;&lt;li&gt;large bin: 块大小不小于 1024 字节，不超过 131056 字节，对应 &lt;code&gt;malloc(1001)&lt;/code&gt; 到 &lt;code&gt;malloc(131048)&lt;/code&gt; 的范围，更大的内存分配会直接走 mmap&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;性能优化&#34;&gt;性能优化&lt;a class=&#34;headerlink&#34; href=&#34;#性能优化&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;简单总结一下 glibc 内存分配器的各种性能优化特性：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;tcache 作为一个 thread local 的结构，不需要锁，性能是最好的，所以尽量把空闲块都丢到 tcache 里面，无论是刚 free 的空闲块，还是在 malloc 过程中，顺带把一些空闲块从 fast bin 或者 small bin 丢到 tcache 里，这样也减少了 lock arena 的次数&lt;/li&gt;&lt;li&gt;fast bin 虽然不再是 thread local，但它在 free 路径上使用原子指令来代替锁，使得 free 在很多时候不需要获取 arena 的锁；而把 fast bin 的空闲块的合并操作挪到 malloc 中进行，此时 arena 的锁是 lock 状态，尽量在一次 lock 的临界区里做更多的事情，减少 lock 的次数&lt;/li&gt;&lt;li&gt;small bin 和 large bin 的区分，主要是考虑到了分配的块的大小分布，越大倾向于越稀疏；代价是 large bin 需要额外维护 nextsize 链表来快速地寻找不同大小的空闲块&lt;/li&gt;&lt;li&gt;在回收 unsorted bin 的时候，会进行一个内存局部性优化，即倾向于连续地从同一个块中切出小块用于分配，适合在循环中分配内存的场景&lt;/li&gt;&lt;li&gt;回收 unsorted bin 时，如果遇到了正好和要分配的块大小相同的空闲块时，先不急着分配，而是丢到 tcache 中，然后继续往前回收若干个空闲块，直到 tcache 满了或者遇到了足够多的大小不同的空闲块为止：这是利用了 unsorted bin 中空闲块大小的局部性，有机会把一系列连续的相同大小的空闲块拿到 tcache 当中，并且限制了搜索的长度，避免带来过多额外的延迟&lt;/li&gt;&lt;li&gt;如果尝试了 unsorted bin、small bin、large bin 和 top chunk 都无法分配，最后再检查一次 fast bin 是否为空，如果是空的，则进行一次 consolidate，把 fast bin 里的空闲块丢到 unsorted bin 中，再重新尝试分配一次：注意这整个过程 malloc 都是持有 arena 锁的，而 fast bin 在 free 中的写入是不需要持有 arena 锁的，而是直接用原子指令更新，所以这是考虑到其他线程在同时往同一个 arena free 的情况&lt;/li&gt;&lt;li&gt;在合并相邻空闲块的时候，被合并的空闲块可能已经在 unsorted bin、small bin 或者 large bin 当中，为了能够把空闲块从这些 bin 里删除，用双向链表来实现 O(1) 时间的删除&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;a class=&#34;headerlink&#34; href=&#34;#参考&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://sourceware.org/glibc/wiki/MallocInternals&#34;&gt;Malloc Internals&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/software/2025/03/30/glibc-allocator/</link> <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/software/2025/03/30/glibc-allocator/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/glibc-allocator.png" type="image/png" length="66242" /> </item> <item> <title>Android Runtime 解释器的实现探究</title> <category>android</category> <category>art</category> <category>interpreter</category> <category>linux</category> <category>runtime</category> <category>software</category> <description>&lt;h1 id=&#34;android-runtime-解释器的实现探究&#34;&gt;Android Runtime 解释器的实现探究&lt;a class=&#34;headerlink&#34; href=&#34;#android-runtime-解释器的实现探究&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在 &lt;a href=&#34;../../01/v8-ignition-internals/&#34;&gt;V8 Ignition 解释器的内部实现探究&lt;/a&gt; 中探究了 JavaScript 引擎 V8 的解释器的实现，接下来分析一下 Android Runtime (ART) 的解释器，其原理也是类似的。本博客在 ARM64 Ubuntu 24.04 平台上针对 &lt;a href=&#34;https://android.googlesource.com/platform/art/+/refs/tags/android-15.0.0_r1/runtime/interpreter/&#34;&gt;Android Runtime (ART) 15.0.0 r1&lt;/a&gt; 版本进行分析。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;dalvik-bytecode&#34;&gt;Dalvik Bytecode&lt;a class=&#34;headerlink&#34; href=&#34;#dalvik-bytecode&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在分析解释器的代码前，需要先了解一下解释器的输入，也就是它执行的字节码格式是什么。Android Runtime 继承和发展了 &lt;a href=&#34;https://source.android.com/docs/core/runtime/dalvik-bytecode&#34;&gt;Dalvik VM 的字节码 Dalvik Bytecode&lt;/a&gt; 格式，因此在打包 Android 应用的时候，Java 代码最终会被翻译成 Dalvik Bytecode。&lt;/p&gt;&lt;p&gt;接下来来实践一下这个过程，从 Java 代码到 Dalvik Bytecode：&lt;/p&gt;&lt;p&gt;第一步是编写一个简单的 Java 程序如下，保存到 &lt;code&gt;MainActivity.java&lt;/code&gt;：&lt;/p&gt;&lt;div class=&#34;language-java highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MainActivity&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先用 &lt;code&gt;javac MainActivity.java&lt;/code&gt; 命令把源码编译到 Java Bytecode。可以用 &lt;code&gt;javap -c MainActivity.class&lt;/code&gt; 查看生成的 Java Bytecode：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;Compiled from &amp;quot;MainActivity.java&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;public class MainActivity {&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt; public MainActivity();&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt; Code:&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt; 0: aload_0&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt; 1: invokespecial #1 // Method java/lang/Object.&amp;quot;&amp;lt;init&amp;gt;&amp;quot;:()V&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt; 4: return&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt; public static void main(java.lang.String[]);&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt; Code:&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt; 0: getstatic #7 // Field java/lang/System.out:Ljava/io/PrintStream;&lt;/span&gt;&lt;span id=&#34;__span-1-12&#34;&gt;&lt;a id=&#34;__codelineno-1-12&#34; name=&#34;__codelineno-1-12&#34; href=&#34;#__codelineno-1-12&#34;&gt;&lt;/a&gt; 3: ldc #13 // String Hello, world!&lt;/span&gt;&lt;span id=&#34;__span-1-13&#34;&gt;&lt;a id=&#34;__codelineno-1-13&#34; name=&#34;__codelineno-1-13&#34; href=&#34;#__codelineno-1-13&#34;&gt;&lt;/a&gt; 5: invokevirtual #15 // Method java/io/PrintStream.println:(Ljava/lang/String;)V&lt;/span&gt;&lt;span id=&#34;__span-1-14&#34;&gt;&lt;a id=&#34;__codelineno-1-14&#34; name=&#34;__codelineno-1-14&#34; href=&#34;#__codelineno-1-14&#34;&gt;&lt;/a&gt; 8: return&lt;/span&gt;&lt;span id=&#34;__span-1-15&#34;&gt;&lt;a id=&#34;__codelineno-1-15&#34; name=&#34;__codelineno-1-15&#34; href=&#34;#__codelineno-1-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-16&#34;&gt;&lt;a id=&#34;__codelineno-1-16&#34; name=&#34;__codelineno-1-16&#34; href=&#34;#__codelineno-1-16&#34;&gt;&lt;/a&gt; public static int add(int, int);&lt;/span&gt;&lt;span id=&#34;__span-1-17&#34;&gt;&lt;a id=&#34;__codelineno-1-17&#34; name=&#34;__codelineno-1-17&#34; href=&#34;#__codelineno-1-17&#34;&gt;&lt;/a&gt; Code:&lt;/span&gt;&lt;span id=&#34;__span-1-18&#34;&gt;&lt;a id=&#34;__codelineno-1-18&#34; name=&#34;__codelineno-1-18&#34; href=&#34;#__codelineno-1-18&#34;&gt;&lt;/a&gt; 0: iload_0&lt;/span&gt;&lt;span id=&#34;__span-1-19&#34;&gt;&lt;a id=&#34;__codelineno-1-19&#34; name=&#34;__codelineno-1-19&#34; href=&#34;#__codelineno-1-19&#34;&gt;&lt;/a&gt; 1: iload_1&lt;/span&gt;&lt;span id=&#34;__span-1-20&#34;&gt;&lt;a id=&#34;__codelineno-1-20&#34; name=&#34;__codelineno-1-20&#34; href=&#34;#__codelineno-1-20&#34;&gt;&lt;/a&gt; 2: iadd&lt;/span&gt;&lt;span id=&#34;__span-1-21&#34;&gt;&lt;a id=&#34;__codelineno-1-21&#34; name=&#34;__codelineno-1-21&#34; href=&#34;#__codelineno-1-21&#34;&gt;&lt;/a&gt; 3: ireturn&lt;/span&gt;&lt;span id=&#34;__span-1-22&#34;&gt;&lt;a id=&#34;__codelineno-1-22&#34; name=&#34;__codelineno-1-22&#34; href=&#34;#__codelineno-1-22&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Java Bytecode 是个典型的栈式字节码，因此从 &lt;code&gt;int add(int, int)&lt;/code&gt; 函数可以看到，它分别压栈第零个和第一个局部遍变量（即参数 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt;），然后用 &lt;code&gt;iadd&lt;/code&gt; 指令从栈顶弹出两个元素，求和后再把结果压栈。&lt;/p&gt;&lt;p&gt;接着，用 Android SDK 的 Build Tools 提供的命令 &lt;code&gt;d8&lt;/code&gt; 来把它转换为 Dalvik Bytecode。如果你还没有安装 Android SDK，可以按照 &lt;a href=&#34;https://developer.android.com/tools/sdkmanager&#34;&gt;sdkmanager 文档&lt;/a&gt; 来安装 sdkmanager，再用 sdkmanager 安装较新版本的 &lt;code&gt;build-tools&lt;/code&gt;。转换的命令为 &lt;code&gt;$ANDROID_HOME/build-tools/$VERSION/d8 MainActivity.class&lt;/code&gt;，结果会保存在当前目录的 &lt;code&gt;classes.dex&lt;/code&gt; 文件内。接着可以用 &lt;code&gt;$ANDROID_HOME/build-tools/$VERSION/dexdump -d classes.dex&lt;/code&gt; 来查看 Dalvik Bytecode：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;Processing &amp;#39;classes.dex&amp;#39;...&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;Opened &amp;#39;classes.dex&amp;#39;, DEX version &amp;#39;035&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;Class #0 -&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt; Class descriptor : &amp;#39;LMainActivity;&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt; Access flags : 0x0001 (PUBLIC)&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt; Superclass : &amp;#39;Ljava/lang/Object;&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt; Interfaces -&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt; Static fields -&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt; Instance fields -&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt; Direct methods -&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt; #0 : (in LMainActivity;)&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt; name : &amp;#39;&amp;lt;init&amp;gt;&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt; type : &amp;#39;()V&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt; access : 0x10001 (PUBLIC CONSTRUCTOR)&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt; code -&lt;/span&gt;&lt;span id=&#34;__span-2-16&#34;&gt;&lt;a id=&#34;__codelineno-2-16&#34; name=&#34;__codelineno-2-16&#34; href=&#34;#__codelineno-2-16&#34;&gt;&lt;/a&gt; registers : 1&lt;/span&gt;&lt;span id=&#34;__span-2-17&#34;&gt;&lt;a id=&#34;__codelineno-2-17&#34; name=&#34;__codelineno-2-17&#34; href=&#34;#__codelineno-2-17&#34;&gt;&lt;/a&gt; ins : 1&lt;/span&gt;&lt;span id=&#34;__span-2-18&#34;&gt;&lt;a id=&#34;__codelineno-2-18&#34; name=&#34;__codelineno-2-18&#34; href=&#34;#__codelineno-2-18&#34;&gt;&lt;/a&gt; outs : 1&lt;/span&gt;&lt;span id=&#34;__span-2-19&#34;&gt;&lt;a id=&#34;__codelineno-2-19&#34; name=&#34;__codelineno-2-19&#34; href=&#34;#__codelineno-2-19&#34;&gt;&lt;/a&gt; insns size : 4 16-bit code units&lt;/span&gt;&lt;span id=&#34;__span-2-20&#34;&gt;&lt;a id=&#34;__codelineno-2-20&#34; name=&#34;__codelineno-2-20&#34; href=&#34;#__codelineno-2-20&#34;&gt;&lt;/a&gt;00016c: |[00016c] MainActivity.&amp;lt;init&amp;gt;:()V&lt;/span&gt;&lt;span id=&#34;__span-2-21&#34;&gt;&lt;a id=&#34;__codelineno-2-21&#34; name=&#34;__codelineno-2-21&#34; href=&#34;#__codelineno-2-21&#34;&gt;&lt;/a&gt;00017c: 7010 0400 0000 |0000: invoke-direct {v0}, Ljava/lang/Object;.&amp;lt;init&amp;gt;:()V // method@0004&lt;/span&gt;&lt;span id=&#34;__span-2-22&#34;&gt;&lt;a id=&#34;__codelineno-2-22&#34; name=&#34;__codelineno-2-22&#34; href=&#34;#__codelineno-2-22&#34;&gt;&lt;/a&gt;000182: 0e00 |0003: return-void&lt;/span&gt;&lt;span id=&#34;__span-2-23&#34;&gt;&lt;a id=&#34;__codelineno-2-23&#34; name=&#34;__codelineno-2-23&#34; href=&#34;#__codelineno-2-23&#34;&gt;&lt;/a&gt; catches : (none)&lt;/span&gt;&lt;span id=&#34;__span-2-24&#34;&gt;&lt;a id=&#34;__codelineno-2-24&#34; name=&#34;__codelineno-2-24&#34; href=&#34;#__codelineno-2-24&#34;&gt;&lt;/a&gt; positions :&lt;/span&gt;&lt;span id=&#34;__span-2-25&#34;&gt;&lt;a id=&#34;__codelineno-2-25&#34; name=&#34;__codelineno-2-25&#34; href=&#34;#__codelineno-2-25&#34;&gt;&lt;/a&gt; 0x0000 line=1&lt;/span&gt;&lt;span id=&#34;__span-2-26&#34;&gt;&lt;a id=&#34;__codelineno-2-26&#34; name=&#34;__codelineno-2-26&#34; href=&#34;#__codelineno-2-26&#34;&gt;&lt;/a&gt; locals :&lt;/span&gt;&lt;span id=&#34;__span-2-27&#34;&gt;&lt;a id=&#34;__codelineno-2-27&#34; name=&#34;__codelineno-2-27&#34; href=&#34;#__codelineno-2-27&#34;&gt;&lt;/a&gt; 0x0000 - 0x0004 reg=0 this LMainActivity;&lt;/span&gt;&lt;span id=&#34;__span-2-28&#34;&gt;&lt;a id=&#34;__codelineno-2-28&#34; name=&#34;__codelineno-2-28&#34; href=&#34;#__codelineno-2-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-29&#34;&gt;&lt;a id=&#34;__codelineno-2-29&#34; name=&#34;__codelineno-2-29&#34; href=&#34;#__codelineno-2-29&#34;&gt;&lt;/a&gt; #1 : (in LMainActivity;)&lt;/span&gt;&lt;span id=&#34;__span-2-30&#34;&gt;&lt;a id=&#34;__codelineno-2-30&#34; name=&#34;__codelineno-2-30&#34; href=&#34;#__codelineno-2-30&#34;&gt;&lt;/a&gt; name : &amp;#39;add&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-31&#34;&gt;&lt;a id=&#34;__codelineno-2-31&#34; name=&#34;__codelineno-2-31&#34; href=&#34;#__codelineno-2-31&#34;&gt;&lt;/a&gt; type : &amp;#39;(II)I&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-32&#34;&gt;&lt;a id=&#34;__codelineno-2-32&#34; name=&#34;__codelineno-2-32&#34; href=&#34;#__codelineno-2-32&#34;&gt;&lt;/a&gt; access : 0x0009 (PUBLIC STATIC)&lt;/span&gt;&lt;span id=&#34;__span-2-33&#34;&gt;&lt;a id=&#34;__codelineno-2-33&#34; name=&#34;__codelineno-2-33&#34; href=&#34;#__codelineno-2-33&#34;&gt;&lt;/a&gt; code -&lt;/span&gt;&lt;span id=&#34;__span-2-34&#34;&gt;&lt;a id=&#34;__codelineno-2-34&#34; name=&#34;__codelineno-2-34&#34; href=&#34;#__codelineno-2-34&#34;&gt;&lt;/a&gt; registers : 2&lt;/span&gt;&lt;span id=&#34;__span-2-35&#34;&gt;&lt;a id=&#34;__codelineno-2-35&#34; name=&#34;__codelineno-2-35&#34; href=&#34;#__codelineno-2-35&#34;&gt;&lt;/a&gt; ins : 2&lt;/span&gt;&lt;span id=&#34;__span-2-36&#34;&gt;&lt;a id=&#34;__codelineno-2-36&#34; name=&#34;__codelineno-2-36&#34; href=&#34;#__codelineno-2-36&#34;&gt;&lt;/a&gt; outs : 0&lt;/span&gt;&lt;span id=&#34;__span-2-37&#34;&gt;&lt;a id=&#34;__codelineno-2-37&#34; name=&#34;__codelineno-2-37&#34; href=&#34;#__codelineno-2-37&#34;&gt;&lt;/a&gt; insns size : 2 16-bit code units&lt;/span&gt;&lt;span id=&#34;__span-2-38&#34;&gt;&lt;a id=&#34;__codelineno-2-38&#34; name=&#34;__codelineno-2-38&#34; href=&#34;#__codelineno-2-38&#34;&gt;&lt;/a&gt;000158: |[000158] MainActivity.add:(II)I&lt;/span&gt;&lt;span id=&#34;__span-2-39&#34;&gt;&lt;a id=&#34;__codelineno-2-39&#34; name=&#34;__codelineno-2-39&#34; href=&#34;#__codelineno-2-39&#34;&gt;&lt;/a&gt;000168: b010 |0000: add-int/2addr v0, v1&lt;/span&gt;&lt;span id=&#34;__span-2-40&#34;&gt;&lt;a id=&#34;__codelineno-2-40&#34; name=&#34;__codelineno-2-40&#34; href=&#34;#__codelineno-2-40&#34;&gt;&lt;/a&gt;00016a: 0f00 |0001: return v0&lt;/span&gt;&lt;span id=&#34;__span-2-41&#34;&gt;&lt;a id=&#34;__codelineno-2-41&#34; name=&#34;__codelineno-2-41&#34; href=&#34;#__codelineno-2-41&#34;&gt;&lt;/a&gt; catches : (none)&lt;/span&gt;&lt;span id=&#34;__span-2-42&#34;&gt;&lt;a id=&#34;__codelineno-2-42&#34; name=&#34;__codelineno-2-42&#34; href=&#34;#__codelineno-2-42&#34;&gt;&lt;/a&gt; positions :&lt;/span&gt;&lt;span id=&#34;__span-2-43&#34;&gt;&lt;a id=&#34;__codelineno-2-43&#34; name=&#34;__codelineno-2-43&#34; href=&#34;#__codelineno-2-43&#34;&gt;&lt;/a&gt; 0x0000 line=7&lt;/span&gt;&lt;span id=&#34;__span-2-44&#34;&gt;&lt;a id=&#34;__codelineno-2-44&#34; name=&#34;__codelineno-2-44&#34; href=&#34;#__codelineno-2-44&#34;&gt;&lt;/a&gt; locals :&lt;/span&gt;&lt;span id=&#34;__span-2-45&#34;&gt;&lt;a id=&#34;__codelineno-2-45&#34; name=&#34;__codelineno-2-45&#34; href=&#34;#__codelineno-2-45&#34;&gt;&lt;/a&gt; 0x0000 - 0x0002 reg=0 (null) I&lt;/span&gt;&lt;span id=&#34;__span-2-46&#34;&gt;&lt;a id=&#34;__codelineno-2-46&#34; name=&#34;__codelineno-2-46&#34; href=&#34;#__codelineno-2-46&#34;&gt;&lt;/a&gt; 0x0000 - 0x0002 reg=1 (null) I&lt;/span&gt;&lt;span id=&#34;__span-2-47&#34;&gt;&lt;a id=&#34;__codelineno-2-47&#34; name=&#34;__codelineno-2-47&#34; href=&#34;#__codelineno-2-47&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-48&#34;&gt;&lt;a id=&#34;__codelineno-2-48&#34; name=&#34;__codelineno-2-48&#34; href=&#34;#__codelineno-2-48&#34;&gt;&lt;/a&gt; #2 : (in LMainActivity;)&lt;/span&gt;&lt;span id=&#34;__span-2-49&#34;&gt;&lt;a id=&#34;__codelineno-2-49&#34; name=&#34;__codelineno-2-49&#34; href=&#34;#__codelineno-2-49&#34;&gt;&lt;/a&gt; name : &amp;#39;main&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-50&#34;&gt;&lt;a id=&#34;__codelineno-2-50&#34; name=&#34;__codelineno-2-50&#34; href=&#34;#__codelineno-2-50&#34;&gt;&lt;/a&gt; type : &amp;#39;([Ljava/lang/String;)V&amp;#39;&lt;/span&gt;&lt;span id=&#34;__span-2-51&#34;&gt;&lt;a id=&#34;__codelineno-2-51&#34; name=&#34;__codelineno-2-51&#34; href=&#34;#__codelineno-2-51&#34;&gt;&lt;/a&gt; access : 0x0009 (PUBLIC STATIC)&lt;/span&gt;&lt;span id=&#34;__span-2-52&#34;&gt;&lt;a id=&#34;__codelineno-2-52&#34; name=&#34;__codelineno-2-52&#34; href=&#34;#__codelineno-2-52&#34;&gt;&lt;/a&gt; code -&lt;/span&gt;&lt;span id=&#34;__span-2-53&#34;&gt;&lt;a id=&#34;__codelineno-2-53&#34; name=&#34;__codelineno-2-53&#34; href=&#34;#__codelineno-2-53&#34;&gt;&lt;/a&gt; registers : 2&lt;/span&gt;&lt;span id=&#34;__span-2-54&#34;&gt;&lt;a id=&#34;__codelineno-2-54&#34; name=&#34;__codelineno-2-54&#34; href=&#34;#__codelineno-2-54&#34;&gt;&lt;/a&gt; ins : 1&lt;/span&gt;&lt;span id=&#34;__span-2-55&#34;&gt;&lt;a id=&#34;__codelineno-2-55&#34; name=&#34;__codelineno-2-55&#34; href=&#34;#__codelineno-2-55&#34;&gt;&lt;/a&gt; outs : 2&lt;/span&gt;&lt;span id=&#34;__span-2-56&#34;&gt;&lt;a id=&#34;__codelineno-2-56&#34; name=&#34;__codelineno-2-56&#34; href=&#34;#__codelineno-2-56&#34;&gt;&lt;/a&gt; insns size : 8 16-bit code units&lt;/span&gt;&lt;span id=&#34;__span-2-57&#34;&gt;&lt;a id=&#34;__codelineno-2-57&#34; name=&#34;__codelineno-2-57&#34; href=&#34;#__codelineno-2-57&#34;&gt;&lt;/a&gt;000184: |[000184] MainActivity.main:([Ljava/lang/String;)V&lt;/span&gt;&lt;span id=&#34;__span-2-58&#34;&gt;&lt;a id=&#34;__codelineno-2-58&#34; name=&#34;__codelineno-2-58&#34; href=&#34;#__codelineno-2-58&#34;&gt;&lt;/a&gt;000194: 6201 0000 |0000: sget-object v1, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&lt;/span&gt;&lt;span id=&#34;__span-2-59&#34;&gt;&lt;a id=&#34;__codelineno-2-59&#34; name=&#34;__codelineno-2-59&#34; href=&#34;#__codelineno-2-59&#34;&gt;&lt;/a&gt;000198: 1a00 0100 |0002: const-string v0, &amp;quot;Hello, world!&amp;quot; // string@0001&lt;/span&gt;&lt;span id=&#34;__span-2-60&#34;&gt;&lt;a id=&#34;__codelineno-2-60&#34; name=&#34;__codelineno-2-60&#34; href=&#34;#__codelineno-2-60&#34;&gt;&lt;/a&gt;00019c: 6e20 0300 0100 |0004: invoke-virtual {v1, v0}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@0003&lt;/span&gt;&lt;span id=&#34;__span-2-61&#34;&gt;&lt;a id=&#34;__codelineno-2-61&#34; name=&#34;__codelineno-2-61&#34; href=&#34;#__codelineno-2-61&#34;&gt;&lt;/a&gt;0001a2: 0e00 |0007: return-void&lt;/span&gt;&lt;span id=&#34;__span-2-62&#34;&gt;&lt;a id=&#34;__codelineno-2-62&#34; name=&#34;__codelineno-2-62&#34; href=&#34;#__codelineno-2-62&#34;&gt;&lt;/a&gt; catches : (none)&lt;/span&gt;&lt;span id=&#34;__span-2-63&#34;&gt;&lt;a id=&#34;__codelineno-2-63&#34; name=&#34;__codelineno-2-63&#34; href=&#34;#__codelineno-2-63&#34;&gt;&lt;/a&gt; positions :&lt;/span&gt;&lt;span id=&#34;__span-2-64&#34;&gt;&lt;a id=&#34;__codelineno-2-64&#34; name=&#34;__codelineno-2-64&#34; href=&#34;#__codelineno-2-64&#34;&gt;&lt;/a&gt; 0x0000 line=3&lt;/span&gt;&lt;span id=&#34;__span-2-65&#34;&gt;&lt;a id=&#34;__codelineno-2-65&#34; name=&#34;__codelineno-2-65&#34; href=&#34;#__codelineno-2-65&#34;&gt;&lt;/a&gt; 0x0007 line=4&lt;/span&gt;&lt;span id=&#34;__span-2-66&#34;&gt;&lt;a id=&#34;__codelineno-2-66&#34; name=&#34;__codelineno-2-66&#34; href=&#34;#__codelineno-2-66&#34;&gt;&lt;/a&gt; locals :&lt;/span&gt;&lt;span id=&#34;__span-2-67&#34;&gt;&lt;a id=&#34;__codelineno-2-67&#34; name=&#34;__codelineno-2-67&#34; href=&#34;#__codelineno-2-67&#34;&gt;&lt;/a&gt; 0x0000 - 0x0008 reg=1 (null) [Ljava/lang/String;&lt;/span&gt;&lt;span id=&#34;__span-2-68&#34;&gt;&lt;a id=&#34;__codelineno-2-68&#34; name=&#34;__codelineno-2-68&#34; href=&#34;#__codelineno-2-68&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-69&#34;&gt;&lt;a id=&#34;__codelineno-2-69&#34; name=&#34;__codelineno-2-69&#34; href=&#34;#__codelineno-2-69&#34;&gt;&lt;/a&gt; Virtual methods -&lt;/span&gt;&lt;span id=&#34;__span-2-70&#34;&gt;&lt;a id=&#34;__codelineno-2-70&#34; name=&#34;__codelineno-2-70&#34; href=&#34;#__codelineno-2-70&#34;&gt;&lt;/a&gt; source_file_idx : 9 (MainActivity.java)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对比 Java Bytecode，在 Dalvik Bytecode 里的 &lt;code&gt;add&lt;/code&gt; 函数的实现就大不相同了：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;add-int/2addr v0, v1&lt;/code&gt;: 求寄存器 &lt;code&gt;v1&lt;/code&gt; 和寄存器 &lt;code&gt;v0&lt;/code&gt; 之和，在这里就对应 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 两个参数，结果写到 &lt;code&gt;v0&lt;/code&gt; 寄存器当中&lt;/li&gt;&lt;li&gt;&lt;code&gt;return v0&lt;/code&gt;: 以寄存器 &lt;code&gt;v0&lt;/code&gt; 为返回值，结束当前函数&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;可见 Dalvik Bytecode 采用的是类似 V8 的基于寄存器的字节码，不过没有 V8 的 &lt;code&gt;accumulator&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;Dalvik Bytecode 的完整列表见 &lt;a href=&#34;https://source.android.com/docs/core/runtime/dalvik-bytecode&#34;&gt;Dalvik bytecode format&lt;/a&gt;，它的格式基本上是两个字节为一组，每组里第一个字节代表 Op 类型，第二个字节代表参数，有一些 Op 后面还会带有多组参数。&lt;/p&gt;&lt;p&gt;例如上面的 &lt;code&gt;add-int/2addr vA, vB&lt;/code&gt; 指令的编码是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第一个字节是 &lt;code&gt;0xb0&lt;/code&gt;，表示这是一个 &lt;code&gt;add-int/2addr&lt;/code&gt; Op&lt;/li&gt;&lt;li&gt;第二个字节共 8 位，低 4 位编码了 &lt;code&gt;vA&lt;/code&gt; 的寄存器编号 &lt;code&gt;A&lt;/code&gt;，高 4 位编码了 &lt;code&gt;vB&lt;/code&gt; 的寄存器编号 &lt;code&gt;B&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;所以 &lt;code&gt;add-int/2addr v0, v1&lt;/code&gt; 的编码就是 &lt;code&gt;0xb0, 0 | (1 &amp;lt;&amp;lt; 4)&lt;/code&gt; 即 &lt;code&gt;0xb0, 0x10&lt;/code&gt;。因为存得很紧凑，寄存器编号只有 4 位，所以这个 Op 的操作数不能访问 v16 或更高的寄存器。&lt;/p&gt;&lt;p&gt;&lt;code&gt;return vAA&lt;/code&gt; 指令的编码类似，不过因为只需要编码一个操作数，所以有 8 位可以编码返回值用哪个寄存器；为了区分是 4 位的编码还是 8 位的编码，这里用 &lt;code&gt;vAA&lt;/code&gt; 表示可以用 8 位来记录寄存器编号。&lt;code&gt;return vAA&lt;/code&gt; 的第一个字节是 &lt;code&gt;0x0f&lt;/code&gt; 表示 Op 类型，第二个字节就是寄存器编号 &lt;code&gt;A&lt;/code&gt;。上面出现的 &lt;code&gt;return v0&lt;/code&gt; 的编码就是 &lt;code&gt;0x0f, 0x00&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;一些比较复杂的 Op 会附带更多的参数，此时编码就可能涉及到更多的字节。比如 &lt;code&gt;invoke-virtual {vC, vD, vE, vF, vG}, meth@BBBB&lt;/code&gt;，可以携带可变个寄存器参数，在编码的时候，格式如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第一个字节 &lt;code&gt;0x6e&lt;/code&gt; 表示这是一个 &lt;code&gt;invoke-virtual&lt;/code&gt; Op&lt;/li&gt;&lt;li&gt;第二个字节的高 4 位记录了参数个数&lt;/li&gt;&lt;li&gt;第三和第四个字节共 16 位，记录了要调用的函数的 index，这个 index 会被拿来索引 DEX 的 method_ids 表&lt;/li&gt;&lt;li&gt;第五和第六个字节共 16 位，配合第二个字节的低 4 位，最多可以传递 5 个寄存器参数，每个寄存器参数 4 位&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;因此在上面的代码中，&lt;code&gt;invoke-virtual {v1, v0}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@0003&lt;/code&gt; 被编码为：&lt;code&gt;0x6e, 0x20, 0x03, 0x00, 0x01, 0x00&lt;/code&gt;。另外构造了一个例子，把五个参数都用上：&lt;code&gt;invoke-virtual {v1, v4, v0, v2, v3}, LMainActivity;.add4:(IIII)I // method@0002&lt;/code&gt; 被编码为 &lt;code&gt;0x6e, 0x53, 0x02, 0x00, 0x41, 0x20&lt;/code&gt;，可以看到五个参数的编码顺序是第五个字节的低 4 位（&lt;code&gt;v1&lt;/code&gt;）和高 4 位（&lt;code&gt;v4&lt;/code&gt;），第六个字节的低 4 位（&lt;code&gt;v0&lt;/code&gt;）和高 4 位（&lt;code&gt;v2&lt;/code&gt;），最后是第二个字节的低 4 位（&lt;code&gt;v3&lt;/code&gt;）。&lt;/p&gt;&lt;p&gt;了解了 Dalvik Bytecode 的结构，接下来观察它是怎么被解释执行的。&lt;/p&gt;&lt;h2 id=&#34;解释器&#34;&gt;解释器&lt;a class=&#34;headerlink&#34; href=&#34;#解释器&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Android Runtime (ART) 的解释器放在 &lt;code&gt;runtime/interpreter&lt;/code&gt; 目录下。如果进行一些&lt;a href=&#34;https://stackoverflow.com/questions/22187630/what-does-mterp-mean&#34;&gt;考古&lt;/a&gt;，可以看到这个解释器的实现是从更早的 Dalvik VM 来的。它有两种不同的解释器实现：&lt;/p&gt;&lt;p&gt;第一个解释器基于 switch-case 的 C++ 代码实现，其逐个遍历 Op，根据 Op 的类型 Opcode 执行相应的操作，类似下面的代码：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;each&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;op_add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// implement add here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ... other opcode handlers&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二个解释器以 &lt;a href=&#34;https://en.wikipedia.org/wiki/Threaded_code#Token_threading&#34;&gt;Token threading&lt;/a&gt; 的方式实现，每种 Op 对应一段代码。这段代码在完成 Op 的操作后，读取下一个 Op，再间接跳转到下一个 Op 对应的代码。其工作原理类似下面的代码，这里 &lt;a href=&#34;https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html&#34;&gt;&lt;code&gt;goto *&lt;/code&gt;&lt;/a&gt; 是 GNU C 的扩展，对应间接跳转指令，其目的地址取决于 &lt;code&gt;handlers[next_opcode]&lt;/code&gt; 的值，意思是根据下一个 op 的 Opcode，找到对应的 handler，直接跳转过去：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// op handlers array&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;handlers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op_add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op_sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-4&#34;&gt;&lt;a id=&#34;__codelineno-4-4&#34; name=&#34;__codelineno-4-4&#34; href=&#34;#__codelineno-4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;op_add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-5&#34;&gt;&lt;a id=&#34;__codelineno-4-5&#34; name=&#34;__codelineno-4-5&#34; href=&#34;#__codelineno-4-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// implement add here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-6&#34;&gt;&lt;a id=&#34;__codelineno-4-6&#34; name=&#34;__codelineno-4-6&#34; href=&#34;#__codelineno-4-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// read next opcode here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-4-7&#34;&gt;&lt;a id=&#34;__codelineno-4-7&#34; name=&#34;__codelineno-4-7&#34; href=&#34;#__codelineno-4-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;handlers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实际实现的时候更进一步，用汇编实现各个 op handler，并把 handler 放在了 128 字节对齐的位置，保证每个 handler 不超过 128 个字节，从而把读取 &lt;code&gt;handlers&lt;/code&gt; 数组再跳转的 &lt;code&gt;goto *&lt;/code&gt; 改成了用乘法和加法计算出 handler 的地址再跳转（computed goto）：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;handlers_begin:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;op_add:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-3&#34;&gt;&lt;a id=&#34;__codelineno-5-3&#34; name=&#34;__codelineno-5-3&#34; href=&#34;#__codelineno-5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.balign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-4&#34;&gt;&lt;a id=&#34;__codelineno-5-4&#34; name=&#34;__codelineno-5-4&#34; href=&#34;#__codelineno-5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# implement add here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-5&#34;&gt;&lt;a id=&#34;__codelineno-5-5&#34; name=&#34;__codelineno-5-5&#34; href=&#34;#__codelineno-5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# read next opcode here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-6&#34;&gt;&lt;a id=&#34;__codelineno-5-6&#34; name=&#34;__codelineno-5-6&#34; href=&#34;#__codelineno-5-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;handlers_begin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;next_opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-7&#34;&gt;&lt;a id=&#34;__codelineno-5-7&#34; name=&#34;__codelineno-5-7&#34; href=&#34;#__codelineno-5-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-8&#34;&gt;&lt;a id=&#34;__codelineno-5-8&#34; name=&#34;__codelineno-5-8&#34; href=&#34;#__codelineno-5-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;op_sub:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-9&#34;&gt;&lt;a id=&#34;__codelineno-5-9&#34; name=&#34;__codelineno-5-9&#34; href=&#34;#__codelineno-5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.balign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-10&#34;&gt;&lt;a id=&#34;__codelineno-5-10&#34; name=&#34;__codelineno-5-10&#34; href=&#34;#__codelineno-5-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# implement add here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-11&#34;&gt;&lt;a id=&#34;__codelineno-5-11&#34; name=&#34;__codelineno-5-11&#34; href=&#34;#__codelineno-5-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# read next opcode here&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-5-12&#34;&gt;&lt;a id=&#34;__codelineno-5-12&#34; name=&#34;__codelineno-5-12&#34; href=&#34;#__codelineno-5-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;handlers_begin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;next_opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面结合源码来具体分析这两种解释器的实现。&lt;/p&gt;&lt;h3 id=&#34;基于-switch-case-的解释器&#34;&gt;基于 switch-case 的解释器&lt;a class=&#34;headerlink&#34; href=&#34;#基于-switch-case-的解释器&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;目前 Android Runtime 包括一个基于 switch-case 的解释器，实现在 &lt;code&gt;runtime/interpreter/interpreter_switch_impl-inl.h&lt;/code&gt; 文件当中，它的核心逻辑就是一个循环套 switch-case：&lt;/p&gt;&lt;div class=&#34;language-c++ highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dex_pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetDexPc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-4&#34;&gt;&lt;a id=&#34;__codelineno-6-4&#34; name=&#34;__codelineno-6-4&#34; href=&#34;#__codelineno-6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shadow_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetDexPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dex_pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-5&#34;&gt;&lt;a id=&#34;__codelineno-6-5&#34; name=&#34;__codelineno-6-5&#34; href=&#34;#__codelineno-6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TraceExecution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shadow_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dex_pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-6&#34;&gt;&lt;a id=&#34;__codelineno-6-6&#34; name=&#34;__codelineno-6-6&#34; href=&#34;#__codelineno-6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint16_t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Fetch16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-7&#34;&gt;&lt;a id=&#34;__codelineno-6-7&#34; name=&#34;__codelineno-6-7&#34; href=&#34;#__codelineno-6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-8&#34;&gt;&lt;a id=&#34;__codelineno-6-8&#34; name=&#34;__codelineno-6-8&#34; href=&#34;#__codelineno-6-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Moved outside to keep frames small under asan.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-9&#34;&gt;&lt;a id=&#34;__codelineno-6-9&#34; name=&#34;__codelineno-6-9&#34; href=&#34;#__codelineno-6-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InstructionHandler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transaction_active&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kInvalidFormat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-10&#34;&gt;&lt;a id=&#34;__codelineno-6-10&#34; name=&#34;__codelineno-6-10&#34; href=&#34;#__codelineno-6-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instrumentation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shadow_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dex_pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-11&#34;&gt;&lt;a id=&#34;__codelineno-6-11&#34; name=&#34;__codelineno-6-11&#34; href=&#34;#__codelineno-6-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Preamble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-12&#34;&gt;&lt;a id=&#34;__codelineno-6-12&#34; name=&#34;__codelineno-6-12&#34; href=&#34;#__codelineno-6-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DCHECK_EQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IsExceptionPending&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MOVE_EXCEPTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-13&#34;&gt;&lt;a id=&#34;__codelineno-6-13&#34; name=&#34;__codelineno-6-13&#34; href=&#34;#__codelineno-6-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-14&#34;&gt;&lt;a id=&#34;__codelineno-6-14&#34; name=&#34;__codelineno-6-14&#34; href=&#34;#__codelineno-6-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define OPCODE_CASE(OPCODE, OPCODE_NAME, NAME, FORMAT, i, a, e, v) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-15&#34;&gt;&lt;a id=&#34;__codelineno-6-15&#34; name=&#34;__codelineno-6-15&#34; href=&#34;#__codelineno-6-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; case OPCODE: { \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-16&#34;&gt;&lt;a id=&#34;__codelineno-6-16&#34; name=&#34;__codelineno-6-16&#34; href=&#34;#__codelineno-6-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; next = inst-&amp;gt;RelativeAt(Instruction::SizeInCodeUnits(Instruction::FORMAT)); \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-17&#34;&gt;&lt;a id=&#34;__codelineno-6-17&#34; name=&#34;__codelineno-6-17&#34; href=&#34;#__codelineno-6-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; success = OP_##OPCODE_NAME&amp;lt;transaction_active&amp;gt;( \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-18&#34;&gt;&lt;a id=&#34;__codelineno-6-18&#34; name=&#34;__codelineno-6-18&#34; href=&#34;#__codelineno-6-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; ctx, instrumentation, self, shadow_frame, dex_pc, inst, inst_data, next, exit); \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-19&#34;&gt;&lt;a id=&#34;__codelineno-6-19&#34; name=&#34;__codelineno-6-19&#34; href=&#34;#__codelineno-6-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; if (success &amp;amp;&amp;amp; LIKELY(!interpret_one_instruction)) { \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-20&#34;&gt;&lt;a id=&#34;__codelineno-6-20&#34; name=&#34;__codelineno-6-20&#34; href=&#34;#__codelineno-6-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; continue; \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-21&#34;&gt;&lt;a id=&#34;__codelineno-6-21&#34; name=&#34;__codelineno-6-21&#34; href=&#34;#__codelineno-6-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; } \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-22&#34;&gt;&lt;a id=&#34;__codelineno-6-22&#34; name=&#34;__codelineno-6-22&#34; href=&#34;#__codelineno-6-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; break; \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-23&#34;&gt;&lt;a id=&#34;__codelineno-6-23&#34; name=&#34;__codelineno-6-23&#34; href=&#34;#__codelineno-6-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; }&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-24&#34;&gt;&lt;a id=&#34;__codelineno-6-24&#34; name=&#34;__codelineno-6-24&#34; href=&#34;#__codelineno-6-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DEX_INSTRUCTION_LIST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OPCODE_CASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-25&#34;&gt;&lt;a id=&#34;__codelineno-6-25&#34; name=&#34;__codelineno-6-25&#34; href=&#34;#__codelineno-6-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#undef OPCODE_CASE&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-26&#34;&gt;&lt;a id=&#34;__codelineno-6-26&#34; name=&#34;__codelineno-6-26&#34; href=&#34;#__codelineno-6-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-27&#34;&gt;&lt;a id=&#34;__codelineno-6-27&#34; name=&#34;__codelineno-6-27&#34; href=&#34;#__codelineno-6-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-28&#34;&gt;&lt;a id=&#34;__codelineno-6-28&#34; name=&#34;__codelineno-6-28&#34; href=&#34;#__codelineno-6-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// exit condition handling omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-29&#34;&gt;&lt;a id=&#34;__codelineno-6-29&#34; name=&#34;__codelineno-6-29&#34; href=&#34;#__codelineno-6-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;代码中使用了 &lt;a href=&#34;https://en.wikipedia.org/wiki/X_macro&#34;&gt;X macro&lt;/a&gt; 的编程技巧：如果你需要在不同的地方重复出现同一个 list，比如在这里，就是所有可能的 Opcode 类型，你可以在一个头文件中用一个宏，以另一个宏为参数去列出来：&lt;/p&gt;&lt;div class=&#34;language-c++ highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-7-1&#34;&gt;&lt;a id=&#34;__codelineno-7-1&#34; name=&#34;__codelineno-7-1&#34; href=&#34;#__codelineno-7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// V(opcode, instruction_code, name, format, index, flags, extended_flags, verifier_flags);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-2&#34;&gt;&lt;a id=&#34;__codelineno-7-2&#34; name=&#34;__codelineno-7-2&#34; href=&#34;#__codelineno-7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define DEX_INSTRUCTION_LIST(V) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-3&#34;&gt;&lt;a id=&#34;__codelineno-7-3&#34; name=&#34;__codelineno-7-3&#34; href=&#34;#__codelineno-7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; V(0x00, NOP, &amp;quot;nop&amp;quot;, k10x, kIndexNone, kContinue, 0, kVerifyNothing) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-4&#34;&gt;&lt;a id=&#34;__codelineno-7-4&#34; name=&#34;__codelineno-7-4&#34; href=&#34;#__codelineno-7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; V(0x01, MOVE, &amp;quot;move&amp;quot;, k12x, kIndexNone, kContinue, 0, kVerifyRegA | kVerifyRegB) \&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-5&#34;&gt;&lt;a id=&#34;__codelineno-7-5&#34; name=&#34;__codelineno-7-5&#34; href=&#34;#__codelineno-7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个宏定义在 &lt;code&gt;libdexfile/dex/dex_instruction_list.h&lt;/code&gt; 头文件当中。在使用的时候，临时定义一个宏，然后把新定义的宏传入 &lt;code&gt;DEX_INSTRUCTION_LIST&lt;/code&gt; 的参数即可。例如要生成一个数组，记录所有的 op 名字，可以：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-8-1&#34;&gt;&lt;a id=&#34;__codelineno-8-1&#34; name=&#34;__codelineno-8-1&#34; href=&#34;#__codelineno-8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// taken from libdexfile/dex/dex_instruction.cc&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-2&#34;&gt;&lt;a id=&#34;__codelineno-8-2&#34; name=&#34;__codelineno-8-2&#34; href=&#34;#__codelineno-8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kInstructionNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-3&#34;&gt;&lt;a id=&#34;__codelineno-8-3&#34; name=&#34;__codelineno-8-3&#34; href=&#34;#__codelineno-8-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define INSTRUCTION_NAME(o, c, pname, f, i, a, e, v) pname,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-4&#34;&gt;&lt;a id=&#34;__codelineno-8-4&#34; name=&#34;__codelineno-8-4&#34; href=&#34;#__codelineno-8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;quot;dex_instruction_list.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-5&#34;&gt;&lt;a id=&#34;__codelineno-8-5&#34; name=&#34;__codelineno-8-5&#34; href=&#34;#__codelineno-8-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DEX_INSTRUCTION_LIST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INSTRUCTION_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-6&#34;&gt;&lt;a id=&#34;__codelineno-8-6&#34; name=&#34;__codelineno-8-6&#34; href=&#34;#__codelineno-8-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#undef DEX_INSTRUCTION_LIST&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-7&#34;&gt;&lt;a id=&#34;__codelineno-8-7&#34; name=&#34;__codelineno-8-7&#34; href=&#34;#__codelineno-8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#undef INSTRUCTION_NAME&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-8&#34;&gt;&lt;a id=&#34;__codelineno-8-8&#34; name=&#34;__codelineno-8-8&#34; href=&#34;#__codelineno-8-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码经过 C 预处理器，首先会被展开为：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-9-1&#34;&gt;&lt;a id=&#34;__codelineno-9-1&#34; name=&#34;__codelineno-9-1&#34; href=&#34;#__codelineno-9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kInstructionNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-2&#34;&gt;&lt;a id=&#34;__codelineno-9-2&#34; name=&#34;__codelineno-9-2&#34; href=&#34;#__codelineno-9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define INSTRUCTION_NAME(o, c, pname, f, i, a, e, v) pname,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-3&#34;&gt;&lt;a id=&#34;__codelineno-9-3&#34; name=&#34;__codelineno-9-3&#34; href=&#34;#__codelineno-9-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INSTRUCTION_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nop&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k10x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kIndexNone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kContinue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kVerifyNothing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-9-4&#34;&gt;&lt;a id=&#34;__codelineno-9-4&#34; name=&#34;__codelineno-9-4&#34; href=&#34;#__codelineno-9-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INSTRUCTION_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MOVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;move&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k12x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kIndexNone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kContinue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kVerifyRegA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kVerifyRegB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-9-5&#34;&gt;&lt;a id=&#34;__codelineno-9-5&#34; name=&#34;__codelineno-9-5&#34; href=&#34;#__codelineno-9-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-6&#34;&gt;&lt;a id=&#34;__codelineno-9-6&#34; name=&#34;__codelineno-9-6&#34; href=&#34;#__codelineno-9-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#undef INSTRUCTION_NAME&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-7&#34;&gt;&lt;a id=&#34;__codelineno-9-7&#34; name=&#34;__codelineno-9-7&#34; href=&#34;#__codelineno-9-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;继续展开，就得到了想要留下的内容：&lt;/p&gt;&lt;div class=&#34;language-c++ highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-10-1&#34;&gt;&lt;a id=&#34;__codelineno-10-1&#34; name=&#34;__codelineno-10-1&#34; href=&#34;#__codelineno-10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kInstructionNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-2&#34;&gt;&lt;a id=&#34;__codelineno-10-2&#34; name=&#34;__codelineno-10-2&#34; href=&#34;#__codelineno-10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nop&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-3&#34;&gt;&lt;a id=&#34;__codelineno-10-3&#34; name=&#34;__codelineno-10-3&#34; href=&#34;#__codelineno-10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;move&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-4&#34;&gt;&lt;a id=&#34;__codelineno-10-4&#34; name=&#34;__codelineno-10-4&#34; href=&#34;#__codelineno-10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-10-5&#34;&gt;&lt;a id=&#34;__codelineno-10-5&#34; name=&#34;__codelineno-10-5&#34; href=&#34;#__codelineno-10-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;回到 switch-case 的地方，可以预见到，预处理会生成的代码大概是：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-11-1&#34;&gt;&lt;a id=&#34;__codelineno-11-1&#34; name=&#34;__codelineno-11-1&#34; href=&#34;#__codelineno-11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Opcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-2&#34;&gt;&lt;a id=&#34;__codelineno-11-2&#34; name=&#34;__codelineno-11-2&#34; href=&#34;#__codelineno-11-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-3&#34;&gt;&lt;a id=&#34;__codelineno-11-3&#34; name=&#34;__codelineno-11-3&#34; href=&#34;#__codelineno-11-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RelativeAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SizeInCodeUnits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Instruction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k10x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-4&#34;&gt;&lt;a id=&#34;__codelineno-11-4&#34; name=&#34;__codelineno-11-4&#34; href=&#34;#__codelineno-11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OP_NOP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transaction_active&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-5&#34;&gt;&lt;a id=&#34;__codelineno-11-5&#34; name=&#34;__codelineno-11-5&#34; href=&#34;#__codelineno-11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instrumentation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shadow_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dex_pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-6&#34;&gt;&lt;a id=&#34;__codelineno-11-6&#34; name=&#34;__codelineno-11-6&#34; href=&#34;#__codelineno-11-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LIKELY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interpret_one_instruction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-7&#34;&gt;&lt;a id=&#34;__codelineno-11-7&#34; name=&#34;__codelineno-11-7&#34; href=&#34;#__codelineno-11-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-8&#34;&gt;&lt;a id=&#34;__codelineno-11-8&#34; name=&#34;__codelineno-11-8&#34; href=&#34;#__codelineno-11-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-9&#34;&gt;&lt;a id=&#34;__codelineno-11-9&#34; name=&#34;__codelineno-11-9&#34; href=&#34;#__codelineno-11-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;\&lt;/span&gt;&lt;span id=&#34;__span-11-10&#34;&gt;&lt;a id=&#34;__codelineno-11-10&#34; name=&#34;__codelineno-11-10&#34; href=&#34;#__codelineno-11-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-11&#34;&gt;&lt;a id=&#34;__codelineno-11-11&#34; name=&#34;__codelineno-11-11&#34; href=&#34;#__codelineno-11-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// omitted&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-11-12&#34;&gt;&lt;a id=&#34;__codelineno-11-12&#34; name=&#34;__codelineno-11-12&#34; href=&#34;#__codelineno-11-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;next = inst-&amp;gt;RelativeAt(Instruction::SizeInCodeUnits(Instruction::k10x));&lt;/code&gt; 语句根据当前 Op 类型计算出它会占用多少个字节，从而得到下一个 Op 的地址。之后就是调用 &lt;code&gt;OP_NOP&lt;/code&gt; 函数来进行实际的操作了。当然了，这个实际的操作，还是需要开发者去手动实现（&lt;code&gt;OP_NOP&lt;/code&gt; 函数会调用下面的 &lt;code&gt;NOP&lt;/code&gt; 函数）：&lt;/p&gt;&lt;div class=&#34;language-c++ highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-12-1&#34;&gt;&lt;a id=&#34;__codelineno-12-1&#34; name=&#34;__codelineno-12-1&#34; href=&#34;#__codelineno-12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;HANDLER_ATTRIBUTES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-2&#34;&gt;&lt;a id=&#34;__codelineno-12-2&#34; name=&#34;__codelineno-12-2&#34; href=&#34;#__codelineno-12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-3&#34;&gt;&lt;a id=&#34;__codelineno-12-3&#34; name=&#34;__codelineno-12-3&#34; href=&#34;#__codelineno-12-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-4&#34;&gt;&lt;a id=&#34;__codelineno-12-4&#34; name=&#34;__codelineno-12-4&#34; href=&#34;#__codelineno-12-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-5&#34;&gt;&lt;a id=&#34;__codelineno-12-5&#34; name=&#34;__codelineno-12-5&#34; href=&#34;#__codelineno-12-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;HANDLER_ATTRIBUTES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MOVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-6&#34;&gt;&lt;a id=&#34;__codelineno-12-6&#34; name=&#34;__codelineno-12-6&#34; href=&#34;#__codelineno-12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetVReg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVReg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-7&#34;&gt;&lt;a id=&#34;__codelineno-12-7&#34; name=&#34;__codelineno-12-7&#34; href=&#34;#__codelineno-12-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-8&#34;&gt;&lt;a id=&#34;__codelineno-12-8&#34; name=&#34;__codelineno-12-8&#34; href=&#34;#__codelineno-12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-9&#34;&gt;&lt;a id=&#34;__codelineno-12-9&#34; name=&#34;__codelineno-12-9&#34; href=&#34;#__codelineno-12-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-10&#34;&gt;&lt;a id=&#34;__codelineno-12-10&#34; name=&#34;__codelineno-12-10&#34; href=&#34;#__codelineno-12-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;HANDLER_ATTRIBUTES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ADD_INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-11&#34;&gt;&lt;a id=&#34;__codelineno-12-11&#34; name=&#34;__codelineno-12-11&#34; href=&#34;#__codelineno-12-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetVReg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SafeAdd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVReg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVReg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-12&#34;&gt;&lt;a id=&#34;__codelineno-12-12&#34; name=&#34;__codelineno-12-12&#34; href=&#34;#__codelineno-12-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-12-13&#34;&gt;&lt;a id=&#34;__codelineno-12-13&#34; name=&#34;__codelineno-12-13&#34; href=&#34;#__codelineno-12-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基于-token-threading-的解释器-mterp-nterp&#34;&gt;基于 token threading 的解释器 mterp (nterp)&lt;a class=&#34;headerlink&#34; href=&#34;#基于-token-threading-的解释器-mterp-nterp&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;第二个解释器则是基于 token threading 的解释器，它的源码在 &lt;code&gt;runtime/interpreter/mterp&lt;/code&gt; 目录下。由于这些代码是用汇编写的，直接写会有很多重复的部分。为了避免重复的代码，目前的解释器 mterp (现在叫 nterp) 用 Python 脚本来生成最终的汇编代码。要生成它，也很简单：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-13-1&#34;&gt;&lt;a id=&#34;__codelineno-13-1&#34; name=&#34;__codelineno-13-1&#34; href=&#34;#__codelineno-13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;runtime/interpreter/mterp&lt;/span&gt;&lt;span id=&#34;__span-13-2&#34;&gt;&lt;a id=&#34;__codelineno-13-2&#34; name=&#34;__codelineno-13-2&#34; href=&#34;#__codelineno-13-2&#34;&gt;&lt;/a&gt;./gen_mterp.py&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mterp_arm64ng.S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;arm64ng/*.S&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个脚本是平台无关的，例如如果要生成 amd64 平台的汇编，只需要：&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-14-1&#34;&gt;&lt;a id=&#34;__codelineno-14-1&#34; name=&#34;__codelineno-14-1&#34; href=&#34;#__codelineno-14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;runtime/interpreter/mterp&lt;/span&gt;&lt;span id=&#34;__span-14-2&#34;&gt;&lt;a id=&#34;__codelineno-14-2&#34; name=&#34;__codelineno-14-2&#34; href=&#34;#__codelineno-14-2&#34;&gt;&lt;/a&gt;./gen_mterp.py&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mterp_x86_64ng.S&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;x86_64ng/*.S&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就可以看到完整的汇编代码了，后续的分析都会基于这份汇编代码。如果读者对 amd64 汇编比较熟悉，也可以在本地生成一份 amd64 的汇编再结合本文进行理解。&lt;/p&gt;&lt;p&gt;上面提到过 &lt;code&gt;add-int/2addr vA, vB&lt;/code&gt; 这个做整数加法的 Op，直接在生成的汇编中，找到它对应的代码：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-15-1&#34;&gt;&lt;a id=&#34;__codelineno-15-1&#34; name=&#34;__codelineno-15-1&#34; href=&#34;#__codelineno-15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.balign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NTERP_HANDLER_SIZE&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-2&#34;&gt;&lt;a id=&#34;__codelineno-15-2&#34; name=&#34;__codelineno-15-2&#34; href=&#34;#__codelineno-15-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;.L_op_add_int_2addr:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* 0xb0 */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-3&#34;&gt;&lt;a id=&#34;__codelineno-15-3&#34; name=&#34;__codelineno-15-3&#34; href=&#34;#__codelineno-15-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-4&#34;&gt;&lt;a id=&#34;__codelineno-15-4&#34; name=&#34;__codelineno-15-4&#34; href=&#34;#__codelineno-15-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* binop/2addr vA, vB */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-5&#34;&gt;&lt;a id=&#34;__codelineno-15-5&#34; name=&#34;__codelineno-15-5&#34; href=&#34;#__codelineno-15-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;lsr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;wINST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#12&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// w3&amp;lt;- B&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-6&#34;&gt;&lt;a id=&#34;__codelineno-15-6&#34; name=&#34;__codelineno-15-6&#34; href=&#34;#__codelineno-15-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ubfx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;wINST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// w9&amp;lt;- A&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-7&#34;&gt;&lt;a id=&#34;__codelineno-15-7&#34; name=&#34;__codelineno-15-7&#34; href=&#34;#__codelineno-15-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GET_VREG&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// w1&amp;lt;- vB&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-8&#34;&gt;&lt;a id=&#34;__codelineno-15-8&#34; name=&#34;__codelineno-15-8&#34; href=&#34;#__codelineno-15-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GET_VREG&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// w0&amp;lt;- vA&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-9&#34;&gt;&lt;a id=&#34;__codelineno-15-9&#34; name=&#34;__codelineno-15-9&#34; href=&#34;#__codelineno-15-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FETCH_ADVANCE_INST&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// advance rPC, load rINST&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-10&#34;&gt;&lt;a id=&#34;__codelineno-15-10&#34; name=&#34;__codelineno-15-10&#34; href=&#34;#__codelineno-15-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// w0&amp;lt;- op, w0-w3 changed&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-11&#34;&gt;&lt;a id=&#34;__codelineno-15-11&#34; name=&#34;__codelineno-15-11&#34; href=&#34;#__codelineno-15-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GET_INST_OPCODE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// extract opcode from rINST&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-12&#34;&gt;&lt;a id=&#34;__codelineno-15-12&#34; name=&#34;__codelineno-15-12&#34; href=&#34;#__codelineno-15-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SET_VREG&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// vAA&amp;lt;- w0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-13&#34;&gt;&lt;a id=&#34;__codelineno-15-13&#34; name=&#34;__codelineno-15-13&#34; href=&#34;#__codelineno-15-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GOTO_OPCODE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// jump to next instruction&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-15-14&#34;&gt;&lt;a id=&#34;__codelineno-15-14&#34; name=&#34;__codelineno-15-14&#34; href=&#34;#__codelineno-15-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;wINST&lt;/code&gt; 表示当前 Op 的前两个字节的内容，前面提到，&lt;code&gt;add-int/2addr vA, vB&lt;/code&gt; 编码为两个字节，第一个字节是固定的 &lt;code&gt;0xb0&lt;/code&gt;，第二个字节共 8 位，低 4 位编码了 &lt;code&gt;vA&lt;/code&gt; 的寄存器编号 &lt;code&gt;A&lt;/code&gt;，高 4 位编码了 &lt;code&gt;vB&lt;/code&gt; 的寄存器编号 &lt;code&gt;B&lt;/code&gt;。由于这是小端序的处理器，那么解释为 16 位整数，从高位到低位依次是：4 位的 &lt;code&gt;B&lt;/code&gt;，4 位的 &lt;code&gt;A&lt;/code&gt; 和 8 位的 &lt;code&gt;0xb0&lt;/code&gt;。知道这个背景以后，再来分析每条指令做的事情，就很清晰：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;lsr w3, wINST, #12&lt;/code&gt;：求 &lt;code&gt;wINST&lt;/code&gt; 右移动 12 位，得到了 &lt;code&gt;B&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ubfx w9, wINST, #8, #4&lt;/code&gt;: &lt;code&gt;ubfx&lt;/code&gt; 是 Bit Extract 指令，这里的意思是从 &lt;code&gt;wINST&lt;/code&gt; 第 8 位开始取 4 位数据出来，也就是 &lt;code&gt;A&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;GET_VREG w1, w3&lt;/code&gt;: 读取寄存器编号为 &lt;code&gt;w3&lt;/code&gt; 的值，写到 &lt;code&gt;w1&lt;/code&gt; 当中，结合第一条指令，可知此时 &lt;code&gt;w1&lt;/code&gt; 等于 &lt;code&gt;B&lt;/code&gt; 寄存器的值&lt;/li&gt;&lt;li&gt;&lt;code&gt;GET_VREG w0, w9&lt;/code&gt;: 读取寄存器编号为 &lt;code&gt;w9&lt;/code&gt; 的值，写到 &lt;code&gt;w0&lt;/code&gt; 当中，结合第二条指令，可知此时 &lt;code&gt;w0&lt;/code&gt; 等于 &lt;code&gt;A&lt;/code&gt; 寄存器的值&lt;/li&gt;&lt;li&gt;&lt;code&gt;FETCH_ADVANCE_INST 1&lt;/code&gt;: 把 &#34;PC&#34; 往前移动 1 个单位的距离，也就是两个字节，并读取下一个 Op 到 &lt;code&gt;rINST&lt;/code&gt; 当中&lt;/li&gt;&lt;li&gt;&lt;code&gt;add w0, w0, w1&lt;/code&gt;: 进行实际的整数加法运算，结果保存在 &lt;code&gt;w0&lt;/code&gt; 当中&lt;/li&gt;&lt;li&gt;&lt;code&gt;GET_INST_OPCODE ip&lt;/code&gt;: 根据第五条指令读取的下一个 Op 的值 &lt;code&gt;rINST&lt;/code&gt;，解析出它的 Opcode&lt;/li&gt;&lt;li&gt;&lt;code&gt;SET_VREG w0, w9&lt;/code&gt;: 把整数加法的结果写回到寄存器编号为 &lt;code&gt;w9&lt;/code&gt; 的寄存器当中，结合第二条指令，可知写入的是 &lt;code&gt;A&lt;/code&gt; 寄存器&lt;/li&gt;&lt;li&gt;&lt;code&gt;GOTO_OPCODE ip&lt;/code&gt;: 跳转到下一个 Op 对应的 handler&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;整体代码还是比较清晰的，只是说把计算 &lt;code&gt;A + B&lt;/code&gt; 写入 &lt;code&gt;A&lt;/code&gt; 的过程和读取下一个 Op 并跳转的逻辑穿插了起来，手动做了一次寄存器调度。那么这些 &lt;code&gt;GET_REG&lt;/code&gt; 和 &lt;code&gt;FETCH_ADVANCE_INST&lt;/code&gt; 等等具体又是怎么实现的呢？下面把宏展开后的代码贴出来：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-16-1&#34;&gt;&lt;a id=&#34;__codelineno-16-1&#34; name=&#34;__codelineno-16-1&#34; href=&#34;#__codelineno-16-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.balign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NTERP_HANDLER_SIZE&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-2&#34;&gt;&lt;a id=&#34;__codelineno-16-2&#34; name=&#34;__codelineno-16-2&#34; href=&#34;#__codelineno-16-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;.L_op_add_int_2addr:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* 0xb0 */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-3&#34;&gt;&lt;a id=&#34;__codelineno-16-3&#34; name=&#34;__codelineno-16-3&#34; href=&#34;#__codelineno-16-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-4&#34;&gt;&lt;a id=&#34;__codelineno-16-4&#34; name=&#34;__codelineno-16-4&#34; href=&#34;#__codelineno-16-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* binop/2addr vA, vB */&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-5&#34;&gt;&lt;a id=&#34;__codelineno-16-5&#34; name=&#34;__codelineno-16-5&#34; href=&#34;#__codelineno-16-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-6&#34;&gt;&lt;a id=&#34;__codelineno-16-6&#34; name=&#34;__codelineno-16-6&#34; href=&#34;#__codelineno-16-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// wINST is w23, the first 16-bit code unit of current instruction&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-7&#34;&gt;&lt;a id=&#34;__codelineno-16-7&#34; name=&#34;__codelineno-16-7&#34; href=&#34;#__codelineno-16-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// lsr w3, wINST, #12 // w3&amp;lt;- B&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-8&#34;&gt;&lt;a id=&#34;__codelineno-16-8&#34; name=&#34;__codelineno-16-8&#34; href=&#34;#__codelineno-16-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;lsr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#12&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-9&#34;&gt;&lt;a id=&#34;__codelineno-16-9&#34; name=&#34;__codelineno-16-9&#34; href=&#34;#__codelineno-16-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ubfx w9, wINST, #8, #4 // w9&amp;lt;- A&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-10&#34;&gt;&lt;a id=&#34;__codelineno-16-10&#34; name=&#34;__codelineno-16-10&#34; href=&#34;#__codelineno-16-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ubfx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-11&#34;&gt;&lt;a id=&#34;__codelineno-16-11&#34; name=&#34;__codelineno-16-11&#34; href=&#34;#__codelineno-16-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-12&#34;&gt;&lt;a id=&#34;__codelineno-16-12&#34; name=&#34;__codelineno-16-12&#34; href=&#34;#__codelineno-16-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// virtual registers are stored relative to xFP(x29), the interpreted frame pointer, used for accessing locals and args&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-13&#34;&gt;&lt;a id=&#34;__codelineno-16-13&#34; name=&#34;__codelineno-16-13&#34; href=&#34;#__codelineno-16-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// GET_VREG w1, w3 // w1&amp;lt;- vB&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-14&#34;&gt;&lt;a id=&#34;__codelineno-16-14&#34; name=&#34;__codelineno-16-14&#34; href=&#34;#__codelineno-16-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ldr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;uxtw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-15&#34;&gt;&lt;a id=&#34;__codelineno-16-15&#34; name=&#34;__codelineno-16-15&#34; href=&#34;#__codelineno-16-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// GET_VREG w0, w9 // w0&amp;lt;- vA&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-16&#34;&gt;&lt;a id=&#34;__codelineno-16-16&#34; name=&#34;__codelineno-16-16&#34; href=&#34;#__codelineno-16-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ldr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;uxtw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-17&#34;&gt;&lt;a id=&#34;__codelineno-16-17&#34; name=&#34;__codelineno-16-17&#34; href=&#34;#__codelineno-16-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-18&#34;&gt;&lt;a id=&#34;__codelineno-16-18&#34; name=&#34;__codelineno-16-18&#34; href=&#34;#__codelineno-16-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// xPC(x22) is the interpreted program counter, used for fetching instructions&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-19&#34;&gt;&lt;a id=&#34;__codelineno-16-19&#34; name=&#34;__codelineno-16-19&#34; href=&#34;#__codelineno-16-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// FETCH_ADVANCE_INST 1 // advance rPC, load rINST&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-20&#34;&gt;&lt;a id=&#34;__codelineno-16-20&#34; name=&#34;__codelineno-16-20&#34; href=&#34;#__codelineno-16-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// a pre-index load instruction that both reads wINST from memory and increments xPC(x22) by 2&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-21&#34;&gt;&lt;a id=&#34;__codelineno-16-21&#34; name=&#34;__codelineno-16-21&#34; href=&#34;#__codelineno-16-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ldrh&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]!&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-22&#34;&gt;&lt;a id=&#34;__codelineno-16-22&#34; name=&#34;__codelineno-16-22&#34; href=&#34;#__codelineno-16-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-23&#34;&gt;&lt;a id=&#34;__codelineno-16-23&#34; name=&#34;__codelineno-16-23&#34; href=&#34;#__codelineno-16-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// add w0, w0, w1 // w0&amp;lt;- op, w0-w3 changed&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-24&#34;&gt;&lt;a id=&#34;__codelineno-16-24&#34; name=&#34;__codelineno-16-24&#34; href=&#34;#__codelineno-16-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-25&#34;&gt;&lt;a id=&#34;__codelineno-16-25&#34; name=&#34;__codelineno-16-25&#34; href=&#34;#__codelineno-16-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-26&#34;&gt;&lt;a id=&#34;__codelineno-16-26&#34; name=&#34;__codelineno-16-26&#34; href=&#34;#__codelineno-16-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ip(x16) is a scratch register, used to store the first byte (opcode) of wINST&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-27&#34;&gt;&lt;a id=&#34;__codelineno-16-27&#34; name=&#34;__codelineno-16-27&#34; href=&#34;#__codelineno-16-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// GET_INST_OPCODE ip // extract opcode from rINST&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-28&#34;&gt;&lt;a id=&#34;__codelineno-16-28&#34; name=&#34;__codelineno-16-28&#34; href=&#34;#__codelineno-16-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0xff&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-29&#34;&gt;&lt;a id=&#34;__codelineno-16-29&#34; name=&#34;__codelineno-16-29&#34; href=&#34;#__codelineno-16-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-30&#34;&gt;&lt;a id=&#34;__codelineno-16-30&#34; name=&#34;__codelineno-16-30&#34; href=&#34;#__codelineno-16-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// save addition result to virtual register, which is relative to xFP(x29)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-31&#34;&gt;&lt;a id=&#34;__codelineno-16-31&#34; name=&#34;__codelineno-16-31&#34; href=&#34;#__codelineno-16-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// also set its object references to zero, which is relative to xREFS(x25)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-32&#34;&gt;&lt;a id=&#34;__codelineno-16-32&#34; name=&#34;__codelineno-16-32&#34; href=&#34;#__codelineno-16-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// SET_VREG w0, w9 // vAA&amp;lt;- w0&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-33&#34;&gt;&lt;a id=&#34;__codelineno-16-33&#34; name=&#34;__codelineno-16-33&#34; href=&#34;#__codelineno-16-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;uxtw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-34&#34;&gt;&lt;a id=&#34;__codelineno-16-34&#34; name=&#34;__codelineno-16-34&#34; href=&#34;#__codelineno-16-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;wzr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;w9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;uxtw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-35&#34;&gt;&lt;a id=&#34;__codelineno-16-35&#34; name=&#34;__codelineno-16-35&#34; href=&#34;#__codelineno-16-35&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-36&#34;&gt;&lt;a id=&#34;__codelineno-16-36&#34; name=&#34;__codelineno-16-36&#34; href=&#34;#__codelineno-16-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// now x16 saves the opcode, and xIBASE(x24) interpreted instruction base pointer, used for computed goto&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-37&#34;&gt;&lt;a id=&#34;__codelineno-16-37&#34; name=&#34;__codelineno-16-37&#34; href=&#34;#__codelineno-16-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// for opcode #k, the handler address of it would be `xIBASE + k * 128`&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-38&#34;&gt;&lt;a id=&#34;__codelineno-16-38&#34; name=&#34;__codelineno-16-38&#34; href=&#34;#__codelineno-16-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// GOTO_OPCODE ip // jump to next instruction&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-39&#34;&gt;&lt;a id=&#34;__codelineno-16-39&#34; name=&#34;__codelineno-16-39&#34; href=&#34;#__codelineno-16-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;lsl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;#7&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-40&#34;&gt;&lt;a id=&#34;__codelineno-16-40&#34; name=&#34;__codelineno-16-40&#34; href=&#34;#__codelineno-16-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;x16&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-16-41&#34;&gt;&lt;a id=&#34;__codelineno-16-41&#34; name=&#34;__codelineno-16-41&#34; href=&#34;#__codelineno-16-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* omitted */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;各个寄存器的含义已经在上面的注释中写出，比如 &lt;code&gt;w23&lt;/code&gt; 记录了当前 Op 的前 16 位的内容，&lt;code&gt;x29&lt;/code&gt; 记录了当前的 frame pointer，通过它可以访问各个 virtual register；&lt;code&gt;x11&lt;/code&gt; 是 PC，记录了正在执行的 Op 的地址；&lt;code&gt;x24&lt;/code&gt; 记录了这些 op handler 的起始地址，由于每个 handler 都不超过 128 字节，且都对齐到 128 字节边界（&lt;code&gt;.balign NTERP_HANDLER_SIZE&lt;/code&gt;），所以只需要简单的运算 &lt;code&gt;xIBASE + opcode * 128&lt;/code&gt; 即可找到下一个 op 的 handler 地址，不需要再进行一次访存。&lt;/p&gt;&lt;p&gt;如果要比较一下 Android Runtime 的 mterp (nterp) 和 &lt;a href=&#34;../../01/v8-ignition-internals/&#34;&gt;V8 的 Ignition 解释器&lt;/a&gt;的实现，有如下几点相同与不同：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;两者都采用了 token threading 的方法，即在一个 Op 处理完成以后，计算出下一个 Op 的 handler 的地址，跳转过去&lt;/li&gt;&lt;li&gt;V8 的 op handler 是动态生成的（&lt;code&gt;mksnapshot&lt;/code&gt; 阶段），长度没有限制，允许生成比较复杂的汇编，但如果汇编比较短（比如 release 模式下），也可以节省一些内存；代价是需要一次额外的对 dispatch table 的访存，来找到 opcode 对应的 handler&lt;/li&gt;&lt;li&gt;mterp 的 op handler 对齐到 128B 边界，带来的好处是不需要访问 dispatch table，直接根据 opcode 计算地址即可，不过由于很多 handler 很短，可能只有十条指令左右，就会浪费了一些内存&lt;/li&gt;&lt;li&gt;V8 没有 handler 长度的限制，所以针对一些常见的 Op 做了优化（Short Star），可以减少一些跳转的开销&lt;/li&gt;&lt;li&gt;V8 在区分 Smi(Small integer) 和对象的时候，做法是在 LSB 上打标记：0 表示 Smi，1 表示对象；mterp 则不同，它给每个虚拟寄存器维护了两个 32 位的值：一个保存在 xFP 指向的数组当中，记录的是它的实际的值，比如 int 的值，或者对象的引用；另一个保存在 xREFS 指向的数组当中，记录的是它引用的对象，如果不是对象，则记录的是 0&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;除了以上列举的不同的地方以外，其实整体来看是十分类似的，下面是二者实现把整数加载到寄存器（&lt;code&gt;const/4 vA, #+B&lt;/code&gt; 和 &lt;code&gt;LdaSmi&lt;/code&gt;）的汇编的对比：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Operation&lt;/th&gt;&lt;th&gt;mterp (nterp)&lt;/th&gt;&lt;th&gt;Ignition&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Extract Dest Register&lt;/td&gt;&lt;td&gt;&lt;code&gt;ubfx w0, w23, #8, #4&lt;/code&gt;&lt;/td&gt;&lt;td&gt;N/A (destination is always the accumulator)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Extract Const Integer&lt;/td&gt;&lt;td&gt;&lt;code&gt;sbfx w1, w23, #12, #4&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;add x1, x19, #1; ldrsb w1, [x20, x1]&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Read Next Op&lt;/td&gt;&lt;td&gt;&lt;code&gt;ldrh w23, [x22, #2]!&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;add x19, x19, #2; ldrb w3, [x20, x19]&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Save Result&lt;/td&gt;&lt;td&gt;&lt;code&gt;str w1, [x29, w0, uxtw #2]; str wzr, [x25, w0, uxtw #2]&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;add w0, w1, w1&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Computed Goto&lt;/td&gt;&lt;td&gt;&lt;code&gt;and x16, x23, 0xff; add x16, x24, x16, lsl #7; br x16&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;ldr x2, [x21, x3, lsl #3]; mov x17, x2; br x2&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;在寄存器的约定和使用上的区别：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Purpose&lt;/th&gt;&lt;th&gt;mterp (nterp)&lt;/th&gt;&lt;th&gt;Ignition&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Intepreter PC&lt;/td&gt;&lt;td&gt;base + offset in &lt;code&gt;x22&lt;/code&gt;&lt;/td&gt;&lt;td&gt;base in &lt;code&gt;x20&lt;/code&gt;, offset in &lt;code&gt;x19&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Virtual Register&lt;/td&gt;&lt;td&gt;relative to &lt;code&gt;x29&lt;/code&gt;&lt;/td&gt;&lt;td&gt;relative to &lt;code&gt;fp&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dispatch Table&lt;/td&gt;&lt;td&gt;computed from &lt;code&gt;x24&lt;/code&gt;&lt;/td&gt;&lt;td&gt;saved in &lt;code&gt;x21&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&#34;lua-解释器&#34;&gt;Lua 解释器&lt;a class=&#34;headerlink&#34; href=&#34;#lua-解释器&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;既然已经分析了 &lt;a href=&#34;../../01/v8-ignition-internals/&#34;&gt;V8&lt;/a&gt; 和 Android Runtime 的解释器，也来简单看一下 &lt;a href=&#34;https://www.lua.org/&#34;&gt;Lua&lt;/a&gt; 的解释器实现。它写的非常简单，核心代码就在 &lt;code&gt;lvm.c&lt;/code&gt; 当中：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-17-1&#34;&gt;&lt;a id=&#34;__codelineno-17-1&#34; name=&#34;__codelineno-17-1&#34; href=&#34;#__codelineno-17-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;vmdispatch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GET_OPCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-2&#34;&gt;&lt;a id=&#34;__codelineno-17-2&#34; name=&#34;__codelineno-17-2&#34; href=&#34;#__codelineno-17-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vmcase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OP_MOVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-3&#34;&gt;&lt;a id=&#34;__codelineno-17-3&#34; name=&#34;__codelineno-17-3&#34; href=&#34;#__codelineno-17-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StkId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-4&#34;&gt;&lt;a id=&#34;__codelineno-17-4&#34; name=&#34;__codelineno-17-4&#34; href=&#34;#__codelineno-17-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setobjs2s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-5&#34;&gt;&lt;a id=&#34;__codelineno-17-5&#34; name=&#34;__codelineno-17-5&#34; href=&#34;#__codelineno-17-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vmbreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-6&#34;&gt;&lt;a id=&#34;__codelineno-17-6&#34; name=&#34;__codelineno-17-6&#34; href=&#34;#__codelineno-17-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-7&#34;&gt;&lt;a id=&#34;__codelineno-17-7&#34; name=&#34;__codelineno-17-7&#34; href=&#34;#__codelineno-17-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vmcase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OP_LOADI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-8&#34;&gt;&lt;a id=&#34;__codelineno-17-8&#34; name=&#34;__codelineno-17-8&#34; href=&#34;#__codelineno-17-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StkId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-9&#34;&gt;&lt;a id=&#34;__codelineno-17-9&#34; name=&#34;__codelineno-17-9&#34; href=&#34;#__codelineno-17-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lua_Integer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GETARG_sBx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-10&#34;&gt;&lt;a id=&#34;__codelineno-17-10&#34; name=&#34;__codelineno-17-10&#34; href=&#34;#__codelineno-17-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setivalue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-11&#34;&gt;&lt;a id=&#34;__codelineno-17-11&#34; name=&#34;__codelineno-17-11&#34; href=&#34;#__codelineno-17-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vmbreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-12&#34;&gt;&lt;a id=&#34;__codelineno-17-12&#34; name=&#34;__codelineno-17-12&#34; href=&#34;#__codelineno-17-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-13&#34;&gt;&lt;a id=&#34;__codelineno-17-13&#34; name=&#34;__codelineno-17-13&#34; href=&#34;#__codelineno-17-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-17-14&#34;&gt;&lt;a id=&#34;__codelineno-17-14&#34; name=&#34;__codelineno-17-14&#34; href=&#34;#__codelineno-17-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，它把 &lt;code&gt;switch&lt;/code&gt;、&lt;code&gt;case&lt;/code&gt; 和 &lt;code&gt;break&lt;/code&gt; 替换成了三个宏 &lt;code&gt;vmdispatch&lt;/code&gt;、&lt;code&gt;vmcase&lt;/code&gt; 和 &lt;code&gt;vmbreak&lt;/code&gt;。接下来看它可能的定义，第一种情况是编译器不支持 &lt;code&gt;goto *&lt;/code&gt; 语法，此时就直接展开：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-18-1&#34;&gt;&lt;a id=&#34;__codelineno-18-1&#34; name=&#34;__codelineno-18-1&#34; href=&#34;#__codelineno-18-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define vmdispatch(o) switch(o)&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-2&#34;&gt;&lt;a id=&#34;__codelineno-18-2&#34; name=&#34;__codelineno-18-2&#34; href=&#34;#__codelineno-18-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define vmcase(l) case l:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-18-3&#34;&gt;&lt;a id=&#34;__codelineno-18-3&#34; name=&#34;__codelineno-18-3&#34; href=&#34;#__codelineno-18-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define vmbreak break&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果编译器支持 &lt;code&gt;goto *&lt;/code&gt; 语法，则展开成对应的 &lt;code&gt;computed goto&lt;/code&gt; 形式：&lt;/p&gt;&lt;div class=&#34;language-c highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-19-1&#34;&gt;&lt;a id=&#34;__codelineno-19-1&#34; name=&#34;__codelineno-19-1&#34; href=&#34;#__codelineno-19-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define vmdispatch(x) goto *disptab[x];&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-2&#34;&gt;&lt;a id=&#34;__codelineno-19-2&#34; name=&#34;__codelineno-19-2&#34; href=&#34;#__codelineno-19-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define vmcase(l) L_##l:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-3&#34;&gt;&lt;a id=&#34;__codelineno-19-3&#34; name=&#34;__codelineno-19-3&#34; href=&#34;#__codelineno-19-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define vmbreak mfetch(); vmdispatch(GET_OPCODE(i));&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-4&#34;&gt;&lt;a id=&#34;__codelineno-19-4&#34; name=&#34;__codelineno-19-4&#34; href=&#34;#__codelineno-19-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-5&#34;&gt;&lt;a id=&#34;__codelineno-19-5&#34; name=&#34;__codelineno-19-5&#34; href=&#34;#__codelineno-19-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;disptab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NUM_OPCODES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-6&#34;&gt;&lt;a id=&#34;__codelineno-19-6&#34; name=&#34;__codelineno-19-6&#34; href=&#34;#__codelineno-19-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L_OP_MOVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-7&#34;&gt;&lt;a id=&#34;__codelineno-19-7&#34; name=&#34;__codelineno-19-7&#34; href=&#34;#__codelineno-19-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L_OP_LOADI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-8&#34;&gt;&lt;a id=&#34;__codelineno-19-8&#34; name=&#34;__codelineno-19-8&#34; href=&#34;#__codelineno-19-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-19-9&#34;&gt;&lt;a id=&#34;__codelineno-19-9&#34; name=&#34;__codelineno-19-9&#34; href=&#34;#__codelineno-19-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;和之前写的解释器的不同实现方法对应，就不多阐述了。&lt;/p&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;a class=&#34;headerlink&#34; href=&#34;#参考&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/22187630/what-does-mterp-mean&#34;&gt;What does mterp mean?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/523692715&#34;&gt;Android 11 新引入的 Dalvik 字节码解释器 Nterp&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/software/2025/03/06/android-runtime-interpreter/</link> <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/software/2025/03/06/android-runtime-interpreter/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/android-runtime-interpreter.png" type="image/png" length="73084" /> </item> <item> <title>V8 Ignition 解释器的内部实现探究</title> <category>aot</category> <category>javascript</category> <category>jit</category> <category>js</category> <category>linux</category> <category>software</category> <category>v8</category> <description>&lt;h1 id=&#34;v8-ignition-解释器的内部实现探究&#34;&gt;V8 Ignition 解释器的内部实现探究&lt;a class=&#34;headerlink&#34; href=&#34;#v8-ignition-解释器的内部实现探究&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;V8 是一个很常见的 JavaScript 引擎，运行在很多的设备上，因此想探究一下它内部的部分实现。本博客在 ARM64 Ubuntu 24.04 平台上针对 &lt;a href=&#34;https://chromium.googlesource.com/v8/v8.git/+/6f774f929205be0a49cf861b8d73a92655e1dd36&#34;&gt;V8 12.8.374.31&lt;/a&gt; 版本进行分析。本博客主要分析了 V8 的 Ignition 解释器的解释执行部分。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;编译-v8&#34;&gt;编译 V8&lt;a class=&#34;headerlink&#34; href=&#34;#编译-v8&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先简单过一下 v8 的源码获取以及编译流程，主要参考了 &lt;a href=&#34;https://v8.dev/docs/source-code&#34;&gt;Checking out the V8 source code&lt;/a&gt; 和 &lt;a href=&#34;https://v8.dev/docs/compile-arm64&#34;&gt;Compiling on Arm64 Linux&lt;/a&gt;:&lt;/p&gt;&lt;div class=&#34;language-shell highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# setup depot_tools&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;~&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;clone&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;/depot_tools:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# clone v8 repos&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;~/v8&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;~/v8&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;fetch&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;v8&lt;/span&gt;&lt;span id=&#34;__span-0-10&#34;&gt;&lt;a id=&#34;__codelineno-0-10&#34; name=&#34;__codelineno-0-10&#34; href=&#34;#__codelineno-0-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;v8&lt;/span&gt;&lt;span id=&#34;__span-0-11&#34;&gt;&lt;a id=&#34;__codelineno-0-11&#34; name=&#34;__codelineno-0-11&#34; href=&#34;#__codelineno-0-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-12&#34;&gt;&lt;a id=&#34;__codelineno-0-12&#34; name=&#34;__codelineno-0-12&#34; href=&#34;#__codelineno-0-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# switch to specified tag&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-13&#34;&gt;&lt;a id=&#34;__codelineno-0-13&#34; name=&#34;__codelineno-0-13&#34; href=&#34;#__codelineno-0-13&#34;&gt;&lt;/a&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;checkout&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;.8.374.31&lt;/span&gt;&lt;span id=&#34;__span-0-14&#34;&gt;&lt;a id=&#34;__codelineno-0-14&#34; name=&#34;__codelineno-0-14&#34; href=&#34;#__codelineno-0-14&#34;&gt;&lt;/a&gt;gclient&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sync&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--verbose&lt;/span&gt;&lt;span id=&#34;__span-0-15&#34;&gt;&lt;a id=&#34;__codelineno-0-15&#34; name=&#34;__codelineno-0-15&#34; href=&#34;#__codelineno-0-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-16&#34;&gt;&lt;a id=&#34;__codelineno-0-16&#34; name=&#34;__codelineno-0-16&#34; href=&#34;#__codelineno-0-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# install dependencies&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-17&#34;&gt;&lt;a id=&#34;__codelineno-0-17&#34; name=&#34;__codelineno-0-17&#34; href=&#34;#__codelineno-0-17&#34;&gt;&lt;/a&gt;./build/install-build-deps.sh&lt;/span&gt;&lt;span id=&#34;__span-0-18&#34;&gt;&lt;a id=&#34;__codelineno-0-18&#34; name=&#34;__codelineno-0-18&#34; href=&#34;#__codelineno-0-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-19&#34;&gt;&lt;a id=&#34;__codelineno-0-19&#34; name=&#34;__codelineno-0-19&#34; href=&#34;#__codelineno-0-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# install llvm 19&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-20&#34;&gt;&lt;a id=&#34;__codelineno-0-20&#34; name=&#34;__codelineno-0-20&#34; href=&#34;#__codelineno-0-20&#34;&gt;&lt;/a&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://mirrors.tuna.tsinghua.edu.cn/llvm-apt/llvm.sh&lt;/span&gt;&lt;span id=&#34;__span-0-21&#34;&gt;&lt;a id=&#34;__codelineno-0-21&#34; name=&#34;__codelineno-0-21&#34; href=&#34;#__codelineno-0-21&#34;&gt;&lt;/a&gt;chmod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;+x&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;llvm.sh&lt;/span&gt;&lt;span id=&#34;__span-0-22&#34;&gt;&lt;a id=&#34;__codelineno-0-22&#34; name=&#34;__codelineno-0-22&#34; href=&#34;#__codelineno-0-22&#34;&gt;&lt;/a&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;./llvm.sh&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-m&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://mirrors.tuna.tsinghua.edu.cn/llvm-apt&lt;/span&gt;&lt;span id=&#34;__span-0-23&#34;&gt;&lt;a id=&#34;__codelineno-0-23&#34; name=&#34;__codelineno-0-23&#34; href=&#34;#__codelineno-0-23&#34;&gt;&lt;/a&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;llvm.sh&lt;/span&gt;&lt;span id=&#34;__span-0-24&#34;&gt;&lt;a id=&#34;__codelineno-0-24&#34; name=&#34;__codelineno-0-24&#34; href=&#34;#__codelineno-0-24&#34;&gt;&lt;/a&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-y&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lld&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;clang-19&lt;/span&gt;&lt;span id=&#34;__span-0-25&#34;&gt;&lt;a id=&#34;__codelineno-0-25&#34; name=&#34;__codelineno-0-25&#34; href=&#34;#__codelineno-0-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-26&#34;&gt;&lt;a id=&#34;__codelineno-0-26&#34; name=&#34;__codelineno-0-26&#34; href=&#34;#__codelineno-0-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# fix incompatibilities with system clang 19&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-27&#34;&gt;&lt;a id=&#34;__codelineno-0-27&#34; name=&#34;__codelineno-0-27&#34; href=&#34;#__codelineno-0-27&#34;&gt;&lt;/a&gt;sed&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;s/-Wno-missing-template-arg-list-after-template-kw//&amp;quot;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;build/config/compiler/BUILD.gn&lt;/span&gt;&lt;span id=&#34;__span-0-28&#34;&gt;&lt;a id=&#34;__codelineno-0-28&#34; name=&#34;__codelineno-0-28&#34; href=&#34;#__codelineno-0-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-29&#34;&gt;&lt;a id=&#34;__codelineno-0-29&#34; name=&#34;__codelineno-0-29&#34; href=&#34;#__codelineno-0-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# compile v8 using system clang 19&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-30&#34;&gt;&lt;a id=&#34;__codelineno-0-30&#34; name=&#34;__codelineno-0-30&#34; href=&#34;#__codelineno-0-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# for amd64: use x64.optdebug instead of arm64.optdebug&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-31&#34;&gt;&lt;a id=&#34;__codelineno-0-31&#34; name=&#34;__codelineno-0-31&#34; href=&#34;#__codelineno-0-31&#34;&gt;&lt;/a&gt;tools/dev/gm.py&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;arm64.optdebug&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--progress&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;verbose&lt;/span&gt;&lt;span id=&#34;__span-0-32&#34;&gt;&lt;a id=&#34;__codelineno-0-32&#34; name=&#34;__codelineno-0-32&#34; href=&#34;#__codelineno-0-32&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-33&#34;&gt;&lt;a id=&#34;__codelineno-0-33&#34; name=&#34;__codelineno-0-33&#34; href=&#34;#__codelineno-0-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# d8 is compiled successfully at&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-34&#34;&gt;&lt;a id=&#34;__codelineno-0-34&#34; name=&#34;__codelineno-0-34&#34; href=&#34;#__codelineno-0-34&#34;&gt;&lt;/a&gt;./out/arm64.optdebug/d8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不想编译 V8，也可以直接用 Node.JS 来代替 &lt;code&gt;d8&lt;/code&gt;。不过 Node.JS 会加载很多 JS 代码，使得输出更加复杂，此时就需要手动过滤一些输出，或者通过命令行设置一些打印日志的过滤器。另外，后面有一些深入的调试信息，需要手动编译 V8 才能打开，因此还是建议读者上手自己编译一个 V8。&lt;/p&gt;&lt;p&gt;在 AMD64 上，默认会使用 V8 自带的 LLVM 版本来编译，此时就不需要额外安装 LLVM 19，也不需要修改 &lt;code&gt;v8/build/config/compiler/BUILD.gn&lt;/code&gt;。&lt;/p&gt;&lt;h2 id=&#34;解释器和编译器&#34;&gt;解释器和编译器&lt;a class=&#34;headerlink&#34; href=&#34;#解释器和编译器&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;通过 V8 的文档可以看到，V8 一共有这些解释器或编译器，按照其优化等级从小到大的顺序：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/docs/ignition&#34;&gt;Ignition&lt;/a&gt;: 解释器&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/blog/sparkplug&#34;&gt;SparkPlug&lt;/a&gt;: 不优化的快速编译器，追求快的编译速度&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/blog/maglev&#34;&gt;Maglev&lt;/a&gt;：做优化的编译器，寻求编译速度和编译质量的平衡&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/docs/turbofan&#34;&gt;TurboFan&lt;/a&gt;：做优化的编译器，寻求更好的编译质量&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在 JS 的使用场景，不同代码被调用的次数以及对及时性的需求差别很大，为了适应不同的场景，V8 设计了这些解释器和编译器来提升整体的性能：执行次数少的代码，倾向于用更低优化等级的解释器或编译器，追求更低的优化开销；执行次数多的代码，当编译优化时间不再成为瓶颈，则倾向于用更高优化等级的编译器，追求更高的执行性能。&lt;/p&gt;&lt;h2 id=&#34;ignition-解释器&#34;&gt;Ignition 解释器&lt;a class=&#34;headerlink&#34; href=&#34;#ignition-解释器&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;分析样例-js-代码&#34;&gt;分析样例 JS 代码&lt;a class=&#34;headerlink&#34; href=&#34;#分析样例-js-代码&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先来观察一下 Ignition 解释器的工作流程。写一段简单的 JS 代码：&lt;/p&gt;&lt;div class=&#34;language-js highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存为 &lt;code&gt;test.js&lt;/code&gt;，运行 &lt;code&gt;./out/arm64.optdebug/d8 --print-ast --print-bytecode test.js&lt;/code&gt; 以打印它的 AST 以及 Bytecode:&lt;/p&gt;&lt;p&gt;首先开始的是 top level 的 AST 以及 Bytecode，它做的事情就是：声明一个函数 add，然后以参数 &lt;code&gt;(1, 2)&lt;/code&gt; 来调用它。&lt;/p&gt;&lt;p&gt;top level AST:&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;[generating bytecode for function: ]&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;--- AST ---&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;FUNC at 0&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;. KIND 0&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;. LITERAL ID 0&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;. SUSPEND COUNT 0&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;. NAME &amp;quot;&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;. INFERRED NAME &amp;quot;&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;. DECLS&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;. . FUNCTION &amp;quot;add&amp;quot; = function add&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;. EXPRESSION STATEMENT at 42&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt;. . kAssign at -1&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt;. . . VAR PROXY local[0] (0xc28698556308) (mode = TEMPORARY, assigned = true) &amp;quot;.result&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt;. . . CALL&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt;. . . . VAR PROXY unallocated (0xc28698556200) (mode = VAR, assigned = true) &amp;quot;add&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-2-16&#34;&gt;&lt;a id=&#34;__codelineno-2-16&#34; name=&#34;__codelineno-2-16&#34; href=&#34;#__codelineno-2-16&#34;&gt;&lt;/a&gt;. . . . LITERAL 1&lt;/span&gt;&lt;span id=&#34;__span-2-17&#34;&gt;&lt;a id=&#34;__codelineno-2-17&#34; name=&#34;__codelineno-2-17&#34; href=&#34;#__codelineno-2-17&#34;&gt;&lt;/a&gt;. . . . LITERAL 2&lt;/span&gt;&lt;span id=&#34;__span-2-18&#34;&gt;&lt;a id=&#34;__codelineno-2-18&#34; name=&#34;__codelineno-2-18&#34; href=&#34;#__codelineno-2-18&#34;&gt;&lt;/a&gt;. RETURN at -1&lt;/span&gt;&lt;span id=&#34;__span-2-19&#34;&gt;&lt;a id=&#34;__codelineno-2-19&#34; name=&#34;__codelineno-2-19&#34; href=&#34;#__codelineno-2-19&#34;&gt;&lt;/a&gt;. . VAR PROXY local[0] (0xc28698556308) (mode = TEMPORARY, assigned = true) &amp;quot;.result&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先声明了一个 &lt;code&gt;add&lt;/code&gt; 函数，然后以 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;2&lt;/code&gt; 两个参数调用 &lt;code&gt;add&lt;/code&gt; 函数，把结果绑定给局部变量 &lt;code&gt;.result&lt;/code&gt;，最后以 &lt;code&gt;.result&lt;/code&gt; 为结果返回。接下来看它会被翻译成什么字节码：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-3-1&#34;&gt;&lt;a id=&#34;__codelineno-3-1&#34; name=&#34;__codelineno-3-1&#34; href=&#34;#__codelineno-3-1&#34;&gt;&lt;/a&gt;[generated bytecode for function: (0x1f8e002988f5 &amp;lt;SharedFunctionInfo&amp;gt;)]&lt;/span&gt;&lt;span id=&#34;__span-3-2&#34;&gt;&lt;a id=&#34;__codelineno-3-2&#34; name=&#34;__codelineno-3-2&#34; href=&#34;#__codelineno-3-2&#34;&gt;&lt;/a&gt;Bytecode length: 28&lt;/span&gt;&lt;span id=&#34;__span-3-3&#34;&gt;&lt;a id=&#34;__codelineno-3-3&#34; name=&#34;__codelineno-3-3&#34; href=&#34;#__codelineno-3-3&#34;&gt;&lt;/a&gt;Parameter count 1&lt;/span&gt;&lt;span id=&#34;__span-3-4&#34;&gt;&lt;a id=&#34;__codelineno-3-4&#34; name=&#34;__codelineno-3-4&#34; href=&#34;#__codelineno-3-4&#34;&gt;&lt;/a&gt;Register count 4&lt;/span&gt;&lt;span id=&#34;__span-3-5&#34;&gt;&lt;a id=&#34;__codelineno-3-5&#34; name=&#34;__codelineno-3-5&#34; href=&#34;#__codelineno-3-5&#34;&gt;&lt;/a&gt;Frame size 32&lt;/span&gt;&lt;span id=&#34;__span-3-6&#34;&gt;&lt;a id=&#34;__codelineno-3-6&#34; name=&#34;__codelineno-3-6&#34; href=&#34;#__codelineno-3-6&#34;&gt;&lt;/a&gt; 0x304700040048 @ 0 : 13 00 LdaConstant [0]&lt;/span&gt;&lt;span id=&#34;__span-3-7&#34;&gt;&lt;a id=&#34;__codelineno-3-7&#34; name=&#34;__codelineno-3-7&#34; href=&#34;#__codelineno-3-7&#34;&gt;&lt;/a&gt; 0x30470004004a @ 2 : c9 Star1&lt;/span&gt;&lt;span id=&#34;__span-3-8&#34;&gt;&lt;a id=&#34;__codelineno-3-8&#34; name=&#34;__codelineno-3-8&#34; href=&#34;#__codelineno-3-8&#34;&gt;&lt;/a&gt; 0x30470004004b @ 3 : 19 fe f7 Mov &amp;lt;closure&amp;gt;, r2&lt;/span&gt;&lt;span id=&#34;__span-3-9&#34;&gt;&lt;a id=&#34;__codelineno-3-9&#34; name=&#34;__codelineno-3-9&#34; href=&#34;#__codelineno-3-9&#34;&gt;&lt;/a&gt; 0x30470004004e @ 6 : 68 63 01 f8 02 CallRuntime [DeclareGlobals], r1-r2&lt;/span&gt;&lt;span id=&#34;__span-3-10&#34;&gt;&lt;a id=&#34;__codelineno-3-10&#34; name=&#34;__codelineno-3-10&#34; href=&#34;#__codelineno-3-10&#34;&gt;&lt;/a&gt; 0x304700040053 @ 11 : 21 01 00 LdaGlobal [1], [0]&lt;/span&gt;&lt;span id=&#34;__span-3-11&#34;&gt;&lt;a id=&#34;__codelineno-3-11&#34; name=&#34;__codelineno-3-11&#34; href=&#34;#__codelineno-3-11&#34;&gt;&lt;/a&gt; 0x304700040056 @ 14 : c9 Star1&lt;/span&gt;&lt;span id=&#34;__span-3-12&#34;&gt;&lt;a id=&#34;__codelineno-3-12&#34; name=&#34;__codelineno-3-12&#34; href=&#34;#__codelineno-3-12&#34;&gt;&lt;/a&gt; 0x304700040057 @ 15 : 0d 01 LdaSmi [1]&lt;/span&gt;&lt;span id=&#34;__span-3-13&#34;&gt;&lt;a id=&#34;__codelineno-3-13&#34; name=&#34;__codelineno-3-13&#34; href=&#34;#__codelineno-3-13&#34;&gt;&lt;/a&gt; 0x304700040059 @ 17 : c8 Star2&lt;/span&gt;&lt;span id=&#34;__span-3-14&#34;&gt;&lt;a id=&#34;__codelineno-3-14&#34; name=&#34;__codelineno-3-14&#34; href=&#34;#__codelineno-3-14&#34;&gt;&lt;/a&gt; 0x30470004005a @ 18 : 0d 02 LdaSmi [2]&lt;/span&gt;&lt;span id=&#34;__span-3-15&#34;&gt;&lt;a id=&#34;__codelineno-3-15&#34; name=&#34;__codelineno-3-15&#34; href=&#34;#__codelineno-3-15&#34;&gt;&lt;/a&gt; 0x30470004005c @ 20 : c7 Star3&lt;/span&gt;&lt;span id=&#34;__span-3-16&#34;&gt;&lt;a id=&#34;__codelineno-3-16&#34; name=&#34;__codelineno-3-16&#34; href=&#34;#__codelineno-3-16&#34;&gt;&lt;/a&gt; 0x30470004005d @ 21 : 66 f8 f7 f6 02 CallUndefinedReceiver2 r1, r2, r3, [2]&lt;/span&gt;&lt;span id=&#34;__span-3-17&#34;&gt;&lt;a id=&#34;__codelineno-3-17&#34; name=&#34;__codelineno-3-17&#34; href=&#34;#__codelineno-3-17&#34;&gt;&lt;/a&gt; 0x304700040062 @ 26 : ca Star0&lt;/span&gt;&lt;span id=&#34;__span-3-18&#34;&gt;&lt;a id=&#34;__codelineno-3-18&#34; name=&#34;__codelineno-3-18&#34; href=&#34;#__codelineno-3-18&#34;&gt;&lt;/a&gt; 0x304700040063 @ 27 : af Return&lt;/span&gt;&lt;span id=&#34;__span-3-19&#34;&gt;&lt;a id=&#34;__codelineno-3-19&#34; name=&#34;__codelineno-3-19&#34; href=&#34;#__codelineno-3-19&#34;&gt;&lt;/a&gt;Constant pool (size = 2)&lt;/span&gt;&lt;span id=&#34;__span-3-20&#34;&gt;&lt;a id=&#34;__codelineno-3-20&#34; name=&#34;__codelineno-3-20&#34; href=&#34;#__codelineno-3-20&#34;&gt;&lt;/a&gt;0x304700040011: [TrustedFixedArray]&lt;/span&gt;&lt;span id=&#34;__span-3-21&#34;&gt;&lt;a id=&#34;__codelineno-3-21&#34; name=&#34;__codelineno-3-21&#34; href=&#34;#__codelineno-3-21&#34;&gt;&lt;/a&gt; - map: 0x1f8e00000595 &amp;lt;Map(TRUSTED_FIXED_ARRAY_TYPE)&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-3-22&#34;&gt;&lt;a id=&#34;__codelineno-3-22&#34; name=&#34;__codelineno-3-22&#34; href=&#34;#__codelineno-3-22&#34;&gt;&lt;/a&gt; - length: 2&lt;/span&gt;&lt;span id=&#34;__span-3-23&#34;&gt;&lt;a id=&#34;__codelineno-3-23&#34; name=&#34;__codelineno-3-23&#34; href=&#34;#__codelineno-3-23&#34;&gt;&lt;/a&gt; 0: 0x1f8e00298945 &amp;lt;FixedArray[2]&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-3-24&#34;&gt;&lt;a id=&#34;__codelineno-3-24&#34; name=&#34;__codelineno-3-24&#34; href=&#34;#__codelineno-3-24&#34;&gt;&lt;/a&gt; 1: 0x1f8e000041dd &amp;lt;String[3]: #add&amp;gt;&lt;/span&gt;&lt;span id=&#34;__span-3-25&#34;&gt;&lt;a id=&#34;__codelineno-3-25&#34; name=&#34;__codelineno-3-25&#34; href=&#34;#__codelineno-3-25&#34;&gt;&lt;/a&gt;Handler Table (size = 0)&lt;/span&gt;&lt;span id=&#34;__span-3-26&#34;&gt;&lt;a id=&#34;__codelineno-3-26&#34; name=&#34;__codelineno-3-26&#34; href=&#34;#__codelineno-3-26&#34;&gt;&lt;/a&gt;Source Position Table (size = 0)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;V8 的字节码采用的是基于寄存器的执行模型，而非其他很多字节码会采用的栈式。换句话说，每个函数有自己的若干个寄存器可供操作。每条字节码分为 Opcode（表示这条字节码要进行的操作）和操作数两部分。函数开头的 &lt;code&gt;Register count 4&lt;/code&gt; 表明该函数有四个寄存器：&lt;code&gt;r0-r3&lt;/code&gt;，此外还有一个特殊的 &lt;code&gt;accumulator&lt;/code&gt; 寄存器，它一般不会出现在操作数列表中，而是隐含在 Opcode 内（&lt;code&gt;Lda/Sta&lt;/code&gt;）。&lt;/p&gt;&lt;p&gt;完整的 Opcode 列表可以在 &lt;code&gt;v8/src/interpreter/bytecodes.h&lt;/code&gt; 中找到，对应的实现可以在 &lt;code&gt;v8/src/interpreter/interpreter-generator.cc&lt;/code&gt; 中找到。&lt;/p&gt;&lt;p&gt;上述字节码分为两部分，第一部分是声明 &lt;code&gt;add&lt;/code&gt; 函数：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;LdaConstant [0]&lt;/code&gt;: 把 Constant Pool 的第 0 项也就是 &lt;code&gt;FixedArray[2]&lt;/code&gt; 写入 &lt;code&gt;accumulator&lt;/code&gt; 寄存器当中&lt;/li&gt;&lt;li&gt;&lt;code&gt;Star1&lt;/code&gt;: 把 &lt;code&gt;accumulator&lt;/code&gt; 寄存器的值拷贝到 &lt;code&gt;r1&lt;/code&gt; 寄存器，结合上一条字节码，就是设置 &lt;code&gt;r1 = FixedArray[2]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Mov &amp;lt;closure&amp;gt;, r2&lt;/code&gt;: 把 &lt;code&gt;&amp;lt;closure&amp;gt;&lt;/code&gt; 拷贝到 &lt;code&gt;r2&lt;/code&gt; 寄存器，猜测这里的 &lt;code&gt;&amp;lt;closure&amp;gt;&lt;/code&gt; 对应的是 &lt;code&gt;add&lt;/code&gt; 函数&lt;/li&gt;&lt;li&gt;&lt;code&gt;CallRuntime [DeclareGlobals], r1-r2&lt;/code&gt;: 调用运行时的 &lt;code&gt;DeclareGlobals&lt;/code&gt; 函数，并传递两个参数，分别是 &lt;code&gt;r1&lt;/code&gt; 和 &lt;code&gt;r2&lt;/code&gt;；有意思的是，&lt;code&gt;CallRuntime&lt;/code&gt; 的参数必须保存在连续的寄存器当中，猜测是为了节省编码空间&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;至此，&lt;code&gt;add&lt;/code&gt; 函数就声明完成了。接下来，就要实现 &lt;code&gt;add(1, 2)&lt;/code&gt; 的调用：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;LdaGlobal [1], [0]&lt;/code&gt;: 把 Constant Pool 的第 1 项也就是 &lt;code&gt;&#34;add&#34;&lt;/code&gt; 这个字符串写入 &lt;code&gt;accumulator&lt;/code&gt;，最后的 &lt;code&gt;[0]&lt;/code&gt; 和 FeedBackVector 有关，目前先忽略&lt;/li&gt;&lt;li&gt;&lt;code&gt;Star1&lt;/code&gt;: 把 &lt;code&gt;accumulator&lt;/code&gt; 寄存器的值拷贝到 &lt;code&gt;r1&lt;/code&gt; 寄存器，结合上一条字节码，就是设置 &lt;code&gt;r1 = &#34;add&#34;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;LdaSmi [1]&lt;/code&gt;: 把小整数（Small integer, Smi）&lt;code&gt;1&lt;/code&gt; 写入 &lt;code&gt;accumulator&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Star2&lt;/code&gt;: 把 &lt;code&gt;accumulator&lt;/code&gt; 寄存器的值拷贝到 &lt;code&gt;r2&lt;/code&gt; 寄存器，结合上一条字节码，就是设置 &lt;code&gt;r2 = 1&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;LdaSmi [2]&lt;/code&gt;: 把小整数（Small integer, Smi）&lt;code&gt;2&lt;/code&gt; 写入 &lt;code&gt;accumulator&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Star3&lt;/code&gt;: 把 &lt;code&gt;accumulator&lt;/code&gt; 寄存器的值拷贝到 &lt;code&gt;r3&lt;/code&gt; 寄存器，结合上一条字节码，就是设置 &lt;code&gt;r3 = 2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;CallUndefinedReceiver2 r1, r2, r3, [2]&lt;/code&gt;: 根据 &lt;code&gt;r1&lt;/code&gt; 调用一个函数，并传递两个参数 &lt;code&gt;r2, r3&lt;/code&gt;（函数名称最后的 &lt;code&gt;2&lt;/code&gt; 表示有两个参数），最后的 &lt;code&gt;[2]&lt;/code&gt; 也和 FeedBackVector 有关&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这样就完成了函数调用。&lt;/p&gt;&lt;p&gt;接下来观察 &lt;code&gt;add&lt;/code&gt; 函数的 AST：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-4-1&#34;&gt;&lt;a id=&#34;__codelineno-4-1&#34; name=&#34;__codelineno-4-1&#34; href=&#34;#__codelineno-4-1&#34;&gt;&lt;/a&gt;[generating bytecode for function: add]&lt;/span&gt;&lt;span id=&#34;__span-4-2&#34;&gt;&lt;a id=&#34;__codelineno-4-2&#34; name=&#34;__codelineno-4-2&#34; href=&#34;#__codelineno-4-2&#34;&gt;&lt;/a&gt;--- AST ---&lt;/span&gt;&lt;span id=&#34;__span-4-3&#34;&gt;&lt;a id=&#34;__codelineno-4-3&#34; name=&#34;__codelineno-4-3&#34; href=&#34;#__codelineno-4-3&#34;&gt;&lt;/a&gt;FUNC at 12&lt;/span&gt;&lt;span id=&#34;__span-4-4&#34;&gt;&lt;a id=&#34;__codelineno-4-4&#34; name=&#34;__codelineno-4-4&#34; href=&#34;#__codelineno-4-4&#34;&gt;&lt;/a&gt;. KIND 0&lt;/span&gt;&lt;span id=&#34;__span-4-5&#34;&gt;&lt;a id=&#34;__codelineno-4-5&#34; name=&#34;__codelineno-4-5&#34; href=&#34;#__codelineno-4-5&#34;&gt;&lt;/a&gt;. LITERAL ID 1&lt;/span&gt;&lt;span id=&#34;__span-4-6&#34;&gt;&lt;a id=&#34;__codelineno-4-6&#34; name=&#34;__codelineno-4-6&#34; href=&#34;#__codelineno-4-6&#34;&gt;&lt;/a&gt;. SUSPEND COUNT 0&lt;/span&gt;&lt;span id=&#34;__span-4-7&#34;&gt;&lt;a id=&#34;__codelineno-4-7&#34; name=&#34;__codelineno-4-7&#34; href=&#34;#__codelineno-4-7&#34;&gt;&lt;/a&gt;. NAME &amp;quot;add&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-8&#34;&gt;&lt;a id=&#34;__codelineno-4-8&#34; name=&#34;__codelineno-4-8&#34; href=&#34;#__codelineno-4-8&#34;&gt;&lt;/a&gt;. INFERRED NAME &amp;quot;&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-9&#34;&gt;&lt;a id=&#34;__codelineno-4-9&#34; name=&#34;__codelineno-4-9&#34; href=&#34;#__codelineno-4-9&#34;&gt;&lt;/a&gt;. PARAMS&lt;/span&gt;&lt;span id=&#34;__span-4-10&#34;&gt;&lt;a id=&#34;__codelineno-4-10&#34; name=&#34;__codelineno-4-10&#34; href=&#34;#__codelineno-4-10&#34;&gt;&lt;/a&gt;. . VAR (0xc50512445280) (mode = VAR, assigned = false) &amp;quot;a&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-11&#34;&gt;&lt;a id=&#34;__codelineno-4-11&#34; name=&#34;__codelineno-4-11&#34; href=&#34;#__codelineno-4-11&#34;&gt;&lt;/a&gt;. . VAR (0xc50512445300) (mode = VAR, assigned = false) &amp;quot;b&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-12&#34;&gt;&lt;a id=&#34;__codelineno-4-12&#34; name=&#34;__codelineno-4-12&#34; href=&#34;#__codelineno-4-12&#34;&gt;&lt;/a&gt;. DECLS&lt;/span&gt;&lt;span id=&#34;__span-4-13&#34;&gt;&lt;a id=&#34;__codelineno-4-13&#34; name=&#34;__codelineno-4-13&#34; href=&#34;#__codelineno-4-13&#34;&gt;&lt;/a&gt;. . VARIABLE (0xc50512445280) (mode = VAR, assigned = false) &amp;quot;a&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-14&#34;&gt;&lt;a id=&#34;__codelineno-4-14&#34; name=&#34;__codelineno-4-14&#34; href=&#34;#__codelineno-4-14&#34;&gt;&lt;/a&gt;. . VARIABLE (0xc50512445300) (mode = VAR, assigned = false) &amp;quot;b&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-15&#34;&gt;&lt;a id=&#34;__codelineno-4-15&#34; name=&#34;__codelineno-4-15&#34; href=&#34;#__codelineno-4-15&#34;&gt;&lt;/a&gt;. RETURN at 25&lt;/span&gt;&lt;span id=&#34;__span-4-16&#34;&gt;&lt;a id=&#34;__codelineno-4-16&#34; name=&#34;__codelineno-4-16&#34; href=&#34;#__codelineno-4-16&#34;&gt;&lt;/a&gt;. . kAdd at 34&lt;/span&gt;&lt;span id=&#34;__span-4-17&#34;&gt;&lt;a id=&#34;__codelineno-4-17&#34; name=&#34;__codelineno-4-17&#34; href=&#34;#__codelineno-4-17&#34;&gt;&lt;/a&gt;. . . VAR PROXY parameter[0] (0xc50512445280) (mode = VAR, assigned = false) &amp;quot;a&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-4-18&#34;&gt;&lt;a id=&#34;__codelineno-4-18&#34; name=&#34;__codelineno-4-18&#34; href=&#34;#__codelineno-4-18&#34;&gt;&lt;/a&gt;. . . VAR PROXY parameter[1] (0xc50512445300) (mode = VAR, assigned = false) &amp;quot;b&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;add&lt;/code&gt; 函数的 AST 比较直接，&lt;code&gt;a + b&lt;/code&gt; 直接对应了 &lt;code&gt;kAdd&lt;/code&gt; 结点，直接作为返回值。&lt;/p&gt;&lt;p&gt;接下来观察 &lt;code&gt;add&lt;/code&gt; 的 Bytecode：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-5-1&#34;&gt;&lt;a id=&#34;__codelineno-5-1&#34; name=&#34;__codelineno-5-1&#34; href=&#34;#__codelineno-5-1&#34;&gt;&lt;/a&gt;[generated bytecode for function: add (0x10c700298955 &amp;lt;SharedFunctionInfo add&amp;gt;)]&lt;/span&gt;&lt;span id=&#34;__span-5-2&#34;&gt;&lt;a id=&#34;__codelineno-5-2&#34; name=&#34;__codelineno-5-2&#34; href=&#34;#__codelineno-5-2&#34;&gt;&lt;/a&gt;Bytecode length: 6&lt;/span&gt;&lt;span id=&#34;__span-5-3&#34;&gt;&lt;a id=&#34;__codelineno-5-3&#34; name=&#34;__codelineno-5-3&#34; href=&#34;#__codelineno-5-3&#34;&gt;&lt;/a&gt;Parameter count 3&lt;/span&gt;&lt;span id=&#34;__span-5-4&#34;&gt;&lt;a id=&#34;__codelineno-5-4&#34; name=&#34;__codelineno-5-4&#34; href=&#34;#__codelineno-5-4&#34;&gt;&lt;/a&gt;Register count 0&lt;/span&gt;&lt;span id=&#34;__span-5-5&#34;&gt;&lt;a id=&#34;__codelineno-5-5&#34; name=&#34;__codelineno-5-5&#34; href=&#34;#__codelineno-5-5&#34;&gt;&lt;/a&gt;Frame size 0&lt;/span&gt;&lt;span id=&#34;__span-5-6&#34;&gt;&lt;a id=&#34;__codelineno-5-6&#34; name=&#34;__codelineno-5-6&#34; href=&#34;#__codelineno-5-6&#34;&gt;&lt;/a&gt; 0x6ed0004008c @ 0 : 0b 04 Ldar a1&lt;/span&gt;&lt;span id=&#34;__span-5-7&#34;&gt;&lt;a id=&#34;__codelineno-5-7&#34; name=&#34;__codelineno-5-7&#34; href=&#34;#__codelineno-5-7&#34;&gt;&lt;/a&gt; 0x6ed0004008e @ 2 : 3b 03 00 Add a0, [0]&lt;/span&gt;&lt;span id=&#34;__span-5-8&#34;&gt;&lt;a id=&#34;__codelineno-5-8&#34; name=&#34;__codelineno-5-8&#34; href=&#34;#__codelineno-5-8&#34;&gt;&lt;/a&gt; 0x6ed00040091 @ 5 : af Return&lt;/span&gt;&lt;span id=&#34;__span-5-9&#34;&gt;&lt;a id=&#34;__codelineno-5-9&#34; name=&#34;__codelineno-5-9&#34; href=&#34;#__codelineno-5-9&#34;&gt;&lt;/a&gt;Constant pool (size = 0)&lt;/span&gt;&lt;span id=&#34;__span-5-10&#34;&gt;&lt;a id=&#34;__codelineno-5-10&#34; name=&#34;__codelineno-5-10&#34; href=&#34;#__codelineno-5-10&#34;&gt;&lt;/a&gt;Handler Table (size = 0)&lt;/span&gt;&lt;span id=&#34;__span-5-11&#34;&gt;&lt;a id=&#34;__codelineno-5-11&#34; name=&#34;__codelineno-5-11&#34; href=&#34;#__codelineno-5-11&#34;&gt;&lt;/a&gt;Source Position Table (size = 0)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;Ldar a1&lt;/code&gt;: 把第二个参数 &lt;code&gt;a1&lt;/code&gt; 也就是 &lt;code&gt;b&lt;/code&gt; 写入 &lt;code&gt;accumulator&lt;/code&gt; 寄存器&lt;/li&gt;&lt;li&gt;&lt;code&gt;Add a0, [0]&lt;/code&gt;: 求第一个参数 &lt;code&gt;a0&lt;/code&gt; 也就是 &lt;code&gt;a&lt;/code&gt; 与 &lt;code&gt;accumulator&lt;/code&gt; 寄存器的和，写入到 &lt;code&gt;accumulator&lt;/code&gt; 寄存器当中，结合上一条 Bytecode，就是 &lt;code&gt;accumulator = a0 + a1&lt;/code&gt;；&lt;code&gt;[0]&lt;/code&gt; 和 FeedBackVector 有关&lt;/li&gt;&lt;li&gt;&lt;code&gt;Return&lt;/code&gt;: 把 &lt;code&gt;accumulator&lt;/code&gt; 中的值作为返回值，结束函数调用&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;简单小结一下 V8 的字节码：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;有若干个局部的寄存器，在操作数中以 &lt;code&gt;rn&lt;/code&gt; 的形式出现，&lt;code&gt;n&lt;/code&gt; 是寄存器编号&lt;/li&gt;&lt;li&gt;有 &lt;code&gt;accumulator&lt;/code&gt; 局部寄存器，作为部分字节码的隐含输入或输出（&lt;code&gt;Add&lt;/code&gt;）&lt;/li&gt;&lt;li&gt;有若干个参数，在操作数中以 &lt;code&gt;an&lt;/code&gt; 的形式出现，&lt;code&gt;n&lt;/code&gt; 是参数编号&lt;/li&gt;&lt;li&gt;操作数还可以出现立即数参数 &lt;code&gt;[imm]&lt;/code&gt;，可能是整数字面量（&lt;code&gt;LdaSmi&lt;/code&gt;），可能是下标（&lt;code&gt;LdaConstant&lt;/code&gt;），也可能是 FeedBackVector 的 slot&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;有了字节码以后，接下来观察 Ignition 具体是怎么解释执行这些字节码的。&lt;/p&gt;&lt;h3 id=&#34;解释执行&#34;&gt;解释执行&lt;a class=&#34;headerlink&#34; href=&#34;#解释执行&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;为了实际执行这些字节码，Ignition 的做法是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;给每种可能的 Opcode 生成一段二进制代码，这段代码会实现这个 Opcode 的功能&lt;/li&gt;&lt;li&gt;在运行时维护一个 dispatch table，维护了 Opcode 到二进制代码地址的映射关系&lt;/li&gt;&lt;li&gt;在每段代码的结尾，找到下一个 Opcode 对应的代码的地址，然后跳转过去&lt;/li&gt;&lt;li&gt;调用函数时，先做一系列的准备，找到函数第一个字节码的 Opcode 对应的代码的地址，跳转过去&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由于 Opcode 的种类是固定的，所以实际运行 V8 的时候，这些代码已经编译好了，只需要在运行时初始化对应的数据结构即可。这个代码的生成和编译过程，也不是由 C++ 编译器做的，而是有一个 &lt;code&gt;mksnapshot&lt;/code&gt; 命令来完成初始化，你可以认为它把这些 Opcode 对应的汇编指令都预先生成好，运行时直接加载即可。&lt;/p&gt;&lt;p&gt;首先来看 Ignition 的怎么实现各种 Opcode 的，以 &lt;code&gt;LdaSmi&lt;/code&gt; 为例，它的作用是小的把立即数（Smi=Small integer）写入到 &lt;code&gt;accumulator&lt;/code&gt; 当中，这段在 &lt;code&gt;v8/src/interpreter/interpreter-generator.cc&lt;/code&gt; 的代码实现了这个逻辑：&lt;/p&gt;&lt;div class=&#34;language-cpp highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-6-1&#34;&gt;&lt;a id=&#34;__codelineno-6-1&#34; name=&#34;__codelineno-6-1&#34; href=&#34;#__codelineno-6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// LdaSmi &amp;lt;imm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-2&#34;&gt;&lt;a id=&#34;__codelineno-6-2&#34; name=&#34;__codelineno-6-2&#34; href=&#34;#__codelineno-6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-3&#34;&gt;&lt;a id=&#34;__codelineno-6-3&#34; name=&#34;__codelineno-6-3&#34; href=&#34;#__codelineno-6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// Load an integer literal into the accumulator as a Smi.&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-4&#34;&gt;&lt;a id=&#34;__codelineno-6-4&#34; name=&#34;__codelineno-6-4&#34; href=&#34;#__codelineno-6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;IGNITION_HANDLER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LdaSmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InterpreterAssembler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-5&#34;&gt;&lt;a id=&#34;__codelineno-6-5&#34; name=&#34;__codelineno-6-5&#34; href=&#34;#__codelineno-6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Smi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;smi_int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BytecodeOperandImmSmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-6&#34;&gt;&lt;a id=&#34;__codelineno-6-6&#34; name=&#34;__codelineno-6-6&#34; href=&#34;#__codelineno-6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetAccumulator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;smi_int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-7&#34;&gt;&lt;a id=&#34;__codelineno-6-7&#34; name=&#34;__codelineno-6-7&#34; href=&#34;#__codelineno-6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-6-8&#34;&gt;&lt;a id=&#34;__codelineno-6-8&#34; name=&#34;__codelineno-6-8&#34; href=&#34;#__codelineno-6-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，逻辑并不复杂，就是取了第一个立即数操作数，设置到了 &lt;code&gt;accumulator&lt;/code&gt;，最后调用 &lt;code&gt;Dispatch&lt;/code&gt;，也就是读取下一个 Opcode 对应的汇编指令然后跳转。接下来看这几个步骤在汇编上是怎么实现的。&lt;/p&gt;&lt;p&gt;为了查看 Ignition 对各种 Opcode 具体生成了什么样的汇编指令，可以用 &lt;code&gt;./out/arm64.optdebug/mksnapshot --trace-ignition-codegen --code-comments&lt;/code&gt; 命令查看，下面列出了 &lt;code&gt;LdaSmi&lt;/code&gt; 这个 Opcode 对应的汇编，由于这段汇编有点长，具体做的事情和对应的源码已经通过注释标注出来：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-7-1&#34;&gt;&lt;a id=&#34;__codelineno-7-1&#34; name=&#34;__codelineno-7-1&#34; href=&#34;#__codelineno-7-1&#34;&gt;&lt;/a&gt;kind = BYTECODE_HANDLER&lt;/span&gt;&lt;span id=&#34;__span-7-2&#34;&gt;&lt;a id=&#34;__codelineno-7-2&#34; name=&#34;__codelineno-7-2&#34; href=&#34;#__codelineno-7-2&#34;&gt;&lt;/a&gt;name = LdaSmi&lt;/span&gt;&lt;span id=&#34;__span-7-3&#34;&gt;&lt;a id=&#34;__codelineno-7-3&#34; name=&#34;__codelineno-7-3&#34; href=&#34;#__codelineno-7-3&#34;&gt;&lt;/a&gt;compiler = turbofan&lt;/span&gt;&lt;span id=&#34;__span-7-4&#34;&gt;&lt;a id=&#34;__codelineno-7-4&#34; name=&#34;__codelineno-7-4&#34; href=&#34;#__codelineno-7-4&#34;&gt;&lt;/a&gt;address = 0x31a000906fd&lt;/span&gt;&lt;span id=&#34;__span-7-5&#34;&gt;&lt;a id=&#34;__codelineno-7-5&#34; name=&#34;__codelineno-7-5&#34; href=&#34;#__codelineno-7-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-6&#34;&gt;&lt;a id=&#34;__codelineno-7-6&#34; name=&#34;__codelineno-7-6&#34; href=&#34;#__codelineno-7-6&#34;&gt;&lt;/a&gt;Instructions (size = 324)&lt;/span&gt;&lt;span id=&#34;__span-7-7&#34;&gt;&lt;a id=&#34;__codelineno-7-7&#34; name=&#34;__codelineno-7-7&#34; href=&#34;#__codelineno-7-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-8&#34;&gt;&lt;a id=&#34;__codelineno-7-8&#34; name=&#34;__codelineno-7-8&#34; href=&#34;#__codelineno-7-8&#34;&gt;&lt;/a&gt;# 在代码的开头，检查寄存器是否正确，即 x2 是否保存了当前代码段的开始地址，对应的源码：&lt;/span&gt;&lt;span id=&#34;__span-7-9&#34;&gt;&lt;a id=&#34;__codelineno-7-9&#34; name=&#34;__codelineno-7-9&#34; href=&#34;#__codelineno-7-9&#34;&gt;&lt;/a&gt;# v8/src/compiler/backend/arm64/code-generator-arm64.cc CodeGenerator::AssembleCodeStartRegisterCheck():&lt;/span&gt;&lt;span id=&#34;__span-7-10&#34;&gt;&lt;a id=&#34;__codelineno-7-10&#34; name=&#34;__codelineno-7-10&#34; href=&#34;#__codelineno-7-10&#34;&gt;&lt;/a&gt;# UseScratchRegisterScope temps(masm());&lt;/span&gt;&lt;span id=&#34;__span-7-11&#34;&gt;&lt;a id=&#34;__codelineno-7-11&#34; name=&#34;__codelineno-7-11&#34; href=&#34;#__codelineno-7-11&#34;&gt;&lt;/a&gt;# Register scratch = temps.AcquireX();&lt;/span&gt;&lt;span id=&#34;__span-7-12&#34;&gt;&lt;a id=&#34;__codelineno-7-12&#34; name=&#34;__codelineno-7-12&#34; href=&#34;#__codelineno-7-12&#34;&gt;&lt;/a&gt;# __ ComputeCodeStartAddress(scratch); // becomes x16 in the following code&lt;/span&gt;&lt;span id=&#34;__span-7-13&#34;&gt;&lt;a id=&#34;__codelineno-7-13&#34; name=&#34;__codelineno-7-13&#34; href=&#34;#__codelineno-7-13&#34;&gt;&lt;/a&gt;# __ cmp(scratch, kJavaScriptCallCodeStartRegister);&lt;/span&gt;&lt;span id=&#34;__span-7-14&#34;&gt;&lt;a id=&#34;__codelineno-7-14&#34; name=&#34;__codelineno-7-14&#34; href=&#34;#__codelineno-7-14&#34;&gt;&lt;/a&gt;# __ Assert(eq, AbortReason::kWrongFunctionCodeStart);&lt;/span&gt;&lt;span id=&#34;__span-7-15&#34;&gt;&lt;a id=&#34;__codelineno-7-15&#34; name=&#34;__codelineno-7-15&#34; href=&#34;#__codelineno-7-15&#34;&gt;&lt;/a&gt;# 其中 kJavaScriptCallCodeStartRegister 定义在 v8/src/codegen/arm64/register-arm64.h：&lt;/span&gt;&lt;span id=&#34;__span-7-16&#34;&gt;&lt;a id=&#34;__codelineno-7-16&#34; name=&#34;__codelineno-7-16&#34; href=&#34;#__codelineno-7-16&#34;&gt;&lt;/a&gt;# constexpr Register kJavaScriptCallCodeStartRegister = x2;&lt;/span&gt;&lt;span id=&#34;__span-7-17&#34;&gt;&lt;a id=&#34;__codelineno-7-17&#34; name=&#34;__codelineno-7-17&#34; href=&#34;#__codelineno-7-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-18&#34;&gt;&lt;a id=&#34;__codelineno-7-18&#34; name=&#34;__codelineno-7-18&#34; href=&#34;#__codelineno-7-18&#34;&gt;&lt;/a&gt; [ Frame: MANUAL&lt;/span&gt;&lt;span id=&#34;__span-7-19&#34;&gt;&lt;a id=&#34;__codelineno-7-19&#34; name=&#34;__codelineno-7-19&#34; href=&#34;#__codelineno-7-19&#34;&gt;&lt;/a&gt; -- Prologue: check code start register -- - AssembleCode@../../src/compiler/backend/code-generator.cc:232&lt;/span&gt;&lt;span id=&#34;__span-7-20&#34;&gt;&lt;a id=&#34;__codelineno-7-20&#34; name=&#34;__codelineno-7-20&#34; href=&#34;#__codelineno-7-20&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b00 0 10000010 adr x16, #+0x0 (addr 0xc6ccfe4a8b00)&lt;/span&gt;&lt;span id=&#34;__span-7-21&#34;&gt;&lt;a id=&#34;__codelineno-7-21&#34; name=&#34;__codelineno-7-21&#34; href=&#34;#__codelineno-7-21&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b04 4 eb02021f cmp x16, x2&lt;/span&gt;&lt;span id=&#34;__span-7-22&#34;&gt;&lt;a id=&#34;__codelineno-7-22&#34; name=&#34;__codelineno-7-22&#34; href=&#34;#__codelineno-7-22&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b08 8 54000080 b.eq #+0x10 (addr 0xc6ccfe4a8b18)&lt;/span&gt;&lt;span id=&#34;__span-7-23&#34;&gt;&lt;a id=&#34;__codelineno-7-23&#34; name=&#34;__codelineno-7-23&#34; href=&#34;#__codelineno-7-23&#34;&gt;&lt;/a&gt; [ - Abort@../../src/codegen/arm64/macro-assembler-arm64.cc:4008&lt;/span&gt;&lt;span id=&#34;__span-7-24&#34;&gt;&lt;a id=&#34;__codelineno-7-24&#34; name=&#34;__codelineno-7-24&#34; href=&#34;#__codelineno-7-24&#34;&gt;&lt;/a&gt; Abort message: - Abort@../../src/codegen/arm64/macro-assembler-arm64.cc:4010&lt;/span&gt;&lt;span id=&#34;__span-7-25&#34;&gt;&lt;a id=&#34;__codelineno-7-25&#34; name=&#34;__codelineno-7-25&#34; href=&#34;#__codelineno-7-25&#34;&gt;&lt;/a&gt; Wrong value in code start register passed - Abort@../../src/codegen/arm64/macro-assembler-arm64.cc:4011&lt;/span&gt;&lt;span id=&#34;__span-7-26&#34;&gt;&lt;a id=&#34;__codelineno-7-26&#34; name=&#34;__codelineno-7-26&#34; href=&#34;#__codelineno-7-26&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b0c c d2801081 movz x1, #0x84&lt;/span&gt;&lt;span id=&#34;__span-7-27&#34;&gt;&lt;a id=&#34;__codelineno-7-27&#34; name=&#34;__codelineno-7-27&#34; href=&#34;#__codelineno-7-27&#34;&gt;&lt;/a&gt; [ Frame: NO_FRAME_TYPE&lt;/span&gt;&lt;span id=&#34;__span-7-28&#34;&gt;&lt;a id=&#34;__codelineno-7-28&#34; name=&#34;__codelineno-7-28&#34; href=&#34;#__codelineno-7-28&#34;&gt;&lt;/a&gt; [ - EntryFromBuiltinAsOperand@../../src/codegen/arm64/macro-assembler-arm64.cc:2377&lt;/span&gt;&lt;span id=&#34;__span-7-29&#34;&gt;&lt;a id=&#34;__codelineno-7-29&#34; name=&#34;__codelineno-7-29&#34; href=&#34;#__codelineno-7-29&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-30&#34;&gt;&lt;a id=&#34;__codelineno-7-30&#34; name=&#34;__codelineno-7-30&#34; href=&#34;#__codelineno-7-30&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b10 10 f96a3750 ldr x16, [x26, #21608]&lt;/span&gt;&lt;span id=&#34;__span-7-31&#34;&gt;&lt;a id=&#34;__codelineno-7-31&#34; name=&#34;__codelineno-7-31&#34; href=&#34;#__codelineno-7-31&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b14 14 d63f0200 blr x16&lt;/span&gt;&lt;span id=&#34;__span-7-32&#34;&gt;&lt;a id=&#34;__codelineno-7-32&#34; name=&#34;__codelineno-7-32&#34; href=&#34;#__codelineno-7-32&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-33&#34;&gt;&lt;a id=&#34;__codelineno-7-33&#34; name=&#34;__codelineno-7-33&#34; href=&#34;#__codelineno-7-33&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-34&#34;&gt;&lt;a id=&#34;__codelineno-7-34&#34; name=&#34;__codelineno-7-34&#34; href=&#34;#__codelineno-7-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-35&#34;&gt;&lt;a id=&#34;__codelineno-7-35&#34; name=&#34;__codelineno-7-35&#34; href=&#34;#__codelineno-7-35&#34;&gt;&lt;/a&gt;# 栈对齐检查，定义在：&lt;/span&gt;&lt;span id=&#34;__span-7-36&#34;&gt;&lt;a id=&#34;__codelineno-7-36&#34; name=&#34;__codelineno-7-36&#34; href=&#34;#__codelineno-7-36&#34;&gt;&lt;/a&gt;# v8/src/codegen/arm64/macro-assembler-arm64.cc MacroAssembler::AssertSpAligned():&lt;/span&gt;&lt;span id=&#34;__span-7-37&#34;&gt;&lt;a id=&#34;__codelineno-7-37&#34; name=&#34;__codelineno-7-37&#34; href=&#34;#__codelineno-7-37&#34;&gt;&lt;/a&gt;# if (!v8_flags.debug_code) return;&lt;/span&gt;&lt;span id=&#34;__span-7-38&#34;&gt;&lt;a id=&#34;__codelineno-7-38&#34; name=&#34;__codelineno-7-38&#34; href=&#34;#__codelineno-7-38&#34;&gt;&lt;/a&gt;# ASM_CODE_COMMENT(this);&lt;/span&gt;&lt;span id=&#34;__span-7-39&#34;&gt;&lt;a id=&#34;__codelineno-7-39&#34; name=&#34;__codelineno-7-39&#34; href=&#34;#__codelineno-7-39&#34;&gt;&lt;/a&gt;# HardAbortScope hard_abort(this); // Avoid calls to Abort.&lt;/span&gt;&lt;span id=&#34;__span-7-40&#34;&gt;&lt;a id=&#34;__codelineno-7-40&#34; name=&#34;__codelineno-7-40&#34; href=&#34;#__codelineno-7-40&#34;&gt;&lt;/a&gt;# // Arm64 requires the stack pointer to be 16-byte aligned prior to address&lt;/span&gt;&lt;span id=&#34;__span-7-41&#34;&gt;&lt;a id=&#34;__codelineno-7-41&#34; name=&#34;__codelineno-7-41&#34; href=&#34;#__codelineno-7-41&#34;&gt;&lt;/a&gt;# // calculation.&lt;/span&gt;&lt;span id=&#34;__span-7-42&#34;&gt;&lt;a id=&#34;__codelineno-7-42&#34; name=&#34;__codelineno-7-42&#34; href=&#34;#__codelineno-7-42&#34;&gt;&lt;/a&gt;# UseScratchRegisterScope scope(this);&lt;/span&gt;&lt;span id=&#34;__span-7-43&#34;&gt;&lt;a id=&#34;__codelineno-7-43&#34; name=&#34;__codelineno-7-43&#34; href=&#34;#__codelineno-7-43&#34;&gt;&lt;/a&gt;# Register temp = scope.AcquireX(); // becomes x16 in the following code&lt;/span&gt;&lt;span id=&#34;__span-7-44&#34;&gt;&lt;a id=&#34;__codelineno-7-44&#34; name=&#34;__codelineno-7-44&#34; href=&#34;#__codelineno-7-44&#34;&gt;&lt;/a&gt;# Mov(temp, sp);&lt;/span&gt;&lt;span id=&#34;__span-7-45&#34;&gt;&lt;a id=&#34;__codelineno-7-45&#34; name=&#34;__codelineno-7-45&#34; href=&#34;#__codelineno-7-45&#34;&gt;&lt;/a&gt;# Tst(temp, 15);&lt;/span&gt;&lt;span id=&#34;__span-7-46&#34;&gt;&lt;a id=&#34;__codelineno-7-46&#34; name=&#34;__codelineno-7-46&#34; href=&#34;#__codelineno-7-46&#34;&gt;&lt;/a&gt;# Check(eq, AbortReason::kUnexpectedStackPointer);&lt;/span&gt;&lt;span id=&#34;__span-7-47&#34;&gt;&lt;a id=&#34;__codelineno-7-47&#34; name=&#34;__codelineno-7-47&#34; href=&#34;#__codelineno-7-47&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-48&#34;&gt;&lt;a id=&#34;__codelineno-7-48&#34; name=&#34;__codelineno-7-48&#34; href=&#34;#__codelineno-7-48&#34;&gt;&lt;/a&gt; -- B0 start (construct frame) --&lt;/span&gt;&lt;span id=&#34;__span-7-49&#34;&gt;&lt;a id=&#34;__codelineno-7-49&#34; name=&#34;__codelineno-7-49&#34; href=&#34;#__codelineno-7-49&#34;&gt;&lt;/a&gt; [ - AssertSpAligned@../../src/codegen/arm64/macro-assembler-arm64.cc:1590&lt;/span&gt;&lt;span id=&#34;__span-7-50&#34;&gt;&lt;a id=&#34;__codelineno-7-50&#34; name=&#34;__codelineno-7-50&#34; href=&#34;#__codelineno-7-50&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b18 18 910003f0 mov x16, sp&lt;/span&gt;&lt;span id=&#34;__span-7-51&#34;&gt;&lt;a id=&#34;__codelineno-7-51&#34; name=&#34;__codelineno-7-51&#34; href=&#34;#__codelineno-7-51&#34;&gt;&lt;/a&gt; [ - LogicalMacro@../../src/codegen/arm64/macro-assembler-arm64.cc:197&lt;/span&gt;&lt;span id=&#34;__span-7-52&#34;&gt;&lt;a id=&#34;__codelineno-7-52&#34; name=&#34;__codelineno-7-52&#34; href=&#34;#__codelineno-7-52&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b1c 1c f2400e1f tst x16, #0xf&lt;/span&gt;&lt;span id=&#34;__span-7-53&#34;&gt;&lt;a id=&#34;__codelineno-7-53&#34; name=&#34;__codelineno-7-53&#34; href=&#34;#__codelineno-7-53&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-54&#34;&gt;&lt;a id=&#34;__codelineno-7-54&#34; name=&#34;__codelineno-7-54&#34; href=&#34;#__codelineno-7-54&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b20 20 54000080 b.eq #+0x10 (addr 0xc6ccfe4a8b30)&lt;/span&gt;&lt;span id=&#34;__span-7-55&#34;&gt;&lt;a id=&#34;__codelineno-7-55&#34; name=&#34;__codelineno-7-55&#34; href=&#34;#__codelineno-7-55&#34;&gt;&lt;/a&gt; [ - Abort@../../src/codegen/arm64/macro-assembler-arm64.cc:4008&lt;/span&gt;&lt;span id=&#34;__span-7-56&#34;&gt;&lt;a id=&#34;__codelineno-7-56&#34; name=&#34;__codelineno-7-56&#34; href=&#34;#__codelineno-7-56&#34;&gt;&lt;/a&gt; Abort message: - Abort@../../src/codegen/arm64/macro-assembler-arm64.cc:4010&lt;/span&gt;&lt;span id=&#34;__span-7-57&#34;&gt;&lt;a id=&#34;__codelineno-7-57&#34; name=&#34;__codelineno-7-57&#34; href=&#34;#__codelineno-7-57&#34;&gt;&lt;/a&gt; The stack pointer is not the expected value - Abort@../../src/codegen/arm64/macro-assembler-arm64.cc:4011&lt;/span&gt;&lt;span id=&#34;__span-7-58&#34;&gt;&lt;a id=&#34;__codelineno-7-58&#34; name=&#34;__codelineno-7-58&#34; href=&#34;#__codelineno-7-58&#34;&gt;&lt;/a&gt; [ Frame: NO_FRAME_TYPE&lt;/span&gt;&lt;span id=&#34;__span-7-59&#34;&gt;&lt;a id=&#34;__codelineno-7-59&#34; name=&#34;__codelineno-7-59&#34; href=&#34;#__codelineno-7-59&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b24 24 52800780 movz w0, #0x3c&lt;/span&gt;&lt;span id=&#34;__span-7-60&#34;&gt;&lt;a id=&#34;__codelineno-7-60&#34; name=&#34;__codelineno-7-60&#34; href=&#34;#__codelineno-7-60&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b28 28 f94e7750 ldr x16, [x26, #7400]&lt;/span&gt;&lt;span id=&#34;__span-7-61&#34;&gt;&lt;a id=&#34;__codelineno-7-61&#34; name=&#34;__codelineno-7-61&#34; href=&#34;#__codelineno-7-61&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b2c 2c d63f0200 blr x16&lt;/span&gt;&lt;span id=&#34;__span-7-62&#34;&gt;&lt;a id=&#34;__codelineno-7-62&#34; name=&#34;__codelineno-7-62&#34; href=&#34;#__codelineno-7-62&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-63&#34;&gt;&lt;a id=&#34;__codelineno-7-63&#34; name=&#34;__codelineno-7-63&#34; href=&#34;#__codelineno-7-63&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-64&#34;&gt;&lt;a id=&#34;__codelineno-7-64&#34; name=&#34;__codelineno-7-64&#34; href=&#34;#__codelineno-7-64&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-65&#34;&gt;&lt;a id=&#34;__codelineno-7-65&#34; name=&#34;__codelineno-7-65&#34; href=&#34;#__codelineno-7-65&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-66&#34;&gt;&lt;a id=&#34;__codelineno-7-66&#34; name=&#34;__codelineno-7-66&#34; href=&#34;#__codelineno-7-66&#34;&gt;&lt;/a&gt;# 构建栈帧&lt;/span&gt;&lt;span id=&#34;__span-7-67&#34;&gt;&lt;a id=&#34;__codelineno-7-67&#34; name=&#34;__codelineno-7-67&#34; href=&#34;#__codelineno-7-67&#34;&gt;&lt;/a&gt;# 构建完成后会得到：sp = prev sp - 64, fp = sp + 48&lt;/span&gt;&lt;span id=&#34;__span-7-68&#34;&gt;&lt;a id=&#34;__codelineno-7-68&#34; name=&#34;__codelineno-7-68&#34; href=&#34;#__codelineno-7-68&#34;&gt;&lt;/a&gt;#&lt;/span&gt;&lt;span id=&#34;__span-7-69&#34;&gt;&lt;a id=&#34;__codelineno-7-69&#34; name=&#34;__codelineno-7-69&#34; href=&#34;#__codelineno-7-69&#34;&gt;&lt;/a&gt;# 栈帧的示意图, 每一个方框表示 8 字节的内存:&lt;/span&gt;&lt;span id=&#34;__span-7-70&#34;&gt;&lt;a id=&#34;__codelineno-7-70&#34; name=&#34;__codelineno-7-70&#34; href=&#34;#__codelineno-7-70&#34;&gt;&lt;/a&gt;# sp + 64 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-71&#34;&gt;&lt;a id=&#34;__codelineno-7-71&#34; name=&#34;__codelineno-7-71&#34; href=&#34;#__codelineno-7-71&#34;&gt;&lt;/a&gt;# | lr | &amp;lt;= lr 是 link register 的缩写，表示返回地址&lt;/span&gt;&lt;span id=&#34;__span-7-72&#34;&gt;&lt;a id=&#34;__codelineno-7-72&#34; name=&#34;__codelineno-7-72&#34; href=&#34;#__codelineno-7-72&#34;&gt;&lt;/a&gt;# sp + 56 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-73&#34;&gt;&lt;a id=&#34;__codelineno-7-73&#34; name=&#34;__codelineno-7-73&#34; href=&#34;#__codelineno-7-73&#34;&gt;&lt;/a&gt;# | prev fp | &amp;lt;= 保存了调用前的 fp (frame pointer)&lt;/span&gt;&lt;span id=&#34;__span-7-74&#34;&gt;&lt;a id=&#34;__codelineno-7-74&#34; name=&#34;__codelineno-7-74&#34; href=&#34;#__codelineno-7-74&#34;&gt;&lt;/a&gt;# sp + 48 +------------+ &amp;lt;= 新的 fp (frame pointer) 指向这里&lt;/span&gt;&lt;span id=&#34;__span-7-75&#34;&gt;&lt;a id=&#34;__codelineno-7-75&#34; name=&#34;__codelineno-7-75&#34; href=&#34;#__codelineno-7-75&#34;&gt;&lt;/a&gt;# | x16 (0x22) |&lt;/span&gt;&lt;span id=&#34;__span-7-76&#34;&gt;&lt;a id=&#34;__codelineno-7-76&#34; name=&#34;__codelineno-7-76&#34; href=&#34;#__codelineno-7-76&#34;&gt;&lt;/a&gt;# sp + 40 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-77&#34;&gt;&lt;a id=&#34;__codelineno-7-77&#34; name=&#34;__codelineno-7-77&#34; href=&#34;#__codelineno-7-77&#34;&gt;&lt;/a&gt;# | x20 | &amp;lt;= bytecode array register&lt;/span&gt;&lt;span id=&#34;__span-7-78&#34;&gt;&lt;a id=&#34;__codelineno-7-78&#34; name=&#34;__codelineno-7-78&#34; href=&#34;#__codelineno-7-78&#34;&gt;&lt;/a&gt;# sp + 32 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-79&#34;&gt;&lt;a id=&#34;__codelineno-7-79&#34; name=&#34;__codelineno-7-79&#34; href=&#34;#__codelineno-7-79&#34;&gt;&lt;/a&gt;# | x21 | &amp;lt;= dispatch table register&lt;/span&gt;&lt;span id=&#34;__span-7-80&#34;&gt;&lt;a id=&#34;__codelineno-7-80&#34; name=&#34;__codelineno-7-80&#34; href=&#34;#__codelineno-7-80&#34;&gt;&lt;/a&gt;# sp + 24 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-81&#34;&gt;&lt;a id=&#34;__codelineno-7-81&#34; name=&#34;__codelineno-7-81&#34; href=&#34;#__codelineno-7-81&#34;&gt;&lt;/a&gt;# | x19 | &amp;lt;= bytecode offset register，记录当前正在执行的 bytecode 在 bytecode array 中的偏移&lt;/span&gt;&lt;span id=&#34;__span-7-82&#34;&gt;&lt;a id=&#34;__codelineno-7-82&#34; name=&#34;__codelineno-7-82&#34; href=&#34;#__codelineno-7-82&#34;&gt;&lt;/a&gt;# sp + 16 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-83&#34;&gt;&lt;a id=&#34;__codelineno-7-83&#34; name=&#34;__codelineno-7-83&#34; href=&#34;#__codelineno-7-83&#34;&gt;&lt;/a&gt;# | x0 | &amp;lt;= accumulator register&lt;/span&gt;&lt;span id=&#34;__span-7-84&#34;&gt;&lt;a id=&#34;__codelineno-7-84&#34; name=&#34;__codelineno-7-84&#34; href=&#34;#__codelineno-7-84&#34;&gt;&lt;/a&gt;# sp + 8 +------------+&lt;/span&gt;&lt;span id=&#34;__span-7-85&#34;&gt;&lt;a id=&#34;__codelineno-7-85&#34; name=&#34;__codelineno-7-85&#34; href=&#34;#__codelineno-7-85&#34;&gt;&lt;/a&gt;# | |&lt;/span&gt;&lt;span id=&#34;__span-7-86&#34;&gt;&lt;a id=&#34;__codelineno-7-86&#34; name=&#34;__codelineno-7-86&#34; href=&#34;#__codelineno-7-86&#34;&gt;&lt;/a&gt;# sp +------------+ &amp;lt;= 新的 sp (stack pointer) 指向这里&lt;/span&gt;&lt;span id=&#34;__span-7-87&#34;&gt;&lt;a id=&#34;__codelineno-7-87&#34; name=&#34;__codelineno-7-87&#34; href=&#34;#__codelineno-7-87&#34;&gt;&lt;/a&gt;#&lt;/span&gt;&lt;span id=&#34;__span-7-88&#34;&gt;&lt;a id=&#34;__codelineno-7-88&#34; name=&#34;__codelineno-7-88&#34; href=&#34;#__codelineno-7-88&#34;&gt;&lt;/a&gt;# 这些寄存器定义在 v8/src/codegen/arm64/register-arm64.h 当中：&lt;/span&gt;&lt;span id=&#34;__span-7-89&#34;&gt;&lt;a id=&#34;__codelineno-7-89&#34; name=&#34;__codelineno-7-89&#34; href=&#34;#__codelineno-7-89&#34;&gt;&lt;/a&gt;# constexpr Register kInterpreterAccumulatorRegister = x0;&lt;/span&gt;&lt;span id=&#34;__span-7-90&#34;&gt;&lt;a id=&#34;__codelineno-7-90&#34; name=&#34;__codelineno-7-90&#34; href=&#34;#__codelineno-7-90&#34;&gt;&lt;/a&gt;# constexpr Register kInterpreterBytecodeOffsetRegister = x19;&lt;/span&gt;&lt;span id=&#34;__span-7-91&#34;&gt;&lt;a id=&#34;__codelineno-7-91&#34; name=&#34;__codelineno-7-91&#34; href=&#34;#__codelineno-7-91&#34;&gt;&lt;/a&gt;# constexpr Register kInterpreterBytecodeArrayRegister = x20;&lt;/span&gt;&lt;span id=&#34;__span-7-92&#34;&gt;&lt;a id=&#34;__codelineno-7-92&#34; name=&#34;__codelineno-7-92&#34; href=&#34;#__codelineno-7-92&#34;&gt;&lt;/a&gt;# constexpr Register kInterpreterDispatchTableRegister = x21;&lt;/span&gt;&lt;span id=&#34;__span-7-93&#34;&gt;&lt;a id=&#34;__codelineno-7-93&#34; name=&#34;__codelineno-7-93&#34; href=&#34;#__codelineno-7-93&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-94&#34;&gt;&lt;a id=&#34;__codelineno-7-94&#34; name=&#34;__codelineno-7-94&#34; href=&#34;#__codelineno-7-94&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b30 30 d2800450 movz x16, #0x22&lt;/span&gt;&lt;span id=&#34;__span-7-95&#34;&gt;&lt;a id=&#34;__codelineno-7-95&#34; name=&#34;__codelineno-7-95&#34; href=&#34;#__codelineno-7-95&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b34 34 a9be43ff stp xzr, x16, [sp, #-32]!&lt;/span&gt;&lt;span id=&#34;__span-7-96&#34;&gt;&lt;a id=&#34;__codelineno-7-96&#34; name=&#34;__codelineno-7-96&#34; href=&#34;#__codelineno-7-96&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b38 38 a9017bfd stp fp, lr, [sp, #16]&lt;/span&gt;&lt;span id=&#34;__span-7-97&#34;&gt;&lt;a id=&#34;__codelineno-7-97&#34; name=&#34;__codelineno-7-97&#34; href=&#34;#__codelineno-7-97&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b3c 3c 910043fd add fp, sp, #0x10 (16)&lt;/span&gt;&lt;span id=&#34;__span-7-98&#34;&gt;&lt;a id=&#34;__codelineno-7-98&#34; name=&#34;__codelineno-7-98&#34; href=&#34;#__codelineno-7-98&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b40 40 d10083ff sub sp, sp, #0x20 (32)&lt;/span&gt;&lt;span id=&#34;__span-7-99&#34;&gt;&lt;a id=&#34;__codelineno-7-99&#34; name=&#34;__codelineno-7-99&#34; href=&#34;#__codelineno-7-99&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b44 44 f90013f4 str x20, [sp, #32]&lt;/span&gt;&lt;span id=&#34;__span-7-100&#34;&gt;&lt;a id=&#34;__codelineno-7-100&#34; name=&#34;__codelineno-7-100&#34; href=&#34;#__codelineno-7-100&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b48 48 f9000ff5 str x21, [sp, #24]&lt;/span&gt;&lt;span id=&#34;__span-7-101&#34;&gt;&lt;a id=&#34;__codelineno-7-101&#34; name=&#34;__codelineno-7-101&#34; href=&#34;#__codelineno-7-101&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b4c 4c f90007e0 str x0, [sp, #8]&lt;/span&gt;&lt;span id=&#34;__span-7-102&#34;&gt;&lt;a id=&#34;__codelineno-7-102&#34; name=&#34;__codelineno-7-102&#34; href=&#34;#__codelineno-7-102&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b50 50 f9000bf3 str x19, [sp, #16]&lt;/span&gt;&lt;span id=&#34;__span-7-103&#34;&gt;&lt;a id=&#34;__codelineno-7-103&#34; name=&#34;__codelineno-7-103&#34; href=&#34;#__codelineno-7-103&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-104&#34;&gt;&lt;a id=&#34;__codelineno-7-104&#34; name=&#34;__codelineno-7-104&#34; href=&#34;#__codelineno-7-104&#34;&gt;&lt;/a&gt;# 调用了未知的 C 函数&lt;/span&gt;&lt;span id=&#34;__span-7-105&#34;&gt;&lt;a id=&#34;__codelineno-7-105&#34; name=&#34;__codelineno-7-105&#34; href=&#34;#__codelineno-7-105&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b54 54 d28042c1 movz x1, #0x216&lt;/span&gt;&lt;span id=&#34;__span-7-106&#34;&gt;&lt;a id=&#34;__codelineno-7-106&#34; name=&#34;__codelineno-7-106&#34; href=&#34;#__codelineno-7-106&#34;&gt;&lt;/a&gt; [ - LoadFromConstantsTable@../../src/codegen/arm64/macro-assembler-arm64.cc:2166&lt;/span&gt;&lt;span id=&#34;__span-7-107&#34;&gt;&lt;a id=&#34;__codelineno-7-107&#34; name=&#34;__codelineno-7-107&#34; href=&#34;#__codelineno-7-107&#34;&gt;&lt;/a&gt; [ - LoadRoot@../../src/codegen/arm64/macro-assembler-arm64.cc:1954&lt;/span&gt;&lt;span id=&#34;__span-7-108&#34;&gt;&lt;a id=&#34;__codelineno-7-108&#34; name=&#34;__codelineno-7-108&#34; href=&#34;#__codelineno-7-108&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b58 58 f94d5f42 ldr x2, [x26, #6840]&lt;/span&gt;&lt;span id=&#34;__span-7-109&#34;&gt;&lt;a id=&#34;__codelineno-7-109&#34; name=&#34;__codelineno-7-109&#34; href=&#34;#__codelineno-7-109&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-110&#34;&gt;&lt;a id=&#34;__codelineno-7-110&#34; name=&#34;__codelineno-7-110&#34; href=&#34;#__codelineno-7-110&#34;&gt;&lt;/a&gt; [ - DecompressTagged@../../src/codegen/arm64/macro-assembler-arm64.cc:3448&lt;/span&gt;&lt;span id=&#34;__span-7-111&#34;&gt;&lt;a id=&#34;__codelineno-7-111&#34; name=&#34;__codelineno-7-111&#34; href=&#34;#__codelineno-7-111&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b5c 5c d28bcef0 movz x16, #0x5e77&lt;/span&gt;&lt;span id=&#34;__span-7-112&#34;&gt;&lt;a id=&#34;__codelineno-7-112&#34; name=&#34;__codelineno-7-112&#34; href=&#34;#__codelineno-7-112&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b60 60 b8706842 ldr w2, [x2, x16]&lt;/span&gt;&lt;span id=&#34;__span-7-113&#34;&gt;&lt;a id=&#34;__codelineno-7-113&#34; name=&#34;__codelineno-7-113&#34; href=&#34;#__codelineno-7-113&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b64 64 8b020382 add x2, x28, x2&lt;/span&gt;&lt;span id=&#34;__span-7-114&#34;&gt;&lt;a id=&#34;__codelineno-7-114&#34; name=&#34;__codelineno-7-114&#34; href=&#34;#__codelineno-7-114&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-115&#34;&gt;&lt;a id=&#34;__codelineno-7-115&#34; name=&#34;__codelineno-7-115&#34; href=&#34;#__codelineno-7-115&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-116&#34;&gt;&lt;a id=&#34;__codelineno-7-116&#34; name=&#34;__codelineno-7-116&#34; href=&#34;#__codelineno-7-116&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b68 68 aa1403e0 mov x0, x20&lt;/span&gt;&lt;span id=&#34;__span-7-117&#34;&gt;&lt;a id=&#34;__codelineno-7-117&#34; name=&#34;__codelineno-7-117&#34; href=&#34;#__codelineno-7-117&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b6c 6c f94ecf50 ldr x16, [x26, #7576]&lt;/span&gt;&lt;span id=&#34;__span-7-118&#34;&gt;&lt;a id=&#34;__codelineno-7-118&#34; name=&#34;__codelineno-7-118&#34; href=&#34;#__codelineno-7-118&#34;&gt;&lt;/a&gt; [ - CallCFunction@../../src/codegen/arm64/macro-assembler-arm64.cc:2106&lt;/span&gt;&lt;span id=&#34;__span-7-119&#34;&gt;&lt;a id=&#34;__codelineno-7-119&#34; name=&#34;__codelineno-7-119&#34; href=&#34;#__codelineno-7-119&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b70 70 10000068 adr x8, #+0xc (addr 0xc6ccfe4a8b7c)&lt;/span&gt;&lt;span id=&#34;__span-7-120&#34;&gt;&lt;a id=&#34;__codelineno-7-120&#34; name=&#34;__codelineno-7-120&#34; href=&#34;#__codelineno-7-120&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b74 74 a93f235d stp fp, x8, [x26, #-16]&lt;/span&gt;&lt;span id=&#34;__span-7-121&#34;&gt;&lt;a id=&#34;__codelineno-7-121&#34; name=&#34;__codelineno-7-121&#34; href=&#34;#__codelineno-7-121&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b78 78 d63f0200 blr x16&lt;/span&gt;&lt;span id=&#34;__span-7-122&#34;&gt;&lt;a id=&#34;__codelineno-7-122&#34; name=&#34;__codelineno-7-122&#34; href=&#34;#__codelineno-7-122&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b7c 7c f81f035f stur xzr, [x26, #-16]&lt;/span&gt;&lt;span id=&#34;__span-7-123&#34;&gt;&lt;a id=&#34;__codelineno-7-123&#34; name=&#34;__codelineno-7-123&#34; href=&#34;#__codelineno-7-123&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-124&#34;&gt;&lt;a id=&#34;__codelineno-7-124&#34; name=&#34;__codelineno-7-124&#34; href=&#34;#__codelineno-7-124&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b80 80 d2800001 movz x1, #0x0&lt;/span&gt;&lt;span id=&#34;__span-7-125&#34;&gt;&lt;a id=&#34;__codelineno-7-125&#34; name=&#34;__codelineno-7-125&#34; href=&#34;#__codelineno-7-125&#34;&gt;&lt;/a&gt; [ - LoadFromConstantsTable@../../src/codegen/arm64/macro-assembler-arm64.cc:2166&lt;/span&gt;&lt;span id=&#34;__span-7-126&#34;&gt;&lt;a id=&#34;__codelineno-7-126&#34; name=&#34;__codelineno-7-126&#34; href=&#34;#__codelineno-7-126&#34;&gt;&lt;/a&gt; [ - LoadRoot@../../src/codegen/arm64/macro-assembler-arm64.cc:1954&lt;/span&gt;&lt;span id=&#34;__span-7-127&#34;&gt;&lt;a id=&#34;__codelineno-7-127&#34; name=&#34;__codelineno-7-127&#34; href=&#34;#__codelineno-7-127&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b84 84 f94d5f42 ldr x2, [x26, #6840]&lt;/span&gt;&lt;span id=&#34;__span-7-128&#34;&gt;&lt;a id=&#34;__codelineno-7-128&#34; name=&#34;__codelineno-7-128&#34; href=&#34;#__codelineno-7-128&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-129&#34;&gt;&lt;a id=&#34;__codelineno-7-129&#34; name=&#34;__codelineno-7-129&#34; href=&#34;#__codelineno-7-129&#34;&gt;&lt;/a&gt; [ - DecompressTagged@../../src/codegen/arm64/macro-assembler-arm64.cc:3448&lt;/span&gt;&lt;span id=&#34;__span-7-130&#34;&gt;&lt;a id=&#34;__codelineno-7-130&#34; name=&#34;__codelineno-7-130&#34; href=&#34;#__codelineno-7-130&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b88 88 d28bcf70 movz x16, #0x5e7b&lt;/span&gt;&lt;span id=&#34;__span-7-131&#34;&gt;&lt;a id=&#34;__codelineno-7-131&#34; name=&#34;__codelineno-7-131&#34; href=&#34;#__codelineno-7-131&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b8c 8c b8706842 ldr w2, [x2, x16]&lt;/span&gt;&lt;span id=&#34;__span-7-132&#34;&gt;&lt;a id=&#34;__codelineno-7-132&#34; name=&#34;__codelineno-7-132&#34; href=&#34;#__codelineno-7-132&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b90 90 8b020382 add x2, x28, x2&lt;/span&gt;&lt;span id=&#34;__span-7-133&#34;&gt;&lt;a id=&#34;__codelineno-7-133&#34; name=&#34;__codelineno-7-133&#34; href=&#34;#__codelineno-7-133&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-134&#34;&gt;&lt;a id=&#34;__codelineno-7-134&#34; name=&#34;__codelineno-7-134&#34; href=&#34;#__codelineno-7-134&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-135&#34;&gt;&lt;a id=&#34;__codelineno-7-135&#34; name=&#34;__codelineno-7-135&#34; href=&#34;#__codelineno-7-135&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b94 94 f94007e0 ldr x0, [sp, #8]&lt;/span&gt;&lt;span id=&#34;__span-7-136&#34;&gt;&lt;a id=&#34;__codelineno-7-136&#34; name=&#34;__codelineno-7-136&#34; href=&#34;#__codelineno-7-136&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b98 98 f94ecf50 ldr x16, [x26, #7576]&lt;/span&gt;&lt;span id=&#34;__span-7-137&#34;&gt;&lt;a id=&#34;__codelineno-7-137&#34; name=&#34;__codelineno-7-137&#34; href=&#34;#__codelineno-7-137&#34;&gt;&lt;/a&gt; [ - CallCFunction@../../src/codegen/arm64/macro-assembler-arm64.cc:2106&lt;/span&gt;&lt;span id=&#34;__span-7-138&#34;&gt;&lt;a id=&#34;__codelineno-7-138&#34; name=&#34;__codelineno-7-138&#34; href=&#34;#__codelineno-7-138&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b9c 9c 10000068 adr x8, #+0xc (addr 0xc6ccfe4a8ba8)&lt;/span&gt;&lt;span id=&#34;__span-7-139&#34;&gt;&lt;a id=&#34;__codelineno-7-139&#34; name=&#34;__codelineno-7-139&#34; href=&#34;#__codelineno-7-139&#34;&gt;&lt;/a&gt;0xc6ccfe4a8ba0 a0 a93f235d stp fp, x8, [x26, #-16]&lt;/span&gt;&lt;span id=&#34;__span-7-140&#34;&gt;&lt;a id=&#34;__codelineno-7-140&#34; name=&#34;__codelineno-7-140&#34; href=&#34;#__codelineno-7-140&#34;&gt;&lt;/a&gt;0xc6ccfe4a8ba4 a4 d63f0200 blr x16&lt;/span&gt;&lt;span id=&#34;__span-7-141&#34;&gt;&lt;a id=&#34;__codelineno-7-141&#34; name=&#34;__codelineno-7-141&#34; href=&#34;#__codelineno-7-141&#34;&gt;&lt;/a&gt;0xc6ccfe4a8ba8 a8 f81f035f stur xzr, [x26, #-16]&lt;/span&gt;&lt;span id=&#34;__span-7-142&#34;&gt;&lt;a id=&#34;__codelineno-7-142&#34; name=&#34;__codelineno-7-142&#34; href=&#34;#__codelineno-7-142&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-143&#34;&gt;&lt;a id=&#34;__codelineno-7-143&#34; name=&#34;__codelineno-7-143&#34; href=&#34;#__codelineno-7-143&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-144&#34;&gt;&lt;a id=&#34;__codelineno-7-144&#34; name=&#34;__codelineno-7-144&#34; href=&#34;#__codelineno-7-144&#34;&gt;&lt;/a&gt;# 从这里开始实现 LdaSmi 的语义&lt;/span&gt;&lt;span id=&#34;__span-7-145&#34;&gt;&lt;a id=&#34;__codelineno-7-145&#34; name=&#34;__codelineno-7-145&#34; href=&#34;#__codelineno-7-145&#34;&gt;&lt;/a&gt;# 从前面的分析可以看到 LdaSmi 由两个字节组成：&lt;/span&gt;&lt;span id=&#34;__span-7-146&#34;&gt;&lt;a id=&#34;__codelineno-7-146&#34; name=&#34;__codelineno-7-146&#34; href=&#34;#__codelineno-7-146&#34;&gt;&lt;/a&gt;# 1. 第一个字节是 0x0d，表示这是一条 LdaSmi&lt;/span&gt;&lt;span id=&#34;__span-7-147&#34;&gt;&lt;a id=&#34;__codelineno-7-147&#34; name=&#34;__codelineno-7-147&#34; href=&#34;#__codelineno-7-147&#34;&gt;&lt;/a&gt;# 2. 第二个字节就是要加载到 `accumulator` 的小整数&lt;/span&gt;&lt;span id=&#34;__span-7-148&#34;&gt;&lt;a id=&#34;__codelineno-7-148&#34; name=&#34;__codelineno-7-148&#34; href=&#34;#__codelineno-7-148&#34;&gt;&lt;/a&gt;# 如：0d 01 对应 LdaSmi [1]，0d 02 对应 LdaSmi [2]&lt;/span&gt;&lt;span id=&#34;__span-7-149&#34;&gt;&lt;a id=&#34;__codelineno-7-149&#34; name=&#34;__codelineno-7-149&#34; href=&#34;#__codelineno-7-149&#34;&gt;&lt;/a&gt;# 所以，为了实现 LdaSmi，需要从 bytecode array 中读取 LdaSmi 字节码的第二个字节，&lt;/span&gt;&lt;span id=&#34;__span-7-150&#34;&gt;&lt;a id=&#34;__codelineno-7-150&#34; name=&#34;__codelineno-7-150&#34; href=&#34;#__codelineno-7-150&#34;&gt;&lt;/a&gt;# 保存到 `accumulator` 寄存器当中&lt;/span&gt;&lt;span id=&#34;__span-7-151&#34;&gt;&lt;a id=&#34;__codelineno-7-151&#34; name=&#34;__codelineno-7-151&#34; href=&#34;#__codelineno-7-151&#34;&gt;&lt;/a&gt;# 下面一条一条地分析指令在做的事情：&lt;/span&gt;&lt;span id=&#34;__span-7-152&#34;&gt;&lt;a id=&#34;__codelineno-7-152&#34; name=&#34;__codelineno-7-152&#34; href=&#34;#__codelineno-7-152&#34;&gt;&lt;/a&gt;# 1. 从 sp + 16 地址读取 bytecode offset 寄存器的值到 x3，&lt;/span&gt;&lt;span id=&#34;__span-7-153&#34;&gt;&lt;a id=&#34;__codelineno-7-153&#34; name=&#34;__codelineno-7-153&#34; href=&#34;#__codelineno-7-153&#34;&gt;&lt;/a&gt;# 它记录了 LdaSmi 相对 bytecode array 的偏移&lt;/span&gt;&lt;span id=&#34;__span-7-154&#34;&gt;&lt;a id=&#34;__codelineno-7-154&#34; name=&#34;__codelineno-7-154&#34; href=&#34;#__codelineno-7-154&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bac ac f9400be3 ldr x3, [sp, #16]&lt;/span&gt;&lt;span id=&#34;__span-7-155&#34;&gt;&lt;a id=&#34;__codelineno-7-155&#34; name=&#34;__codelineno-7-155&#34; href=&#34;#__codelineno-7-155&#34;&gt;&lt;/a&gt;# 2. 计算 x3 + 1 的值并写入 x4，得到 LdaSmi 的第二个字节相对 bytecode array 的偏移&lt;/span&gt;&lt;span id=&#34;__span-7-156&#34;&gt;&lt;a id=&#34;__codelineno-7-156&#34; name=&#34;__codelineno-7-156&#34; href=&#34;#__codelineno-7-156&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bb0 b0 91000464 add x4, x3, #0x1 (1)&lt;/span&gt;&lt;span id=&#34;__span-7-157&#34;&gt;&lt;a id=&#34;__codelineno-7-157&#34; name=&#34;__codelineno-7-157&#34; href=&#34;#__codelineno-7-157&#34;&gt;&lt;/a&gt;# 3. 从 sp + 32 地址读取 bytecode array 寄存器的值到 x20&lt;/span&gt;&lt;span id=&#34;__span-7-158&#34;&gt;&lt;a id=&#34;__codelineno-7-158&#34; name=&#34;__codelineno-7-158&#34; href=&#34;#__codelineno-7-158&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bb4 b4 f94013f4 ldr x20, [sp, #32]&lt;/span&gt;&lt;span id=&#34;__span-7-159&#34;&gt;&lt;a id=&#34;__codelineno-7-159&#34; name=&#34;__codelineno-7-159&#34; href=&#34;#__codelineno-7-159&#34;&gt;&lt;/a&gt;# 4. 从 x20 + x4 地址读取 LdaSmi 的第二个字节到 x4，也就是要加载到 `accumulator` 的值，&lt;/span&gt;&lt;span id=&#34;__span-7-160&#34;&gt;&lt;a id=&#34;__codelineno-7-160&#34; name=&#34;__codelineno-7-160&#34; href=&#34;#__codelineno-7-160&#34;&gt;&lt;/a&gt;# 之后 x4 的值会写入到 x0，也就是 `accumulator` 对应的寄存器&lt;/span&gt;&lt;span id=&#34;__span-7-161&#34;&gt;&lt;a id=&#34;__codelineno-7-161&#34; name=&#34;__codelineno-7-161&#34; href=&#34;#__codelineno-7-161&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bb8 b8 38e46a84 ldrsb w4, [x20, x4]&lt;/span&gt;&lt;span id=&#34;__span-7-162&#34;&gt;&lt;a id=&#34;__codelineno-7-162&#34; name=&#34;__codelineno-7-162&#34; href=&#34;#__codelineno-7-162&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-163&#34;&gt;&lt;a id=&#34;__codelineno-7-163&#34; name=&#34;__codelineno-7-163&#34; href=&#34;#__codelineno-7-163&#34;&gt;&lt;/a&gt;# Dispatch: 找到下一个 Opcode 对应的代码的入口，然后跳转过去&lt;/span&gt;&lt;span id=&#34;__span-7-164&#34;&gt;&lt;a id=&#34;__codelineno-7-164&#34; name=&#34;__codelineno-7-164&#34; href=&#34;#__codelineno-7-164&#34;&gt;&lt;/a&gt; ========= Dispatch - Dispatch@../../src/interpreter/interpreter-assembler.cc:1278 - AssembleArchInstruction@../../src/compiler/backend/arm64/code-generator-arm64.cc:978&lt;/span&gt;&lt;span id=&#34;__span-7-165&#34;&gt;&lt;a id=&#34;__codelineno-7-165&#34; name=&#34;__codelineno-7-165&#34; href=&#34;#__codelineno-7-165&#34;&gt;&lt;/a&gt;# x3 是 LdaSmi 当前所在的 bytecode offset，加 2 是因为 LdaSmi 占用了两个字节&lt;/span&gt;&lt;span id=&#34;__span-7-166&#34;&gt;&lt;a id=&#34;__codelineno-7-166&#34; name=&#34;__codelineno-7-166&#34; href=&#34;#__codelineno-7-166&#34;&gt;&lt;/a&gt;# x19 = x3 + 2，就是 bytecode offset 前进两个字节，指向下一个字节码&lt;/span&gt;&lt;span id=&#34;__span-7-167&#34;&gt;&lt;a id=&#34;__codelineno-7-167&#34; name=&#34;__codelineno-7-167&#34; href=&#34;#__codelineno-7-167&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bbc bc 91000873 add x19, x3, #0x2 (2)&lt;/span&gt;&lt;span id=&#34;__span-7-168&#34;&gt;&lt;a id=&#34;__codelineno-7-168&#34; name=&#34;__codelineno-7-168&#34; href=&#34;#__codelineno-7-168&#34;&gt;&lt;/a&gt;# x20 是 bytecode array，从 bytecode array 读取下一个字节码的第一个字节到 x3 寄存器&lt;/span&gt;&lt;span id=&#34;__span-7-169&#34;&gt;&lt;a id=&#34;__codelineno-7-169&#34; name=&#34;__codelineno-7-169&#34; href=&#34;#__codelineno-7-169&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bc0 c0 38736a83 ldrb w3, [x20, x19]&lt;/span&gt;&lt;span id=&#34;__span-7-170&#34;&gt;&lt;a id=&#34;__codelineno-7-170&#34; name=&#34;__codelineno-7-170&#34; href=&#34;#__codelineno-7-170&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-171&#34;&gt;&lt;a id=&#34;__codelineno-7-171&#34; name=&#34;__codelineno-7-171&#34; href=&#34;#__codelineno-7-171&#34;&gt;&lt;/a&gt;# 接下来检查在 x3 寄存器当中的字节码的第一个字节（Opcode），如果它：&lt;/span&gt;&lt;span id=&#34;__span-7-172&#34;&gt;&lt;a id=&#34;__codelineno-7-172&#34; name=&#34;__codelineno-7-172&#34; href=&#34;#__codelineno-7-172&#34;&gt;&lt;/a&gt;# 1. 小于 187(kFirstShortStar)，说明它不是特殊的 Short Star (Star0-Star15) 字节码&lt;/span&gt;&lt;span id=&#34;__span-7-173&#34;&gt;&lt;a id=&#34;__codelineno-7-173&#34; name=&#34;__codelineno-7-173&#34; href=&#34;#__codelineno-7-173&#34;&gt;&lt;/a&gt;# 2. 介于 187(kFirstShortStar) 和 202(kLastShortStar) 之间，说明它是特殊的 Short Star (Star0-Star15) 字节码&lt;/span&gt;&lt;span id=&#34;__span-7-174&#34;&gt;&lt;a id=&#34;__codelineno-7-174&#34; name=&#34;__codelineno-7-174&#34; href=&#34;#__codelineno-7-174&#34;&gt;&lt;/a&gt;# 3. 如果大于 202(kLastShortStar)，说明它是非法的字节码&lt;/span&gt;&lt;span id=&#34;__span-7-175&#34;&gt;&lt;a id=&#34;__codelineno-7-175&#34; name=&#34;__codelineno-7-175&#34; href=&#34;#__codelineno-7-175&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-176&#34;&gt;&lt;a id=&#34;__codelineno-7-176&#34; name=&#34;__codelineno-7-176&#34; href=&#34;#__codelineno-7-176&#34;&gt;&lt;/a&gt;# 如果 x3 寄存器大于或等于 187，说明这个字节码可能是 Short Star 字节码，就跳转到后面的 B2&lt;/span&gt;&lt;span id=&#34;__span-7-177&#34;&gt;&lt;a id=&#34;__codelineno-7-177&#34; name=&#34;__codelineno-7-177&#34; href=&#34;#__codelineno-7-177&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bc4 c4 7102ec7f cmp w3, #0xbb (187)&lt;/span&gt;&lt;span id=&#34;__span-7-178&#34;&gt;&lt;a id=&#34;__codelineno-7-178&#34; name=&#34;__codelineno-7-178&#34; href=&#34;#__codelineno-7-178&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bc8 c8 54000102 b.hs #+0x20 (addr 0xc6ccfe4a8be8)&lt;/span&gt;&lt;span id=&#34;__span-7-179&#34;&gt;&lt;a id=&#34;__codelineno-7-179&#34; name=&#34;__codelineno-7-179&#34; href=&#34;#__codelineno-7-179&#34;&gt;&lt;/a&gt; -- B1 start --&lt;/span&gt;&lt;span id=&#34;__span-7-180&#34;&gt;&lt;a id=&#34;__codelineno-7-180&#34; name=&#34;__codelineno-7-180&#34; href=&#34;#__codelineno-7-180&#34;&gt;&lt;/a&gt;# 此时 x3 小于 187&lt;/span&gt;&lt;span id=&#34;__span-7-181&#34;&gt;&lt;a id=&#34;__codelineno-7-181&#34; name=&#34;__codelineno-7-181&#34; href=&#34;#__codelineno-7-181&#34;&gt;&lt;/a&gt;# 从栈上读取 x21 即 dispatch table register&lt;/span&gt;&lt;span id=&#34;__span-7-182&#34;&gt;&lt;a id=&#34;__codelineno-7-182&#34; name=&#34;__codelineno-7-182&#34; href=&#34;#__codelineno-7-182&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bcc cc f9400ff5 ldr x21, [sp, #24]&lt;/span&gt;&lt;span id=&#34;__span-7-183&#34;&gt;&lt;a id=&#34;__codelineno-7-183&#34; name=&#34;__codelineno-7-183&#34; href=&#34;#__codelineno-7-183&#34;&gt;&lt;/a&gt;# 从 dispatch table，以 x3 为下标，读取下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-7-184&#34;&gt;&lt;a id=&#34;__codelineno-7-184&#34; name=&#34;__codelineno-7-184&#34; href=&#34;#__codelineno-7-184&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bd0 d0 f8637aa2 ldr x2, [x21, x3, lsl #3]&lt;/span&gt;&lt;span id=&#34;__span-7-185&#34;&gt;&lt;a id=&#34;__codelineno-7-185&#34; name=&#34;__codelineno-7-185&#34; href=&#34;#__codelineno-7-185&#34;&gt;&lt;/a&gt;# 把之前 LdaSmi 计算得到的 x4 寄存器写到 `accumulator` 即 x0 寄存器当中&lt;/span&gt;&lt;span id=&#34;__span-7-186&#34;&gt;&lt;a id=&#34;__codelineno-7-186&#34; name=&#34;__codelineno-7-186&#34; href=&#34;#__codelineno-7-186&#34;&gt;&lt;/a&gt;# 这里 x0 = 2 * x4，是因为 v8 用最低位表示这是一个 Smi（用 0 表示）还是一个指针（用 1 表示）&lt;/span&gt;&lt;span id=&#34;__span-7-187&#34;&gt;&lt;a id=&#34;__codelineno-7-187&#34; name=&#34;__codelineno-7-187&#34; href=&#34;#__codelineno-7-187&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bd4 d4 0b040080 add w0, w4, w4&lt;/span&gt;&lt;span id=&#34;__span-7-188&#34;&gt;&lt;a id=&#34;__codelineno-7-188&#34; name=&#34;__codelineno-7-188&#34; href=&#34;#__codelineno-7-188&#34;&gt;&lt;/a&gt;# 恢复调用函数前的旧 fp 和 lr&lt;/span&gt;&lt;span id=&#34;__span-7-189&#34;&gt;&lt;a id=&#34;__codelineno-7-189&#34; name=&#34;__codelineno-7-189&#34; href=&#34;#__codelineno-7-189&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bd8 d8 a9407bbd ldp fp, lr, [fp]&lt;/span&gt;&lt;span id=&#34;__span-7-190&#34;&gt;&lt;a id=&#34;__codelineno-7-190&#34; name=&#34;__codelineno-7-190&#34; href=&#34;#__codelineno-7-190&#34;&gt;&lt;/a&gt;# 恢复调用函数前的旧 sp&lt;/span&gt;&lt;span id=&#34;__span-7-191&#34;&gt;&lt;a id=&#34;__codelineno-7-191&#34; name=&#34;__codelineno-7-191&#34; href=&#34;#__codelineno-7-191&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bdc dc 910103ff add sp, sp, #0x40 (64)&lt;/span&gt;&lt;span id=&#34;__span-7-192&#34;&gt;&lt;a id=&#34;__codelineno-7-192&#34; name=&#34;__codelineno-7-192&#34; href=&#34;#__codelineno-7-192&#34;&gt;&lt;/a&gt;# 下一个字节码对应的代码的地址已经保存在 x2 寄存器当中，跳转过去&lt;/span&gt;&lt;span id=&#34;__span-7-193&#34;&gt;&lt;a id=&#34;__codelineno-7-193&#34; name=&#34;__codelineno-7-193&#34; href=&#34;#__codelineno-7-193&#34;&gt;&lt;/a&gt;0xc6ccfe4a8be0 e0 aa0203f1 mov x17, x2&lt;/span&gt;&lt;span id=&#34;__span-7-194&#34;&gt;&lt;a id=&#34;__codelineno-7-194&#34; name=&#34;__codelineno-7-194&#34; href=&#34;#__codelineno-7-194&#34;&gt;&lt;/a&gt;0xc6ccfe4a8be4 e4 d61f0220 br x17&lt;/span&gt;&lt;span id=&#34;__span-7-195&#34;&gt;&lt;a id=&#34;__codelineno-7-195&#34; name=&#34;__codelineno-7-195&#34; href=&#34;#__codelineno-7-195&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-196&#34;&gt;&lt;a id=&#34;__codelineno-7-196&#34; name=&#34;__codelineno-7-196&#34; href=&#34;#__codelineno-7-196&#34;&gt;&lt;/a&gt; -- B2 start --&lt;/span&gt;&lt;span id=&#34;__span-7-197&#34;&gt;&lt;a id=&#34;__codelineno-7-197&#34; name=&#34;__codelineno-7-197&#34; href=&#34;#__codelineno-7-197&#34;&gt;&lt;/a&gt; [ Assert: UintPtrGreaterThanOrEqual(opcode, UintPtrConstant(static_cast&amp;lt;int&amp;gt;( Bytecode::kFirstShortStar))) - StoreRegisterForShortStar@../../src/interpreter/interpreter-assembler.cc:310 - AssembleArchInstruction@../../src/compiler/backend/arm64/code-generator-arm64.cc:978&lt;/span&gt;&lt;span id=&#34;__span-7-198&#34;&gt;&lt;a id=&#34;__codelineno-7-198&#34; name=&#34;__codelineno-7-198&#34; href=&#34;#__codelineno-7-198&#34;&gt;&lt;/a&gt; ] Assert - AssembleArchInstruction@../../src/compiler/backend/arm64/code-generator-arm64.cc:978&lt;/span&gt;&lt;span id=&#34;__span-7-199&#34;&gt;&lt;a id=&#34;__codelineno-7-199&#34; name=&#34;__codelineno-7-199&#34; href=&#34;#__codelineno-7-199&#34;&gt;&lt;/a&gt; [ Assert: UintPtrLessThanOrEqual( opcode, UintPtrConstant(static_cast&amp;lt;int&amp;gt;(Bytecode::kLastShortStar))) - StoreRegisterForShortStar@../../src/interpreter/interpreter-assembler.cc:314 - AssembleArchInstruction@../../src/compiler/backend/arm64/code-generator-arm64.cc:978&lt;/span&gt;&lt;span id=&#34;__span-7-200&#34;&gt;&lt;a id=&#34;__codelineno-7-200&#34; name=&#34;__codelineno-7-200&#34; href=&#34;#__codelineno-7-200&#34;&gt;&lt;/a&gt;# 此时 x3 大于或等于 187&lt;/span&gt;&lt;span id=&#34;__span-7-201&#34;&gt;&lt;a id=&#34;__codelineno-7-201&#34; name=&#34;__codelineno-7-201&#34; href=&#34;#__codelineno-7-201&#34;&gt;&lt;/a&gt;# 进一步判断 x3 是否大于 202，如果大于，则跳转到后面的 B3&lt;/span&gt;&lt;span id=&#34;__span-7-202&#34;&gt;&lt;a id=&#34;__codelineno-7-202&#34; name=&#34;__codelineno-7-202&#34; href=&#34;#__codelineno-7-202&#34;&gt;&lt;/a&gt;0xc6ccfe4a8be8 e8 7103287f cmp w3, #0xca (202)&lt;/span&gt;&lt;span id=&#34;__span-7-203&#34;&gt;&lt;a id=&#34;__codelineno-7-203&#34; name=&#34;__codelineno-7-203&#34; href=&#34;#__codelineno-7-203&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bec ec 540001c8 b.hi #+0x38 (addr 0xc6ccfe4a8c24)&lt;/span&gt;&lt;span id=&#34;__span-7-204&#34;&gt;&lt;a id=&#34;__codelineno-7-204&#34; name=&#34;__codelineno-7-204&#34; href=&#34;#__codelineno-7-204&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-205&#34;&gt;&lt;a id=&#34;__codelineno-7-205&#34; name=&#34;__codelineno-7-205&#34; href=&#34;#__codelineno-7-205&#34;&gt;&lt;/a&gt; -- B4 start --&lt;/span&gt;&lt;span id=&#34;__span-7-206&#34;&gt;&lt;a id=&#34;__codelineno-7-206&#34; name=&#34;__codelineno-7-206&#34; href=&#34;#__codelineno-7-206&#34;&gt;&lt;/a&gt;# 此时 x3 介于 187 和 202 之间，是一个 Short Star&lt;/span&gt;&lt;span id=&#34;__span-7-207&#34;&gt;&lt;a id=&#34;__codelineno-7-207&#34; name=&#34;__codelineno-7-207&#34; href=&#34;#__codelineno-7-207&#34;&gt;&lt;/a&gt;# Short Star 做的事情就是把 `accumulator` 寄存器的值复制到 r0-r15 当中指定的寄存器&lt;/span&gt;&lt;span id=&#34;__span-7-208&#34;&gt;&lt;a id=&#34;__codelineno-7-208&#34; name=&#34;__codelineno-7-208&#34; href=&#34;#__codelineno-7-208&#34;&gt;&lt;/a&gt;# 所以直接在这里实现了 Short Star 的语义，而不是单独跑一段代码去执行它&lt;/span&gt;&lt;span id=&#34;__span-7-209&#34;&gt;&lt;a id=&#34;__codelineno-7-209&#34; name=&#34;__codelineno-7-209&#34; href=&#34;#__codelineno-7-209&#34;&gt;&lt;/a&gt;# 由于 r0-r15 寄存器保存在栈上，所以通过 x3 计算出 Short Star 要写到哪个寄存器&lt;/span&gt;&lt;span id=&#34;__span-7-210&#34;&gt;&lt;a id=&#34;__codelineno-7-210&#34; name=&#34;__codelineno-7-210&#34; href=&#34;#__codelineno-7-210&#34;&gt;&lt;/a&gt;# 进而直接计算要写到的栈的地址的偏移&lt;/span&gt;&lt;span id=&#34;__span-7-211&#34;&gt;&lt;a id=&#34;__codelineno-7-211&#34; name=&#34;__codelineno-7-211&#34; href=&#34;#__codelineno-7-211&#34;&gt;&lt;/a&gt;# 寻找一个通项公式，找到 Star0-Star15 要写入的地址：&lt;/span&gt;&lt;span id=&#34;__span-7-212&#34;&gt;&lt;a id=&#34;__codelineno-7-212&#34; name=&#34;__codelineno-7-212&#34; href=&#34;#__codelineno-7-212&#34;&gt;&lt;/a&gt;# Star0(202): r0 的位置在栈顶再往下的 8 字节，即 fp 减去 56&lt;/span&gt;&lt;span id=&#34;__span-7-213&#34;&gt;&lt;a id=&#34;__codelineno-7-213&#34; name=&#34;__codelineno-7-213&#34; href=&#34;#__codelineno-7-213&#34;&gt;&lt;/a&gt;# Star0(187): r15 的位置在栈顶再往下的 8*16 字节，即 fp 减去 176&lt;/span&gt;&lt;span id=&#34;__span-7-214&#34;&gt;&lt;a id=&#34;__codelineno-7-214&#34; name=&#34;__codelineno-7-214&#34; href=&#34;#__codelineno-7-214&#34;&gt;&lt;/a&gt;# 相对 fp 的偏移量就等于 x3 * 8 - 1672&lt;/span&gt;&lt;span id=&#34;__span-7-215&#34;&gt;&lt;a id=&#34;__codelineno-7-215&#34; name=&#34;__codelineno-7-215&#34; href=&#34;#__codelineno-7-215&#34;&gt;&lt;/a&gt;# 从而得到下面的代码：&lt;/span&gt;&lt;span id=&#34;__span-7-216&#34;&gt;&lt;a id=&#34;__codelineno-7-216&#34; name=&#34;__codelineno-7-216&#34; href=&#34;#__codelineno-7-216&#34;&gt;&lt;/a&gt;# 计算 x3 = x3 * 8&lt;/span&gt;&lt;span id=&#34;__span-7-217&#34;&gt;&lt;a id=&#34;__codelineno-7-217&#34; name=&#34;__codelineno-7-217&#34; href=&#34;#__codelineno-7-217&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bf0 f0 d37df063 lsl x3, x3, #3&lt;/span&gt;&lt;span id=&#34;__span-7-218&#34;&gt;&lt;a id=&#34;__codelineno-7-218&#34; name=&#34;__codelineno-7-218&#34; href=&#34;#__codelineno-7-218&#34;&gt;&lt;/a&gt;# 把之前 LdaSmi 计算得到的 x4 寄存器写到 `accumulator` 即 x0 寄存器当中&lt;/span&gt;&lt;span id=&#34;__span-7-219&#34;&gt;&lt;a id=&#34;__codelineno-7-219&#34; name=&#34;__codelineno-7-219&#34; href=&#34;#__codelineno-7-219&#34;&gt;&lt;/a&gt;# 这里 x0 = 2 * x4，是因为 v8 用最低位表示这是一个 Smi（用 0 表示）还是一个指针（用 1 表示）&lt;/span&gt;&lt;span id=&#34;__span-7-220&#34;&gt;&lt;a id=&#34;__codelineno-7-220&#34; name=&#34;__codelineno-7-220&#34; href=&#34;#__codelineno-7-220&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bf4 f4 0b040080 add w0, w4, w4&lt;/span&gt;&lt;span id=&#34;__span-7-221&#34;&gt;&lt;a id=&#34;__codelineno-7-221&#34; name=&#34;__codelineno-7-221&#34; href=&#34;#__codelineno-7-221&#34;&gt;&lt;/a&gt; ] Assert - AssembleArchInstruction@../../src/compiler/backend/arm64/code-generator-arm64.cc:978&lt;/span&gt;&lt;span id=&#34;__span-7-222&#34;&gt;&lt;a id=&#34;__codelineno-7-222&#34; name=&#34;__codelineno-7-222&#34; href=&#34;#__codelineno-7-222&#34;&gt;&lt;/a&gt;# 计算 x3 = x3 - 1672，就得到了相对 fp 的偏移量&lt;/span&gt;&lt;span id=&#34;__span-7-223&#34;&gt;&lt;a id=&#34;__codelineno-7-223&#34; name=&#34;__codelineno-7-223&#34; href=&#34;#__codelineno-7-223&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bf8 f8 d11a2063 sub x3, x3, #0x688 (1672)&lt;/span&gt;&lt;span id=&#34;__span-7-224&#34;&gt;&lt;a id=&#34;__codelineno-7-224&#34; name=&#34;__codelineno-7-224&#34; href=&#34;#__codelineno-7-224&#34;&gt;&lt;/a&gt;# 从 fp 的地址读取函数调用前的 fp&lt;/span&gt;&lt;span id=&#34;__span-7-225&#34;&gt;&lt;a id=&#34;__codelineno-7-225&#34; name=&#34;__codelineno-7-225&#34; href=&#34;#__codelineno-7-225&#34;&gt;&lt;/a&gt;0xc6ccfe4a8bfc fc f94003a4 ldr x4, [fp]&lt;/span&gt;&lt;span id=&#34;__span-7-226&#34;&gt;&lt;a id=&#34;__codelineno-7-226&#34; name=&#34;__codelineno-7-226&#34; href=&#34;#__codelineno-7-226&#34;&gt;&lt;/a&gt;# 把 `accumulator` 写入到相对函数调用前的 fp 的对应位置&lt;/span&gt;&lt;span id=&#34;__span-7-227&#34;&gt;&lt;a id=&#34;__codelineno-7-227&#34; name=&#34;__codelineno-7-227&#34; href=&#34;#__codelineno-7-227&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c00 100 f8236880 str x0, [x4, x3]&lt;/span&gt;&lt;span id=&#34;__span-7-228&#34;&gt;&lt;a id=&#34;__codelineno-7-228&#34; name=&#34;__codelineno-7-228&#34; href=&#34;#__codelineno-7-228&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-229&#34;&gt;&lt;a id=&#34;__codelineno-7-229&#34; name=&#34;__codelineno-7-229&#34; href=&#34;#__codelineno-7-229&#34;&gt;&lt;/a&gt;# 下面就是 Dispatch 逻辑，只不过这次是执行完 Short Star 字节码后的 Dispatch&lt;/span&gt;&lt;span id=&#34;__span-7-230&#34;&gt;&lt;a id=&#34;__codelineno-7-230&#34; name=&#34;__codelineno-7-230&#34; href=&#34;#__codelineno-7-230&#34;&gt;&lt;/a&gt;# x19 = x3 + 1，就是 bytecode offset 前进一个字节，指向下一个字节码&lt;/span&gt;&lt;span id=&#34;__span-7-231&#34;&gt;&lt;a id=&#34;__codelineno-7-231&#34; name=&#34;__codelineno-7-231&#34; href=&#34;#__codelineno-7-231&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c04 104 91000673 add x19, x19, #0x1 (1)&lt;/span&gt;&lt;span id=&#34;__span-7-232&#34;&gt;&lt;a id=&#34;__codelineno-7-232&#34; name=&#34;__codelineno-7-232&#34; href=&#34;#__codelineno-7-232&#34;&gt;&lt;/a&gt;# x20 是 bytecode array，从 bytecode array 读取下一个字节码的第一个字节到 x3 寄存器&lt;/span&gt;&lt;span id=&#34;__span-7-233&#34;&gt;&lt;a id=&#34;__codelineno-7-233&#34; name=&#34;__codelineno-7-233&#34; href=&#34;#__codelineno-7-233&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c08 108 38736a83 ldrb w3, [x20, x19]&lt;/span&gt;&lt;span id=&#34;__span-7-234&#34;&gt;&lt;a id=&#34;__codelineno-7-234&#34; name=&#34;__codelineno-7-234&#34; href=&#34;#__codelineno-7-234&#34;&gt;&lt;/a&gt;# 从栈上读取 x21 即 dispatch table register&lt;/span&gt;&lt;span id=&#34;__span-7-235&#34;&gt;&lt;a id=&#34;__codelineno-7-235&#34; name=&#34;__codelineno-7-235&#34; href=&#34;#__codelineno-7-235&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c0c 10c f9400ff5 ldr x21, [sp, #24]&lt;/span&gt;&lt;span id=&#34;__span-7-236&#34;&gt;&lt;a id=&#34;__codelineno-7-236&#34; name=&#34;__codelineno-7-236&#34; href=&#34;#__codelineno-7-236&#34;&gt;&lt;/a&gt;# 从 dispatch table，以 x3 为下标，读取下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-7-237&#34;&gt;&lt;a id=&#34;__codelineno-7-237&#34; name=&#34;__codelineno-7-237&#34; href=&#34;#__codelineno-7-237&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c10 110 f8637aa2 ldr x2, [x21, x3, lsl #3]&lt;/span&gt;&lt;span id=&#34;__span-7-238&#34;&gt;&lt;a id=&#34;__codelineno-7-238&#34; name=&#34;__codelineno-7-238&#34; href=&#34;#__codelineno-7-238&#34;&gt;&lt;/a&gt;# 恢复调用函数前的旧 fp 和 lr&lt;/span&gt;&lt;span id=&#34;__span-7-239&#34;&gt;&lt;a id=&#34;__codelineno-7-239&#34; name=&#34;__codelineno-7-239&#34; href=&#34;#__codelineno-7-239&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c14 114 a9407bbd ldp fp, lr, [fp]&lt;/span&gt;&lt;span id=&#34;__span-7-240&#34;&gt;&lt;a id=&#34;__codelineno-7-240&#34; name=&#34;__codelineno-7-240&#34; href=&#34;#__codelineno-7-240&#34;&gt;&lt;/a&gt;# 恢复调用函数前的旧 sp&lt;/span&gt;&lt;span id=&#34;__span-7-241&#34;&gt;&lt;a id=&#34;__codelineno-7-241&#34; name=&#34;__codelineno-7-241&#34; href=&#34;#__codelineno-7-241&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c18 118 910103ff add sp, sp, #0x40 (64)&lt;/span&gt;&lt;span id=&#34;__span-7-242&#34;&gt;&lt;a id=&#34;__codelineno-7-242&#34; name=&#34;__codelineno-7-242&#34; href=&#34;#__codelineno-7-242&#34;&gt;&lt;/a&gt;# 下一个字节码对应的代码的地址已经保存在 x2 寄存器当中，跳转过去&lt;/span&gt;&lt;span id=&#34;__span-7-243&#34;&gt;&lt;a id=&#34;__codelineno-7-243&#34; name=&#34;__codelineno-7-243&#34; href=&#34;#__codelineno-7-243&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c1c 11c aa0203f1 mov x17, x2&lt;/span&gt;&lt;span id=&#34;__span-7-244&#34;&gt;&lt;a id=&#34;__codelineno-7-244&#34; name=&#34;__codelineno-7-244&#34; href=&#34;#__codelineno-7-244&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c20 120 d61f0220 br x17&lt;/span&gt;&lt;span id=&#34;__span-7-245&#34;&gt;&lt;a id=&#34;__codelineno-7-245&#34; name=&#34;__codelineno-7-245&#34; href=&#34;#__codelineno-7-245&#34;&gt;&lt;/a&gt; -- B5 start (no frame) --&lt;/span&gt;&lt;span id=&#34;__span-7-246&#34;&gt;&lt;a id=&#34;__codelineno-7-246&#34; name=&#34;__codelineno-7-246&#34; href=&#34;#__codelineno-7-246&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-247&#34;&gt;&lt;a id=&#34;__codelineno-7-247&#34; name=&#34;__codelineno-7-247&#34; href=&#34;#__codelineno-7-247&#34;&gt;&lt;/a&gt; -- B3 start (deferred) --&lt;/span&gt;&lt;span id=&#34;__span-7-248&#34;&gt;&lt;a id=&#34;__codelineno-7-248&#34; name=&#34;__codelineno-7-248&#34; href=&#34;#__codelineno-7-248&#34;&gt;&lt;/a&gt;# 此时 x3 大于 202，为非法字节码，跳转到错误处理的逻辑&lt;/span&gt;&lt;span id=&#34;__span-7-249&#34;&gt;&lt;a id=&#34;__codelineno-7-249&#34; name=&#34;__codelineno-7-249&#34; href=&#34;#__codelineno-7-249&#34;&gt;&lt;/a&gt; [ - LoadFromConstantsTable@../../src/codegen/arm64/macro-assembler-arm64.cc:2166&lt;/span&gt;&lt;span id=&#34;__span-7-250&#34;&gt;&lt;a id=&#34;__codelineno-7-250&#34; name=&#34;__codelineno-7-250&#34; href=&#34;#__codelineno-7-250&#34;&gt;&lt;/a&gt; [ - LoadRoot@../../src/codegen/arm64/macro-assembler-arm64.cc:1954&lt;/span&gt;&lt;span id=&#34;__span-7-251&#34;&gt;&lt;a id=&#34;__codelineno-7-251&#34; name=&#34;__codelineno-7-251&#34; href=&#34;#__codelineno-7-251&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c24 124 f94d5f41 ldr x1, [x26, #6840]&lt;/span&gt;&lt;span id=&#34;__span-7-252&#34;&gt;&lt;a id=&#34;__codelineno-7-252&#34; name=&#34;__codelineno-7-252&#34; href=&#34;#__codelineno-7-252&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-253&#34;&gt;&lt;a id=&#34;__codelineno-7-253&#34; name=&#34;__codelineno-7-253&#34; href=&#34;#__codelineno-7-253&#34;&gt;&lt;/a&gt; [ - DecompressTagged@../../src/codegen/arm64/macro-assembler-arm64.cc:3448&lt;/span&gt;&lt;span id=&#34;__span-7-254&#34;&gt;&lt;a id=&#34;__codelineno-7-254&#34; name=&#34;__codelineno-7-254&#34; href=&#34;#__codelineno-7-254&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c28 128 d28bd170 movz x16, #0x5e8b&lt;/span&gt;&lt;span id=&#34;__span-7-255&#34;&gt;&lt;a id=&#34;__codelineno-7-255&#34; name=&#34;__codelineno-7-255&#34; href=&#34;#__codelineno-7-255&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c2c 12c b8706821 ldr w1, [x1, x16]&lt;/span&gt;&lt;span id=&#34;__span-7-256&#34;&gt;&lt;a id=&#34;__codelineno-7-256&#34; name=&#34;__codelineno-7-256&#34; href=&#34;#__codelineno-7-256&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c30 130 8b010381 add x1, x28, x1&lt;/span&gt;&lt;span id=&#34;__span-7-257&#34;&gt;&lt;a id=&#34;__codelineno-7-257&#34; name=&#34;__codelineno-7-257&#34; href=&#34;#__codelineno-7-257&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-258&#34;&gt;&lt;a id=&#34;__codelineno-7-258&#34; name=&#34;__codelineno-7-258&#34; href=&#34;#__codelineno-7-258&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-259&#34;&gt;&lt;a id=&#34;__codelineno-7-259&#34; name=&#34;__codelineno-7-259&#34; href=&#34;#__codelineno-7-259&#34;&gt;&lt;/a&gt; [ Frame: NO_FRAME_TYPE&lt;/span&gt;&lt;span id=&#34;__span-7-260&#34;&gt;&lt;a id=&#34;__codelineno-7-260&#34; name=&#34;__codelineno-7-260&#34; href=&#34;#__codelineno-7-260&#34;&gt;&lt;/a&gt; [ Inlined Trampoline for call to AbortCSADcheck - CallBuiltin@../../src/codegen/arm64/macro-assembler-arm64.cc:2391&lt;/span&gt;&lt;span id=&#34;__span-7-261&#34;&gt;&lt;a id=&#34;__codelineno-7-261&#34; name=&#34;__codelineno-7-261&#34; href=&#34;#__codelineno-7-261&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c34 134 96a4e10b bl #-0x56c7bd4 (addr 0xc6ccf8de1060) ;; code: Builtin::AbortCSADcheck&lt;/span&gt;&lt;span id=&#34;__span-7-262&#34;&gt;&lt;a id=&#34;__codelineno-7-262&#34; name=&#34;__codelineno-7-262&#34; href=&#34;#__codelineno-7-262&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-263&#34;&gt;&lt;a id=&#34;__codelineno-7-263&#34; name=&#34;__codelineno-7-263&#34; href=&#34;#__codelineno-7-263&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-264&#34;&gt;&lt;a id=&#34;__codelineno-7-264&#34; name=&#34;__codelineno-7-264&#34; href=&#34;#__codelineno-7-264&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c38 138 d4200000 brk #0x0&lt;/span&gt;&lt;span id=&#34;__span-7-265&#34;&gt;&lt;a id=&#34;__codelineno-7-265&#34; name=&#34;__codelineno-7-265&#34; href=&#34;#__codelineno-7-265&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c3c 13c d4200000 brk #0x0&lt;/span&gt;&lt;span id=&#34;__span-7-266&#34;&gt;&lt;a id=&#34;__codelineno-7-266&#34; name=&#34;__codelineno-7-266&#34; href=&#34;#__codelineno-7-266&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c40 140 d503201f nop&lt;/span&gt;&lt;span id=&#34;__span-7-267&#34;&gt;&lt;a id=&#34;__codelineno-7-267&#34; name=&#34;__codelineno-7-267&#34; href=&#34;#__codelineno-7-267&#34;&gt;&lt;/a&gt; ;;; Safepoint table. - Emit@../../src/codegen/safepoint-table.cc:187&lt;/span&gt;&lt;span id=&#34;__span-7-268&#34;&gt;&lt;a id=&#34;__codelineno-7-268&#34; name=&#34;__codelineno-7-268&#34; href=&#34;#__codelineno-7-268&#34;&gt;&lt;/a&gt; ]&lt;/span&gt;&lt;span id=&#34;__span-7-269&#34;&gt;&lt;a id=&#34;__codelineno-7-269&#34; name=&#34;__codelineno-7-269&#34; href=&#34;#__codelineno-7-269&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-270&#34;&gt;&lt;a id=&#34;__codelineno-7-270&#34; name=&#34;__codelineno-7-270&#34; href=&#34;#__codelineno-7-270&#34;&gt;&lt;/a&gt;External Source positions:&lt;/span&gt;&lt;span id=&#34;__span-7-271&#34;&gt;&lt;a id=&#34;__codelineno-7-271&#34; name=&#34;__codelineno-7-271&#34; href=&#34;#__codelineno-7-271&#34;&gt;&lt;/a&gt; pc offset fileid line&lt;/span&gt;&lt;span id=&#34;__span-7-272&#34;&gt;&lt;a id=&#34;__codelineno-7-272&#34; name=&#34;__codelineno-7-272&#34; href=&#34;#__codelineno-7-272&#34;&gt;&lt;/a&gt; b4 380 72&lt;/span&gt;&lt;span id=&#34;__span-7-273&#34;&gt;&lt;a id=&#34;__codelineno-7-273&#34; name=&#34;__codelineno-7-273&#34; href=&#34;#__codelineno-7-273&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-274&#34;&gt;&lt;a id=&#34;__codelineno-7-274&#34; name=&#34;__codelineno-7-274&#34; href=&#34;#__codelineno-7-274&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-275&#34;&gt;&lt;a id=&#34;__codelineno-7-275&#34; name=&#34;__codelineno-7-275&#34; href=&#34;#__codelineno-7-275&#34;&gt;&lt;/a&gt;Safepoints (entries = 2, byte size = 12)&lt;/span&gt;&lt;span id=&#34;__span-7-276&#34;&gt;&lt;a id=&#34;__codelineno-7-276&#34; name=&#34;__codelineno-7-276&#34; href=&#34;#__codelineno-7-276&#34;&gt;&lt;/a&gt;0xc6ccfe4a8b7c 7c slots (sp-&amp;gt;fp): 01001000&lt;/span&gt;&lt;span id=&#34;__span-7-277&#34;&gt;&lt;a id=&#34;__codelineno-7-277&#34; name=&#34;__codelineno-7-277&#34; href=&#34;#__codelineno-7-277&#34;&gt;&lt;/a&gt;0xc6ccfe4a8ba8 a8 slots (sp-&amp;gt;fp): 00001000&lt;/span&gt;&lt;span id=&#34;__span-7-278&#34;&gt;&lt;a id=&#34;__codelineno-7-278&#34; name=&#34;__codelineno-7-278&#34; href=&#34;#__codelineno-7-278&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-7-279&#34;&gt;&lt;a id=&#34;__codelineno-7-279&#34; name=&#34;__codelineno-7-279&#34; href=&#34;#__codelineno-7-279&#34;&gt;&lt;/a&gt;RelocInfo (size = 3)&lt;/span&gt;&lt;span id=&#34;__span-7-280&#34;&gt;&lt;a id=&#34;__codelineno-7-280&#34; name=&#34;__codelineno-7-280&#34; href=&#34;#__codelineno-7-280&#34;&gt;&lt;/a&gt;0xc6ccfe4a8c34 code target (BUILTIN AbortCSADcheck) (0xc6ccf8de1060)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了简化代码，关闭了 control flow integrity 相关的代码生成，具体方法是运行 &lt;code&gt;gn args out/arm64.optdebug&lt;/code&gt;，追加一行 &lt;code&gt;v8_control_flow_integrity = false&lt;/code&gt;，再重新 &lt;code&gt;autoninja -C out/arm64.optdebug d8&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;以上是 debug 模式下生成的代码，多了很多检查；如果在 release 模式下，可以观察到更优的指令：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-8-1&#34;&gt;&lt;a id=&#34;__codelineno-8-1&#34; name=&#34;__codelineno-8-1&#34; href=&#34;#__codelineno-8-1&#34;&gt;&lt;/a&gt;kind = BYTECODE_HANDLER&lt;/span&gt;&lt;span id=&#34;__span-8-2&#34;&gt;&lt;a id=&#34;__codelineno-8-2&#34; name=&#34;__codelineno-8-2&#34; href=&#34;#__codelineno-8-2&#34;&gt;&lt;/a&gt;name = LdaSmi&lt;/span&gt;&lt;span id=&#34;__span-8-3&#34;&gt;&lt;a id=&#34;__codelineno-8-3&#34; name=&#34;__codelineno-8-3&#34; href=&#34;#__codelineno-8-3&#34;&gt;&lt;/a&gt;compiler = turbofan&lt;/span&gt;&lt;span id=&#34;__span-8-4&#34;&gt;&lt;a id=&#34;__codelineno-8-4&#34; name=&#34;__codelineno-8-4&#34; href=&#34;#__codelineno-8-4&#34;&gt;&lt;/a&gt;address = 0x31a000462bd&lt;/span&gt;&lt;span id=&#34;__span-8-5&#34;&gt;&lt;a id=&#34;__codelineno-8-5&#34; name=&#34;__codelineno-8-5&#34; href=&#34;#__codelineno-8-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-6&#34;&gt;&lt;a id=&#34;__codelineno-8-6&#34; name=&#34;__codelineno-8-6&#34; href=&#34;#__codelineno-8-6&#34;&gt;&lt;/a&gt;Instructions (size = 80)&lt;/span&gt;&lt;span id=&#34;__span-8-7&#34;&gt;&lt;a id=&#34;__codelineno-8-7&#34; name=&#34;__codelineno-8-7&#34; href=&#34;#__codelineno-8-7&#34;&gt;&lt;/a&gt;# 从这里开始实现 LdaSmi 的语义&lt;/span&gt;&lt;span id=&#34;__span-8-8&#34;&gt;&lt;a id=&#34;__codelineno-8-8&#34; name=&#34;__codelineno-8-8&#34; href=&#34;#__codelineno-8-8&#34;&gt;&lt;/a&gt;# 计算 x19 + 1 的值并写入 x1，得到 LdaSmi 的第二个字节相对 bytecode array 的偏移&lt;/span&gt;&lt;span id=&#34;__span-8-9&#34;&gt;&lt;a id=&#34;__codelineno-8-9&#34; name=&#34;__codelineno-8-9&#34; href=&#34;#__codelineno-8-9&#34;&gt;&lt;/a&gt;0xc903f8193400 0 91000661 add x1, x19, #0x1 (1)&lt;/span&gt;&lt;span id=&#34;__span-8-10&#34;&gt;&lt;a id=&#34;__codelineno-8-10&#34; name=&#34;__codelineno-8-10&#34; href=&#34;#__codelineno-8-10&#34;&gt;&lt;/a&gt;# 从 x20 + x1 地址读取 LdaSmi 的第二个字节到 x1，也就是要加载到 `accumulator` 的值，&lt;/span&gt;&lt;span id=&#34;__span-8-11&#34;&gt;&lt;a id=&#34;__codelineno-8-11&#34; name=&#34;__codelineno-8-11&#34; href=&#34;#__codelineno-8-11&#34;&gt;&lt;/a&gt;# 之后 x1 的值会写入到 x0，也就是 `accumulator` 对应的寄存器&lt;/span&gt;&lt;span id=&#34;__span-8-12&#34;&gt;&lt;a id=&#34;__codelineno-8-12&#34; name=&#34;__codelineno-8-12&#34; href=&#34;#__codelineno-8-12&#34;&gt;&lt;/a&gt;0xc903f8193404 4 38e16a81 ldrsb w1, [x20, x1]&lt;/span&gt;&lt;span id=&#34;__span-8-13&#34;&gt;&lt;a id=&#34;__codelineno-8-13&#34; name=&#34;__codelineno-8-13&#34; href=&#34;#__codelineno-8-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-14&#34;&gt;&lt;a id=&#34;__codelineno-8-14&#34; name=&#34;__codelineno-8-14&#34; href=&#34;#__codelineno-8-14&#34;&gt;&lt;/a&gt;# Dispatch: 找到下一个 Opcode 对应的代码的入口，然后跳转过去&lt;/span&gt;&lt;span id=&#34;__span-8-15&#34;&gt;&lt;a id=&#34;__codelineno-8-15&#34; name=&#34;__codelineno-8-15&#34; href=&#34;#__codelineno-8-15&#34;&gt;&lt;/a&gt;# x19 = x19 + 2，就是 bytecode offset 前进两个字节，指向下一个字节码&lt;/span&gt;&lt;span id=&#34;__span-8-16&#34;&gt;&lt;a id=&#34;__codelineno-8-16&#34; name=&#34;__codelineno-8-16&#34; href=&#34;#__codelineno-8-16&#34;&gt;&lt;/a&gt;0xc903f8193408 8 91000a73 add x19, x19, #0x2 (2)&lt;/span&gt;&lt;span id=&#34;__span-8-17&#34;&gt;&lt;a id=&#34;__codelineno-8-17&#34; name=&#34;__codelineno-8-17&#34; href=&#34;#__codelineno-8-17&#34;&gt;&lt;/a&gt;# x20 是 bytecode array，从 bytecode array 读取下一个字节码的第一个字节到 x3 寄存器&lt;/span&gt;&lt;span id=&#34;__span-8-18&#34;&gt;&lt;a id=&#34;__codelineno-8-18&#34; name=&#34;__codelineno-8-18&#34; href=&#34;#__codelineno-8-18&#34;&gt;&lt;/a&gt;0xc903f819340c c 38736a83 ldrb w3, [x20, x19]&lt;/span&gt;&lt;span id=&#34;__span-8-19&#34;&gt;&lt;a id=&#34;__codelineno-8-19&#34; name=&#34;__codelineno-8-19&#34; href=&#34;#__codelineno-8-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-20&#34;&gt;&lt;a id=&#34;__codelineno-8-20&#34; name=&#34;__codelineno-8-20&#34; href=&#34;#__codelineno-8-20&#34;&gt;&lt;/a&gt;# 计算 x4 = x3 * 8，也就是 dispatch table 中下一个字节码对应的代码地址的字节偏移&lt;/span&gt;&lt;span id=&#34;__span-8-21&#34;&gt;&lt;a id=&#34;__codelineno-8-21&#34; name=&#34;__codelineno-8-21&#34; href=&#34;#__codelineno-8-21&#34;&gt;&lt;/a&gt;0xc903f8193410 10 d37df064 lsl x4, x3, #3&lt;/span&gt;&lt;span id=&#34;__span-8-22&#34;&gt;&lt;a id=&#34;__codelineno-8-22&#34; name=&#34;__codelineno-8-22&#34; href=&#34;#__codelineno-8-22&#34;&gt;&lt;/a&gt;# 把之前 LdaSmi 计算得到的 x1 寄存器写到 `accumulator` 即 x0 寄存器当中&lt;/span&gt;&lt;span id=&#34;__span-8-23&#34;&gt;&lt;a id=&#34;__codelineno-8-23&#34; name=&#34;__codelineno-8-23&#34; href=&#34;#__codelineno-8-23&#34;&gt;&lt;/a&gt;# 这里 x0 = 2 * x1，是因为 v8 用最低位表示这是一个 Smi（用 0 表示）还是一个指针（用 1 表示）&lt;/span&gt;&lt;span id=&#34;__span-8-24&#34;&gt;&lt;a id=&#34;__codelineno-8-24&#34; name=&#34;__codelineno-8-24&#34; href=&#34;#__codelineno-8-24&#34;&gt;&lt;/a&gt;0xc903f8193414 14 0b010020 add w0, w1, w1&lt;/span&gt;&lt;span id=&#34;__span-8-25&#34;&gt;&lt;a id=&#34;__codelineno-8-25&#34; name=&#34;__codelineno-8-25&#34; href=&#34;#__codelineno-8-25&#34;&gt;&lt;/a&gt;# 如果 x3 寄存器大于或等于 187，说明这个字节码可能是 Short Star 字节码，就跳转到后面的 0xc903f819342c 地址&lt;/span&gt;&lt;span id=&#34;__span-8-26&#34;&gt;&lt;a id=&#34;__codelineno-8-26&#34; name=&#34;__codelineno-8-26&#34; href=&#34;#__codelineno-8-26&#34;&gt;&lt;/a&gt;0xc903f8193418 18 7102ec7f cmp w3, #0xbb (187)&lt;/span&gt;&lt;span id=&#34;__span-8-27&#34;&gt;&lt;a id=&#34;__codelineno-8-27&#34; name=&#34;__codelineno-8-27&#34; href=&#34;#__codelineno-8-27&#34;&gt;&lt;/a&gt;0xc903f819341c 1c 54000082 b.hs #+0x10 (addr 0xc903f819342c)&lt;/span&gt;&lt;span id=&#34;__span-8-28&#34;&gt;&lt;a id=&#34;__codelineno-8-28&#34; name=&#34;__codelineno-8-28&#34; href=&#34;#__codelineno-8-28&#34;&gt;&lt;/a&gt;# 如果没有跳转，此时 x3 寄存器小于 187&lt;/span&gt;&lt;span id=&#34;__span-8-29&#34;&gt;&lt;a id=&#34;__codelineno-8-29&#34; name=&#34;__codelineno-8-29&#34; href=&#34;#__codelineno-8-29&#34;&gt;&lt;/a&gt;# 从 dispatch table，以 x3 为下标（x4 = x3 * 8），读取下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-8-30&#34;&gt;&lt;a id=&#34;__codelineno-8-30&#34; name=&#34;__codelineno-8-30&#34; href=&#34;#__codelineno-8-30&#34;&gt;&lt;/a&gt;0xc903f8193420 20 f8646aa2 ldr x2, [x21, x4]&lt;/span&gt;&lt;span id=&#34;__span-8-31&#34;&gt;&lt;a id=&#34;__codelineno-8-31&#34; name=&#34;__codelineno-8-31&#34; href=&#34;#__codelineno-8-31&#34;&gt;&lt;/a&gt;# 跳转到下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-8-32&#34;&gt;&lt;a id=&#34;__codelineno-8-32&#34; name=&#34;__codelineno-8-32&#34; href=&#34;#__codelineno-8-32&#34;&gt;&lt;/a&gt;0xc903f8193424 24 aa0203f1 mov x17, x2&lt;/span&gt;&lt;span id=&#34;__span-8-33&#34;&gt;&lt;a id=&#34;__codelineno-8-33&#34; name=&#34;__codelineno-8-33&#34; href=&#34;#__codelineno-8-33&#34;&gt;&lt;/a&gt;0xc903f8193428 28 d61f0220 br x17&lt;/span&gt;&lt;span id=&#34;__span-8-34&#34;&gt;&lt;a id=&#34;__codelineno-8-34&#34; name=&#34;__codelineno-8-34&#34; href=&#34;#__codelineno-8-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-35&#34;&gt;&lt;a id=&#34;__codelineno-8-35&#34; name=&#34;__codelineno-8-35&#34; href=&#34;#__codelineno-8-35&#34;&gt;&lt;/a&gt;# 实现 Short Star 字节码&lt;/span&gt;&lt;span id=&#34;__span-8-36&#34;&gt;&lt;a id=&#34;__codelineno-8-36&#34; name=&#34;__codelineno-8-36&#34; href=&#34;#__codelineno-8-36&#34;&gt;&lt;/a&gt;# 计算出要写入的 r0-r15 寄存器相对 fp 的偏移量 x3 * 8 - 1672&lt;/span&gt;&lt;span id=&#34;__span-8-37&#34;&gt;&lt;a id=&#34;__codelineno-8-37&#34; name=&#34;__codelineno-8-37&#34; href=&#34;#__codelineno-8-37&#34;&gt;&lt;/a&gt;# 这个偏移量的计算公式在前面推导过，此时 x4 等于 x3 * 8&lt;/span&gt;&lt;span id=&#34;__span-8-38&#34;&gt;&lt;a id=&#34;__codelineno-8-38&#34; name=&#34;__codelineno-8-38&#34; href=&#34;#__codelineno-8-38&#34;&gt;&lt;/a&gt;0xc903f819342c 2c d11a2081 sub x1, x4, #0x688 (1672)&lt;/span&gt;&lt;span id=&#34;__span-8-39&#34;&gt;&lt;a id=&#34;__codelineno-8-39&#34; name=&#34;__codelineno-8-39&#34; href=&#34;#__codelineno-8-39&#34;&gt;&lt;/a&gt;0xc903f8193430 30 aa1d03e3 mov x3, fp&lt;/span&gt;&lt;span id=&#34;__span-8-40&#34;&gt;&lt;a id=&#34;__codelineno-8-40&#34; name=&#34;__codelineno-8-40&#34; href=&#34;#__codelineno-8-40&#34;&gt;&lt;/a&gt;# 把 `accumulator` 写入到相对 fp 的对应位置&lt;/span&gt;&lt;span id=&#34;__span-8-41&#34;&gt;&lt;a id=&#34;__codelineno-8-41&#34; name=&#34;__codelineno-8-41&#34; href=&#34;#__codelineno-8-41&#34;&gt;&lt;/a&gt;0xc903f8193434 34 f8216860 str x0, [x3, x1]&lt;/span&gt;&lt;span id=&#34;__span-8-42&#34;&gt;&lt;a id=&#34;__codelineno-8-42&#34; name=&#34;__codelineno-8-42&#34; href=&#34;#__codelineno-8-42&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-8-43&#34;&gt;&lt;a id=&#34;__codelineno-8-43&#34; name=&#34;__codelineno-8-43&#34; href=&#34;#__codelineno-8-43&#34;&gt;&lt;/a&gt;# 下面就是 Dispatch 逻辑，只不过这次是执行完 Short Star 字节码后的 Dispatch&lt;/span&gt;&lt;span id=&#34;__span-8-44&#34;&gt;&lt;a id=&#34;__codelineno-8-44&#34; name=&#34;__codelineno-8-44&#34; href=&#34;#__codelineno-8-44&#34;&gt;&lt;/a&gt;# x19 = x19 + 1，就是 bytecode offset 前进一个字节，指向下一个字节码&lt;/span&gt;&lt;span id=&#34;__span-8-45&#34;&gt;&lt;a id=&#34;__codelineno-8-45&#34; name=&#34;__codelineno-8-45&#34; href=&#34;#__codelineno-8-45&#34;&gt;&lt;/a&gt;0xc903f8193438 38 91000673 add x19, x19, #0x1 (1)&lt;/span&gt;&lt;span id=&#34;__span-8-46&#34;&gt;&lt;a id=&#34;__codelineno-8-46&#34; name=&#34;__codelineno-8-46&#34; href=&#34;#__codelineno-8-46&#34;&gt;&lt;/a&gt;# x20 是 bytecode array，从 bytecode array 读取下一个字节码的第一个字节到 x1 寄存器&lt;/span&gt;&lt;span id=&#34;__span-8-47&#34;&gt;&lt;a id=&#34;__codelineno-8-47&#34; name=&#34;__codelineno-8-47&#34; href=&#34;#__codelineno-8-47&#34;&gt;&lt;/a&gt;0xc903f819343c 3c 38736a81 ldrb w1, [x20, x19]&lt;/span&gt;&lt;span id=&#34;__span-8-48&#34;&gt;&lt;a id=&#34;__codelineno-8-48&#34; name=&#34;__codelineno-8-48&#34; href=&#34;#__codelineno-8-48&#34;&gt;&lt;/a&gt;# 从 dispatch table，以 x1 为下标，读取下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-8-49&#34;&gt;&lt;a id=&#34;__codelineno-8-49&#34; name=&#34;__codelineno-8-49&#34; href=&#34;#__codelineno-8-49&#34;&gt;&lt;/a&gt;0xc903f8193440 40 f8617aa2 ldr x2, [x21, x1, lsl #3]&lt;/span&gt;&lt;span id=&#34;__span-8-50&#34;&gt;&lt;a id=&#34;__codelineno-8-50&#34; name=&#34;__codelineno-8-50&#34; href=&#34;#__codelineno-8-50&#34;&gt;&lt;/a&gt;# 跳转到下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-8-51&#34;&gt;&lt;a id=&#34;__codelineno-8-51&#34; name=&#34;__codelineno-8-51&#34; href=&#34;#__codelineno-8-51&#34;&gt;&lt;/a&gt;0xc903f8193444 44 aa0203f1 mov x17, x2&lt;/span&gt;&lt;span id=&#34;__span-8-52&#34;&gt;&lt;a id=&#34;__codelineno-8-52&#34; name=&#34;__codelineno-8-52&#34; href=&#34;#__codelineno-8-52&#34;&gt;&lt;/a&gt;0xc903f8193448 48 d61f0220 br x17&lt;/span&gt;&lt;span id=&#34;__span-8-53&#34;&gt;&lt;a id=&#34;__codelineno-8-53&#34; name=&#34;__codelineno-8-53&#34; href=&#34;#__codelineno-8-53&#34;&gt;&lt;/a&gt;0xc903f819344c 4c d503201f nop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可见 release 模式下的代码还是简单了许多，保证了性能。&lt;/p&gt;&lt;p&gt;有的 Opcode 后面不会紧接着出现 Short Star，此时 Dispatch 会减少一次特判，代码更加简单，以 &lt;code&gt;Ldar&lt;/code&gt; 为例：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-9-1&#34;&gt;&lt;a id=&#34;__codelineno-9-1&#34; name=&#34;__codelineno-9-1&#34; href=&#34;#__codelineno-9-1&#34;&gt;&lt;/a&gt;kind = BYTECODE_HANDLER&lt;/span&gt;&lt;span id=&#34;__span-9-2&#34;&gt;&lt;a id=&#34;__codelineno-9-2&#34; name=&#34;__codelineno-9-2&#34; href=&#34;#__codelineno-9-2&#34;&gt;&lt;/a&gt;name = Ldar&lt;/span&gt;&lt;span id=&#34;__span-9-3&#34;&gt;&lt;a id=&#34;__codelineno-9-3&#34; name=&#34;__codelineno-9-3&#34; href=&#34;#__codelineno-9-3&#34;&gt;&lt;/a&gt;compiler = turbofan&lt;/span&gt;&lt;span id=&#34;__span-9-4&#34;&gt;&lt;a id=&#34;__codelineno-9-4&#34; name=&#34;__codelineno-9-4&#34; href=&#34;#__codelineno-9-4&#34;&gt;&lt;/a&gt;address = 0x31a00046245&lt;/span&gt;&lt;span id=&#34;__span-9-5&#34;&gt;&lt;a id=&#34;__codelineno-9-5&#34; name=&#34;__codelineno-9-5&#34; href=&#34;#__codelineno-9-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-9-6&#34;&gt;&lt;a id=&#34;__codelineno-9-6&#34; name=&#34;__codelineno-9-6&#34; href=&#34;#__codelineno-9-6&#34;&gt;&lt;/a&gt;Instructions (size = 44)&lt;/span&gt;&lt;span id=&#34;__span-9-7&#34;&gt;&lt;a id=&#34;__codelineno-9-7&#34; name=&#34;__codelineno-9-7&#34; href=&#34;#__codelineno-9-7&#34;&gt;&lt;/a&gt;# Ldar 的语义是，把指定参数寄存器的值写入到 `accumulator` 当中&lt;/span&gt;&lt;span id=&#34;__span-9-8&#34;&gt;&lt;a id=&#34;__codelineno-9-8&#34; name=&#34;__codelineno-9-8&#34; href=&#34;#__codelineno-9-8&#34;&gt;&lt;/a&gt;# 参数寄存器的位置记录在 Ldar 字节码的第二个字节中&lt;/span&gt;&lt;span id=&#34;__span-9-9&#34;&gt;&lt;a id=&#34;__codelineno-9-9&#34; name=&#34;__codelineno-9-9&#34; href=&#34;#__codelineno-9-9&#34;&gt;&lt;/a&gt;# 如：0b 04 对应 Ldar a1&lt;/span&gt;&lt;span id=&#34;__span-9-10&#34;&gt;&lt;a id=&#34;__codelineno-9-10&#34; name=&#34;__codelineno-9-10&#34; href=&#34;#__codelineno-9-10&#34;&gt;&lt;/a&gt;# 计算 x19 + 1 的值并写入 x1，得到 Ldar 的第二个字节相对 bytecode array 的偏移&lt;/span&gt;&lt;span id=&#34;__span-9-11&#34;&gt;&lt;a id=&#34;__codelineno-9-11&#34; name=&#34;__codelineno-9-11&#34; href=&#34;#__codelineno-9-11&#34;&gt;&lt;/a&gt;0xc903f8193320 0 91000661 add x1, x19, #0x1 (1)&lt;/span&gt;&lt;span id=&#34;__span-9-12&#34;&gt;&lt;a id=&#34;__codelineno-9-12&#34; name=&#34;__codelineno-9-12&#34; href=&#34;#__codelineno-9-12&#34;&gt;&lt;/a&gt;# 从 x20 + x1 地址读取 Ldar 的第二个字节到 x1，也就是参数寄存器相对 fp 的下标&lt;/span&gt;&lt;span id=&#34;__span-9-13&#34;&gt;&lt;a id=&#34;__codelineno-9-13&#34; name=&#34;__codelineno-9-13&#34; href=&#34;#__codelineno-9-13&#34;&gt;&lt;/a&gt;0xc903f8193324 4 38a16a81 ldrsb x1, [x20, x1]&lt;/span&gt;&lt;span id=&#34;__span-9-14&#34;&gt;&lt;a id=&#34;__codelineno-9-14&#34; name=&#34;__codelineno-9-14&#34; href=&#34;#__codelineno-9-14&#34;&gt;&lt;/a&gt;# 相对 fp 以 x1 为下标，读取参数寄存器的值到 x1 寄存器&lt;/span&gt;&lt;span id=&#34;__span-9-15&#34;&gt;&lt;a id=&#34;__codelineno-9-15&#34; name=&#34;__codelineno-9-15&#34; href=&#34;#__codelineno-9-15&#34;&gt;&lt;/a&gt;0xc903f8193328 8 aa1d03e3 mov x3, fp&lt;/span&gt;&lt;span id=&#34;__span-9-16&#34;&gt;&lt;a id=&#34;__codelineno-9-16&#34; name=&#34;__codelineno-9-16&#34; href=&#34;#__codelineno-9-16&#34;&gt;&lt;/a&gt;0xc903f819332c c f8617861 ldr x1, [x3, x1, lsl #3]&lt;/span&gt;&lt;span id=&#34;__span-9-17&#34;&gt;&lt;a id=&#34;__codelineno-9-17&#34; name=&#34;__codelineno-9-17&#34; href=&#34;#__codelineno-9-17&#34;&gt;&lt;/a&gt;# Dispatch: 找到下一个 Opcode 对应的代码的入口，然后跳转过去&lt;/span&gt;&lt;span id=&#34;__span-9-18&#34;&gt;&lt;a id=&#34;__codelineno-9-18&#34; name=&#34;__codelineno-9-18&#34; href=&#34;#__codelineno-9-18&#34;&gt;&lt;/a&gt;# x19 = x19 + 2，就是 bytecode offset 前进两个字节，指向下一个字节码&lt;/span&gt;&lt;span id=&#34;__span-9-19&#34;&gt;&lt;a id=&#34;__codelineno-9-19&#34; name=&#34;__codelineno-9-19&#34; href=&#34;#__codelineno-9-19&#34;&gt;&lt;/a&gt;0xc903f8193330 10 91000a73 add x19, x19, #0x2 (2)&lt;/span&gt;&lt;span id=&#34;__span-9-20&#34;&gt;&lt;a id=&#34;__codelineno-9-20&#34; name=&#34;__codelineno-9-20&#34; href=&#34;#__codelineno-9-20&#34;&gt;&lt;/a&gt;# x20 是 bytecode array，从 bytecode array 读取下一个字节码的第一个字节到 x3 寄存器&lt;/span&gt;&lt;span id=&#34;__span-9-21&#34;&gt;&lt;a id=&#34;__codelineno-9-21&#34; name=&#34;__codelineno-9-21&#34; href=&#34;#__codelineno-9-21&#34;&gt;&lt;/a&gt;0xc903f8193334 14 38736a83 ldrb w3, [x20, x19]&lt;/span&gt;&lt;span id=&#34;__span-9-22&#34;&gt;&lt;a id=&#34;__codelineno-9-22&#34; name=&#34;__codelineno-9-22&#34; href=&#34;#__codelineno-9-22&#34;&gt;&lt;/a&gt;# 从 dispatch table，以 x3 为下标，读取下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-9-23&#34;&gt;&lt;a id=&#34;__codelineno-9-23&#34; name=&#34;__codelineno-9-23&#34; href=&#34;#__codelineno-9-23&#34;&gt;&lt;/a&gt;0xc903f8193338 18 f8637aa2 ldr x2, [x21, x3, lsl #3]&lt;/span&gt;&lt;span id=&#34;__span-9-24&#34;&gt;&lt;a id=&#34;__codelineno-9-24&#34; name=&#34;__codelineno-9-24&#34; href=&#34;#__codelineno-9-24&#34;&gt;&lt;/a&gt;# 把参数寄存器的值写入到 `accumulator` 也就是 x0 当中&lt;/span&gt;&lt;span id=&#34;__span-9-25&#34;&gt;&lt;a id=&#34;__codelineno-9-25&#34; name=&#34;__codelineno-9-25&#34; href=&#34;#__codelineno-9-25&#34;&gt;&lt;/a&gt;0xc903f819333c 1c aa0103e0 mov x0, x1&lt;/span&gt;&lt;span id=&#34;__span-9-26&#34;&gt;&lt;a id=&#34;__codelineno-9-26&#34; name=&#34;__codelineno-9-26&#34; href=&#34;#__codelineno-9-26&#34;&gt;&lt;/a&gt;# 跳转到下一个字节码对应的代码的地址&lt;/span&gt;&lt;span id=&#34;__span-9-27&#34;&gt;&lt;a id=&#34;__codelineno-9-27&#34; name=&#34;__codelineno-9-27&#34; href=&#34;#__codelineno-9-27&#34;&gt;&lt;/a&gt;0xc903f8193340 20 aa0203f1 mov x17, x2&lt;/span&gt;&lt;span id=&#34;__span-9-28&#34;&gt;&lt;a id=&#34;__codelineno-9-28&#34; name=&#34;__codelineno-9-28&#34; href=&#34;#__codelineno-9-28&#34;&gt;&lt;/a&gt;0xc903f8193344 24 d61f0220 br x17&lt;/span&gt;&lt;span id=&#34;__span-9-29&#34;&gt;&lt;a id=&#34;__codelineno-9-29&#34; name=&#34;__codelineno-9-29&#34; href=&#34;#__codelineno-9-29&#34;&gt;&lt;/a&gt;0xc903f8193348 28 d503201f nop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;小结一下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ignition 给每种可能的 Opcode 类型生成一段代码&lt;/li&gt;&lt;li&gt;这段代码会进行一些检查（仅 Debug 模式下），然后在汇编里实现这个字节码的功能&lt;/li&gt;&lt;li&gt;执行完字节码后，进入 Dispatch 逻辑，寻找下一个字节码对应的代码的地址&lt;/li&gt;&lt;li&gt;特别地，如果下一个字节码是 Short Star (Star0-Star15)，因为它比较简单和常见，就直接执行它，执行完再重新寻找再下一个字节码对应的代码的地址&lt;/li&gt;&lt;li&gt;这些 Opcode 对应的代码会在 v8 编译过程中通过 &lt;code&gt;mksnapshot&lt;/code&gt; 命令一次性生成好，运行时直接复用，不用重新生成&lt;/li&gt;&lt;li&gt;V8 的值的最低位标识了它的类型：0 表示 Smi，1 表示指针，因此在存储 Smi 的时候，寄存器里保存的是实际值的两倍，这样最低位就是 0&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;a class=&#34;headerlink&#34; href=&#34;#参考&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/blog/ignition-interpreter&#34;&gt;Firing up the Ignition interpreter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/73337772/how-to-get-node-js-to-trace-ignition-within-v8-with-trace-ignition&#34;&gt;How to get Node.js to trace ignition within v8? with --trace-ignition&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://dynamic-languages-symposium.org/dls-16/program/media/McIlroy_2016_IgnitionJumpStartingAnInterpreterForV8_Dls.pdf&#34;&gt;Ignition: Jump-starting an Interpreter for V8&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/11T2CRex9hXxoJwbYqVQ32yIPMh0uouUZLdyrtmMoL44&#34;&gt;Ignition: V8 Interpreter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://doar-e.github.io/blog/2019/01/28/introduction-to-turbofan/&#34;&gt;Introduction to TurboFan&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.alibabacloud.com/blog/javascript-bytecode-v8-ignition-instructions_599188&#34;&gt;JavaScript Bytecode – v8 Ignition Instructions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775&#34;&gt;Understanding V8’s Bytecode&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/docs&#34;&gt;V8 Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/docs/ignition&#34;&gt;V8 Ignition&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.dev/docs/turbofan&#34;&gt;V8 TurboFan&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://v8.github.io/tools/v13.4/turbolizer/index.html&#34;&gt;V8 Turbolizer v13.4&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://benediktmeurer.de/2017/03/01/v8-behind-the-scenes-february-edition&#34;&gt;V8: Behind the Scenes (February Edition feat. A tale of TurboFan)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/danbev/learning-v8&#34;&gt;danbev/learning-v8&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://medium.com/fhinkel/v8-internals-how-small-is-a-small-integer-e0badc18b6da&#34;&gt;V8 Internals: How Small is a “Small Integer?”&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/software/2025/03/01/v8-ignition-internals/</link> <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/software/2025/03/01/v8-ignition-internals/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/v8-ignition-internals.png" type="image/png" length="72729" /> </item> <item> <title>导出飞书日历为 iCalendar 格式</title> <category>calendar</category> <category>feishu</category> <category>software</category> <description>&lt;h1 id=&#34;导出飞书日历为-icalendar-格式&#34;&gt;导出飞书日历为 iCalendar 格式&lt;a class=&#34;headerlink&#34; href=&#34;#导出飞书日历为-icalendar-格式&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;之前用了一段时间飞书日历，想要把日历里的事件导出来备份，但是发现飞书自己的导出功能太弱，因此参考 &lt;a href=&#34;https://xuanwo.io/reports/2023-35/&#34;&gt;从飞书导出日历到 Fastmail - Xuanwo&#39;s Blog&lt;/a&gt; 进行了导出的尝试。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;导出方法&#34;&gt;导出方法&lt;a class=&#34;headerlink&#34; href=&#34;#导出方法&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;上面提到的文章，是通过 CalDAV 的方式进行的日历同步。因此我第一步也是配置飞书的 CalDAV 服务：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;打开飞书客户端&lt;/li&gt;&lt;li&gt;点击设置&lt;/li&gt;&lt;li&gt;点击日历&lt;/li&gt;&lt;li&gt;设置 CalDAV 同步&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;按照界面所示，配置 CalDAV 同步，就可以得到用于 CalDAV 的域名、用户名和密码了。如果只是要订阅，那么到这一步，就可以直接用 CalDAV 客户端来同步了。但我想进一步得到 iCalendar 格式的日历文件。&lt;/p&gt;&lt;p&gt;于是我参考了上述文章的评论区的做法：&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;@jason5ng32 jason5ng32&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;Oct 28, 2024&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;分享一下我的方法：&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;1. 在服务器上安装 vdirsyncer ，这个工具可以同步 CalDAV 的内容，在同步设置里，不需要先找到 UUID，可以直接用飞书提供的 URL。&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;2. 写一个 Python 脚本，将 vdirsyncer 同步的内容合并成单一的 ics 文件。&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;3. 将 ics 文件放到一个地址稍微复杂一点的 http 目录里，可以外部访问。&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;4. 写一个 run.sh 脚本，通过 crontab 每 10 分钟执行一次 vdirsyncer 同步和日历文件合成。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也就是说，用 vdirsyncer 把日历同步到本地，再转换为 iCalendar 格式的日历文件。参考 &lt;a href=&#34;https://vdirsyncer.pimutils.org/en/stable/installation.html#installation&#34;&gt;vdirsyncer&lt;/a&gt; 文档，这件事情并不复杂：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;按照 vdirsyncer: &lt;code&gt;pip3 install vdirsyncer&lt;/code&gt;&lt;/li&gt;&lt;li&gt;编辑 &lt;code&gt;~/.vdirsyncer/config&lt;/code&gt;，填入在飞书处得到的用户密码： &lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;[general]&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;status_path = &amp;quot;~/.vdirsyncer/status/&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;[pair my_contacts]&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;a = &amp;quot;my_contacts_local&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;b = &amp;quot;my_contacts_remote&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;collections = [&amp;quot;from a&amp;quot;, &amp;quot;from b&amp;quot;]&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt;[storage my_contacts_local]&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt;type = &amp;quot;filesystem&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt;path = &amp;quot;~/.contacts/&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-12&#34;&gt;&lt;a id=&#34;__codelineno-1-12&#34; name=&#34;__codelineno-1-12&#34; href=&#34;#__codelineno-1-12&#34;&gt;&lt;/a&gt;fileext = &amp;quot;.ics&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-13&#34;&gt;&lt;a id=&#34;__codelineno-1-13&#34; name=&#34;__codelineno-1-13&#34; href=&#34;#__codelineno-1-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-14&#34;&gt;&lt;a id=&#34;__codelineno-1-14&#34; name=&#34;__codelineno-1-14&#34; href=&#34;#__codelineno-1-14&#34;&gt;&lt;/a&gt;[storage my_contacts_remote]&lt;/span&gt;&lt;span id=&#34;__span-1-15&#34;&gt;&lt;a id=&#34;__codelineno-1-15&#34; name=&#34;__codelineno-1-15&#34; href=&#34;#__codelineno-1-15&#34;&gt;&lt;/a&gt;type = &amp;quot;caldav&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-16&#34;&gt;&lt;a id=&#34;__codelineno-1-16&#34; name=&#34;__codelineno-1-16&#34; href=&#34;#__codelineno-1-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-17&#34;&gt;&lt;a id=&#34;__codelineno-1-17&#34; name=&#34;__codelineno-1-17&#34; href=&#34;#__codelineno-1-17&#34;&gt;&lt;/a&gt;url = &amp;quot;https://caldav.feishu.cn&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-18&#34;&gt;&lt;a id=&#34;__codelineno-1-18&#34; name=&#34;__codelineno-1-18&#34; href=&#34;#__codelineno-1-18&#34;&gt;&lt;/a&gt;username = &amp;quot;REDACTED&amp;quot;&lt;/span&gt;&lt;span id=&#34;__span-1-19&#34;&gt;&lt;a id=&#34;__codelineno-1-19&#34; name=&#34;__codelineno-1-19&#34; href=&#34;#__codelineno-1-19&#34;&gt;&lt;/a&gt;password = &amp;quot;REDACTED&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;配置好以后，进行同步：&lt;code&gt;vdirsyncer discover &amp;amp;&amp;amp; vdirsyncer sync&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;此时在 &lt;code&gt;~/.contacts&lt;/code&gt; 目录下，已经能看到很多个 ics 文件了，每个 ics 文件对应了日历中的一个事件。实际上，这些文件就已经是 iCalendar 格式了，只不过每个文件只有一个事件。&lt;/p&gt;&lt;p&gt;为了让一个 &lt;code&gt;.ics&lt;/code&gt; 文件包括日历的所有事件，写了一个脚本，实际上就是处理每个 ics 文件，去掉每个文件开头结尾的 &lt;code&gt;BEGIN:VCALENDAR&lt;/code&gt; 和 &lt;code&gt;END:VCALENDAR&lt;/code&gt;，把中间的部分拼起来，最后再加上开头结尾：&lt;/p&gt;&lt;div class=&#34;language-python highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;all_lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;all_lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;BEGIN:VCALENDAR&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt; &lt;span class=&#34;n&#34;&gt;lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;splitlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt; &lt;span class=&#34;n&#34;&gt;all_lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;all_lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;END:VCALENDAR&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all_lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行上述脚本：&lt;code&gt;python3 dump.py ~/.contacts/*/*.ics &amp;gt; dump.ics&lt;/code&gt;，这样得到的 &lt;code&gt;.ics&lt;/code&gt; 文件就可以直接导入到日历软件了。&lt;/p&gt;&lt;p&gt;UPDATE: 我在之前写的飞书文档备份工具 &lt;a href=&#34;https://github.com/jiegec/feishu-backup&#34;&gt;feishu-backup&lt;/a&gt; 的基础上，添加了飞书日历的导出功能，把原始的 json 保存下来，并转换得到 iCalendar 格式的 &lt;code&gt;.ics&lt;/code&gt; 文件。&lt;/p&gt;&lt;h2 id=&#34;导出-icloud-国区的日历和联系人&#34;&gt;导出 iCloud 国区的日历和联系人&lt;a class=&#34;headerlink&#34; href=&#34;#导出-icloud-国区的日历和联系人&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;除了导出飞书的日历，也可以用类似的方法导出 iCloud 国区的日历：把 url 改成 &lt;code&gt;&#34;https://caldav.icloud.com.cn&#34;&lt;/code&gt;，在 Apple ID 上生成 App 密码，填入上面的 password，再把邮箱写到 username 即可。&lt;/p&gt;&lt;p&gt;更进一步，也可以导出 iCloud 国区的联系人：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;把配置中 &lt;code&gt;fileext = &#34;.ics&#34;&lt;/code&gt; 改成 &lt;code&gt;fileext = &#34;.vcf&#34;&lt;/code&gt;，因为联系人的格式是 &lt;a href=&#34;https://en.wikipedia.org/wiki/VCard&#34;&gt;vCard&lt;/a&gt;，其文件名后缀是 &lt;code&gt;.vcf&lt;/code&gt;&lt;/li&gt;&lt;li&gt;把 &lt;code&gt;type = &#34;caldav&#34;&lt;/code&gt; 改成 &lt;code&gt;type = &#34;carddav&#34;&lt;/code&gt;，把 &lt;code&gt;url = &#34;https://caldav.icloud.com.cn&lt;/code&gt; 改成 &lt;code&gt;url = &#34;https://contacts.icloud.com.cn&#34;&lt;/code&gt;，表示同步联系人而不是日历&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果既要同步日历，又要同步联系人，或者需要同步来自不同来源的日历，建议把 status 和 storage local 放到不同的目录下，避免出现冲突。&lt;/p&gt;</description><link>https://jia.je/software/2025/02/04/feishu-dump-calendar/</link> <pubDate>Tue, 04 Feb 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/software/2025/02/04/feishu-dump-calendar/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/software/feishu-dump-calendar.png" type="image/png" length="63907" /> </item> <item> <title>Intel Gracemont 微架构评测</title> <category>alderlake</category> <category>cpu</category> <category>gracemont</category> <category>hardware</category> <category>intel</category> <category>performance</category> <category>uarch-review</category> <description>&lt;h1 id=&#34;intel-gracemont-微架构评测&#34;&gt;Intel Gracemont 微架构评测&lt;a class=&#34;headerlink&#34; href=&#34;#intel-gracemont-微架构评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;../../10/intel-golden-cove/&#34;&gt;之前&lt;/a&gt; 测试了 Intel Alder Lake 的 P 核微架构，这次就来测一下 Alder Lake 的 E 核微架构 Gracemont。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Intel 关于 Gracemont 微架构有这些官方的信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/9747991&#34;&gt;Intel Alder Lake CPU Architectures&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://hc33.hotchips.org/assets/program/conference/day1/HC2021.C1.1%20Intel%20Efraim%20Rotem.pdf&#34;&gt;Alder Lake Architecture on Hot Chips 33&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.intel.com/content/www/us/en/content-details/671488/intel-64-and-ia-32-architectures-optimization-reference-manual-volume-1.html&#34;&gt;Intel 64 and IA-32 Architectures Optimization Reference Manual Volume 1&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;现有评测&#34;&gt;现有评测&lt;a class=&#34;headerlink&#34; href=&#34;#现有评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;网上已经有较多针对 Gracemont 微架构的评测和分析，建议阅读：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://chipsandcheese.com/2021/12/21/gracemont-revenge-of-the-atom-cores/&#34;&gt;Gracemont: Revenge of the Atom Cores&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://fuse.wikichip.org/news/6102/intels-gracemont-small-core-eclipses-last-gen-big-core-performance/&#34;&gt;Intel’s Gracemont Small Core Eclipses Last-Gen Big Core Performance&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下面分各个模块分别记录官方提供的信息，以及实测的结果。读者可以对照已有的第三方评测理解。官方信息与实测结果一致的数据会加粗。&lt;/p&gt;&lt;h2 id=&#34;benchmark&#34;&gt;Benchmark&lt;a class=&#34;headerlink&#34; href=&#34;#benchmark&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Intel Gracemont 的性能测试结果见 &lt;a href=&#34;../../../../../benchmark/&#34;&gt;SPEC&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;前端&#34;&gt;前端&lt;a class=&#34;headerlink&#34; href=&#34;#前端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;fetch&#34;&gt;Fetch&lt;a class=&#34;headerlink&#34; href=&#34;#fetch&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2x 32B/cycle&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Gracemont 的 Clustered Decode 架构比较特别，目前没有找到方法去证实它的 Fetch 带宽，后续如果找到了更好的方法，再测这个特性。&lt;/p&gt;&lt;h3 id=&#34;decode&#34;&gt;Decode&lt;a class=&#34;headerlink&#34; href=&#34;#decode&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2x 3-wide&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Gracemont 的 Clustered Decode 架构比较特别，目前没有找到方法去确认它 2x 3-wide 的 Decode 带宽，后续如果找到了更好的方法，再测这个特性。&lt;/p&gt;&lt;h3 id=&#34;l1-icache&#34;&gt;L1 ICache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-icache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;64KB&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了测试 L1 ICache 容量，构造一个具有巨大指令 footprint 的循环，由大量的 4 字节 nop 和最后的分支指令组成。观察在不同 footprint 大小下的 IPC：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-fetch-bandwidth.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 footprint 在 64 KB 之前时可以达到 5 IPC，之后则降到 3.25 IPC，这里的 64 KB 就对应了 L1 ICache 的容量。&lt;/p&gt;&lt;h3 id=&#34;l1-itlb&#34;&gt;L1 ITLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-itlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;64 entries&lt;/strong&gt;, fully associative&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;构造一系列的 jmp 指令，使得 jmp 指令分布在不同的 page 上，使得 ITLB 成为瓶颈：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-itlb-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 64 个 Page 出现了明显的拐点，对应的就是 64 的 L1 ITLB 容量。过了拐点后，每次 jmp 的时间延长到了 16 个周期左右，包括了 L2 TLB 到 L1 ITLB 的 refill 时间。&lt;/p&gt;&lt;h3 id=&#34;return-stack&#34;&gt;Return Stack&lt;a class=&#34;headerlink&#34; href=&#34;#return-stack&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;用之前设计的 Return Stack 测试代码来测试 Gracemont，它的 call/ret 是成对的，也就是 ret 的返回地址不变，称这个版本为 A。此时发现不同调用深度下，都能做到 2 cycle 每 call/ret 对，没有观察到性能的下降，说明此时 Return Stack 并没有介入，应该是由 BTB 提供了预测。下面是 A 版本代码在 Gracemont 上的测试结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-rs-size-1.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;为了解决这个问题，修改代码，在函数里构造两个 call 去调用同一个函数，这样 ret 的返回地址就会变化了，称这个版本为 B。这时候跑出来的结果比较奇怪，周期数快速上升：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-rs-size-2.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;同样的 B 版本代码在 AMD Zen3 和 Apple Firestorm 的处理器上，可以观察到在符合预期的 Return Stack 大小处出现性能拐点，和 A 版本代码得到的结论一致。而 B 版本代码在 Golden Cove 上，会观察到在 6 的附近有一个性能下降如下图，但之前用 &lt;a href=&#34;../../10/intel-golden-cove/&#34;&gt;A 版本代码测得的拐点为 20&lt;/a&gt;:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-rs-size-golden-cove.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;这个区别背后的原因还需要进一步的分析。下面是两个版本的汇编代码的对比：&lt;/p&gt;&lt;div class=&#34;language-asm highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# version A&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;func_n:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;func_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;n-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# version B, generate two alternating call sites&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nl&#34;&gt;func_n:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-8&#34;&gt;&lt;a id=&#34;__codelineno-0-8&#34; name=&#34;__codelineno-0-8&#34; href=&#34;#__codelineno-0-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rsi&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-9&#34;&gt;&lt;a id=&#34;__codelineno-0-9&#34; name=&#34;__codelineno-0-9&#34; href=&#34;#__codelineno-0-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%rsi&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-10&#34;&gt;&lt;a id=&#34;__codelineno-0-10&#34; name=&#34;__codelineno-0-10&#34; href=&#34;#__codelineno-0-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;je&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-11&#34;&gt;&lt;a id=&#34;__codelineno-0-11&#34; name=&#34;__codelineno-0-11&#34; href=&#34;#__codelineno-0-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-12&#34;&gt;&lt;a id=&#34;__codelineno-0-12&#34; name=&#34;__codelineno-0-12&#34; href=&#34;#__codelineno-0-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;func_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;n-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-13&#34;&gt;&lt;a id=&#34;__codelineno-0-13&#34; name=&#34;__codelineno-0-13&#34; href=&#34;#__codelineno-0-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-14&#34;&gt;&lt;a id=&#34;__codelineno-0-14&#34; name=&#34;__codelineno-0-14&#34; href=&#34;#__codelineno-0-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-15&#34;&gt;&lt;a id=&#34;__codelineno-0-15&#34; name=&#34;__codelineno-0-15&#34; href=&#34;#__codelineno-0-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;2:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-16&#34;&gt;&lt;a id=&#34;__codelineno-0-16&#34; name=&#34;__codelineno-0-16&#34; href=&#34;#__codelineno-0-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;func_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;n-1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-17&#34;&gt;&lt;a id=&#34;__codelineno-0-17&#34; name=&#34;__codelineno-0-17&#34; href=&#34;#__codelineno-0-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;jmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-18&#34;&gt;&lt;a id=&#34;__codelineno-0-18&#34; name=&#34;__codelineno-0-18&#34; href=&#34;#__codelineno-0-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-19&#34;&gt;&lt;a id=&#34;__codelineno-0-19&#34; name=&#34;__codelineno-0-19&#34; href=&#34;#__codelineno-0-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;err&#34;&gt;3:&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-20&#34;&gt;&lt;a id=&#34;__codelineno-0-20&#34; name=&#34;__codelineno-0-20&#34; href=&#34;#__codelineno-0-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;后端&#34;&gt;后端&lt;a class=&#34;headerlink&#34; href=&#34;#后端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;rename&#34;&gt;Rename&lt;a class=&#34;headerlink&#34; href=&#34;#rename&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;5-wide&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在先前测试 L1 ICache 容量的时候，观察到的最大的 IPC 就是 5，此时测得的瓶颈在于 Rename 宽度，对应 5-wide Rename。&lt;/p&gt;&lt;h3 id=&#34;execution-units&#34;&gt;Execution Units&lt;a class=&#34;headerlink&#34; href=&#34;#execution-units&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;6 alu ports: 0/1/2/3/30/31&lt;ul&gt;&lt;li&gt;P0: ALU/SHIFT&lt;/li&gt;&lt;li&gt;P1: ALU/SHIFT/MUL/DIV&lt;/li&gt;&lt;li&gt;P2: ALU/SHIFT/MUL/DIV&lt;/li&gt;&lt;li&gt;P3: ALU/SHIFT&lt;/li&gt;&lt;li&gt;P30: JMP&lt;/li&gt;&lt;li&gt;P31: JMP&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;3 simd ports: 20/21/22&lt;ul&gt;&lt;li&gt;P20: SALU/SIMUL/FMUL/FADD/FDIV/AES/SHA&lt;/li&gt;&lt;li&gt;P21: SALU/FMUL/FADD/AES&lt;/li&gt;&lt;li&gt;P22: SALU&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;2 load ports: 10/11&lt;/li&gt;&lt;li&gt;2 store address ports: 12/13&lt;/li&gt;&lt;li&gt;2 store data ports: 8/9&lt;/li&gt;&lt;li&gt;2 simd store data ports: 28/29&lt;/li&gt;&lt;li&gt;ports 10/11/12/13 shares a reservation station&lt;/li&gt;&lt;li&gt;ports 8/9/30/31 shares a reservation station&lt;/li&gt;&lt;li&gt;ports 28/29 shares a reservation station&lt;/li&gt;&lt;li&gt;ports 20/21/22 shares a reservation station&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;实测各类指令的吞吐：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;NOP: 5 IPC&lt;/li&gt;&lt;li&gt;ALU: 4 IPC&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;lsu&#34;&gt;LSU&lt;a class=&#34;headerlink&#34; href=&#34;#lsu&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;2x 16B Load/cycle, 2x 16B Store/cycle&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Load latency 3-4 cycle&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;load-store-带宽&#34;&gt;Load Store 带宽&lt;a class=&#34;headerlink&#34; href=&#34;#load-store-带宽&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;针对 Load Store 带宽，实测每个周期可以完成：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2x 128b Load&lt;/li&gt;&lt;li&gt;2x 128b Load + 2x 128b Store&lt;/li&gt;&lt;li&gt;2x 128b Store&lt;/li&gt;&lt;li&gt;1x 256b Load&lt;/li&gt;&lt;li&gt;1x 256b Load + 1x 256b Store&lt;/li&gt;&lt;li&gt;1x 256b Store&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;最大的读带宽是 32B/cyc，最大的写带宽是 32B/cyc，二者可以同时达到。&lt;/p&gt;&lt;h4 id=&#34;store-to-load-forwarding&#34;&gt;Store to Load Forwarding&lt;a class=&#34;headerlink&#34; href=&#34;#store-to-load-forwarding&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Loads that forward from stores can do so in the same load to use latency as cache hits forcases where the store&#39;s address is known, and the store data is available.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;经过实际测试，Gracemont 上如下的情况可以成功转发，对地址 x 的 Store 转发到对地址 y 的 Load 成功时 y-x 的取值范围：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Store\Load&lt;/th&gt;&lt;th&gt;8b Load&lt;/th&gt;&lt;th&gt;16b Load&lt;/th&gt;&lt;th&gt;32b Load&lt;/th&gt;&lt;th&gt;64b Load&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;8b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;32b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;64b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{0,4}&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可以看到，Gracemont 在 Store 包含 Load 且地址相同时可以转发。特别地，针对 64b Store 到 32b Load 转发还允许 y-x=4。各种情况下的 CPI：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;转发成功时，CPI 比较复杂，有的情况是介于 0.5 到 2 之间，有时候又是介于 2 到 4 之间，有时候是 6&lt;/li&gt;&lt;li&gt;重合但不能转发时，CPI 等于 11，特殊情况下还出现了 28.5&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;不支持多个 Store 对同一个 Load 的转发。跨缓存行时不能转发。&lt;/p&gt;&lt;p&gt;即使 Load 和 Store 不重合，但在一定情况下，也会出现 CPI 等于 11 的情况，例如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;对地址 3 的 16b Store 转发到地址 0 的 8b Load&lt;/li&gt;&lt;li&gt;对地址 1 的 64b Store 转发到地址 9/10/11 的 64b Load&lt;/li&gt;&lt;li&gt;对地址 0 的 8b Store 转发到地址 1/2/3 的 64b Load&lt;/li&gt;&lt;li&gt;对地址 0 的 8b Store 转发到地址 3 的 16b Load&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在以上几种情况下，Load 和 Store 访问范围并不重合，但性能和访问范围重合且转发失败时相同（CPI 等于 11），由此猜测 Gracemont 判断是否重合是以对齐的 4B 为粒度，如果 Load 和 Store 访问了相同的对齐的 4B 块，即使不重合，一定情况下也可能会被当成重合的情况来处理，但由于实际上并没有重合，就没法转发，性能就比较差。&lt;/p&gt;&lt;p&gt;小结：Gracemont 的 Store to Load Forwarding：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 ld + 1 st: 要求 st 完全包含 ld 且地址相同且不能跨缓存行；特别地，64b Store 到 32b Load 转发允许 y-x=4&lt;/li&gt;&lt;li&gt;1 ld + 2+ st: 不支持&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;load-to-use-latency&#34;&gt;Load to Use Latency&lt;a class=&#34;headerlink&#34; href=&#34;#load-to-use-latency&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;测试不同场景下的 Load to Use Latency：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;mov 0(%rsi), %rsi&lt;/code&gt;: 3 cycle，但在跨越 64B 缓存行边界时退化到 11 cycle&lt;/li&gt;&lt;li&gt;&lt;code&gt;mov 8(%rsi), %rsi&lt;/code&gt;: 3 cycle&lt;/li&gt;&lt;li&gt;&lt;code&gt;mov 0(%rsp, %rsi, 8), %rsi&lt;/code&gt;: 4 cycle&lt;/li&gt;&lt;li&gt;&lt;code&gt;mov 0(%rsi, %rdx, 8), %rsi&lt;/code&gt;: 4 cycle&lt;/li&gt;&lt;li&gt;Load to ALU Latency: 4 cycle&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;l1-dcache&#34;&gt;L1 DCache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dcache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;32KB&lt;/li&gt;&lt;li&gt;dual ported&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;l1-dtlb&#34;&gt;L1 DTLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dtlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;32 entries, fully associative&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;用类似测 L1 DCache 的方法测试 L1 DTLB 容量，只不过把 pointer chasing 链的指针分布在不同的 page 上，使得 DTLB 成为瓶颈。奇怪的是，虽然官方信息写的是 32-entry 的 L1 DTLB，但是实测它有 48-entry：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-dtlb-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;这个观察和 &lt;a href=&#34;https://chipsandcheese.com/p/meteor-lakes-e-cores-crestmont-makes-incremental-progress&#34;&gt;Meteor Lake’s E-Cores: Crestmont Makes Incremental Progress&lt;/a&gt; 是一致的，怀疑是 Intel 写错了数据。&lt;/p&gt;&lt;h3 id=&#34;l2-tlb&#34;&gt;L2 TLB&lt;a class=&#34;headerlink&#34; href=&#34;#l2-tlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;4-way &lt;strong&gt;2048&lt;/strong&gt; entries for 4K/2M pages&lt;/li&gt;&lt;li&gt;fully associative 8 entries for 1GB pages&lt;/li&gt;&lt;li&gt;4 page walkers&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;使用类似 L1 DTLB 的方式去测试 L2 TLB，在 2048 附近观察到了拐点：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-l2-dtlb-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;这个结果和官方数据是吻合的。&lt;/p&gt;&lt;h3 id=&#34;l2-cache&#34;&gt;L2 Cache&lt;a class=&#34;headerlink&#34; href=&#34;#l2-cache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2MB/4MB Shared among 4 cores&lt;/li&gt;&lt;li&gt;64 B/cycle shared among 4 cores&lt;/li&gt;&lt;li&gt;17 cycle latency&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;reorder-buffer&#34;&gt;ReOrder Buffer&lt;a class=&#34;headerlink&#34; href=&#34;#reorder-buffer&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;256 entries&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;8 wide retirement&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了测试 ROB 的大小，设计了一个循环，循环开始和结束是长延迟的 long latency load。中间是若干条 NOP 指令，当 NOP 指令比较少时，循环的时候取决于 load 指令的时间；当 NOP 指令数量过多，填满了 ROB 以后，就会导致 ROB 无法保存循环末尾的 load 指令，性能出现下降。测试结果如下：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-gracemont-rob-size.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;当 NOP 数量达到 256 时，性能开始急剧下滑，说明 Golden Cove 的 ROB 大小是 256。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/01/12/intel-gracemont/</link> <pubDate>Sun, 12 Jan 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/01/12/intel-gracemont/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/intel-gracemont.png" type="image/png" length="65782" /> </item> <item> <title>Intel Golden Cove 微架构评测</title> <category>alderlake</category> <category>cpu</category> <category>goldencove</category> <category>hardware</category> <category>intel</category> <category>performance</category> <category>uarch-review</category> <description>&lt;h1 id=&#34;intel-golden-cove-微架构评测&#34;&gt;Intel Golden Cove 微架构评测&lt;a class=&#34;headerlink&#34; href=&#34;#intel-golden-cove-微架构评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;a class=&#34;headerlink&#34; href=&#34;#背景&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;前段时间测试了 AMD/Apple/Qualcomm/ARM 的处理器的微架构，自然不能漏了 Intel。虽然 Intel 已经出了 Redwood Cove 和 Lion Cove，但手上没有设备，而且 Golden Cove 也是“相对比较成功”（“缩缸的是 Raptor Cove，和我 Golden Cove 有什么关系，虽然其实 Raptor Cove 是 Golden Cove Refresh”）的一代微架构，用在了 Alder Lake 和 Sapphire Rapids 上，因此就来分析它，后续有机会也会分析一下对应的 E 核架构 Gracemont。&lt;/p&gt;&lt;!-- more --&gt;&lt;h2 id=&#34;官方信息&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Intel 关于 Golden Cove 微架构有这些官方的信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/9747991&#34;&gt;Intel Alder Lake CPU Architectures&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://hc33.hotchips.org/assets/program/conference/day1/HC2021.C1.1%20Intel%20Efraim%20Rotem.pdf&#34;&gt;Alder Lake Architecture on Hot Chips 33&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://hc33.hotchips.org/assets/program/conference/day1/HC2021.C1.4%20Intel%20Arijit.pdf&#34;&gt;Sapphire Rapids on Hot Chips 33&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.intel.com/content/www/us/en/content-details/671488/intel-64-and-ia-32-architectures-optimization-reference-manual-volume-1.html&#34;&gt;Intel 64 and IA-32 Architectures Optimization Reference Manual Volume 1&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;现有评测&#34;&gt;现有评测&lt;a class=&#34;headerlink&#34; href=&#34;#现有评测&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;网上已经有较多针对 Golden Cove 微架构的评测和分析，建议阅读：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://chipsandcheese.com/2021/12/02/popping-the-hood-on-golden-cove/&#34;&gt;Popping the Hood on Golden Cove&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Golden_Cove&#34;&gt;Golden Cove&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://chipsandcheese.com/2023/01/15/golden-coves-vector-register-file-checking-with-official-spr-data/&#34;&gt;Golden Cove’s Vector Register File: Checking with Official (SPR) Data&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.servethehome.com/4th-gen-intel-xeon-scalable-sapphire-rapids-leaps-forward/7/&#34;&gt;4th Gen Intel Xeon Scalable Sapphire Rapids Leaps Forward&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://fuse.wikichip.org/news/6111/intel-details-golden-cove-next-generation-big-core-for-client-and-server-socs/&#34;&gt;Intel Details Golden Cove: Next-Generation Big Core For Client and Server SoCs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://chipsandcheese.com/2023/03/12/a-peek-at-sapphire-rapids/&#34;&gt;Sapphire Rapids: Golden Cove Hits Servers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://chipsandcheese.com/2022/12/25/golden-coves-lopsided-vector-register-file/&#34;&gt;Golden Cove’s Lopsided Vector Register File&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://indirector.cpusec.org/&#34;&gt;Indirector: High-Precision Branch Target Injection Attacks Exploiting the Indirect Branch Predictor&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下面分各个模块分别记录官方提供的信息，以及实测的结果。读者可以对照已有的第三方评测理解。官方信息与实测结果一致的数据会加粗。&lt;/p&gt;&lt;h2 id=&#34;benchmark&#34;&gt;Benchmark&lt;a class=&#34;headerlink&#34; href=&#34;#benchmark&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Intel Golden Cove 的性能测试结果见 &lt;a href=&#34;../../../../../benchmark/&#34;&gt;SPEC&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;前端&#34;&gt;前端&lt;a class=&#34;headerlink&#34; href=&#34;#前端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;fetch&#34;&gt;Fetch&lt;a class=&#34;headerlink&#34; href=&#34;#fetch&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Legacy decode pipeline fetch bandwidth is increased from 16 to 32 bytes/cycle&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;decode&#34;&gt;Decode&lt;a class=&#34;headerlink&#34; href=&#34;#decode&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The number of decoders is increased from 4 to 6&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;dsbuop-cache&#34;&gt;DSB/uOP Cache&lt;a class=&#34;headerlink&#34; href=&#34;#dsbuop-cache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The micro-op cache size is increased to hold 4,000 (注：应该是 4096) micro-ops,&lt;/li&gt;&lt;li&gt;and its bandwidth is increased to deliver up to 8 micro-ops per cycle.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Intel 的 uOP(Micro-OP) Cache 称为 Decode Stream Buffer (DSB): &lt;code&gt;Decode Stream Buffer (DSB) is a Uop-cache that holds translations of previously fetched instructions that were decoded by the legacy x86 decode pipeline (MITE).&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;uOP Cache 的组织方式通常是组相连，每个 entry 保存了几条 uOP，这些 uOP 对应了原来指令流中连续的几条指令。&lt;/p&gt;&lt;p&gt;为了测试 uOP Cache 的大小，构造不同大小的循环，循环体是复制若干份的 &lt;code&gt;add %%rsi, %%rdx&lt;/code&gt; 指令，最后是 &lt;code&gt;dec + jnz&lt;/code&gt; 作为循环结尾，通过 &lt;a href=&#34;https://perfmon-events.intel.com/index.html?pltfrm=ahybrid.html&amp;amp;evnt=IDQ.DSB_UOPS&#34;&gt;IDQ.DSB_UOPS&lt;/a&gt; 性能计数器统计每次循环有多少个 uOP 来自于 DSB 也就是 uOP Cache，发现其最大值为 2800 左右，距离 4K 还有一定的距离。目前还没有找到一个可以稳定跑出 4K uOP 的指令模式，不知道遇到了什么瓶颈。&lt;/p&gt;&lt;p&gt;考虑到 taken branch 在典型的 uOP Cache 设计中会结束一个 entry，把循环体改成若干条 &lt;code&gt;jmp&lt;/code&gt; 指令，并且每个 64B 缓存行只有一条 &lt;code&gt;jmp&lt;/code&gt; 指令，此时每个 uOP entry 只记录一条 &lt;code&gt;jmp&lt;/code&gt; 指令。观察到每次循环最多 512 个 uOP 来自 uOP Cache，那么 Golden Cove 的 uOP Cache 大概就是 512 个 entry。如果改成每 128B 缓存行只有一条 &lt;code&gt;jmp&lt;/code&gt; 指令，uOP Cache 容量减少到 256 个 entry；继续增加间距，256B 间距对应 128 个 entry，512B 间距对应 64 个 entry，1024B 间距对应 32 个 entry，2048B 间距对应 16 个 entry，4096B 间距对应 8 个 entry，继续增大间距后，entry 数维持中 8 不再减少，意味着 Golden Cove 的 uOP Cache 是 8 Way 64 Set 一共 512 Entry，Index 是 PC[11:6]。&lt;/p&gt;&lt;p&gt;那么按照官方信息所说的 4K 容量，一共 512 个 Entry，那么每个 Entry 应该能够记录最多 8 个 uOP，这正好也对应上了 8 uOP 的吞吐。&lt;/p&gt;&lt;p&gt;根据前人在 Intel 比较老的微架构上的测试结果（见 &lt;a href=&#34;https://agner.org/optimize/microarchitecture.pdf&#34;&gt;The microarchitecture of Intel, AMD, and VIA CPUs&lt;/a&gt;）以及 Intel 的官方文档 Software Optimization Manual（这个文档把 uOP Cache 叫做 Decoded ICache），Intel 之前很多代微架构的 uOP Cache Entry 的构造条件是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;每个 Entry 能记录的 uOP 个数有上限，最多 6 uOP/Entry&lt;/li&gt;&lt;li&gt;Entry 不能跨越 32B 边界，反过来，一个对齐的 32B 区间只能对应最多 3 个 Entry，结合第一条，就是对齐的 32B 块中不能超过 &lt;code&gt;3*6=18&lt;/code&gt; 个 uOP（&lt;code&gt;The Decoded ICache can hold only up to 18 micro-ops per each 32 byte aligned memory chunk&lt;/code&gt;）；如果指令跨了 32B 边界，它被算在后面那个 32B 里面&lt;/li&gt;&lt;li&gt;指令需要完整地出现在一个 Entry 中：如果一条指令需要的空间太多，在当前 Entry 的剩余空间内放不下，就需要另起一个 Entry&lt;/li&gt;&lt;li&gt;无条件跳转（或者被预测为要跳转）的指令会结束一个 Entry（&lt;code&gt;each unconditional branch is the last micro-op occupying a Decoded ICache Way&lt;/code&gt;）&lt;/li&gt;&lt;li&gt;比较大的立即数也会占用 uOP 空间，减少了实际能存放的 uOP 数量&lt;/li&gt;&lt;li&gt;比较复杂的需要微码（Microcoded uops）的指令会占用一整个 Entry&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;下面来分析 Golden Cove 上这些构造条件是否有变化。参考 &lt;a href=&#34;https://ieeexplore.ieee.org/document/9499837&#34;&gt;I See Dead µops: Leaking Secrets via Intel/AMD Micro-Op Caches&lt;/a&gt; 的方法，构造了一个循环，循环体由 &lt;code&gt;4x 15-byte-nop + 1x 4-byte-nop&lt;/code&gt; 组成，这样的 5 条指令填满了对齐的 64B。在 Golden Cove 上测试，发现依然可以用满 512 个 Entry，假如 Entry 不能跨越 32B 边界，那么这 5 条指令至少就要 2 个 Entry，但实际上只用了 1 个 Entry。这说明 Golden Cove 上 uOP Cache Entry 的第一条限制中，Entry 不能跨越的边界，从 32B 扩大到了 64B，毕竟每个 Entry 能存的 uOP 数量也增多了，如果继续限制 32B，每个 Entry 就很难存满 8 个 uOP 了。接下来测试对齐的 64B 内可以最多有多少个 entry。&lt;/p&gt;&lt;p&gt;把循环体改成每对齐的 64B 就有四条 jmp 指令，前一条 jmp 指令跳转到后一条 jmp 指令，模拟每 64B 有四个 Entry 的情况：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第 1 个 jmp 放在 64B 内的 0B 偏移处，跳转到 64B 内 16B 偏移处&lt;/li&gt;&lt;li&gt;第 2 个 jmp 放在 64B 内的 16B 偏移处，跳转到 64B 内 32B 偏移处&lt;/li&gt;&lt;li&gt;第 3 个 jmp 放在 64B 内的 32B 偏移处，跳转到 64B 内 48B 偏移处&lt;/li&gt;&lt;li&gt;第 4 个 jmp 放在 64B 内的 48B 偏移处，跳转到下一个 64B 的开头&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;测试发现这个情况下能达到 512 个 Entry。说明对齐的 64B 内至少可以存 4 个 Entry。&lt;/p&gt;&lt;p&gt;进一步测试，如果每对齐的 64B 有五条 jmp 指令，模拟每 64B 有五个 Entry 的情况：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第 1 个 jmp 放在 64B 内的 0B 偏移处，跳转到 64B 内 8B 偏移处&lt;/li&gt;&lt;li&gt;第 2 个 jmp 放在 64B 内的 8B 偏移处，跳转到 64B 内 16B 偏移处&lt;/li&gt;&lt;li&gt;第 3 个 jmp 放在 64B 内的 16B 偏移处，跳转到 64B 内 24B 偏移处&lt;/li&gt;&lt;li&gt;第 4 个 jmp 放在 64B 内的 24B 偏移处，跳转到 64B 内 32B 偏移处&lt;/li&gt;&lt;li&gt;第 5 个 jmp 放在 64B 内的 32B 偏移处，跳转到下一个 64B 的开头&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;发现最高的 Entry 数只有 480 左右，不确定是遇到了什么限制，如果对齐的 64B 内不能存 5 个 Entry，也不应该得到 480 这个结果。&lt;/p&gt;&lt;p&gt;如果单独去测试每个对齐的 64B 能缓存多少个 uOP，比如每个对齐的 64B 里由若干条 nop 加最后一条跳到下一个 64B 开头的 jmp 指令组成，会发现当对齐的 64B 内的 uOP 个数从 36 个变成 37 个时，uOP Cache 命中率急剧下降。这意味着，每对齐的 64B 内依然不能存超过 36 个 uOP。这类似于原来的每对齐的 32B 内不能存超过 18 个 uOP，但粒度更粗，实际上更加宽松，比如对齐的 64B 内的前 32B 可以全是 NOP 指令，只要 64B 内总数不超过 36 就可以。但比较奇怪的是，36 uOP per 64B 不能整除 8 uOP/Entry，不像原来的 18 per 32B 可以整除 6 uOP/Entry。&lt;/p&gt;&lt;h3 id=&#34;l1-itlb&#34;&gt;L1 ITLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-itlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the iTLBs is doubled to hold &lt;strong&gt;256&lt;/strong&gt; entries for 4-KB pages and 32 entries for 2/4 million pages&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;构造一系列的 jmp 指令，使得 jmp 指令分布在不同的 page 上，使得 ITLB 成为瓶颈：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-itlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 256 个 Page 出现了明显的拐点，对应的就是 256 的 L1 ITLB 容量。注意要避免 ICache 和 BTB 的容量成为瓶颈，把 jmp 指令分布在不同的 Cache Line 和 BTB entry 上。&lt;/p&gt;&lt;p&gt;超过 256 个 Page 以后，如图有周期数突然下降后缓慢上升的情况（例如横坐标 288-&amp;gt;289、320-&amp;gt;321、352-&amp;gt;353、384-&amp;gt;385 等，以 32 为周期），背后的原理需要进一步分析。&lt;/p&gt;&lt;p&gt;扩大 jmp 指令的距离再测试：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果每 2/4 个 page 放一条 jmp 指令，容量不变还是 256 个 Page&lt;/li&gt;&lt;li&gt;如果改成每 8 个 page 一条 jmp 指令，容量下降到 32 个 Page&lt;/li&gt;&lt;li&gt;每 16 个 page 一条 jmp，容量下降到 16 个 Page&lt;/li&gt;&lt;li&gt;每 32/64/128 个 page 一条 jmp 指令，容量是 8 个 Page&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;从这个结果来看，L1 ITLB 对于 4K 页应该是 32 Set 8 Way。&lt;/p&gt;&lt;h3 id=&#34;l1-icache&#34;&gt;L1 ICache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-icache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;32KB&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了测试 L1 ICache 容量，构造一个具有巨大指令 footprint 的循环，由大量的 4 字节 nop 和最后的分支指令组成。观察在不同 footprint 大小下的 IPC：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-fetch-bandwidth.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 footprint 在 32 KB 之前时可以达到 6 IPC，之后则降到 4 IPC，这里的 32 KB 就对应了 L1 ICache 的容量。&lt;/p&gt;&lt;h3 id=&#34;return-stack&#34;&gt;Return Stack&lt;a class=&#34;headerlink&#34; href=&#34;#return-stack&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;构造不同深度的调用链，测试每次调用花费的平均时间，得到下面的图：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-rs.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到调用链深度为 20 时性能突然变差，因此 Return Stack 深度为 20。&lt;/p&gt;&lt;h3 id=&#34;instruction-decode-queue-idq--loop-stream-detector-lsd&#34;&gt;Instruction Decode Queue (IDQ) + Loop Stream Detector (LSD)&lt;a class=&#34;headerlink&#34; href=&#34;#instruction-decode-queue-idq--loop-stream-detector-lsd&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The IDQ can hold &lt;strong&gt;144&lt;/strong&gt; uops per logical processor in single thread mode, or 72 uops per thread when SMT is active.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Golden Cove 架构针对循环做了优化，Loop Stream Detector（简称 LSD）会检测当前指令流是否在一个循环当中，并且循环的 uop 不超出 Instruction Decode Queue(IDQ) 的容量，那么 LSD 会把 Legacy decode pipeline(MITE) 和 Decode stream buffer(DSB) 关掉，不再让 IDQ 的指令出队，而是直接在 IDQ 的内部循环提供指令，这个时候就节省了很多处理器前端的功耗。&lt;/p&gt;&lt;p&gt;为了测试 Instruction Decode Queue 的大小，构造不同大小的循环，循环体是复制若干份的 &lt;code&gt;inc %rsi&lt;/code&gt; 指令，最后是 &lt;code&gt;dec + jnz&lt;/code&gt; 作为循环结尾，通过 &lt;a href=&#34;https://perfmon-events.intel.com/index.html?pltfrm=ahybrid.html&amp;amp;evnt=LSD.UOPS&#34;&gt;LSD.UOPS&lt;/a&gt; 性能计数器统计每次循环有多少个 UOP 来自于 Loop Stream Detector 机制，发现其最大值为 144，说明 Golden Cove 的 Loop Stream Detector 可以识别最多 144 个 uop 的循环。此时每个循环要执行 145 条指令，最后的 &lt;code&gt;dec + jnz&lt;/code&gt; 被融合成了一个 uop。&lt;/p&gt;&lt;p&gt;循环体中，如果用 &lt;code&gt;nop&lt;/code&gt; 指令来填充，会得到 40 左右的比 144 小得多的容量，猜测是进入了低功耗模式。&lt;/p&gt;&lt;h3 id=&#34;conditional-branch-predictor&#34;&gt;Conditional Branch Predictor&lt;a class=&#34;headerlink&#34; href=&#34;#conditional-branch-predictor&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&#34;https://cseweb.ucsd.edu/~dstefan/pubs/yavarzadeh:2023:half.pdf&#34;&gt;Half&amp;amp;Half: Demystifying Intel’s Directional Branch Predictors for Fast, Secure Partitioned Execution&lt;/a&gt; 论文的方法，可以测出 Golden Cove 的分支预测器采用的历史更新方式为：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使用 388 位的 Path History Register，每次执行 taken branch 时更新&lt;/li&gt;&lt;li&gt;更新方式为：&lt;code&gt;PHRnew = (PHRold &amp;lt;&amp;lt; 2) xor footprint&lt;/code&gt;&lt;/li&gt;&lt;li&gt;footprint 共有 16 位，其中 B 代表分支指令的地址，T 代表分支跳转的目的地址：&lt;ul&gt;&lt;li&gt;footprint[0] = B[3] xor T[0]&lt;/li&gt;&lt;li&gt;footprint[1] = B[4] xor T[1]&lt;/li&gt;&lt;li&gt;footprint[2] = B[5]&lt;/li&gt;&lt;li&gt;footprint[3] = B[6]&lt;/li&gt;&lt;li&gt;footprint[4] = B[7]&lt;/li&gt;&lt;li&gt;footprint[5] = B[8]&lt;/li&gt;&lt;li&gt;footprint[6] = B[9]&lt;/li&gt;&lt;li&gt;footprint[7] = B[10]&lt;/li&gt;&lt;li&gt;footprint[8] = B[0] xor T[2]&lt;/li&gt;&lt;li&gt;footprint[9] = B[1] xor T[3]&lt;/li&gt;&lt;li&gt;footprint[10] = B[2] xor T[4]&lt;/li&gt;&lt;li&gt;footprint[11] = B[11] xor T[5]&lt;/li&gt;&lt;li&gt;footprint[12] = B[12]&lt;/li&gt;&lt;li&gt;footprint[13] = B[13]&lt;/li&gt;&lt;li&gt;footprint[14] = B[14]&lt;/li&gt;&lt;li&gt;footprint[15] = B[15]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这个结果和论文是一致的。各厂商处理器的 PHR 更新规则见 &lt;a href=&#34;https://jia.je/cpu/cbp.html&#34;&gt;jiegec/cpu&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;后端&#34;&gt;后端&lt;a class=&#34;headerlink&#34; href=&#34;#后端&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&#34;rename&#34;&gt;Rename&lt;a class=&#34;headerlink&#34; href=&#34;#rename&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Rename/allocation width grows from 5 to 6 wide&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;execution-units&#34;&gt;Execution Units&lt;a class=&#34;headerlink&#34; href=&#34;#execution-units&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The number of execution ports goes from 10 to 12&lt;/li&gt;&lt;li&gt;five LEA units as well as five integer ALUs&lt;/li&gt;&lt;li&gt;three-cycle fast adders, with two cycles bypass between back-to-back floating-point ADD operations&lt;/li&gt;&lt;li&gt;five alu/simd ports: 0/1/5/6/10&lt;ul&gt;&lt;li&gt;P0: ALU/LEA/Shift/JMP/FMA/ALU/Shift/fpDIV&lt;/li&gt;&lt;li&gt;P1: ALU/LEA/Mul/iDIV/FMA/ALU/Shift/Shuffle/FADD&lt;/li&gt;&lt;li&gt;P5: ALU/LEA/MulHi/FMA512/ALU/AMX/Shuffle/FADD&lt;/li&gt;&lt;li&gt;P6: ALU/LEA/Shift/JMP&lt;/li&gt;&lt;li&gt;P10: ALU/LEA&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;3 load ports: 2/3/11&lt;/li&gt;&lt;li&gt;2 store address ports: 7/8&lt;/li&gt;&lt;li&gt;2 store data ports: 4/9&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;lsu&#34;&gt;LSU&lt;a class=&#34;headerlink&#34; href=&#34;#lsu&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Port 11 provides a third load port with a dedicated address-generation unit&lt;/li&gt;&lt;li&gt;Load 64Bx2 or &lt;strong&gt;32Bx3&lt;/strong&gt; per cycle&lt;/li&gt;&lt;li&gt;Store 64Bx2 or 32Bx3 per cycle&lt;/li&gt;&lt;li&gt;The L1 load to use latency is &lt;strong&gt;5&lt;/strong&gt; cycles&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;load-store-带宽&#34;&gt;Load Store 带宽&lt;a class=&#34;headerlink&#34; href=&#34;#load-store-带宽&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;针对 Load Store 带宽，实测每个周期可以完成：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;3x 256b Load&lt;/li&gt;&lt;li&gt;2x 256b Load + 2x 256b Store&lt;/li&gt;&lt;li&gt;1x 256b Load + 2x 256b Store&lt;/li&gt;&lt;li&gt;2x 256b Store&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;因为测试环境是 Client 而非 Server，所以 AVX512 被屏蔽了，无法测试 AVX512 的读写带宽。此时最大的读带宽是 96B/cyc，最大的写带宽是 64B/cyc，二者不能同时达到。&lt;/p&gt;&lt;h4 id=&#34;store-to-load-forwarding&#34;&gt;Store to Load Forwarding&lt;a class=&#34;headerlink&#34; href=&#34;#store-to-load-forwarding&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Partial store forwarding allowing forwarding data from store to load also when only part of the load was covered by the store (in case the load&#39;s offset matches the store&#39;s offset)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;经过实际测试，Golden Cove 上如下的情况可以成功转发，对地址 x 的 Store 转发到对地址 y 的 Load 成功时 y-x 的取值范围：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Store\Load&lt;/th&gt;&lt;th&gt;8b Load&lt;/th&gt;&lt;th&gt;16b Load&lt;/th&gt;&lt;th&gt;32b Load&lt;/th&gt;&lt;th&gt;64b Load&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;8b Store&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16b Store&lt;/td&gt;&lt;td&gt;[0,1]&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;32b Store&lt;/td&gt;&lt;td&gt;[0,3]&lt;/td&gt;&lt;td&gt;[0,2]&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;64b Store&lt;/td&gt;&lt;td&gt;[0,7]&lt;/td&gt;&lt;td&gt;[0,6]&lt;/td&gt;&lt;td&gt;[0,4]&lt;/td&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可以看到，Golden Cove 在 Store 完全包含 Load 的情况下都可以转发，没有额外的对齐要求。但当 Load 和 Store 只有部分重合时，就无法转发，这和官方信息有所冲突。两个连续的 32 位的 Store 和一个 64 位的 Load 重合也不能转发。&lt;/p&gt;&lt;p&gt;比较有意思的是，在 y=x 且不跨越缓存行边界且满足下列要求的情况下，Store Forwarding 不会或只带来很小的性能损失：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;8b Store -&amp;gt; 8b Load&lt;/li&gt;&lt;li&gt;32b Store -&amp;gt; 8b Load&lt;/li&gt;&lt;li&gt;64b Store -&amp;gt; 8b Load&lt;/li&gt;&lt;li&gt;32b Store -&amp;gt; 32b Load&lt;/li&gt;&lt;li&gt;64b Store -&amp;gt; 32b Load&lt;/li&gt;&lt;li&gt;64b Store -&amp;gt; 64b Load&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;考虑到 y 必须等于 x，也就是地址要一样，猜测 Golden Cove 使用了类似 Memory Renaming 的技术来实现这个效果。如果是连续两个对同一个地址的 Store 对一个 Load 的转发，效果和只有一个 Store 是一样的。&lt;/p&gt;&lt;p&gt;除了上述情况以外，Store Forwarding 成功时的延迟在 5 个周期，失败则要 19 个周期。&lt;/p&gt;&lt;p&gt;小结：Golden Cove 的 Store to Load Forwarding：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 ld + 1 st: 要求 st 包含 ld，特别地，地址相同时，性能最好&lt;/li&gt;&lt;li&gt;1 ld + 2+ st: 不支持&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;l1-dcache&#34;&gt;L1 DCache&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dcache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;48KB&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;构造不同大小 footprint 的 pointer chasing 链，测试不同 footprint 下每条 load 指令耗费的时间：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-l1dc.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 48KB 出现了明显的拐点，对应的就是 48KB 的 L1 DCache 容量。第二个拐点在 384KB，对应的是 L1 DTLB 的容量。&lt;/p&gt;&lt;h3 id=&#34;l1-dtlb&#34;&gt;L1 DTLB&lt;a class=&#34;headerlink&#34; href=&#34;#l1-dtlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;96-entry&lt;/strong&gt; 6-way 4-KB-page TLB&lt;/li&gt;&lt;li&gt;32-entry 4-way 2-MB/4-MB-page TLB&lt;/li&gt;&lt;li&gt;8-entry 1-GB-page TLB for loads&lt;/li&gt;&lt;li&gt;A 16-entry TLB for stores serves all page sizes&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;用类似测 L1 DCache 的方法测试 L1 DTLB 容量，只不过这次 pointer chasing 链的指针分布在不同的 page 上，使得 DTLB 成为瓶颈：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-dtlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以看到 96 Page 出现了明显的拐点，对应的就是 96 的 L1 DTLB 容量。没有超出 L1 DTLB 容量前，Load to use latency 是 5 cycle；超出 L1 DTLB 容量后，Load to use latency 是 12 cycle，说明 L1 DTLB miss 带来了 7 cycle 的损失。&lt;/p&gt;&lt;h3 id=&#34;l2-tlb&#34;&gt;L2 TLB&lt;a class=&#34;headerlink&#34; href=&#34;#l2-tlb&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2,048-entry second level TLB (STLB)&lt;/li&gt;&lt;li&gt;4 page table walkers&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;沿用之前测试 L1 DTLB 的方法，把规模扩大到 L2 Unified TLB 的范围，就可以测出来 L2 Unified TLB 的容量，下面是 Golden Cove 上的测试结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-l2tlb.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;第一个拐点是 96 个 Page，对应 L1 DTLB，此时 CPI 从 5 提升到 12；第二个拐点是 768，对应 L1 DCache，此时 CPI 从 12 提升到 23；第三个拐点是 1600 左右，而没有到 2048，猜测有 QoS 限制了数据对 L2 TLB 的占用。&lt;/p&gt;&lt;h3 id=&#34;l2-cache&#34;&gt;L2 Cache&lt;a class=&#34;headerlink&#34; href=&#34;#l2-cache&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1.25MB(Client)/2MB(Server)&lt;/li&gt;&lt;li&gt;64 bytes/cycle&lt;/li&gt;&lt;li&gt;15 cycle latency&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;构造不同大小 footprint 的 pointer chasing 链，测试不同 footprint 下每条 load 指令耗费的时间：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-l2c.png&#34; /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一个拐点在 48KB，对应 L1 DCache 的容量，CPI 从 5 提升到 16&lt;/li&gt;&lt;li&gt;第二个拐点在 384KB，对应 L1 DTLB 的容量，CPI 从 16 提升到 23&lt;/li&gt;&lt;li&gt;第三个拐点在 1280KB，对应 L2 Cache 的容量&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;prefetcher&#34;&gt;Prefetcher&lt;a class=&#34;headerlink&#34; href=&#34;#prefetcher&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&#34;官方信息_1&#34;&gt;官方信息&lt;a class=&#34;headerlink&#34; href=&#34;#官方信息_1&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Intel Golden Cove 的处理器通过 MSR 1A4H 可以配置各个预取器（来源：Software Developers Manual，MSRs Supported by 12th and 13th Generation Intel® Core™ Processor P-core）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;MSR_1A4H[0]: the L2 hardware prefetcher, which fetches additional lines of code or data into the L2 cache.&lt;/li&gt;&lt;li&gt;MSR_1A4H[1]: the L2 adjacent cache line prefetcher, which fetches the cache line that comprises a cache line pair (128 bytes). 这和 AMD 的 Up/Down Prefetcher 应该是一个意思&lt;/li&gt;&lt;li&gt;MSR_1A4H[5]: the L2 Adaptive Multipath Probability (AMP) prefetcher. 这个应该属于 Spatial Prefetcher&lt;/li&gt;&lt;li&gt;MSR_1A4H[2]: the L1 data cache prefetcher, which fetches the next cache line into L1 data cache. 这个应该属于 Next Line Prefetcher&lt;/li&gt;&lt;li&gt;MSR_1A4H[3]: the L1 data cache IP prefetcher, which uses sequential load history (based on instruction pointer of previous loads) to determine whether to prefetch additional lines.&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;预取延迟&#34;&gt;预取延迟&lt;a class=&#34;headerlink&#34; href=&#34;#预取延迟&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在 Golden Cove 上按 64B 的跳步进行访存，测量每次访存的延迟，得到如下结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-prefetcher-64b-stride.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可以观察到在 48KB 之内是 5 cycle latency，在 L2 Cache 范围内是 5-8 cycle latency。&lt;/p&gt;&lt;p&gt;如果通过 &lt;code&gt;wrmsr -p 0 0x1a4 0x8&lt;/code&gt; 把 &lt;code&gt;DCU_IP_PREFETCHER_DISABLE&lt;/code&gt; 设为 1，即关闭 L1 data cache IP prefetcher，再在 0 号核心上重新跑上面的测试，得到如下结果：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-prefetcher-64b-stride-disable-prefetcher.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;就可以看到 L2 Cache 的范围内的性能退化到了 16 Cycle，和随机 pointer chasing 一样。关闭其他的 prefetcher 则没有这个现象，说明正是 L1 data cache IP prefetcher 实现了针对 L1 的 Stride Prefetcher。&lt;/p&gt;&lt;h4 id=&#34;预取距离&#34;&gt;预取距离&lt;a class=&#34;headerlink&#34; href=&#34;#预取距离&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;更进一步，参考 &lt;a href=&#34;https://abertschi.ch/blog/2022/prefetching/&#34;&gt;Battling the Prefetcher: Exploring Coffee Lake (Part 1)&lt;/a&gt; 的方式，研究 Stride 预取器的行为：分配一片内存，把数据从缓存中 flush 掉，再按照特定的访存模式访问，触发预取器，最后测量访问每个缓存行的时间，从而得到预取器预取了哪些缓存行的信息。&lt;/p&gt;&lt;p&gt;首先是只访问一个 cache line 的时候，可以看到，除了已经访问过的 cache line，其他 cache line 都出现了缓存缺失，说明此时预取器没有在工作：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-prefetcher-1.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;接下来，按照固定的 stride 访问各个缓存行，发现当访问了五个 cache line 时，预取器会比较稳定地预取第六个 cache line：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-prefetcher-5.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;继续增加访问次数，可以看到预取器总是会预取将要访问的下一个 cache line：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-prefetcher-13.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;如果通过 &lt;code&gt;wrmsr -p 0 0x1a4 0x8&lt;/code&gt; 把 &lt;code&gt;DCU_IP_PREFETCHER_DISABLE&lt;/code&gt; 设为 1，即关闭 L1 data cache IP prefetcher，就会观察到上述 Stride 预取的行为消失，不会预取将要访问的下一个 cache line。&lt;/p&gt;&lt;p&gt;把相同的代码放到 Gracemont 上运行，会看到它的预取器会预取将要访问的未来两个 cache line：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-prefetcher-gracemont-comparison.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;可见不同微架构的预取器的策略是不同的。&lt;/p&gt;&lt;h3 id=&#34;reorder-buffer&#34;&gt;ReOrder Buffer&lt;a class=&#34;headerlink&#34; href=&#34;#reorder-buffer&#34; title=&#34;Permanent link&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;官方信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;512-entry&lt;/strong&gt; reorder buffer&lt;/li&gt;&lt;li&gt;8 wide retirement&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了测试 ROB 的大小，设计了一个循环，循环开始和结束是长延迟的 long latency load。中间是若干条 NOP 指令，当 NOP 指令比较少时，循环的时候取决于 load 指令的时间；当 NOP 指令数量过多，填满了 ROB 以后，就会导致 ROB 无法保存循环末尾的 load 指令，性能出现下降。测试结果如下：&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;../../../../intel-golden-cove-rob.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;当 NOP 数量达到 512 时，性能开始急剧下滑，说明 Golden Cove 的 ROB 大小是 512。&lt;/p&gt;</description><link>https://jia.je/hardware/2025/01/10/intel-golden-cove/</link> <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate><source url="https://jia.je/feed_rss_created.xml">杰哥的{运维，编程，调板子}小笔记</source><guid isPermaLink="true">https://jia.je/hardware/2025/01/10/intel-golden-cove/</guid> <enclosure url="https://jia.je/assets/images/social/blog/posts/hardware/intel-golden-cove.png" type="image/png" length="66099" /> </item> </channel></rss>