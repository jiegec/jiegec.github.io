<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - mi</title>
 <link href="https://jiege.ch/tag/mi/index.xml" rel="self"/>
 <link href="https://jiege.ch/tag/mi.html"/>
 <updated>2019-03-04T17:18:18+08:00</updated>
 <id>https://jiege.ch/tag/mi.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>配置 homebridge-mi-aqara 并添加为 telegraf 的数据源</title>
   <link href="https://jiege.ch/software/2018/12/13/homebridge-mi-aqara-telegraf/"/>
   <updated>2018-12-13T20:07:00+08:00</updated>
   <id>https://jiege.ch/software/2018/12/13/homebridge-mi-aqara-telegraf</id>
   <content type="html">&lt;p&gt;最近有了设备，想把设备拿到的数据都导一份存到 influxdb 里，但是目前找到的只有 &lt;a href=&quot;https://github.com/YinHangCode/homebridge-mi-aqara&quot;&gt;homebridge-mi-aqara&lt;/a&gt; 可以访问并拿到数据，然后它又提供了 mqtt 的数据获取方案，于是自己写了个脚本去读取这些数据。&lt;/p&gt;

&lt;p&gt;首先当然是配置一下 homebridge-mi-aqara ，按照网上的教程来，这个不难。然后本地开一个 MQTT Broker （如 mosquitto ），配置为本地监听，然后我编写了&lt;a href=&quot;https://github.com/jiegec/tools/blob/master/telegraf-mi-aqara.py&quot;&gt;脚本 telegraf-mi-aqara.py&lt;/a&gt; ，使用前需要 &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install paho-mqtt&lt;/code&gt;，并且按照实际路径修改一下内容 。验证能够跑起来后，写一个 telegraf 配置：&lt;/p&gt;

&lt;div class=&quot;language-toml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[[inputs.exec]]&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/usr/bin/python3 /path/to/telegraf-mi-aqara.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;5s&quot;&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;data_format&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;influx&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在就可以读取到各项信息，如温度，湿度，是否开门，开关用电情况等等。&lt;/p&gt;

&lt;p&gt;2018-12-16 更新：&lt;/p&gt;

&lt;p&gt;研究了一下&lt;a href=&quot;https://github.com/aqara/aiot-gateway-local-api&quot;&gt;绿米网关局域网通信协议&lt;/a&gt;，得到了&lt;a href=&quot;https://github.com/jiegec/tools/blob/master/telegraf-mi-aqara-v2.py&quot;&gt;第二个版本 telegraf-mi-aqara-v2.py&lt;/a&gt;，它与第一版的区别是，第一版是主动向网关读取信息，而这一版则是监听组播包，等待网关发消息。这个脚本负责把读取到的组播信息发送到 MQTT ，再让 telegraf 从 MQTT 里解析 JSON 消息，写入数据库。Telegraf 配置如下：&lt;/p&gt;

&lt;div class=&quot;language-toml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[[inputs.mqtt_consumer]]&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;servers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;[&quot;tcp://127.0.0.1:1883&quot;]&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;qos&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;connection_timeout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;30s&quot;&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;topics&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;/telegraf-mi-aqara&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;persistent_session&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;client_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Telegraf&quot;&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;data_format&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;json&quot;&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;json_string_fields&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;model&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;tag_keys&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;model&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;short_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;由于设备不全，有些字段可能不完整。如果大家自己要用的话，可能需要自行修改一下。&lt;/p&gt;
</content>
 </entry>
 
</feed>
