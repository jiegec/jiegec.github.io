<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - git</title>
 <link href="https://jiegec.me/tag/git/index.xml" rel="self"/>
 <link href="https://jiegec.me/tag/git.html"/>
 <updated>2018-10-07T23:13:40+08:00</updated>
 <id>https://jiegec.me/tag/git.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>A Good Way To Show Git Diff For Compressed Files</title>
   <link href="https://jiegec.me/programming/2016/07/23/a-good-way-to-show-git-diff-for-compressed-files/"/>
   <updated>2016-07-23T14:46:41+08:00</updated>
   <id>https://jiegec.me/programming/2016/07/23/a-good-way-to-show-git-diff-for-compressed-files</id>
   <content type="html">I have found a good way to track changes in .gz files:
Add these to ~/.gitconfig:

```config
[core]
  attributesFile = ~/.gitattributes
[diff &quot;zip&quot;]
  textconv = unzip -p
  binary = true
[diff &quot;gz&quot;]
  textconv = gzcat
  binary = true
[diff &quot;bz2&quot;]
  textconv = bzcat
  binary = true
[diff &quot;xz&quot;]
  textconv = xzcat
  binary = true
[diff &quot;tar&quot;]
  textconv = tar -O -xf
  binary = true
[diff &quot;tar-bz2&quot;]
  textconv = tar -O -xjf
  binary = true
[diff &quot;tar-gz&quot;]
  textconv = tar -O -xzf
  binary = true
[diff &quot;tar-xz&quot;]
  textconv = tar -O -xJf
  binary = true

[diff &quot;odf&quot;]
  textconv = odt2txt
[diff &quot;pdf&quot;]
  textconv = pdfinfo
[diff &quot;bin&quot;]
  textconv = hexdump -v -C
```

And these to ~/.gitattributes:

```config
*.tar diff=tar
*.tar.bz2 diff=tar-bz2
*.tar.gz diff=tar-gz
*.tar.xz diff=tar-xz
*.bz2 diff=bz2
*.gz diff=gz
*.zip diff=zip
*.xz diff=xz

*.odf diff=odf
*.odt diff=odf
*.odp diff=odf
*.pdf diff=pdf
*.exe diff=bin
*.png diff=bin
*.jpg diff=bin

```

And then you can `git diff` for .gz files.

Codes are adapted from https://gist.github.com/RsrchBoy/11197048
and https://git.wiki.kernel.org/index.php/GitTips#Getting_a_plain-text_diff and https://gist.github.com/kbaird/2654115.
</content>
 </entry>
 
 <entry>
   <title>Tips On Git Shallow Clone</title>
   <link href="https://jiegec.me/programming/2016/04/03/tips-on-git-shallow-clone/"/>
   <updated>2016-04-03T14:38:09+08:00</updated>
   <id>https://jiegec.me/programming/2016/04/03/tips-on-git-shallow-clone</id>
   <content type="html">Just learned a new tip on git shallow clone. As you know, some repository are really really large, such as emacs and linux. Cloning is slow and unstable. And there is no way to pause and resume a git clone. So I use shallow clone to clone them. But what if I want to clone other branches?


From here: http://stackoverflow.com/a/27393574/2148614

```
git remote set-branches origin '*'
```</content>
 </entry>
 
 <entry>
   <title>Building Emacs Git Version With Xwidgets And Modules In Archlinux</title>
   <link href="https://jiegec.me/programming/2016/02/18/building-emacs-git-version-with-xwidgets-and-modules-in-archlinux/"/>
   <updated>2016-02-18T12:37:52+08:00</updated>
   <id>https://jiegec.me/programming/2016/02/18/building-emacs-git-version-with-xwidgets-and-modules-in-archlinux</id>
   <content type="html">First you need to install these packages:

    sudo pacman -S git autoconf automake gtk3 webkitgtk
    git clone --depth 1 https://github.com/emacs-mirror/emacs.git (or git protocol if you like)
    cd emacs
    ./autogen.sh all
    ./configure --with-xwidgets --with-x --with-x-toolkit=gtk3 --with-modules
    make
    cd lisp
    make autoloads
    make
    make
    make

Until you got everything ok.

Then you can just:

    cd src
    ./emacs

And then, M-x webkit-browse-url RET:
![xwidget-webkit](/assets/xwidget-webkit.png)

Also, test the modules feature using [syohex/emacs-qrencode](https://github.com/syohex/emacs-qrencode):
![qrencode](/assets/qrencode.png)

I'm using ssh and X11 Forward to show Emacs in Mac OS X! Cool!</content>
 </entry>
 
</feed>
