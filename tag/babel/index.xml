<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - babel</title>
 <link href="https://jiegec.me/tag/babel/index.xml" rel="self"/>
 <link href="https://jiegec.me/tag/babel.html"/>
 <updated>2018-10-05T10:02:13+08:00</updated>
 <id>https://jiegec.me/tag/babel.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>在 WireGuard 构建的 Overlay Network 上跑 babel 路由协议</title>
   <link href="https://jiegec.me/networking/2018/08/10/use-babel-in-overlay-network-with-wireguard/"/>
   <updated>2018-08-10T09:17:00+08:00</updated>
   <id>https://jiegec.me/networking/2018/08/10/use-babel-in-overlay-network-with-wireguard</id>
   <content type="html">&lt;p&gt;受 &lt;a href=&quot;https://fugoes.github.io/computer/network/2018/02/03/Run-Babeld-over-Wireguard.html&quot;&gt;Run Babeld over Wireguard - Fugoes’s Blog&lt;/a&gt; 和 &lt;a href=&quot;https://vincent.bernat.im/en/blog/2018-route-based-vpn-wireguard&quot;&gt;Route-based VPN on Linux with WireGuard&lt;/a&gt; 启发，自己也想尝试一下，在一个有多个结点的网络中，如何通过 WireGuard 构建一个 overlay network，并通过 babel 自动进行结点发现和路径选择。&lt;/p&gt;

&lt;p&gt;首先建立点对点的 WireGuard Tunnel 。由于我们用 babel 进行路由，所以我们不能采用 Wiregurad 本身基于目的地址的端口复用，所以每一个 WireGuard interface 都只有一个 Peer 。&lt;/p&gt;

&lt;p&gt;配置一个点对点的 WireGuard Tunnel：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ # for wg-quick
$ cat wg0.conf
[Interface]
Address = IPV4/32, fe80::ID/64
PrivateKey = REDACTED
ListenPort = PORT1
Table = off # ask wg-quick not to insert peer address into routing table

[Peer]
PublicKey = REDACTED
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = REDACTED:PORT2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里的 IPV4 和 ID 在同一设备上的不同 WireGuard Tunnel 上相同。只是通过 wg interface 编号来区分。&lt;/p&gt;

&lt;p&gt;接着配置 babeld ：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat babeld.conf

router-id ID
local-port 33123 # for babelweb2

# one line for each wg interface
interface wg0 type tunnel rtt-max 512

redistribute ip PREFIX/LEN ge LEN le 32 local allow # tunnel neighbors
redistribute proto 42 # routes installed by babeld
redistribute local deny
# consult babeld man page for more
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后通过 BabelWeb2 （很难用）进行可视化，然后通过手动触发一些网络波动即可达到效果。&lt;/p&gt;
</content>
 </entry>
 
</feed>
