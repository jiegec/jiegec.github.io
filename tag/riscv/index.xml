<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - riscv</title>
 <link href="https://jiege.ch/tag/riscv/index.xml" rel="self"/>
 <link href="https://jiege.ch/tag/riscv.html"/>
 <updated>2019-04-15T17:57:56+08:00</updated>
 <id>https://jiege.ch/tag/riscv.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>交叉编译 Nginx 1.14.2 到 RISC-V</title>
   <link href="https://jiege.ch/software/2019/03/22/cross-compiling-nginx-to-riscv/"/>
   <updated>2019-03-22T23:18:00+08:00</updated>
   <id>https://jiege.ch/software/2019/03/22/cross-compiling-nginx-to-riscv</id>
   <content type="html">&lt;p&gt;最近又把一定的精力放到了 RISC-V 64 上的 rCore 用户态程序的支持上，同时也借到了 HiFive Unleashed 板子，所以有真实硬件可以拿来跑了。在这之前先在 QEMU 上把能跑的都跑起来。&lt;/p&gt;

&lt;p&gt;由于 rCore 对 glibc 的支持一直有问题，RISC-V 也不例外，所以还是选择用 musl 来做这件事情。一般搜索，终于找到了 Linux 下能用的 &lt;a href=&quot;https://github.com/rv8-io/musl-riscv-toolchain&quot;&gt;musl-riscv-toolchain&lt;/a&gt; 。编译好工具链以后，很多需要 libc 的用户态都能跑了，于是想着试一下 nginx 的编译。试着编译了一下，遇到了各种问题，最后搜到了&lt;a href=&quot;https://www.jianshu.com/p/5d9b60f7b262&quot;&gt;交叉编译Hi3536上面使用的nginx&lt;/a&gt;，里面的方法解决了这个问题。最后总结出了这样的 patch :&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/nginx-1.14.2/auto/cc/name b/nginx-1.14.2/auto/cc/name
index ded93f5..d6ab27a 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/nginx-1.14.2/auto/cc/name
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/nginx-1.14.2/auto/cc/name
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -7,7 +7,7 @@ if [ &quot;$NGX_PLATFORM&quot; != win32 ]; then
&lt;/span&gt; 
     ngx_feature=&quot;C compiler&quot;
     ngx_feature_name=
&lt;span class=&quot;gd&quot;&gt;-    ngx_feature_run=yes
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+    ngx_feature_run=no
&lt;/span&gt;     ngx_feature_incs=
     ngx_feature_path=
     ngx_feature_libs=
&lt;span class=&quot;gh&quot;&gt;diff --git a/nginx-1.14.2/auto/lib/openssl/make b/nginx-1.14.2/auto/lib/openssl/make
index 126a238..7a0e768 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/nginx-1.14.2/auto/lib/openssl/make
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/nginx-1.14.2/auto/lib/openssl/make
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -51,7 +51,7 @@ END
&lt;/span&gt; $OPENSSL/.openssl/include/openssl/ssl.h:	$NGX_MAKEFILE
 	cd $OPENSSL \\
 	&amp;amp;&amp;amp; if [ -f Makefile ]; then \$(MAKE) clean; fi \\
&lt;span class=&quot;gd&quot;&gt;-	&amp;amp;&amp;amp; ./config --prefix=$ngx_prefix no-shared no-threads $OPENSSL_OPT \\
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+	&amp;amp;&amp;amp; ./config --prefix=$ngx_prefix no-shared no-threads --cross-compile-prefix=riscv64-linux-musl- $OPENSSL_OPT \\
&lt;/span&gt; 	&amp;amp;&amp;amp; \$(MAKE) \\
 	&amp;amp;&amp;amp; \$(MAKE) install_sw LIBDIR=lib
 
&lt;span class=&quot;gh&quot;&gt;diff --git a/nginx-1.14.2/auto/types/sizeof b/nginx-1.14.2/auto/types/sizeof
index 480d8cf..52c7287 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/nginx-1.14.2/auto/types/sizeof
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/nginx-1.14.2/auto/types/sizeof
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -33,7 +33,7 @@ int main(void) {
&lt;/span&gt; END
 
 
&lt;span class=&quot;gd&quot;&gt;-ngx_test=&quot;$CC $CC_TEST_FLAGS $CC_AUX_FLAGS \
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+ngx_test=&quot;gcc $CC_TEST_FLAGS $CC_AUX_FLAGS \
&lt;/span&gt;           -o $NGX_AUTOTEST $NGX_AUTOTEST.c $NGX_LD_OPT $ngx_feature_libs&quot;
 
 eval &quot;$ngx_test &amp;gt;&amp;gt; $NGX_AUTOCONF_ERR 2&amp;gt;&amp;amp;1&quot;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接着，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;./configure --with-cc=riscv64-linux-musl-gcc --with-cc-opt=-static --with-ld-opt=-static --without-pcre --without-http_rewrite_module --without-http_gzip_module --with-poll_module --without-http_upstream_zone_module&lt;/code&gt; 之后，修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;objs/ngx_auto_config.h&lt;/code&gt;，加入：&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef NGX_SYS_NERR
#define NGX_SYS_NERR  132
#endif
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifndef NGX_HAVE_SYSVSHM
#define NGX_HAVE_SYSVSHM 1
#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接着就可以正常编译了：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file objs/nginx
objs/nginx: ELF 64-bit LSB executable, UCB RISC-V, version 1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SYSV&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, statically linked, with debug_info, not stripped
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>体验 Fedora on RISCV</title>
   <link href="https://jiege.ch/os/2018/05/24/trying-fedora-on-riscv/"/>
   <updated>2018-05-24T23:40:00+08:00</updated>
   <id>https://jiege.ch/os/2018/05/24/trying-fedora-on-riscv</id>
   <content type="html">&lt;p&gt;看到 RISCV 很久了，但一直没能体验。最近工具链不断更新， QEMU 在 2.12.0 也正式加入了 riscv 的模拟。但是自己编译一个内核又太麻烦，就找到了 Fedora 做的 RISCV port，下载下来试用了一下。之前试过一次，但是遇到了一些问题，刚才总算是成功地搞出来了。&lt;/p&gt;

&lt;p&gt;官方文档地址： https://fedorapeople.org/groups/risc-v/disk-images/readme.txt
首先下载 https://fedorapeople.org/groups/risc-v/disk-images/ 下的 bbl vmlinux 和 stage4-disk.img.xz 三个文件，然后解压 stage4-disk.img.xz ，大约有 5G 的样子。之前作者在脚本里作死开得特别大，导致我以前光是解压这一步就成功不了。现在终于解决了。&lt;/p&gt;

&lt;p&gt;然后启动 qemu 命令打开虚拟机：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;qemu-system-riscv64 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-nographic&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-machine&lt;/span&gt; virt &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 2G &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-kernel&lt;/span&gt; bbl &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-object&lt;/span&gt; rng-random,filename&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/urandom,id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rng0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-device&lt;/span&gt; virtio-rng-device,rng&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rng0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-append&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;console=ttyS0 ro root=/dev/vda&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-device&lt;/span&gt; virtio-blk-device,drive&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hd0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-drive&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;stage4-disk.img,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;raw,id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hd0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-device&lt;/span&gt; virtio-net-device,netdev&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;usernet &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-netdev&lt;/span&gt; user,id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;usernet,hostfwd&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tcp::10000-:22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这段命令摘自 readme.txt ，区别只在于把 -smp 4 去掉了。不知道为什么不能正常工作，可能和作者提到的 FPU patch 有关。然后系统就可以正常起来了（firewalld和systemd-logind不止为啥起不来，但是不用管）。&lt;/p&gt;

&lt;p&gt;可以验证一下我们的系统：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;uname &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
Linux stage4.fedoraproject.org 4.15.0-00046-g48fb45691946 &lt;span class=&quot;c&quot;&gt;#27 SMP Mon May 14 08:25:14 UTC 2018 riscv64 riscv64 riscv64 GNU/Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
</feed>
