<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - wifi</title>
 <link href="https://jiegec.me/tag/wifi/index.xml" rel="self"/>
 <link href="https://jiegec.me/tag/wifi.html"/>
 <updated>2018-10-07T23:19:43+08:00</updated>
 <id>https://jiegec.me/tag/wifi.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>使用 Cisco AC + AP 组合搭建网络实践</title>
   <link href="https://jiegec.me/networking/2018/04/28/wifi-with-cisco-ac-and-ap/"/>
   <updated>2018-04-28T21:58:00+08:00</updated>
   <id>https://jiegec.me/networking/2018/04/28/wifi-with-cisco-ac-and-ap</id>
   <content type="html">有一台已配置好直接可用的 AC 在地址 ac-address 。我们需要搭建交换机 + AP 的网络，并且用一台 Linux 服务器进行 DHCP 从而给 AP 分发 AC 的地址。这里以 systemd-networkd 为例。

我们约定，vlan 2 上联外网， vlan 3 为 Linux 服务器和 AP 的内部网络。

接下来，配置交换机给 Linux 服务器的端口为 trunk 口，然后将下联 Cisco AP 的端口都设为 access vlan 3 模式。接下来在 Linux 服务器上配置 DHCP 服务器和 NAT 。

如果 Linux 服务器的 interface 名称为 eno1 :

配置两个 VLAN interface:
```
$ cat /etc/systemd/network/eno1.network
[Match]
Name=eno1

[Network]
VLAN=eno1.2
VLAN=eno1.3
```

相应添加 VLAN 配置：
```
$ cat /etc/systemd/network/eno1.2.network
[NetDev]
Name=eno1.2

[VLAN]
Id=2
$ cat /etc/systemd/network/eno1.3.network
[NetDev]
Name=eno1.3

[VLAN]
Id=3
```

配置上行的 eno1.2 interface 的静态地址：
```
$ cat /etc/systemd/network/eno1.2.network
[Match]
Name=eno1.2

[Network]
Address=123.123.123.123/24
Gateway=123.123.123.1
DNS=1.2.4.8
```

配置内部网络 eno1.3 interface:
```
$ cat /etc/systemd/network/eno1.3.network
[Match]
Name=eno1.3

[Network]
Address=192.168.1.1/24
```

配置 dhcpd (isc-dhcp-server):
```
$ cat /etc/default/isc-dhcp-server
INTERFACESv4=&quot;eno1.3&quot;
$ cat /etc/dhcpd.conf
option space Cisco_LWAPP_AP;
option Cisco_LWAPP_AP.server-address code 241 = array of ip-address;

subnet 192.168.1.0 netmask 255.255.255.0 {
  range 192.168.1.100 192.168.1.200;
  option routers 192.168.1.1;
  vendor-option-space Cisco_LWAPP_AP;
  option Cisco_LWAPP_AP.server-address $ac-address;
}
```

配置 iptables 做NAT:
```
iptables -t nat -A POSTROUTING -o eno1.2 -j MASQUERADE
iptables-save &gt; /etc/iptables/iptables.rules
```

打开 ipv4 forwarding:
```
echo 1 &gt; /proc/sys/net/ipv4/ip_forward
echo 'net.ipv4.conf.all.forwarding=1' &gt;&gt; /etc/sysctl.d/99-ipv4-forwarding.conf
```
</content>
 </entry>
 
 <entry>
   <title>华为随行 WiFi 2 mini开箱</title>
   <link href="https://jiegec.me/unboxing/2017/08/08/huawei-portable-wifi/"/>
   <updated>2017-08-08T20:38:00+08:00</updated>
   <id>https://jiegec.me/unboxing/2017/08/08/huawei-portable-wifi</id>
   <content type="html">前段时间，我办了4G升级，移动送了一张副卡，有不少免费的流量，由于我的手机是iPhone不支持双卡，老爸就借了我他的GlocalMe当成MiFi来用，不过呢GlocalMe放在这里当然是大材小用了，所以我就网购了华为随行WiFi 2 mini，把我的副卡装上一个壳放进去就可以了！把这个MiFi插入电脑，会弹出一个目录，里面有Win/Mac的驱动安装文件，打开后在网络设置里就有HUAWEI_MOBILE的连接了，并自动打开网络配置界面。设置一下SSID和密码，就能正常使用了，手机连上也很正常，手机上可以下载HUAWEI HiLink来配置MiFi，挺爽的。随赠的有联通的上网卡，不过我准备在北京买个上网卡放MiFi里面用。
</content>
 </entry>
 
</feed>
