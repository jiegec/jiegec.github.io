<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - grafana</title>
 <link href="https://jiegec.me/tag/grafana/index.xml" rel="self"/>
 <link href="https://jiegec.me/tag/grafana.html"/>
 <updated>2018-12-16T15:26:36+08:00</updated>
 <id>https://jiegec.me/tag/grafana.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>Grafana 可视化实践：清华大学 2018 年度人物评选</title>
   <link href="https://jiegec.me/software/2018/12/07/grafana-visualize-vote18/"/>
   <updated>2018-12-07T23:03:00+08:00</updated>
   <id>https://jiegec.me/software/2018/12/07/grafana-visualize-vote18</id>
   <content type="html">&lt;p&gt;最近这段时间，清华内部正在投票选出今年的年度人物，想到最近刚好在学习使用 Grafana+InfluxDB+Telegraf 全家桶，于是想着能不能写个爬虫把数据都拿下来，然后用 Grafana 画出来，就可以得到一个投票随时间变化的趋势。爬虫很简单，就是登录，获取页面信息，然后按照 InfluxDB 的输入格式进行输出即可。代码放在了 &lt;a href=&quot;https://github.com/jiegec/student-tsinghua-vote18&quot;&gt;jiegec/student-tsinghua-vote18&lt;/a&gt; 下。&lt;/p&gt;

&lt;p&gt;接着就是用 Grafana 进行可视化，大概得到了这样一个曲线：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/vote18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为保护隐私，把名字隐去了。实际上的投票时间是从 12-3 号开始到 12-7号结束，但由于宿舍停电的原因所以采样的点在半夜的时候都没有，所以看起来有点奇怪，但还是能够反应总体的趋势的。比如可以看到前两名很早就一马当先，而后一直遥遥领先，下面的选手则排名变动很大，特别是截止前最后一段时间，大家都在拼命拉票，可见大家都是 DDL 选手啊。如果对上面这个图求个导，看看变化率的话：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/vote18-speed.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这显现出了很有意思的一个趋势，就是每天十二点左右都有一个高峰期，然后在零点前大概熄灯附近的时间也是一个高峰期，另外就是截止前最后的抢票阶段，大家都在疯狂拉票，从中午拉到最后时刻。由于停电的原因，在零点附近的数据都比较的鬼畜，不过影响不大，趋势一目了然。&lt;/p&gt;

&lt;p&gt;Grafana 真香！期望可以学到更多高端的查询语法和可视化的骚操作，现在有很多东西不知道该怎么可视化，比较苦恼，不知道大家有没有什么经验可以分享。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>配置 Grafana+InfluxDB+Telegraf 并添加 MIIO 数据来源</title>
   <link href="https://jiegec.me/software/2018/11/27/grafana-influxdb-telegraf-miio/"/>
   <updated>2018-11-27T20:33:00+08:00</updated>
   <id>https://jiegec.me/software/2018/11/27/grafana-influxdb-telegraf-miio</id>
   <content type="html">&lt;p&gt;之前一直想配一个监控系统，现在有机会了，就简单配了一下。发现真的特别简单，用 Homebrew 安装这三个软件并且都跑起来，然后稍微动一下配置，就可以得到可观的效果了。&lt;/p&gt;

&lt;p&gt;然后想利用 miio 配置一下，把宿舍的空气净化器各项参数拿到，以 Telegraf 的插件形式定时上报，然后通过 Grafana 进行可视化。插件放在了 &lt;a href=&quot;https://github.com/jiegec/tools/blob/master/telegraf/miio.py&quot;&gt;jiegec/tools&lt;/a&gt; 下，就是一个简单的 Python 脚本。配置方法如下：&lt;/p&gt;

&lt;p&gt;编辑 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/etc/telegraf.d/miio.conf&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[[inputs.exec]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;py&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;[&quot;/usr/local/bin/python3 /Volumes/Data/tools/telegraf/miio.py MIID_HERE&quot;]&lt;/span&gt;
	&lt;span class=&quot;py&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;5s&quot;&lt;/span&gt;
	&lt;span class=&quot;py&quot;&gt;data_format&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;influx&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认了 miio 路径为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin/miio&lt;/code&gt; 。&lt;/p&gt;
</content>
 </entry>
 
</feed>
