<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Tag - cs</title>
 <link href="https://jiegec.me/tag/cs/index.xml" rel="self"/>
 <link href="https://jiegec.me/tag/cs.html"/>
 <updated>2018-10-04T23:01:39+08:00</updated>
 <id>https://jiegec.me/tag/cs.html</id>
 <author>
   <name>Jiege Chen</name>
 </author>
 
 <entry>
   <title>再次吐槽 VS 关于 scanf 和 scanf_s 的问题</title>
   <link href="https://jiegec.me/programming/2018/01/30/more-on-scanf-and-scanf_s/"/>
   <updated>2018-01-30T16:05:33+08:00</updated>
   <id>https://jiegec.me/programming/2018/01/30/more-on-scanf-and-scanf_s</id>
   <content type="html">继[上次的吐槽](https://jiegec.github.io/programming/2017/10/17/on-scanf-and-scanf_s/)后，今天再次遇到同学因为 `scanf` 在 VS 下的 `deprecation error` 感到十分迷茫，在知乎上求助又因为拍照的原因被说，我就在此再次吐槽一下 VS 这对初学者很不友善很不友善的两点。

一点就是上面提到的这个，另一点就是程序结束后任意键以退出这一功能要做得更加醒目一点 。前者由于大多数新手在学习 `C/C++` 的时候都会跟着书上或者网上的代码敲一遍输入输出的代码，很容易就会撞到这个问题。后者则会让新手习惯性地以为程序闪退了，没有出结果，而不知道其实是程序执行结束后关闭而已。
</content>
 </entry>
 
 <entry>
   <title>分析一个我第一次见的素数测试函数</title>
   <link href="https://jiegec.me/programming/2017/10/17/analysis-on-a-primality-test/"/>
   <updated>2017-10-17T21:05:28+08:00</updated>
   <id>https://jiegec.me/programming/2017/10/17/analysis-on-a-primality-test</id>
   <content type="html">今天逛到这个[连接](http://blog.csdn.net/l04205613/article/details/6025118)，发现其中的第四种素数判定方法很有意思：

```
#include&lt;stdio.h&gt;
#include&lt;math.h&gt;
int p[8]={4,2,4,2,4,6,2,6};
int prime(int n)
{
    int i=7,j,q;
    if(n==1)return 0;
    if(n==2||n==5||n==3)return 1;
    if(n%2==0||n%3==0||n%5==0)return 0;
    q=(int)sqrt(n);
    for(;i&lt;=q;){
        for(j=0;j&lt;8;j++){
            if(n%i==0)return 0;
            i+=p[j];
        }
        if(n%i==0)return 0;
    }
    return 1;
}
void main()
{
    int n;
    scanf(&quot;%d&quot;,&amp;n);
    if(prime(n))puts(&quot;Yes&quot;);
    else puts(&quot;No&quot;);
}
```

仔细研究发现，这里利用的是这样的原理：

1. 判断是不是1, 2, 3, 5及其倍数
2. 从7开始，不断考虑其是否是素数，那么，这个p是什么回事呢？

首先把p的各个元素加起来，和为30，然后就可以发现一个规律：
7为质数，7+2=9不是质数，7+4=11为质数，11+2=13为质数，13+2=15为合数，15+2=17为质数，17+2=19为质数，19+2=21为合数，21+2=23为质数，23+2=25为合数，25+2=27为合数，27+2=29为质数，29+1=31为质数，31+2=33为合数，33+2=35为合数，35+2=37为质数。
观察以上所有的合数，都含有2或者3或者5的因子，而30又是2,3,5的公倍数，也就是说，后面的素数模30的余数不可能是上面这些合数，而剩下的素数才可能是真正的素数，于是跳过了很多素数的判断。

至于这个函数的性能如何，还需要进一步测试来进行判断。
</content>
 </entry>
 
 <entry>
   <title>关于scanf和scanf_s的问题</title>
   <link href="https://jiegec.me/programming/2017/10/17/on-scanf-and-scanf_s/"/>
   <updated>2017-10-17T16:46:40+08:00</updated>
   <id>https://jiegec.me/programming/2017/10/17/on-scanf-and-scanf_s</id>
   <content type="html">最近作为程设基础的小教员，收到很多同学的求助，关于`scanf`和`scanf_s`的问题已经遇到了两次，特此写一篇博文来叙述一下这个问题。

一开始，有同学问我，
```
char a;
scanf(&quot;%c&quot;,&amp;a);
```
为什么会报错？我说，vs默认强制要求使用scanf_s函数，于是我建议这位同学把这个错误信息关掉了。嗯。经过百度，这位同学的问题解决了。

后来，又有一位同学问我，
```
char a;
scanf_s(&quot;%c&quot;,&amp;a);
```
程序为什么会崩溃？我想了想，如果scanf_s和scanf是一样的行为，这段代码是没问题的。但scanf_s既然安全，必然是在字符串方面做了处理。这里的char*勉强也算一个？网上一查，果然，应该写成`scanf_s(&quot;%c&quot;,&amp;a,1);`，字符串则要写成`scanf_s(&quot;%s&quot;,str,sizeof(str))`，来保证缓冲区不会溢出。

但是，这样解决这个问题又面临着不同的选择：

1. 学习`scanf_s`和`scanf`的不同，把所有`scanf`换成`scanf_s`并做相应的修改。
   这样当然符合了语言进化的潮流，也会让vs闭嘴。但是，scanf_s只有在C11标准中有，而且，根据[cpprefrence.com上关于scanf的描述](http://en.cppreference.com/w/c/io/fscanf)，只有在`__STDC_LIB_EXT1__`被定义且在`#include&lt;stdio.h&gt;`之前`#define __STDC_WANT_LIB_EXT1__`才能确保使用`scanf_s`能使用，当然在vs较新版本中是默认可以使用的。但是，程设基础的作业是要丢到oj上的，而oj上的编译器不一定支持这些，所以这个选项不行。
2. 坚持用`scanf`，自己按照题目要求保证缓冲区不溢出，同时让vs闭嘴。
   网上已有[教程](https://www.cnblogs.com/wangduo/p/5554465.html)，已经讲的很全面了，大家可以根据这个教程把vs教训一顿。为了能在oj里跑，建议用里面的方法五到八。（个人最推荐在文件头添加`#define _CRT_SECURE_NO_WARNINGS`）

以后再遇到这个问题，我就丢这个连接上来就好了咯。yeah！
</content>
 </entry>
 
 <entry>
   <title>回顾昨天的酒井知识竞赛</title>
   <link href="https://jiegec.me/others/2017/10/16/review-on-yesterdays-jiujing-adi-contest/"/>
   <updated>2017-10-16T10:36:28+08:00</updated>
   <id>https://jiegec.me/others/2017/10/16/review-on-yesterdays-jiujing-adi-contest</id>
   <content type="html">昨天晚上，我作为蒟蒻组的一员在三教2102参加了酒井知识竞赛，并因此鸽掉了TUNA和Lab mU的迎新会hhh，不过运气好拿到了二等奖的好成绩，获得Paperang便携打印机一台。中间遇到了好一些网络方面的知识，这对于没有记忆OSI模型的我无疑有巨大的难度。下面是几道比较有印象的题目：

1. 以下哪个不是编程语言？
   A. J B. L C. R D. K
   这题不难，R肯定对，J见过，K略微有印象，选B  
2. IPv6链路层地址解析的协议是？
   A. ARP B. Neighbour Solicitation C. Neighbour Advertisement D. Neighbour Discovery
   对于一个没研究过IPv6的人来说这只好蒙了。。。ARP是IPv4时代的，ND(Neighbour Discovery则是IPv6时代的新产物，把ARP和ICMP等协议的功能都包含了进来，并且有新的功能。之前样题里还出现过问IPv6中去掉了Unicast,Anycast,Multicast,Broadcast中的哪种，答案是Broadcast。
3. 第一个把程序错误称做bug的是？
	选项太多忘了，答案是Grace Hopper，因为当时一只飞蛾意外飞入了机器导致了故障，后来慢慢就流传下来了。
4. 以下不是网络操作系统的是？
	A. Windows NT B. OS/2 warp C. DOS D. Netware
	当时我没见过D，于是就选了。。。然后就挂了，Netware是Novell开发的系统，OS/2 warp当然是历史悠久的系统啦，而DOS=Disk Operating System所以没有“网络”二字。。。晕倒
5. 以下是用作局域网的协议是？
	A. TCP/IP B. IPX/SPX C. NetBEUI D. RS-232-C
	TCP/IP当然不仅限于局域网，RS-232-C是接口，当时蒙了B结果就对了，白白拿了50分哈哈哈。IPX/SPX是Novell设计用在Netware系统上的局域网协议，NetBEUI则是NetBIOS的一个历史遗留的一个“别称”。
6. 姚期智的夫人给谁取了中文名？
	当然是Donald Ervin Knuth啦！高德纳万岁！
</content>
 </entry>
 
</feed>
